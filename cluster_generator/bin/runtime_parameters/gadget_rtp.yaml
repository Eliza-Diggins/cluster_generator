# ========================================================== #
# GADGET-2 CODE RUNTIME PARAMETERS                           #
# -----------------------------                              #
# desc: The description of the setting                       #
# compile_flags: compile flags determining presence.         #
#    [[req],[nreq]]                                          #
# default_value: The default value to use.                   #
# required: Indicates if the parameter is required.          #
# ========================================================== #

OutputDir:
  desc: >-
    Pathname of the directory that holds all output generated by the simulation
    (snapshot files, restart files, diagnostic files). This directory must already exist.
  compile_flags: [ [ ],[ ] ]
  default_value: null
  group: "IO"
  required: true

SnapshotFileBase:
  desc: >-
    Base name for snapshot files produced by the simulation. If NumFilesPerSnapshot > 1,
    filenames are also suffixed with a number for each file part.
  compile_flags: [ [ ],[ ] ]
  default_value: "snapshot"
  group: "IO"
  required: true

SnapFormat:
  desc: >-
    Flag specifying the file format for snapshot files. 1 selects the standard binary format,
    2 selects a more convenient binary format, and 3 selects HDF5.
  compile_flags: [ [ ],[ ] ]
  default_value: 3
  group: "IO"
  required: true

NumFilesPerSnapshot:
  desc: >-
    Number of separate files for each snapshot. Each file will contain data from a group of processors,
    optimizing I/O performance for large simulations.
  compile_flags: [ [ ],[ ] ]
  default_value: 1
  group: "IO"
  required: true

InitCondFile:
  desc: >-
    Filename of the initial conditions file to read at startup. If distributed across multiple files,
    only the base filename should be specified without the numerical suffix.
  compile_flags: [ [ ],[ ] ]
  default_value: null
  group: "IO"
  required: true

ICFormat:
  desc: >-
    Flag selecting the file format of the initial conditions. The possible choices are the same as for SnapFormat.
  compile_flags: [ [ ],[ ] ]
  default_value: 1
  group: "IO"
  required: true

RestartFile:
  desc: >-
    Base filename for restart files. Each processor will write a separate restart file with a suffix of the processor rank.
  compile_flags: [ [ ],[ ] ]
  default_value: "restart"
  group: "Restart"
  required: true

InfoFile:
  desc: >-
    Name of a file to hold a list of all timesteps. The last entry always holds the current timestep being processed.
  compile_flags: [ [ ],[ ] ]
  default_value: "info.txt"
  group: "Diagnostics"
  required: true

TimingsFile:
  desc: >-
    Name of a log file that records various aspects of the performance of the gravitational force computation for each timestep.
  compile_flags: [ [ ],[ ] ]
  default_value: "timings.txt"
  group: "Diagnostics"
  required: true

CpuFile:
  desc: >-
    Log file that tracks the cumulative CPU consumption of various parts of the code.
  compile_flags: [ [ ],[ ] ]
  default_value: "cpu.txt"
  group: "Diagnostics"
  required: true

EnergyFile:
  desc: >-
    Name of a file where information about global energy statistics of the simulation is stored.
  compile_flags: [ [ ],[ ] ]
  default_value: "energy.txt"
  group: "Diagnostics"
  required: true

TimeLimitCPU:
  desc: >-
    CPU-time limit for the current run (in seconds). The run will automatically interrupt and write a restart file when 85% of this time is reached.
  compile_flags: [ [ ],[ ] ]
  default_value: 93000
  group: "Restart"
  required: true

ResubmitCommand:
  desc: >-
    Command or script to execute for resubmitting the job to the scheduler if ResubmitOn is set to 1.
  compile_flags: [ [ ],[ ] ]
  default_value: "resubmit_command"
  group: "Restart"
  required: true

ResubmitOn:
  desc: >-
    Flag to enable automatic resubmission of the job if the CPU-time limit is reached.
  compile_flags: [ [ ],[ ] ]
  default_value: 0
  group: "Restart"
  required: true

CpuTimeBetRestartFile:
  desc: >-
    Maximum CPU time (in seconds) between writing restart files. This provides a safeguard against hardware or software failures.
  compile_flags: [ [ ],[ ] ]
  default_value: 12000
  group: "Restart"
  required: true

TimeBegin:
  desc: >-
    Starting time of the simulation in internal units. For comoving integrations, this is the scale factor at the start.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.0
  group: "Cosmology"
  required: true

TimeMax:
  desc: >-
    Final time of the simulation in internal units. For comoving integrations, this is the final scale factor.
  compile_flags: [ [ ],[ ] ]
  default_value: null
  group: "Cosmology"
  required: true

BoxSize:
  desc: >-
    Size of the periodic box (in code units) encompassing the simulation volume. Relevant only if periodic boundaries are used.
  compile_flags: [ [ ],[ ] ]
  default_value: null
  group: "Setup"
  required: true

PeriodicBoundariesOn:
  desc: >-
    Enables or disables periodic boundaries. Requires the code to be compiled with the PERIODIC makefile option.
  compile_flags: [ [ ],[ ] ]
  default_value: 1
  group: "Setup"
  required: true

ComovingIntegrationOn:
  desc: >-
    Flag to enable or disable comoving integration in an expanding universe. If set to 1, the integration uses a cosmological model.
  compile_flags: [ [ ],[ ] ]
  default_value: 0
  group: "Cosmology"
  required: true

HubbleParam:
  desc: >-
    Value of the Hubble constant in units of 100 km/s/Mpc. Used in cosmological integrations when conversions to cgs units are required.
  compile_flags: [ [ ],[ ] ]
  default_value: 1.0
  group: "Cosmology"
  required: true

Omega0:
  desc: >-
    Cosmological matter density parameter (dark matter + baryons) in units of the critical density at z=0.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.0
  group: "Cosmology"
  required: true

OmegaLambda:
  desc: >-
    Cosmological vacuum energy density (cosmological constant) in units of the critical density at z=0.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.0
  group: "Cosmology"
  required: true

OmegaBaryon:
  desc: >-
    Baryon density in units of the critical density at z=0. Not explicitly used in the public version but may be needed for certain physics implementations.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.0
  group: "Cosmology"
  required: true

BufferSize:
  desc: >-
    Size (in MB) of a multi-purpose communication buffer used in various parts of the parallel algorithms.
  compile_flags: [ [ ],[ ] ]
  default_value: 15
  group: "Memory"
  required: true

PartAllocFactor:
  desc: >-
    Factor to allocate additional memory for particles per processor to ensure good work-load balance.
  compile_flags: [ [ ],[ ] ]
  default_value: 1.1
  group: "Memory"
  required: true

TreeAllocFactor:
  desc: >-
    Factor to allocate memory for internal tree nodes in the BH-tree. Typically, 0.7 is sufficient for most particle distributions.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.7
  group: "Memory"
  required: true

TypeOfOpeningCriterion:
  desc: >-
    Type of cell-opening criterion used in the tree walks for gravitational force calculations. 0 selects Barnes-Hut, 1 selects a relative criterion.
  compile_flags: [ [ ],[ ] ]
  default_value: 0
  group: "Gravitation"
  required: true

ErrTolTheta:
  desc: >-
    Accuracy criterion (opening angle θ) for the Barnes-Hut tree algorithm. Lower values increase accuracy.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.7
  group: "Gravitation"
  required: true

ErrTolForceAcc:
  desc: >-
    Accuracy parameter for the relative cell-opening criterion. Controls the accuracy of force calculations.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.005
  group: "Gravitation"
  required: true

MaxSizeTimestep:
  desc: >-
    Maximum allowed timestep for particles. For cosmological simulations, specifies the maximum allowed step in terms of Δ ln a.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "10 Myr"
  group: "Time Integration"
  required: true

MinSizeTimestep:
  desc: >-
    Minimum allowed timestep for particles. Simulation terminates if a timestep smaller than this value is requested.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "2e-5 Myr"
  group: "Time Integration"
  required: true

TypeOfTimestepCriterion:
  desc: >-
    Type of timestep criterion for collisionless dynamics. Gadget-2 only supports the standard criterion (value 0).
  compile_flags: [ [ ],[ ] ]
  default_value: 0
  group: "Time Integration"
  required: true

ErrTolIntAccuracy:
  desc: >-
    Dimensionless parameter controlling the accuracy of the timestep criterion selected by TypeOfTimestepCriterion.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.025
  group: "Time Integration"
  required: true

TreeDomainUpdateFrequency:
  desc: >-
    Frequency of domain decomposition and tree reconstruction, based on a fraction of total particle force computations since the last reconstruction.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.05
  group: "Tree Update"
  required: true

MaxRMSDisplacementFac:
  desc: >-
    Timestep limiter for the PM-step when the TreePM method is used, limiting RMS displacement per timestep.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.25
  group: "Tree Update"
  required: true

OutputListOn:
  desc: >-
    Flag to determine whether output times are given in a file specified by OutputListFilename or automatically generated.
  compile_flags: [ [ ],[ ] ]
  default_value: 0
  group: "Output"
  required: true

OutputListFilename:
  desc: >-
    Name of the file containing desired output times, if OutputListOn is set to 1. Must contain floating point values in plain ASCII format.
  compile_flags: [ [ ],[ ] ]
  default_value: "none"
  group: "Output"
  required: true

TimeOfFirstSnapshot:
  desc: >-
    Time for the first snapshot, if OutputListOn is set to 0. For comoving integration, corresponds to the scale factor at the first output.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.00
  group: "Output"
  required: true

TimeBetSnapshot:
  desc: >-
    Time interval between subsequent snapshots, added to TimeOfFirstSnapshot or multiplied with it for comoving integration.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.0
  group: "Output"
  required: true

TimeBetStatistics:
  desc: >-
    Interval between energy statistics computations, written to EnergyFile along with kinetic energies of different particle types.
  compile_flags: [ [ ],[ ] ]
  default_value: none
  group: "Output"
  required: true

NumFilesWrittenInParallel:
  desc: >-
    Number of files written or read concurrently during snapshot or restart file operations. Should not exceed the number of processors used.
  compile_flags: [ [ ],[ ] ]
  default_value: 1
  group: "IO"
  required: true

UnitVelocity_in_cm_per_s:
  desc: >-
    Sets the internal velocity unit in cm/s. The default choice sets the velocity unit to km/s.
  compile_flags: [ [ ],[ ] ]
  default_value: 1e5
  group: "Units"
  required: true

UnitLength_in_cm:
  desc: >-
    Sets the internal length unit in cm/h. The default choice sets the length unit to 1.0 kpc/h.
  compile_flags: [ [ ],[ ] ]
  default_value: 3.085678e21
  group: "Units"
  required: true

UnitMass_in_g:
  desc: >-
    Sets the internal mass unit in g/h. The default choice sets the mass unit to 10^10 M☉/h.
  compile_flags: [ [ ],[ ] ]
  default_value: 1.989e33
  group: "Units"
  required: true

GravityConstantInternal:
  desc: >-
    Numerical value of the gravitational constant G in internal units. If set to 0, the code calculates the value corresponding to the physical G.
  compile_flags: [ [ ],[ ] ]
  default_value: 0
  group: "Units"
  required: true

DesNumNgb:
  desc: >-
    Desired number of SPH smoothing neighbors. The number of effective neighbors is kept close to this value.
  compile_flags: [ [ ],[ ] ]
  default_value: 64
  group: "SPH"
  required: true

MaxNumNgbDeviation:
  desc: >-
    Allowed variation in the number of SPH neighbors around the target value DesNumNgb.
  compile_flags: [ [ ],[ ] ]
  default_value: 4
  group: "SPH"
  required: true

ArtBulkViscCons:
  desc: >-
    Value of the artificial viscosity parameter used in SPH simulations.
  compile_flags: [ [ ],[ ] ]
  default_value: 1.0
  group: "SPH"
  required: true

CourantFac:
  desc: >-
    Value of the Courant parameter used to determine the hydrodynamical timestep for SPH particles.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.15
  group: "SPH"
  required: true

InitGasTemp:
  desc: >-
    Initial gas temperature in Kelvin when initial conditions are read. Set if greater than 0 and gas temperature in IC file is zero.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.0
  group: "SPH"
  required: true

MinGasTemp:
  desc: >-
    Minimum allowed gas temperature in Kelvin. Prevents gas from becoming too cold, important for resolution or cooling function limits.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "5.0 K"
  group: "SPH"
  required: true

MinGasHsmlFractional:
  desc: >-
    Minimum allowed SPH smoothing length in units of the gravitational softening length of gas particles.
  compile_flags: [ [ ],[ ] ]
  default_value: 0.1
  group: "SPH"
  required: true

SofteningGas:
  desc: >-
    Specifies the comoving softening of the first particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "0 kpc"
  group: "Softening"
  required: true

SofteningHalo:
  desc: >-
    Specifies the comoving softening of the second particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "18 kpc"
  group: "Softening"
  required: true

SofteningDisk:
  desc: >-
    Specifies the comoving softening of the third particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "90 kpc"
  group: "Softening"
  required: true

SofteningBulge:
  desc: >-
    Specifies the comoving softening of the fourth particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "450 kpc"
  group: "Softening"
  required: true

SofteningStars:
  desc: >-
    Specifies the comoving softening of the fifth particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "0 kpc"
  group: "Softening"
  required: true

SofteningBndry:
  desc: >-
    Specifies the comoving softening of the sixth particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "0 kpc"
  group: "Softening"
  required: true

SofteningGasMaxPhys:
  desc: >-
    Specifies the maximum physical softening of the first particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "0 kpc"
  group: "Softening"
  required: true

SofteningHaloMaxPhys:
  desc: >-
    Specifies the maximum physical softening of the second particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "3 kpc"
  group: "Softening"
  required: true

SofteningDiskMaxPhys:
  desc: >-
    Specifies the maximum physical softening of the third particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "15 kpc"
  group: "Softening"
  required: true

SofteningBulgeMaxPhys:
  desc: >-
    Specifies the maximum physical softening of the fourth particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "75 kpc"
  group: "Softening"
  required: true

SofteningStarsMaxPhys:
  desc: >-
    Specifies the maximum physical softening of the fifth particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "0 kpc"
  group: "Softening"
  required: true

SofteningBndryMaxPhys:
  desc: >-
    Specifies the maximum physical softening of the sixth particle group.
  compile_flags: [ [ ],[ ] ]
  default_value: !unyt_qty "0 kpc"
  group: "Softening"
  required: true
