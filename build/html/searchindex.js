Search.setIndex({"docnames": ["Getting_Started", "_as_gen/codes", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/gravity", "_as_gen/gravity.AQUALGravity", "_as_gen/gravity.AQUALGravity.__init__", "_as_gen/gravity.AQUALGravity.compute_mass", "_as_gen/gravity.AQUALGravity.is_calculated", "_as_gen/gravity.AQUALGravity.model", "_as_gen/gravity.AQUALGravity.potential", "_as_gen/gravity.AQUALGravity.reset", "_as_gen/gravity.Gravity", "_as_gen/gravity.Gravity.__init__", "_as_gen/gravity.Gravity.is_calculated", "_as_gen/gravity.Gravity.model", "_as_gen/gravity.Gravity.reset", "_as_gen/gravity.NewtonianGravity", "_as_gen/gravity.NewtonianGravity.__init__", "_as_gen/gravity.NewtonianGravity.compute_mass", "_as_gen/gravity.NewtonianGravity.is_calculated", "_as_gen/gravity.NewtonianGravity.model", "_as_gen/gravity.NewtonianGravity.potential", "_as_gen/gravity.NewtonianGravity.reset", "_as_gen/gravity.QUMONDGravity", "_as_gen/gravity.QUMONDGravity.__init__", "_as_gen/gravity.QUMONDGravity.compute_mass", "_as_gen/gravity.QUMONDGravity.is_calculated", "_as_gen/gravity.QUMONDGravity.model", "_as_gen/gravity.QUMONDGravity.potential", "_as_gen/gravity.QUMONDGravity.reset", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.basename", "_as_gen/ics.ClusterICs.center", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.mag_file", "_as_gen/ics.ClusterICs.num_halos", "_as_gen/ics.ClusterICs.profiles", "_as_gen/ics.ClusterICs.r_max", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.ClusterICs.tot_np", "_as_gen/ics.ClusterICs.velocity", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.attrs", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.is_physical", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.pot", "_as_gen/model.ClusterModel.rebuild_physical", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.virialization_method", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.attrs", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.is_physical", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.pot", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.virialization_method", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.combine_three_clusters", "_as_gen/particles.combine_two_clusters", "_as_gen/particles.resample_one_cluster", "_as_gen/particles.resample_three_clusters", "_as_gen/particles.resample_two_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/utils", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.log_string", "_as_gen/utils.moving_average", "_as_gen/utils.parse_prng", "_as_gen/utils.truncate_spline", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.df", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_as_gen/virial.VirialEquilibrium.model", "_as_gen/virial.VirialEquilibrium.num_elements", "_as_gen/virial.VirialEquilibrium.ptype", "_as_gen/virial.VirialEquilibrium.sigma", "_as_gen/virial.VirialEquilibrium.type", "api", "codes", "examples", "fields", "gravity", "index", "initial_conditions", "models", "notebooks/api_guides/1", "notebooks/api_guides/2", "notebooks/api_guides/3", "notebooks/quick_notebooks/quickbook", "notebooks/quick_notebooks/quickbook2", "notebooks/quick_notebooks/quickbook3", "particles", "radial_profiles"], "filenames": ["Getting_Started.rst", "_as_gen/codes.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/gravity.rst", "_as_gen/gravity.AQUALGravity.rst", "_as_gen/gravity.AQUALGravity.__init__.rst", "_as_gen/gravity.AQUALGravity.compute_mass.rst", "_as_gen/gravity.AQUALGravity.is_calculated.rst", "_as_gen/gravity.AQUALGravity.model.rst", "_as_gen/gravity.AQUALGravity.potential.rst", "_as_gen/gravity.AQUALGravity.reset.rst", "_as_gen/gravity.Gravity.rst", "_as_gen/gravity.Gravity.__init__.rst", "_as_gen/gravity.Gravity.is_calculated.rst", "_as_gen/gravity.Gravity.model.rst", "_as_gen/gravity.Gravity.reset.rst", "_as_gen/gravity.NewtonianGravity.rst", "_as_gen/gravity.NewtonianGravity.__init__.rst", "_as_gen/gravity.NewtonianGravity.compute_mass.rst", "_as_gen/gravity.NewtonianGravity.is_calculated.rst", "_as_gen/gravity.NewtonianGravity.model.rst", "_as_gen/gravity.NewtonianGravity.potential.rst", "_as_gen/gravity.NewtonianGravity.reset.rst", "_as_gen/gravity.QUMONDGravity.rst", "_as_gen/gravity.QUMONDGravity.__init__.rst", "_as_gen/gravity.QUMONDGravity.compute_mass.rst", "_as_gen/gravity.QUMONDGravity.is_calculated.rst", "_as_gen/gravity.QUMONDGravity.model.rst", "_as_gen/gravity.QUMONDGravity.potential.rst", "_as_gen/gravity.QUMONDGravity.reset.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.basename.rst", "_as_gen/ics.ClusterICs.center.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.mag_file.rst", "_as_gen/ics.ClusterICs.num_halos.rst", "_as_gen/ics.ClusterICs.profiles.rst", "_as_gen/ics.ClusterICs.r_max.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.ClusterICs.tot_np.rst", "_as_gen/ics.ClusterICs.velocity.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.attrs.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.is_physical.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.pot.rst", "_as_gen/model.ClusterModel.rebuild_physical.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.virialization_method.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.attrs.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.is_physical.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.pot.rst", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.virialization_method.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.combine_three_clusters.rst", "_as_gen/particles.combine_two_clusters.rst", "_as_gen/particles.resample_one_cluster.rst", "_as_gen/particles.resample_three_clusters.rst", "_as_gen/particles.resample_two_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/utils.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.log_string.rst", "_as_gen/utils.moving_average.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.truncate_spline.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.df.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_as_gen/virial.VirialEquilibrium.model.rst", "_as_gen/virial.VirialEquilibrium.num_elements.rst", "_as_gen/virial.VirialEquilibrium.ptype.rst", "_as_gen/virial.VirialEquilibrium.sigma.rst", "_as_gen/virial.VirialEquilibrium.type.rst", "api.rst", "codes.rst", "examples.rst", "fields.rst", "gravity.rst", "index.rst", "initial_conditions.rst", "models.rst", "notebooks/api_guides/1.ipynb", "notebooks/api_guides/2.ipynb", "notebooks/api_guides/3.ipynb", "notebooks/quick_notebooks/quickbook.ipynb", "notebooks/quick_notebooks/quickbook2.ipynb", "notebooks/quick_notebooks/quickbook3.ipynb", "particles.rst", "radial_profiles.rst"], "titles": ["Quickstart Guide", "codes", "codes.setup_arepo_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "gravity", "gravity.AQUALGravity", "gravity.AQUALGravity.__init__", "gravity.AQUALGravity.compute_mass", "gravity.AQUALGravity.is_calculated", "gravity.AQUALGravity.model", "gravity.AQUALGravity.potential", "gravity.AQUALGravity.reset", "gravity.Gravity", "gravity.Gravity.__init__", "gravity.Gravity.is_calculated", "gravity.Gravity.model", "gravity.Gravity.reset", "gravity.NewtonianGravity", "gravity.NewtonianGravity.__init__", "gravity.NewtonianGravity.compute_mass", "gravity.NewtonianGravity.is_calculated", "gravity.NewtonianGravity.model", "gravity.NewtonianGravity.potential", "gravity.NewtonianGravity.reset", "gravity.QUMONDGravity", "gravity.QUMONDGravity.__init__", "gravity.QUMONDGravity.compute_mass", "gravity.QUMONDGravity.is_calculated", "gravity.QUMONDGravity.model", "gravity.QUMONDGravity.potential", "gravity.QUMONDGravity.reset", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.basename", "ics.ClusterICs.center", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.mag_file", "ics.ClusterICs.num_halos", "ics.ClusterICs.profiles", "ics.ClusterICs.r_max", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.ClusterICs.tot_np", "ics.ClusterICs.velocity", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.attrs", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.is_physical", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.plot", "model.ClusterModel.pot", "model.ClusterModel.rebuild_physical", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.virialization_method", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.attrs", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.is_physical", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.pot", "model.HydrostaticEquilibrium.rebuild_physical", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.virialization_method", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.combine_three_clusters", "particles.combine_two_clusters", "particles.resample_one_cluster", "particles.resample_three_clusters", "particles.resample_two_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "utils", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.log_string", "utils.moving_average", "utils.parse_prng", "utils.truncate_spline", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.df", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "virial.VirialEquilibrium.model", "virial.VirialEquilibrium.num_elements", "virial.VirialEquilibrium.ptype", "virial.VirialEquilibrium.sigma", "virial.VirialEquilibrium.type", "API", "Setting Up Idealized Cluster Problems in Various Codes", "Examples", "Generating 3D Cluster Fields", "Gravity Theories", "cluster_generator", "Initial Conditions Generation", "Cluster Models", "Data Structures in cluster_generator", "Virialization", "Advanced Use Cases", "Quickstart Guide: The Basics", "Quickstart Guide: Getting the most out of <code class=\"docutils literal notranslate\"><span class=\"pre\">cluster_generator</span></code>", "Quickstart Guide: What About MOND?", "Particles", "Radial Profiles"], "terms": {"galaxi": [0, 192, 203, 204, 205, 231, 232, 253, 269, 270, 272, 273, 280], "cluster": [0, 3, 4, 5, 6, 7, 8, 96, 98, 120, 156, 171, 173, 174, 176, 189, 192, 203, 204, 205, 231, 232, 236, 252, 253, 269, 270, 279, 280], "ar": [0, 5, 8, 15, 20, 25, 30, 35, 40, 45, 50, 51, 52, 53, 85, 96, 98, 110, 120, 131, 146, 156, 167, 171, 173, 174, 192, 253, 255, 266, 267, 268, 269, 272, 273, 276, 279, 280], "largest": 0, "gravitation": 0, "bound": 0, "object": [0, 3, 4, 5, 6, 7, 8, 13, 18, 23, 28, 33, 38, 43, 48, 56, 68, 75, 81, 97, 98, 100, 106, 111, 113, 114, 115, 123, 136, 142, 147, 149, 150, 151, 159, 175, 192, 193, 197, 198, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 253, 259, 260, 268, 273, 276, 280], "univers": [0, 209, 253, 255, 269], "current": [0, 266, 272], "endpoint": 0, "process": [0, 91, 171, 253, 266, 273], "cosmolog": 0, "structur": [0, 192, 267, 268, 272, 276], "format": [0, 9, 15, 20, 25, 30, 35, 40, 45, 50, 86, 186, 216, 217, 222, 272, 276, 279], "made": [0, 51, 273, 280], "dark": [0, 5, 6, 113, 149, 173, 259, 266, 272, 273], "matter": [0, 5, 6, 113, 149, 173, 259, 266, 272, 273], "dm": [0, 81, 171, 272, 273, 276, 279, 280], "hot": 0, "magnet": [0, 6, 10, 81, 87, 126, 127, 162, 163, 266, 270, 273], "x": [0, 81, 96, 241, 243, 251, 253, 269, 272, 273, 279, 280], "rai": [0, 280], "emit": 0, "ga": [0, 6, 13, 18, 23, 28, 33, 38, 43, 48, 81, 91, 92, 109, 110, 111, 114, 120, 145, 146, 147, 150, 156, 171, 268, 273, 276, 280], "known": [0, 272], "intraclust": [0, 272], "medium": [0, 272], "icm": [0, 272], "constitu": [0, 253], "For": [0, 202, 273, 276, 279], "mani": [0, 270, 272, 276], "applic": [0, 268], "especi": 0, "those": [0, 132, 168, 267, 279], "focus": [0, 273], "properti": [0, 14, 19, 24, 29, 34, 39, 44, 49, 57, 63, 69, 76, 105, 123, 129, 130, 132, 141, 159, 165, 166, 168, 181, 256, 257, 258, 263, 273, 279, 280], "can": [0, 81, 97, 98, 104, 124, 126, 127, 132, 140, 160, 162, 163, 168, 174, 186, 223, 253, 266, 268, 269, 270, 271, 272, 273, 276, 279, 280], "approxim": [0, 253, 273], "roughli": 0, "spheric": [0, 253, 268, 269, 279, 280], "symmetr": [0, 279], "thi": [0, 5, 6, 8, 13, 18, 23, 28, 33, 38, 43, 48, 54, 58, 61, 64, 70, 71, 77, 78, 81, 92, 98, 108, 113, 114, 115, 122, 124, 132, 144, 149, 150, 151, 158, 160, 168, 171, 173, 174, 195, 199, 202, 225, 231, 234, 244, 245, 246, 247, 251, 253, 255, 257, 259, 266, 267, 268, 269, 272, 273, 276, 279, 280], "i": [0, 5, 6, 8, 51, 54, 57, 61, 63, 69, 71, 76, 78, 81, 92, 96, 97, 98, 102, 113, 114, 115, 117, 124, 125, 127, 138, 149, 150, 151, 153, 160, 161, 163, 171, 173, 182, 193, 195, 198, 200, 202, 214, 215, 222, 223, 235, 244, 245, 246, 247, 253, 255, 257, 259, 266, 268, 269, 270, 272, 276, 280], "often": [0, 280], "done": [0, 98, 200, 266, 268, 272, 273, 276], "us": [0, 5, 6, 8, 13, 18, 23, 28, 33, 38, 43, 48, 56, 68, 75, 85, 91, 92, 98, 109, 110, 111, 120, 122, 124, 131, 132, 145, 146, 147, 156, 158, 160, 167, 168, 171, 173, 174, 182, 186, 192, 199, 200, 201, 216, 217, 222, 223, 253, 255, 264, 266, 267, 268, 269, 270, 271, 276, 279, 280], "standard": [0, 192, 273, 276, 280], "radial": [0, 110, 120, 126, 127, 146, 156, 162, 163, 180, 189, 193, 199, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 245, 246, 247, 255, 270, 271, 276, 279], "profil": [0, 6, 81, 82, 91, 92, 107, 109, 110, 111, 120, 124, 126, 127, 143, 145, 146, 147, 156, 160, 162, 163, 189, 193, 194, 195, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 244, 245, 246, 247, 253, 255, 270, 271, 279], "variou": [0, 53, 81, 270, 272, 273, 279, 280], "physic": [0, 117, 124, 153, 160, 273, 280], "well": [0, 124, 160, 273, 280], "assum": [0, 51, 126, 127, 162, 163, 173, 174, 253, 268, 272, 279], "hydrostat": [0, 91, 102, 110, 114, 138, 146, 150, 273, 276, 279, 280], "virial": [0, 97, 113, 115, 130, 149, 151, 166, 205, 267, 270, 272, 273, 276, 280], "equilibrium": [0, 102, 110, 113, 114, 115, 131, 133, 138, 146, 149, 150, 151, 167, 169, 253, 259, 264, 273, 276, 280], "These": [0, 97, 98, 111, 147, 171, 255, 267, 272, 279, 280], "model": [0, 54, 55, 56, 61, 62, 66, 67, 68, 71, 73, 74, 75, 78, 81, 92, 176, 206, 213, 228, 231, 253, 254, 261, 268, 269, 270, 273, 276, 279, 280], "semi": 0, "analyt": [0, 253, 272, 279], "studi": [0, 272], "ideal": [0, 253, 270, 272, 279], "n": [0, 203, 211, 212, 214, 215, 225, 226, 227, 249, 266, 268, 270, 273, 280], "bodi": [0, 270], "magneto": [0, 268], "hydrodynam": [0, 268, 270], "simul": [0, 81, 171, 186, 253, 266, 268, 270, 271, 272, 273, 276], "whether": [0, 131, 133, 167, 169, 186], "singl": [0, 92, 174, 177, 189, 266, 268, 271, 272, 276, 279], "merger": [0, 266, 268, 271], "between": [0, 96, 201, 234, 236, 255, 269, 272, 273, 279], "two": [0, 92, 96, 266, 272, 273, 276, 279], "more": [0, 81, 92, 109, 110, 120, 145, 146, 156, 174, 251, 267, 268, 270, 271, 272, 273, 276, 279, 280], "purpos": [0, 270], "cluster_gener": [0, 1, 9, 61, 97, 102, 108, 131, 132, 133, 138, 144, 167, 168, 169, 193, 251, 253, 266, 267, 268, 269, 271, 272, 276, 279, 280], "which": [0, 6, 9, 13, 18, 23, 28, 33, 38, 43, 48, 51, 52, 53, 54, 61, 71, 78, 81, 85, 91, 96, 98, 108, 109, 111, 113, 114, 115, 117, 122, 125, 127, 144, 145, 147, 149, 150, 151, 153, 158, 161, 163, 171, 173, 174, 186, 192, 195, 198, 222, 223, 244, 245, 246, 247, 251, 253, 259, 266, 268, 269, 270, 272, 273, 276, 279, 280], "gener": [0, 3, 4, 5, 6, 7, 8, 92, 97, 98, 102, 108, 113, 114, 115, 120, 122, 124, 131, 132, 133, 138, 144, 149, 150, 151, 156, 158, 160, 167, 168, 169, 171, 176, 198, 199, 244, 252, 259, 266, 267, 269, 270, 276], "input": [0, 213, 224, 228, 255, 266, 268, 276, 279], "produc": [0, 102, 138, 272], "distribut": [0, 5, 171, 174, 189, 244, 253, 255, 266, 271, 272, 279, 280], "star": [0, 5, 6, 81, 115, 151, 171, 259, 266, 272], "particl": [0, 5, 6, 8, 9, 13, 18, 23, 28, 33, 38, 43, 48, 81, 91, 92, 94, 97, 113, 114, 115, 149, 150, 151, 244, 253, 255, 259, 262, 266, 270, 271, 272, 276], "There": [0, 98, 269, 272, 273, 276, 280], "also": [0, 6, 15, 20, 25, 30, 35, 40, 45, 50, 253, 266, 269, 270, 272, 273, 276, 279], "abil": 0, "creat": [0, 5, 6, 8, 13, 18, 23, 28, 33, 38, 43, 48, 85, 183, 201, 266, 271, 272, 279, 280], "veloc": [0, 81, 82, 85, 91, 92, 113, 115, 149, 151, 173, 174, 189, 253, 259, 271, 272, 273, 276], "field": [0, 6, 54, 56, 68, 71, 75, 78, 81, 87, 91, 97, 98, 99, 104, 107, 108, 121, 122, 124, 125, 126, 127, 132, 134, 135, 140, 143, 144, 157, 158, 160, 161, 162, 163, 168, 171, 172, 182, 186, 261, 266, 269, 270, 273, 276], "three": [0, 85, 92, 266, 268, 279], "dimens": [0, 12, 17, 22, 27, 32, 37, 42, 47, 85], "base": [0, 10, 53, 81, 97, 113, 114, 115, 149, 150, 151, 259, 266, 272, 273, 279], "": [0, 97, 131, 167, 171, 174, 189, 205, 220, 221, 236, 253, 255, 261, 268, 269, 272, 273, 276, 280], "final": [0, 51, 244, 272, 276, 279, 280], "set": [0, 5, 6, 8, 13, 18, 23, 28, 33, 38, 43, 48, 92, 113, 114, 115, 125, 126, 127, 149, 150, 151, 161, 162, 163, 173, 180, 182, 183, 259, 268, 269, 270, 271, 273, 276, 279, 280], "up": [0, 5, 81, 92, 270, 271, 273, 276, 279, 280], "initi": [0, 6, 10, 81, 83, 86, 91, 92, 93, 98, 108, 112, 124, 144, 148, 160, 170, 186, 196, 253, 266, 267, 269, 270, 272, 273, 279], "condit": [0, 6, 81, 83, 86, 91, 92, 93, 98, 170, 186, 253, 266, 267, 268, 269, 270, 272, 279], "number": [0, 12, 17, 22, 27, 32, 37, 42, 47, 81, 85, 88, 94, 98, 108, 109, 110, 111, 113, 114, 115, 120, 121, 144, 145, 146, 147, 149, 150, 151, 156, 157, 171, 181, 182, 201, 235, 244, 259, 261, 267, 279], "code": [0, 92, 97, 268, 270, 273, 276, 279], "astrophys": [0, 280], "commmun": 0, "To": [0, 102, 124, 138, 160, 253, 269, 270, 272, 273, 276, 279, 280], "begin": [0, 270, 272], "first": [0, 96, 244, 266, 269, 270, 272, 276, 279, 280], "librari": [0, 1, 200, 240, 269, 273, 276], "follow": [0, 255, 266, 270, 272], "instruct": [0, 270], "section": [0, 214, 215, 272, 273], "onc": [0, 270, 272, 273, 279], "you": [0, 113, 114, 115, 132, 149, 150, 151, 168, 259, 267, 270, 273, 276, 279, 280], "ve": [0, 273, 276], "have": [0, 5, 6, 8, 13, 18, 23, 28, 33, 38, 43, 48, 92, 97, 113, 114, 115, 149, 150, 151, 202, 259, 266, 268, 269, 272, 273, 276, 279, 280], "look": [0, 273, 276], "note": [0, 6, 98, 102, 112, 124, 138, 148, 160, 171, 195, 198, 199, 200, 244, 245, 246, 247, 253, 255], "convent": 0, "here": [0, 124, 160, 214, 215, 257, 269, 272, 273], "re": [0, 5, 6, 8, 124, 160, 273, 276], "familiar": [0, 267], "we": [0, 102, 124, 138, 160, 244, 253, 255, 269, 270, 272, 273, 276, 279], "page": [0, 269, 270, 272, 273], "read": [0, 6, 9, 86, 112, 148, 176, 177, 273, 279], "through": [0, 98, 111, 147, 192, 266, 273], "our": [0, 270, 273, 276, 279], "your": [0, 268, 270, 272, 273, 276], "feet": [0, 270], "wet": [0, 270], "The": [0, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 20, 22, 23, 25, 27, 28, 30, 32, 33, 35, 37, 38, 40, 42, 43, 45, 47, 48, 50, 51, 52, 53, 54, 56, 58, 61, 64, 66, 68, 70, 71, 75, 77, 78, 81, 83, 85, 87, 90, 91, 93, 95, 96, 98, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 173, 175, 176, 177, 180, 181, 182, 183, 184, 186, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 244, 245, 246, 247, 251, 253, 255, 257, 259, 260, 261, 264, 266, 268, 269, 271, 272, 273, 280], "basic": [0, 273], "most": [0, 268, 269, 270, 272, 273], "out": [0, 113, 114, 115, 149, 150, 151, 259, 270, 273, 276, 279], "what": [0, 269, 273, 276], "about": [0, 6, 52, 251, 272, 273, 276], "mond": [0, 269], "If": [0, 5, 6, 8, 51, 54, 71, 78, 92, 93, 112, 113, 114, 115, 132, 148, 149, 150, 151, 168, 173, 174, 177, 180, 182, 183, 193, 216, 217, 222, 231, 253, 259, 267, 268, 272, 273, 276, 279, 280], "alreadi": [0, 5, 6, 8, 54, 57, 63, 69, 71, 76, 78, 182, 267, 268, 272, 273, 279], "somewhat": [0, 267], "someth": [0, 273], "littl": [0, 273, 276], "depth": [0, 273, 276], "mai": [0, 97, 223, 245, 246, 247, 253, 255, 268, 269, 272, 273, 276, 279, 280], "provid": [0, 56, 68, 75, 171, 192, 201, 234, 253, 269, 272, 273, 279, 280], "concret": [0, 273], "core": [0, 192, 195, 203, 204, 206, 210, 211, 212, 213, 231, 240, 269, 270, 272, 273, 280], "aspect": 0, "best": [0, 203, 204, 268, 273], "place": [0, 57, 63, 69, 76, 85, 279], "see": [0, 109, 110, 120, 124, 145, 146, 156, 160, 255, 266, 267, 269, 272, 273, 276, 279, 280], "discuss": [0, 255, 272, 273], "some": [0, 91, 127, 163, 171, 224, 268, 269, 271, 273, 276, 280], "help": 0, "mathemat": [0, 273, 276], "background": [0, 266], "overview": 0, "all": [0, 6, 85, 94, 117, 124, 132, 153, 160, 168, 174, 175, 177, 180, 183, 193, 269, 272, 273, 276, 279, 280], "need": [0, 5, 6, 223, 266, 268, 269, 272, 273, 276, 279, 280], "howev": [0, 97, 202, 253, 268, 269, 272], "want": [0, 132, 168, 267, 268, 272, 273, 276, 279, 280], "other": [0, 10, 192, 271, 273, 276], "analysi": 0, "check": [0, 97, 102, 117, 125, 138, 153, 161, 182, 270, 273, 276], "equilibria": 0, "3": [0, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47, 52, 81, 85, 102, 127, 138, 163, 174, 203, 206, 220, 221, 229, 230, 231, 251, 253, 255, 269, 272, 273, 276, 279, 280], "dimension": [0, 253, 268], "3d": [0, 10, 13, 15, 18, 20, 23, 25, 28, 30, 33, 35, 38, 40, 43, 45, 48, 50, 85, 270, 279], "though": [0, 273], "one": [0, 92, 113, 114, 115, 122, 149, 150, 151, 158, 174, 193, 195, 201, 216, 217, 222, 223, 253, 255, 259, 266, 268, 271, 272, 273, 276, 279, 280], "step": [0, 5, 6, 266, 272, 273, 276], "individu": [0, 245, 246, 247, 273], "handi": 0, "tool": [0, 252], "document": [0, 109, 110, 120, 145, 146, 156, 187, 188, 190, 191, 272, 273], "popular": 0, "problem": [0, 260, 270, 279], "exampl": [0, 102, 108, 131, 132, 133, 138, 144, 167, 168, 169, 270, 272, 273, 276, 279, 280], "given": [0, 6, 81, 91, 96, 173, 174, 196, 209, 214, 215, 216, 217, 222, 225, 268, 269, 272, 273, 279, 280], "throughout": [0, 240, 269, 272], "text": [0, 131, 167, 255, 269, 273], "fulli": [0, 97, 273], "work": [0, 203, 204, 253, 268], "finish": [0, 273], "system": [0, 113, 114, 115, 124, 149, 150, 151, 160, 180, 252, 253, 255, 259, 267, 272, 276, 279, 280], "design": [0, 280], "appropri": [0, 125, 161, 182, 199], "scale": [0, 102, 138, 203, 204, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 251, 276, 280], "length": [0, 15, 20, 25, 30, 35, 40, 45, 50, 171, 272, 276], "rm": [0, 279, 280], "kpc": [0, 12, 15, 17, 20, 22, 25, 27, 30, 32, 35, 37, 40, 42, 45, 47, 50, 85, 96, 110, 113, 114, 115, 120, 122, 146, 149, 150, 151, 156, 158, 173, 174, 180, 183, 186, 195, 198, 199, 201, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 259, 273, 276, 279, 280], "time": [0, 113, 114, 115, 149, 150, 151, 209, 253, 259, 268, 269, 270, 272, 276], "myr": [0, 173, 174, 273, 279], "mass": [0, 56, 68, 75, 85, 92, 110, 120, 146, 156, 173, 192, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 226, 227, 228, 230, 235, 244, 245, 246, 247, 272, 273, 276, 279], "m_": [0, 244, 272, 279, 280], "odot": [0, 279, 280], "quantiti": [0, 51, 85, 102, 124, 138, 160, 255, 273, 279, 280], "densiti": [0, 85, 91, 92, 104, 109, 110, 111, 114, 120, 124, 127, 140, 145, 146, 147, 150, 156, 160, 163, 171, 192, 203, 206, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 235, 246, 255, 270, 273, 276, 279], "pressur": [0, 85, 104, 126, 140, 162, 272, 273, 276], "specif": [0, 1, 171, 200, 267, 272, 279], "energi": [0, 91, 92, 114, 150, 253, 255, 273, 279], "gravit": [0, 53, 57, 63, 69, 76, 113, 114, 115, 124, 149, 150, 151, 160, 173, 259, 269, 272, 273, 276, 279], "potenti": [0, 5, 6, 15, 20, 25, 30, 35, 40, 45, 50, 54, 57, 61, 63, 69, 76, 97, 106, 108, 113, 114, 115, 123, 142, 144, 149, 150, 151, 159, 173, 253, 255, 257, 259, 266, 269, 272, 273, 276, 279], "etc": [0, 124, 160, 177, 272, 273, 279], "straighforwardli": 0, "deriv": [0, 100, 136, 255, 268, 269, 272, 279, 280], "arrai": [0, 12, 17, 22, 27, 32, 37, 42, 47, 51, 54, 71, 78, 81, 96, 102, 117, 121, 125, 138, 153, 157, 161, 171, 173, 174, 180, 182, 199, 244, 245, 246, 247, 249, 255, 258, 273, 276, 279], "scalar": [0, 181, 182, 279], "function": [0, 1, 10, 80, 102, 138, 170, 171, 192, 193, 199, 234, 240, 244, 245, 246, 247, 251, 253, 255, 268, 269, 272, 273, 276, 279, 280], "unless": [0, 272], "otherwis": [0, 117, 126, 127, 153, 162, 163, 279], "specifi": [0, 52, 113, 114, 115, 132, 149, 150, 151, 168, 171, 196, 259, 272, 279], "docstr": 0, "mean": [0, 85, 113, 114, 115, 149, 150, 151, 174, 235, 259, 272], "practic": [0, 272], "suppli": [0, 113, 114, 115, 149, 150, 151, 216, 217, 222, 253, 259, 272, 273, 279], "an": [0, 9, 15, 20, 25, 30, 35, 40, 45, 50, 51, 52, 81, 85, 102, 117, 125, 131, 133, 138, 153, 161, 167, 169, 171, 176, 182, 183, 184, 186, 199, 201, 209, 216, 217, 220, 221, 222, 225, 235, 244, 253, 255, 266, 268, 272, 273, 276, 279, 280], "without": [0, 120, 156], "abov": [0, 253, 255, 268, 272, 279], "type": [0, 13, 18, 23, 28, 33, 38, 43, 48, 51, 54, 56, 68, 71, 75, 78, 81, 91, 102, 108, 109, 111, 113, 115, 120, 122, 132, 138, 144, 145, 147, 149, 151, 156, 158, 168, 171, 174, 175, 177, 180, 182, 183, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 236, 244, 245, 246, 247, 253, 254, 259, 262, 266, 268, 272, 273, 276], "e": [0, 171, 193, 195, 211, 212, 217, 225, 226, 227, 229, 230, 235, 253, 255, 268, 273, 279, 280], "g": [0, 205, 217, 253, 268, 269, 272, 273], "posit": [0, 92, 96, 113, 114, 115, 149, 150, 151, 173, 174, 244, 259, 268, 273, 276], "attach": [0, 54, 71, 78, 192, 273], "yt": [0, 85, 183, 216, 217, 222, 273], "unyt": [0, 279], "convert": [0, 51, 124, 131, 133, 160, 167, 169, 182, 235, 272, 273], "intern": [0, 273], "befor": [0, 131, 133, 167, 169, 266], "perform": [0, 180, 266, 271, 276, 279], "ani": [0, 108, 124, 132, 144, 160, 168, 195, 267, 272, 273, 276, 279, 280], "calcul": [0, 96, 225, 255, 273, 279], "return": [0, 51, 52, 54, 56, 57, 63, 68, 69, 71, 75, 76, 78, 102, 108, 109, 111, 113, 115, 117, 120, 122, 132, 138, 144, 145, 147, 149, 151, 153, 156, 158, 168, 175, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 236, 244, 245, 246, 247, 251, 255, 259, 273, 279], "output": [0, 91, 132, 168], "usual": [0, 127, 163, 273], "sometim": 0, "cm": [0, 205], "temperatur": [0, 85, 104, 111, 124, 140, 147, 160, 192, 203, 204, 223, 232, 270, 273, 276], "kev": [0, 111, 147, 204, 205, 232, 276], "entropi": [0, 109, 124, 145, 160, 192, 205, 223, 270, 273, 276], "2": [0, 52, 96, 126, 127, 162, 163, 201, 205, 214, 215, 253, 255, 266, 269, 272, 273, 276, 279, 280], "yet": [0, 5, 6, 272, 273], "publish": 0, "gather": 0, "necessari": [0, 253, 268, 269, 272, 273, 280], "simpl": [0, 270, 276], "navig": 0, "directori": 0, "d": [0, 96, 102, 108, 138, 144, 195, 220, 221, 253, 255, 269, 272, 273, 276, 279, 280], "like": [0, 12, 17, 22, 27, 32, 37, 42, 47, 91, 96, 171, 173, 174, 180, 199, 244, 245, 246, 247, 266, 273, 276], "store": [0, 273, 276], "local": [0, 253, 273], "copi": [0, 266], "execut": 0, "git": 0, "clone": 0, "http": [0, 236], "github": 0, "com": 0, "jzuhon": 0, "branch": 0, "project": [0, 273, 276], "b": [0, 96, 126, 127, 162, 163, 210, 232, 233, 268, 280], "flag": [0, 5, 6, 8], "command": 0, "name": [0, 6, 9, 15, 20, 25, 30, 35, 40, 45, 50, 81, 83, 91, 93, 112, 125, 131, 132, 133, 148, 161, 167, 168, 169, 171, 176, 177, 182, 184, 186, 193, 194, 196, 272, 273, 276, 279], "ha": [0, 54, 71, 78, 91, 125, 161, 182, 192, 193, 222, 223, 266, 268, 269, 270, 272, 273, 276, 279, 280], "should": [0, 6, 81, 108, 132, 144, 168, 171, 174, 198, 200, 202, 222, 272, 273, 276, 279], "compat": [0, 270], "python": 0, "8": [0, 126, 127, 162, 163, 253, 269, 273, 276, 279, 280], "requir": [0, 113, 114, 115, 149, 150, 151, 202, 259, 266, 268, 269, 272, 273, 276, 279], "manipul": [0, 253], "numpi": [0, 102, 138, 174, 244, 255, 258, 273, 276, 279], "numer": [0, 272, 279], "oper": 0, "scipi": [0, 199, 251], "interpol": [0, 13, 18, 23, 28, 33, 38, 43, 48, 199, 251, 268, 269], "curv": 0, "fit": [0, 253], "h5py": 0, "h5": [0, 81, 131, 132, 133, 167, 168, 169, 268, 276, 279], "file": [0, 5, 6, 8, 9, 15, 20, 25, 30, 35, 40, 45, 50, 81, 87, 89, 91, 93, 112, 131, 132, 133, 148, 167, 168, 169, 176, 177, 184, 186, 200, 202, 266, 273, 276, 279], "interact": [0, 272, 273], "tqdm": 0, "progress": [0, 253], "bar": [0, 253], "ruamel": 0, "yaml": [0, 86], "support": [0, 266, 270], "automat": [0, 272, 273], "pip": 0, "conda": 0, "detail": [0, 109, 110, 120, 145, 146, 156, 273, 279], "below": [0, 266, 269, 272, 273], "creation": [0, 279], "memori": [0, 85, 183], "dataset": [0, 85, 183, 273], "few": [0, 273], "differ": [0, 15, 20, 25, 30, 35, 40, 45, 50, 255, 267, 270, 272, 273, 276, 279], "wai": [0, 253, 266, 268, 269, 272, 273, 276, 279], "simplest": [0, 272, 279], "via": [0, 272, 279], "anaconda": 0, "c": [0, 203, 204, 220, 221, 232, 280], "second": [0, 269, 276, 279, 280], "attempt": [0, 272], "download": 0, "them": [0, 92, 97, 273, 276, 279], "thei": [0, 5, 6, 13, 18, 23, 28, 33, 38, 43, 48, 174, 272, 273, 276, 279], "altern": [0, 279], "cd": 0, "m": [0, 81, 108, 144, 203, 204, 205, 211, 212, 214, 215, 216, 220, 221, 226, 227, 229, 230, 244, 269, 272, 273, 276, 279, 280], "util": [1, 102, 108, 131, 132, 133, 138, 144, 167, 168, 169, 273], "implement": [1, 53, 61, 73, 195, 268, 269, 270, 272, 273], "statu": [1, 117, 153], "inform": [1, 86, 93, 272, 273, 276, 279, 280], "rams": [1, 8, 9, 270], "full": [1, 268, 273], "ic": [2, 3, 4, 5, 6, 7, 8, 266, 276, 279], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 21, 22, 26, 31, 32, 36, 37, 41, 46, 47, 51, 52, 54, 55, 56, 59, 61, 62, 65, 66, 67, 68, 71, 73, 74, 75, 78, 81, 82, 85, 86, 91, 92, 93, 96, 98, 99, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 259, 279], "paramet": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 20, 22, 23, 25, 27, 28, 30, 32, 33, 35, 37, 38, 40, 42, 43, 45, 47, 48, 50, 51, 52, 54, 56, 61, 68, 71, 75, 78, 81, 85, 91, 93, 96, 98, 108, 109, 110, 111, 112, 113, 114, 115, 120, 122, 126, 127, 131, 132, 133, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 162, 163, 167, 168, 169, 171, 173, 174, 175, 176, 177, 180, 182, 183, 184, 186, 189, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 244, 251, 253, 259, 272, 273, 279, 280], "athena": [3, 268, 270], "from": [3, 4, 5, 6, 7, 8, 51, 53, 56, 68, 75, 85, 86, 91, 92, 96, 97, 100, 102, 108, 109, 111, 112, 122, 126, 131, 132, 133, 136, 138, 144, 145, 147, 148, 158, 162, 167, 168, 169, 171, 175, 176, 177, 180, 196, 200, 216, 217, 222, 225, 231, 232, 236, 244, 251, 253, 255, 266, 269, 273, 276, 280], "enzo": [4, 270], "use_particl": 5, "true": [5, 6, 8, 9, 54, 57, 63, 69, 71, 76, 78, 93, 113, 114, 115, 117, 126, 127, 131, 132, 133, 149, 150, 151, 153, 162, 163, 167, 168, 169, 173, 182, 259, 272, 273, 276, 279], "regenerate_particl": [5, 6, 8, 92], "fals": [5, 6, 8, 9, 11, 12, 15, 16, 17, 20, 25, 30, 31, 32, 35, 40, 45, 46, 47, 50, 59, 71, 78, 92, 93, 113, 114, 115, 131, 132, 133, 149, 150, 151, 167, 168, 169, 173, 182, 184, 185, 186, 259, 272, 273], "flash": [5, 9, 268, 270], "par": 5, "line": [5, 6], "galaxyclustermerg": [5, 266], "setup": [5, 6, 266, 270, 276], "been": [5, 6, 8, 91, 269, 272, 273, 276], "gamer": [5, 6, 9, 268, 270], "boolean": [5, 6, 8, 9, 15, 20, 25, 30, 35, 40, 45, 50, 93, 113, 114, 115, 126, 127, 131, 133, 149, 150, 151, 162, 163, 167, 169, 173, 182, 184, 186, 259, 279], "option": [5, 6, 8, 9, 13, 15, 18, 20, 23, 25, 28, 30, 33, 35, 38, 40, 43, 45, 48, 50, 52, 85, 93, 96, 98, 110, 112, 113, 114, 115, 120, 126, 127, 131, 133, 146, 148, 149, 150, 151, 156, 162, 163, 167, 169, 171, 173, 174, 177, 180, 182, 183, 184, 186, 197, 201, 216, 217, 222, 236, 244, 253, 259, 266, 268, 270, 272, 273, 276, 279], "default": [5, 6, 8, 9, 13, 15, 18, 20, 23, 25, 28, 30, 33, 35, 38, 40, 43, 45, 48, 50, 51, 85, 93, 96, 104, 113, 114, 115, 122, 126, 127, 131, 133, 140, 149, 150, 151, 158, 162, 163, 167, 169, 173, 174, 180, 182, 184, 186, 201, 216, 217, 222, 231, 236, 253, 259, 268, 273, 276, 279], "being": [5, 8, 56, 58, 64, 68, 70, 75, 77, 98, 272, 273, 279], "use_trac": 6, "input_testprob": 6, "clustermerg": [6, 266], "new": [6, 13, 18, 23, 28, 33, 38, 43, 48, 54, 71, 78, 124, 160, 174, 193, 251, 268, 272, 273], "cg": [6, 131, 132, 133, 167, 168, 169, 273, 276, 279, 280], "unit": [6, 13, 15, 18, 20, 23, 25, 28, 30, 33, 35, 38, 40, 43, 45, 48, 50, 51, 111, 126, 127, 131, 133, 147, 162, 163, 167, 169, 173, 174, 180, 182, 186, 199, 236, 242, 243, 268, 276, 279, 280], "present": [6, 273], "how": [6, 267, 272, 273, 276, 279], "interpret": 6, "tracer": 6, "add": [6, 12, 13, 17, 18, 22, 23, 27, 28, 32, 33, 37, 38, 42, 43, 47, 48, 173, 174, 182, 192, 195, 266, 272, 273], "gizmo": [7, 177, 270, 279], "func": 7, "output_filenam": [9, 131, 132, 133, 167, 168, 169, 184, 185], "ptype": [9, 13, 18, 23, 28, 33, 38, 43, 48, 171, 174, 175, 176, 177, 178, 180, 182, 183, 253, 254, 268, 273, 279], "ptype_num": 9, "overwrit": [9, 15, 20, 25, 30, 35, 40, 45, 50, 93, 131, 132, 133, 167, 168, 169, 184, 185, 186, 276, 279], "in_cg": [9, 131, 132, 133, 167, 168, 169], "hdf5": [9, 15, 20, 25, 30, 35, 40, 45, 50, 91, 112, 133, 148, 169, 176, 184, 186, 266, 272, 276, 279], "write": [9, 15, 20, 25, 30, 35, 40, 45, 50, 93, 131, 132, 133, 167, 168, 169, 184, 186, 255, 273, 276, 279], "clusterparticl": [9, 13, 18, 23, 28, 33, 38, 43, 48, 113, 115, 149, 151, 189, 259, 268], "instanc": [9, 54, 58, 61, 64, 66, 70, 71, 77, 78, 112, 117, 124, 148, 153, 160, 193, 200, 201, 202, 272, 273, 276, 279], "written": [9, 15, 20, 25, 30, 35, 40, 45, 50, 268, 272, 273, 276, 279], "string": [9, 13, 15, 18, 20, 23, 25, 28, 30, 33, 35, 38, 40, 43, 45, 48, 50, 81, 91, 93, 112, 122, 131, 133, 148, 158, 167, 169, 174, 176, 177, 180, 182, 183, 184, 186, 253], "exist": [9, 15, 20, 25, 30, 35, 40, 45, 50, 131, 132, 133, 167, 168, 169, 182, 184, 186, 195, 268, 279], "same": [9, 15, 20, 25, 30, 35, 40, 45, 50, 93, 113, 114, 115, 131, 132, 133, 149, 150, 151, 167, 168, 169, 171, 182, 184, 193, 259, 269, 272, 279], "task": [10, 192, 267, 270, 271, 276], "class": [10, 11, 16, 21, 26, 31, 36, 41, 46, 53, 54, 61, 66, 73, 80, 81, 97, 98, 108, 134, 144, 170, 171, 192, 193, 252, 253, 271, 272, 273, 276, 280], "left_edg": [11, 12, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47, 85], "right_edg": [11, 12, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47], "ddim": [11, 12, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47], "pad": [11, 12, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47], "0": [11, 12, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47, 81, 82, 85, 96, 102, 124, 127, 138, 160, 163, 173, 180, 195, 207, 216, 217, 222, 236, 251, 253, 257, 268, 269, 272, 273, 276, 279, 280], "1": [11, 12, 16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47, 52, 113, 114, 115, 116, 149, 150, 151, 152, 195, 198, 206, 218, 233, 251, 253, 255, 259, 269, 272, 273, 276, 279, 280], "vector_potenti": [11, 12, 16, 17, 22, 27, 32, 37, 42, 47], "divergence_clean": [11, 12, 16, 17, 22, 27, 31, 32, 37, 42, 46, 47], "method": [11, 16, 21, 26, 31, 36, 41, 46, 54, 61, 66, 73, 81, 98, 108, 112, 124, 130, 134, 144, 148, 160, 166, 171, 192, 193, 253, 255, 268, 270, 272, 273, 276, 279], "attribut": [11, 16, 21, 26, 31, 36, 41, 46, 54, 56, 61, 66, 68, 73, 75, 81, 98, 100, 108, 109, 110, 112, 120, 132, 134, 136, 144, 145, 146, 148, 156, 168, 171, 193, 253, 266, 272, 273], "lower": [12, 17, 22, 27, 32, 37, 42, 47], "edg": [12, 17, 22, 27, 32, 37, 42, 47, 85], "box": [12, 17, 22, 27, 32, 37, 42, 47, 85, 186, 269, 279], "each": [12, 17, 22, 27, 32, 37, 42, 47, 53, 81, 85, 113, 114, 115, 121, 149, 150, 151, 157, 171, 192, 244, 245, 246, 247, 259, 268, 272, 273, 276, 279], "upper": [12, 17, 22, 27, 32, 37, 42, 47], "grid": [12, 17, 22, 27, 32, 37, 42, 47, 85, 266, 268], "ax": [12, 15, 17, 20, 22, 25, 27, 30, 32, 35, 37, 40, 42, 45, 47, 50, 122, 158, 201, 273, 276, 279], "amount": [12, 17, 22, 27, 32, 37, 42, 47, 279], "addit": [12, 17, 22, 27, 32, 37, 42, 47, 56, 68, 75, 81, 98, 100, 108, 109, 110, 111, 120, 136, 144, 145, 146, 147, 156, 192, 269, 273, 276, 279], "boundari": [12, 17, 22, 27, 32, 37, 42, 47], "cluster_particl": [13, 18, 23, 28, 33, 38, 43, 48], "none": [13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 50, 56, 68, 81, 82, 85, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 124, 132, 133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 160, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 190, 191, 193, 194, 201, 202, 216, 217, 222, 231, 244, 245, 253, 254, 259, 272, 273], "map": [13, 18, 23, 28, 33, 38, 43, 48, 279], "tri": [13, 18, 23, 28, 33, 38, 43, 48], "linear": [13, 18, 23, 28, 33, 38, 43, 48, 268, 269], "ad": [13, 18, 23, 28, 33, 38, 43, 48, 85, 92, 174, 182, 195, 273, 280], "almost": [13, 18, 23, 28, 33, 38, 43, 48], "alwai": [13, 18, 23, 28, 33, 38, 43, 48, 273, 276], "case": [13, 18, 23, 28, 33, 38, 43, 48, 91, 122, 132, 158, 168, 173, 234, 253, 257, 267, 269, 272, 273, 279], "chang": [13, 18, 23, 28, 33, 38, 43, 48, 272, 273], "impli": [13, 18, 23, 28, 33, 38, 43, 48, 269, 272], "remain": [13, 18, 23, 28, 33, 38, 43, 48, 253], "galact": [13, 18, 23, 28, 33, 38, 43, 48, 255], "filenam": [15, 20, 25, 30, 35, 40, 45, 50, 86, 91, 93, 112, 132, 148, 168, 176, 177, 178, 200, 202], "length_unit": [15, 20, 25, 30, 35, 40, 45, 50], "field_unit": [15, 20, 25, 30, 35, 40, 45, 50], "coordin": [15, 20, 25, 30, 35, 40, 45, 50, 85, 174, 180, 253], "cell": [15, 20, 25, 30, 35, 40, 45, 50, 85, 91, 266, 268], "along": [15, 20, 25, 30, 35, 40, 45, 50, 96, 213, 228], "affect": [15, 20, 25, 30, 35, 40, 45, 50], "l_min": [16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47], "l_max": [16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47], "alpha": [16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47, 102, 138, 195, 205, 207, 223, 231, 233, 269, 272, 280], "6666666666666665": [16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47], "g_rm": [16, 17], "ctr1": [16, 17, 21, 22, 26, 27, 31, 32], "ctr2": [16, 17, 21, 22, 26, 27, 31, 32], "ctr3": [16, 17, 21, 22, 26, 27, 31, 32], "r1": [16, 17], "r2": [16, 17], "r3": [16, 17], "g1": [16, 17], "g2": [16, 17], "g3": [16, 17], "prng": [16, 17, 21, 22, 26, 27, 31, 32, 36, 37, 41, 42, 46, 47, 92, 113, 114, 115, 116, 149, 150, 151, 152, 244, 250, 259], "r_max": [16, 17, 21, 22, 26, 27, 31, 32, 81, 82, 112, 113, 114, 115, 116, 122, 128, 132, 133, 148, 149, 150, 151, 152, 158, 164, 168, 169, 180, 244, 259, 279], "profile1": [21, 22, 26, 27, 31, 32], "profile2": [21, 22, 26, 27, 31, 32], "profile3": [21, 22, 26, 27, 31, 32], "b_rm": [36, 37, 41, 42], "v_rm": [46, 47], "valu": [51, 57, 63, 69, 76, 107, 108, 125, 143, 144, 161, 171, 173, 182, 199, 208, 216, 223, 251, 268, 272, 273, 276, 279, 280], "default_unit": 51, "pars": 51, "correct": [51, 124, 160, 171, 272, 276], "param": [51, 245, 246, 247], "unyt_arrai": [51, 81, 98, 108, 109, 111, 117, 125, 144, 145, 147, 153, 161, 174, 182, 253, 272, 273], "simpli": [51, 272, 273, 279], "tupl": [51, 85, 122, 158, 171], "form": [51, 111, 147, 198, 214, 215, 253, 269, 272], "v_arrai": 51, "v_unit": 51, "convers": 51, "str": [51, 81, 98, 108, 109, 110, 111, 120, 132, 144, 145, 146, 147, 156, 168, 171, 200, 202, 253], "axi": 52, "gx": 52, "gy": 52, "gz": 52, "ang": 52, "rotat": 52, "vector": [52, 102, 138, 269, 272, 279], "angl": 52, "around": [52, 269, 273], "int": [52, 81, 85, 98, 109, 111, 145, 147, 171, 198, 244, 253, 255, 279], "float": [52, 81, 85, 96, 109, 110, 111, 112, 113, 114, 115, 120, 122, 126, 127, 132, 145, 146, 147, 148, 149, 150, 151, 156, 158, 162, 163, 168, 171, 173, 180, 183, 186, 195, 198, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 244, 251, 259], "over": [52, 245, 246, 247, 255, 269, 279], "modul": [53, 170, 234, 270, 273], "contain": [53, 81, 94, 97, 102, 108, 138, 144, 193, 195, 267, 272, 273, 276, 279, 280], "essenti": [53, 273, 276], "act": 53, "wrapper": [53, 192, 273, 276, 280], "solv": [53, 268, 269, 279], "poisson": [53, 54, 71, 78, 269, 272, 273], "equat": [53, 54, 71, 78, 225, 253, 255, 269, 272, 273, 279], "avail": [53, 113, 114, 115, 149, 150, 151, 259, 266, 270, 272, 273, 280], "theori": [53, 98, 110, 120, 146, 156, 253, 270, 272, 273], "inherit": [53, 261, 273], "kwarg": [54, 55, 66, 67, 73, 74, 85, 98, 99, 100, 108, 109, 110, 111, 120, 122, 134, 135, 136, 144, 145, 146, 147, 156, 158, 199, 201, 272, 273], "comput": [54, 56, 58, 61, 64, 68, 70, 71, 75, 77, 78, 109, 111, 113, 114, 115, 145, 147, 149, 150, 151, 216, 217, 222, 240, 245, 246, 247, 255, 259, 268, 272, 273, 276, 279], "forc": [54, 59, 71, 78, 272, 273], "bool": [54, 71, 78, 117, 132, 153, 168, 273], "occur": [54, 71, 78, 117, 153, 269, 273], "even": [54, 71, 78, 253, 272, 273, 279], "relev": [54, 71, 78, 273], "solut": [54, 71, 78, 272, 273, 280], "np": [54, 56, 68, 71, 75, 78, 102, 138, 251, 272, 273, 276, 279], "ndarrai": [54, 56, 68, 71, 75, 78, 272, 273], "classmethod": [56, 68, 75, 86, 108, 109, 110, 111, 112, 120, 144, 145, 146, 147, 148, 156, 176, 177, 178, 196, 199, 200, 273], "attr": [56, 68, 75, 98, 109, 110, 111, 120, 132, 145, 146, 147, 156, 168, 273], "dynam": [56, 68, 75, 253, 255, 269, 272, 273, 279, 280], "dict": [56, 68, 75, 81, 98, 108, 109, 110, 120, 144, 145, 146, 156, 171, 273], "associ": [56, 68, 75, 100, 106, 136, 142, 273], "result": [56, 68, 75, 96, 245, 246, 247, 268, 269, 272, 273, 276, 279], "Will": [57, 63, 69, 76, 244], "basi": [61, 255], "custom": [61, 273], "clustermodel": [61, 97, 144, 145, 146, 147, 148, 153, 156, 159, 160, 253, 276], "newtonian": [66, 98, 99, 102, 109, 110, 111, 120, 131, 132, 133, 134, 135, 138, 145, 146, 147, 156, 167, 168, 169, 253, 269, 270, 273, 276], "qumond": [73, 98, 270], "basenam": [81, 82], "num_halo": [81, 82], "center": [81, 82, 96, 174, 180, 189, 273, 279], "num_particl": [81, 82, 113, 114, 115, 116, 149, 150, 151, 152, 244, 259, 279], "mag_fil": [81, 82], "particle_fil": [81, 82], "20000": [81, 82, 279], "user": [81, 132, 168, 171, 266, 267, 269, 270, 273, 276, 279], "side": [81, 85, 183, 273], "complet": [81, 255, 270, 273], "less": [81, 272], "arbitrari": [81, 269, 273], "halo": [81, 88, 209, 216, 217, 222, 253, 266, 272, 273, 279, 280], "includ": [81, 88, 98, 104, 108, 131, 140, 144, 167, 171, 244, 266, 268, 269, 270, 273], "list": [81, 89, 132, 168, 171, 174, 175, 177, 180, 183, 272, 273], "path": [81, 131, 132, 133, 167, 168, 169, 273], "where": [81, 96, 132, 168, 214, 215, 255, 269, 272, 273, 279, 280], "kei": [81, 98, 108, 144, 171, 273, 276], "maxim": [81, 90, 112, 148, 272, 280], "radiu": [81, 90, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 132, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 168, 180, 195, 198, 201, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 244, 251, 259, 273, 276, 280], "data": [81, 177, 267, 272, 276], "permit": 81, "domain_dimens": [85, 273], "box_siz": [85, 171, 172, 183, 186, 273, 279], "uniformli": [85, 244], "when": [85, 124, 160, 201, 216, 217, 222, 253, 272, 273, 280], "multipl": [85, 270, 279], "per": 85, "volum": 85, "wherea": 85, "quantit": 85, "weight": [85, 92], "domain": [85, 117, 153, 183], "size": [85, 108, 125, 144, 161, 182, 276], "array_lik": [85, 189], "minimum": [85, 109, 110, 111, 112, 120, 122, 132, 145, 146, 147, 148, 156, 158, 168, 173, 201, 232, 279], "left": [85, 195, 198, 251, 253, 269, 272, 279, 280], "allow": [90, 113, 114, 115, 149, 150, 151, 253, 259, 269, 272, 273, 279], "part": [91, 268, 273, 279], "passive_scalar": [91, 182, 190, 191, 279], "gadget": [91, 171, 177, 186, 266], "relax": [91, 280], "make": [91, 124, 125, 160, 161, 180, 182, 201, 270, 272, 273, 276], "glass": 91, "meshrelax": 91, "arepo": [91, 177, 270, 279], "resampl": [91, 189], "thermal": [91, 92, 126, 162, 272, 273], "onto": [91, 189, 268, 273], "rel": [92, 102, 138, 253, 255, 257, 272, 273, 276, 279], "sph": 92, "routin": 92, "either": [92, 177, 186, 253, 268, 273, 276, 279], "combin": [92, 279, 280], "togeth": [92, 279], "than": [92, 195, 272], "overlap": 92, "dictionari": [94, 98, 111, 132, 147, 168, 273], "total": [94, 110, 120, 146, 156, 210, 211, 212, 213, 214, 215, 218, 219, 224, 226, 227, 228, 273, 276, 279, 280], "common": [96, 270, 272], "distanc": 96, "central": [96, 127, 163, 205, 280], "separ": 96, "direct": [96, 258, 273, 279], "determin": [96, 102, 138, 171, 173, 244, 253, 272, 273, 279, 280], "sep_x": 96, "sqrt": [96, 253, 255, 269, 279], "impact": [96, 280], "y": [96, 203, 204, 269, 273, 280], "z": [96, 216, 217, 222, 269, 272, 273, 276, 280], "so": [96, 98, 124, 131, 160, 167, 193, 223, 268, 272, 273, 276, 279], "center1": [96, 187, 188, 190, 191], "5": [96, 198, 272, 273, 276, 279, 280], "center2": [96, 187, 188, 190, 191], "similar": [97, 272, 280], "graviti": [97, 98, 99, 102, 108, 109, 110, 111, 120, 131, 132, 133, 134, 135, 138, 144, 145, 146, 147, 156, 167, 168, 169, 253, 270, 276], "realiz": [97, 272, 273], "just": [97, 273, 276], "do": [97, 124, 160, 266, 268, 273, 276, 279], "hse": [97, 102, 138, 189, 272, 273], "comprehens": [98, 269, 270, 272, 273], "represent": [98, 273], "accur": [98, 273], "predic": 98, "fix": [98, 124, 160, 272], "sampl": [98, 109, 111, 113, 114, 115, 145, 147, 149, 150, 151, 244, 259, 261, 272, 273, 280], "radii": [98, 113, 114, 115, 117, 149, 150, 151, 153, 190, 191, 199, 244, 245, 246, 247, 259, 272, 279, 280], "num_el": [98, 272], "element": [98, 108, 121, 144, 157, 174, 261], "equival": [98, 108, 144, 178, 251, 272], "appli": [98, 253, 272], "aqual": [98, 270], "pass": [98, 108, 109, 110, 111, 120, 144, 145, 146, 147, 156, 193, 273], "becom": [98, 111, 147, 251, 253, 272, 273, 280], "incorpor": [98, 111, 147], "self": [98, 108, 111, 132, 144, 147, 168, 171, 258, 273], "__getitem__": [98, 171], "__contains__": 98, "alias": 98, "down": [98, 276], "__setitem__": [98, 171], "index": [98, 171, 195, 214, 215, 223, 270, 273, 280], "assign": [98, 268, 273, 276, 279], "cannot": [98, 112, 148], "set_field": [98, 272, 273, 279], "instead": [98, 102, 138, 195, 245, 246, 247, 272, 280], "deviat": [102, 138, 272, 273, 276], "chk": [102, 138, 255, 273], "recal": [102, 138, 272], "gamma": [102, 138, 231, 272, 280], "defin": [102, 138, 180, 181, 222, 244, 272, 279], "frac": [102, 138, 195, 198, 244, 253, 255, 269, 272, 279, 280], "nabla": [102, 138, 253, 268, 269, 272], "p": [102, 138, 229, 230, 272, 279, 280], "rho_g": [102, 138, 272], "phi": [102, 138, 253, 255, 257, 269, 272, 279], "thu": [102, 138, 253, 268, 269, 272, 273, 279, 280], "invari": [102, 138], "report": [102, 138], "import": [102, 108, 131, 132, 133, 138, 144, 167, 168, 169, 251, 272, 273, 276, 279, 280], "test": [102, 108, 113, 114, 115, 131, 132, 133, 138, 144, 149, 150, 151, 167, 168, 169, 259, 276], "generate_model": [102, 131, 132, 133, 138, 167, 168, 169], "assert_almost_equ": [102, 138], "mdl": [102, 131, 132, 133, 138, 167, 168, 169], "amax": [102, 138], "decim": [102, 138], "total_dens": [104, 108, 110, 120, 140, 144, 146, 156, 273, 276], "gravitational_potenti": [104, 108, 140, 144, 273, 276], "gravitational_field": [104, 140, 273, 276], "total_mass": [104, 108, 140, 144, 273, 276], "gas_mass": [104, 140, 273, 276], "dark_matter_mass": [104, 140, 273, 276], "dark_matter_dens": [104, 140, 273, 276, 279], "stellar_dens": [104, 109, 110, 111, 120, 140, 145, 146, 147, 156, 272, 273, 276], "stellar_mass": [104, 140, 273, 276], "access": [104, 140, 276], "r": [107, 108, 143, 144, 195, 198, 199, 206, 223, 244, 251, 253, 257, 268, 272, 273, 276, 279, 280], "find": [107, 143, 213, 216, 217, 228, 253, 272, 273, 279], "alon": [108, 144], "must": [108, 111, 124, 144, 147, 160, 171, 193, 272, 273, 279], "consist": [108, 144, 202, 279], "its": [108, 112, 144, 148, 195, 244, 268, 273, 276, 280], "definit": [108, 144, 255], "assess": [108, 144], "from_dens_and_tden": [108, 144, 272, 273, 276], "from_dens_and_temp": [108, 144, 272, 273, 276], "from_dens_and_entr": [108, 144, 272, 276], "from_h5_fil": [108, 144, 272, 276], "generate_mdr_potenti": [108, 144], "matplotlib": [108, 122, 144, 158, 201, 251, 273, 276, 279], "pyplot": [108, 144, 251, 273, 276, 279], "plt": [108, 144, 251, 273, 276, 279], "print": [108, 144, 273, 276], "dict_kei": [108, 144], "_": [108, 144, 195, 255, 273, 279], "pot": [108, 144], "plot": [108, 144, 273, 276, 279], "rmin": [109, 110, 111, 120, 122, 145, 146, 147, 156, 158, 201, 272, 273, 276], "rmax": [109, 110, 111, 120, 122, 145, 146, 147, 156, 158, 201, 245, 272, 273, 276], "num_point": [109, 110, 111, 120, 145, 146, 147, 156, 201, 273, 276], "construct": [109, 110, 145, 146, 253, 264, 270, 272, 273], "maximum": [109, 110, 111, 113, 114, 115, 120, 122, 132, 145, 146, 147, 149, 150, 151, 156, 158, 168, 180, 201, 244, 259, 273, 276, 279], "point": [109, 110, 111, 120, 145, 146, 147, 156, 201, 267, 272, 273], "callabl": [109, 111, 145, 147, 193, 199, 245, 246, 247, 251, 273], "stellar": [109, 110, 111, 120, 145, 146, 147, 156, 253, 262, 272, 279, 280], "1000": [110, 111, 120, 146, 147, 156, 201, 251, 273, 276, 279, 280], "radialprofil": [110, 120, 146, 156, 192, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 272, 276, 280], "A": [110, 113, 114, 115, 120, 146, 149, 150, 151, 156, 174, 201, 206, 208, 210, 211, 212, 214, 215, 218, 219, 223, 226, 227, 229, 230, 231, 232, 233, 236, 259, 268, 273, 279, 280], "describ": [110, 120, 146, 156, 273, 276, 279, 280], "desir": [110, 120, 146, 156, 171, 244, 273, 279], "integ": [110, 113, 114, 115, 120, 146, 149, 150, 151, 156, 201, 259], "evalu": [110, 120, 146, 156], "r_min": [112, 122, 132, 133, 148, 158, 168, 169], "seek": [112, 148], "both": [112, 148, 253, 279], "pkl": [112, 148, 276], "later": [112, 148, 268, 279], "found": [112, 148, 272, 273], "lose": [112, 132, 148, 168], "issu": [112, 148, 267], "warn": [112, 148, 273, 279], "sub_sampl": [113, 114, 115, 116, 149, 150, 151, 152, 259], "compute_potenti": [113, 114, 115, 149, 150, 151, 259, 279], "within": [113, 114, 115, 149, 150, 151, 186, 224, 236, 244, 259, 267, 279, 280], "sub": [113, 114, 115, 149, 150, 151, 259], "uniqu": [113, 114, 115, 149, 150, 151, 259, 279], "repeat": [113, 114, 115, 149, 150, 151, 259], "fill": [113, 114, 115, 149, 150, 151, 259], "randomst": [113, 114, 115, 149, 150, 151, 244, 259], "pseudo": [113, 114, 115, 149, 150, 151, 244, 259], "random": [113, 114, 115, 149, 150, 151, 244, 259, 279], "typic": [113, 114, 115, 149, 150, 151, 253, 259, 269, 271, 272, 280], "onli": [113, 114, 115, 132, 149, 150, 151, 168, 253, 255, 259, 269, 273, 279], "reason": [113, 114, 115, 149, 150, 151, 259, 269, 272], "seed": [113, 114, 115, 149, 150, 151, 259], "viabl": [117, 153, 253, 272, 276], "non": [117, 124, 153, 160, 253, 270, 276], "fig": [122, 158, 201, 273, 276, 279], "v": [122, 158, 253, 255, 268, 269, 272, 279, 280], "figur": [122, 158, 201, 251, 276], "call": [124, 160, 269, 273, 276], "constrain": [124, 160, 268], "version": [124, 160, 200, 280], "itself": [124, 160, 182, 273], "procedur": [124, 160, 268, 272], "accomplish": [124, 160, 267], "approach": [124, 160, 253, 269, 272, 273], "math": [124, 160, 235, 255], "ho_i": [124, 160], "therefor": [124, 160, 253, 255, 272], "substitut": [124, 160], "ho": [124, 160], "_i": [124, 160], "o": [124, 131, 132, 133, 160, 167, 168, 169, 276], "ext": [124, 160], "depend": [124, 160, 253, 268, 272, 273], "recomput": [124, 160, 272, 273], "after": [124, 160, 266, 272, 273, 279], "stage": [124, 160, 268], "manual": [124, 132, 160, 168, 272, 273, 276], "sure": [125, 161, 182, 273, 276], "beta": [126, 162, 206, 231, 270, 280], "gaussian": [126, 127, 162, 163, 253, 272], "plasma": [126, 162], "p_th": [126, 162], "p_b": [126, 127, 162, 163], "lorentz": [126, 127, 162, 163], "heavisid": [126, 127, 162, 163], "dimensionless": [126, 127, 162, 163], "ratio": [126, 162], "pi": [126, 127, 162, 163, 253, 255, 269, 273, 276, 279, 280], "b0": [127, 163, 279], "eta": [127, 163, 272], "6666666666666666": [127, 163], "proport": [127, 163, 272], "power": [127, 163, 195, 214, 215, 223, 251, 270, 272], "strength": [127, 163], "gauss": [127, 163], "ascii": [131, 167, 272], "astropi": [131, 167], "qtabl": [131, 167], "tempfil": [131, 132, 133, 167, 168, 169], "temporarydirectori": [131, 132, 133, 167, 168, 169], "temp_dir": [131, 132, 133, 167, 168, 169], "join": [131, 132, 133, 167, 168, 169], "fields_to_writ": [132, 168], "unformat": [132, 168], "fortran": [132, 168], "binari": [132, 168, 202, 266, 272, 276], "But": [132, 168], "why": [132, 168, 269, 273], "would": [132, 168, 269, 273], "fortan": [132, 168], "proceedur": [132, 168], "metadata": [132, 168], "As": [132, 168, 269, 272, 273, 276, 280], "upon": [132, 168, 269], "reopen": [132, 168], "manag": [170, 273], "particle_typ": [171, 172], "interfac": [171, 273], "dure": [171, 272], "black_hol": 171, "1d": [171, 268], "particle_mass": [171, 273, 279], "implicitli": 171, "boxsiz": 171, "similarli": [171, 269, 272], "alia": 171, "bh_mass": 173, "po": [173, 279], "vel": [173, 279], "use_pot_min": [173, 279], "black": 173, "hole": 173, "solar": 173, "argument": [173, 268, 273], "ignor": [173, 272], "r_ctr": [174, 279], "v_ctr": [174, 279], "offset": [174, 273], "bulk": [174, 279], "indic": [174, 182, 272, 273], "normal": [174, 270, 279, 280], "circumst": 174, "drop": [175, 203, 204], "remov": [175, 180, 268, 272], "snapshot": [177, 279], "cl": [178, 273], "from_fil": [178, 279], "cut": [180, 198, 273], "outsid": [180, 272], "certain": [180, 223, 276, 279], "export": [180, 183], "passiv": [181, 182, 279], "updat": 182, "shape": [182, 279], "preserv": [182, 251, 268], "width": [183, 186, 231, 232, 279], "ic_filenam": 186, "dtype": [186, 273], "float32": 186, "cubic": [186, 279], "datatyp": [186, 273], "float64": [186, 273], "particles1": [187, 188], "particles2": [187, 188], "particles3": 187, "hse1": [187, 188, 190, 191], "hse2": [187, 188, 190, 191], "hse3": [187, 190], "center3": [187, 190], "velocity1": [187, 188, 190, 191], "velocity2": [187, 188, 190, 191], "velocity3": [187, 190], "todo": [187, 188, 190, 191], "instanti": [192, 280], "lambda": [192, 193, 273, 276], "cumul": [192, 244, 245, 246, 247], "alter": [192, 195, 272, 279], "truncat": [192, 198, 229, 230, 251, 270, 273], "varieti": [192, 234, 267, 269, 270, 272, 273, 276], "anoth": [193, 272, 273, 280], "previou": [193, 272], "r_core": 195, "pre": [195, 272], "low": [195, 269], "insid": 195, "exponenti": 195, "take": [195, 251, 268, 269, 272, 273, 276], "f": [195, 200, 202, 220, 221, 251, 253, 255, 269, 273, 276, 279, 280], "exp": [195, 198, 253, 273, 280], "r_": [195, 198, 207, 209, 214, 215, 220, 221, 223, 229, 230, 231, 280], "right": [195, 198, 253, 269, 272, 273, 276, 279, 280], "caus": [195, 198, 251, 280], "cuspi": [195, 280], "dr": [195, 253, 272], "grow": 195, "faster": [195, 198, 273, 280], "term": [195, 280], "go": [195, 198, 273, 276], "limit": [195, 279], "arg": 196, "constant_profil": [197, 273, 280], "power_law_profil": [197, 273, 280], "beta_model_profil": [197, 273], "hernquist_density_profil": [197, 251, 273, 276], "cored_hernquist_density_profil": [197, 273], "hernquist_mass_profil": [197, 273], "nfw_density_profil": [197, 273, 280], "nfw_mass_profil": [197, 273, 280], "tnfw_density_profil": [197, 273], "tnfw_mass_profil": [197, 273], "snfw_density_profil": [197, 272, 273, 276, 280], "snfw_mass_profil": [197, 272, 273, 276, 280], "cored_snfw_density_profil": [197, 273], "cored_snfw_mass_profil": [197, 273], "cored_snfw_total_mass": [197, 273], "einasto_density_profil": [197, 273], "einasto_mass_profil": [197, 273], "am06_density_profil": [197, 204, 273], "vikhlinin_density_profil": [197, 272, 273, 276], "vikhlinin_temperature_profil": [197, 272, 273], "am06_temperature_profil": [197, 203, 273], "baseline_entropy_profil": [197, 273], "broken_entropy_profil": [197, 273], "walker_entropy_profil": [197, 273], "rescale_profile_by_mass": [197, 272, 273, 276], "built": [197, 270, 272, 273, 276], "r_cut": 198, "k": [198, 251, 268, 273, 280], "beyond": [198, 279, 280], "domin": 198, "behavior": [198, 272, 273], "rate": [198, 251], "higher": [198, 251], "zero": [198, 268, 272, 273, 279], "correspond": [198, 199, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 260, 268, 269, 272, 279], "achiev": 198, "multipli": 198, "factor": [198, 272, 280], "2k": 198, "f_r": 199, "univariatesplin": 199, "continu": [199, 251, 273], "spectrum": 199, "load": [200, 270, 272, 276], "serial": [200, 202, 273, 276], "save": [200, 273, 276], "disk": [200, 273, 276, 279], "open": [200, 276], "valid": [200, 253], "rp": [200, 202], "pickl": 200, "lw": [201, 251, 279], "quick": [201, 276, 279], "logspac": 201, "send": 202, "prefer": 202, "extens": [202, 272], "rho_0": [203, 231, 280], "a_c": [203, 204, 280], "suggest": [203, 204, 270], "ascasibar": [203, 204, 270], "markevitch": [203, 204, 270], "2006": [203, 204, 231, 232, 270], "apj": [203, 204, 210, 218, 219, 220, 221, 231, 232, 236, 280], "650": [203, 204, 280], "102": [203, 204, 280], "concert": [203, 204], "msun": [203, 206, 209, 210, 211, 212, 213, 218, 219, 220, 221, 224, 226, 227, 228, 229, 230, 231, 236, 273, 276, 279, 280], "cool": [203, 204, 232, 280], "t_0": [204, 232, 280], "k_0": [205, 207, 280], "k_200": 205, "r_200": [205, 209, 233], "baselin": [205, 270], "voit": 205, "kai": 205, "t": [205, 272, 273, 276, 280], "bryan": 205, "l": [205, 210, 211, 212, 218, 219, 225, 226, 227, 255, 269, 273, 280], "2005": 205, "mnra": [205, 211, 212, 225, 226, 227, 280], "364": 205, "909": 205, "floor": 205, "logarithm": [205, 214, 215, 231, 232, 280], "slope": [205, 214, 215, 231, 232, 251, 280], "rho_c": 206, "r_c": [206, 211, 212, 213, 231, 280], "refer": [206, 213, 218, 228, 255, 270, 272], "cavalier": [206, 280], "fusco": [206, 280], "femiano": [206, 280], "1976": 206, "49": [206, 273], "137": 206, "k_scale": [207, 233], "const": 208, "constant": [208, 253, 272, 276, 279], "m_200": 209, "conc": [209, 222, 272, 273, 276, 280], "m200": [209, 217, 272, 273, 276], "r200": [209, 217, 239, 272, 273, 276], "concentr": [209, 222, 225, 280], "nfw": [209, 211, 212, 213, 220, 221, 222, 225, 226, 227, 228, 229, 230, 270], "hernquist": [209, 210, 218, 219, 270], "overdens": [209, 216, 217, 222], "200": [209, 222, 272, 273, 276, 279, 280], "critic": [209, 216, 217, 222], "m_0": [210, 218, 219], "1990": [210, 218, 219], "356": [210, 218, 219, 280], "359": [210, 218, 219, 280], "super": [211, 212, 213, 226, 227, 228, 270, 273], "lillei": [211, 212, 225, 226, 227, 280], "j": [211, 212, 220, 221, 225, 226, 227, 255, 269, 280], "wyn": [211, 212, 225, 226, 227, 280], "evan": [211, 212, 225, 226, 227, 280], "sander": [211, 212, 225, 226, 227, 280], "2018": [211, 212, 225, 226, 227, 280], "sai": [213, 228], "m200c": [213, 228], "r200c": [213, 225, 228], "law": [214, 215, 223, 251, 270, 272], "retana": [214, 215], "montenegro": [214, 215], "et": [214, 215, 231, 232, 236], "al": [214, 215, 231, 232, 236, 273], "2012": [214, 215], "540": [214, 215], "a70": [214, 215], "invers": [214, 215, 244, 269], "delta": [216, 217, 222, 272, 273, 276, 280], "cosmo": [216, 217, 222], "enclos": 216, "redshift": [216, 217, 222], "cosmologi": [216, 217, 222], "m_r": 217, "rho_": [220, 221, 229, 230, 269, 272, 280], "navarro": [220, 221, 280], "frenk": [220, 221, 280], "white": [220, 221, 280], "1996": [220, 221, 280], "462": [220, 221, 280], "563": [220, 221, 280], "select": 222, "whatev": [223, 273], "els": [223, 273], "rescal": 224, "conc_nfw": 225, "snfw": [225, 280], "come": [225, 266, 273], "31": 225, "r_t": [229, 230, 232, 251, 280], "tnfw": [229, 230, 280], "baltz": [229, 230], "marshal": [229, 230], "oguri": [229, 230], "2009": [229, 230, 236], "jcap": [229, 230], "015": [229, 230], "epsilon": [231, 280], "modifi": [231, 269, 272, 280], "vikhlinin": [231, 232, 236, 270], "kravtsov": [231, 232, 280], "forman": [231, 232, 280], "w": [231, 232, 280], "640": [231, 232, 280], "691": [231, 232, 280], "inner": [231, 232], "middl": 231, "outer": [231, 232], "control": 231, "transit": [231, 232, 251, 269], "t_min": 232, "r_cool": 232, "a_cool": 232, "region": [232, 269, 272], "empir": 234, "variabl": [234, 272, 276], "ne": 235, "electron": 235, "n_e": [235, 272], "ho_": 235, "molecular": [235, 272], "mu_e": 235, "m500": [236, 237, 238, 272, 273, 276], "hubbl": 236, "7": [236, 251, 276, 280], "relationship": [236, 269, 272], "mga": 236, "mtot": 236, "r500": [236, 272, 273, 276], "692": 236, "1033": 236, "ui": 236, "adsab": 236, "harvard": 236, "edu": 236, "ab": [236, 276], "2009apj": 236, "1033v": 236, "100": [236, 272, 273, 276, 279, 280], "km": [236, 268], "mpc": 236, "log": [240, 273], "arr": 242, "subject": 244, "len": [244, 273], "own": [244, 268, 273, 276], "reli": [244, 272], "fraction": [244, 280], "p_r": 244, "mathrm": [244, 269, 272, 279, 280], "max": 244, "repres": [244, 266, 276, 280], "probabl": [244, 279], "u": [244, 273, 279], "rr": [245, 246, 247, 273], "costli": [245, 246, 247], "run": [245, 246, 247, 266, 271, 273, 276], "larg": [245, 246, 247, 251, 272, 273, 276, 279, 280], "becaus": [245, 246, 247, 253, 272, 273, 276], "increment": [245, 246, 247], "integr": [246, 247, 253, 255, 272, 273, 276, 279], "inf": 247, "messag": 248, "rac": 251, "ight": 251, "df": [251, 253, 254, 258], "dx": 251, "yield": [251, 253, 269, 272], "monoton": 251, "interpolatedunivariatesplin": [251, 273], "quickli": 251, "radial_profil": [251, 272, 273, 276, 280], "geomspac": [251, 273, 276], "rho": [251, 253, 255, 269, 272, 273, 276, 279], "1e6": 251, "rho_splin": 251, "xl": 251, "1e7": [251, 273], "_rho_trunc": 251, "loglog": [251, 276, 279], "show": [251, 267, 272, 273, 276], "dark_matt": [253, 254, 262, 273, 276], "sigma2": [253, 254], "eddington": [253, 254, 273], "facilit": [253, 273], "edington": 253, "formula": [253, 272, 273, 280], "lma": [253, 273, 276], "thought": [253, 272], "occupi": 253, "6": [253, 272, 276, 280], "textbf": [253, 255, 269], "dot": 253, "regardless": [253, 272], "liouvil": 253, "theorem": [253, 255], "collisionless": [253, 255, 279], "boltzmann": 253, "jean": [253, 255], "question": [253, 268, 273], "steadi": 253, "state": 253, "integrand": 253, "invert": [253, 272, 279], "abel": [253, 279], "fail": [253, 273], "happen": 253, "consid": [253, 269, 272], "Then": [253, 255, 268, 269], "4": [253, 255, 269, 272, 273, 276, 279, 280], "rh": 253, "expand": 253, "trivial": [253, 272], "differenti": [253, 272, 279], "In": [253, 257, 268, 269, 272, 273, 276, 279], "stipul": 253, "angular": [253, 279], "momentum": [253, 272, 279], "irrot": 253, "simplifi": 253, "notat": 253, "denot": [253, 269], "psi": [253, 255, 257, 269, 272, 279], "phi_0": [253, 255, 257], "mathcal": [253, 255, 269, 273], "int_0": [253, 255, 279], "obtain": [253, 272], "blinnei": 253, "tremain": [253, 255], "maxwellian": [253, 273], "while": [253, 276], "badli": 253, "behav": 253, "estim": 253, "nonetheless": [253, 272, 273], "symmetri": [253, 268, 269, 279], "partial": [253, 272], "sigma_r": [253, 273], "sigma": 253, "2_": 253, "theta": [253, 279], "stress": 253, "tensor": [253, 255], "entir": [253, 272, 273], "isotrop": [253, 255, 279], "dispers": [253, 255], "rho_h": [253, 280], "int_r": 253, "infti": [253, 269, 272, 280], "abl": 253, "speed": [253, 279], "v_r": 253, "let": [255, 269, 272, 273, 276], "invok": 255, "acknowledg": 255, "furthermor": [255, 272], "due": [255, 268, 279], "assumpt": [255, 270, 272], "binnei": 255, "2011": 255, "vol": 255, "20": [255, 273], "princeton": 255, "press": 255, "order": [257, 269], "decreas": 257, "revers": 258, "mode": 266, "rigidgrav": 266, "rigid": 266, "selfgrav": 266, "inclus": 266, "tangl": 266, "john": 266, "zuhon": 266, "request": 266, "who": [266, 267], "licens": 266, "tripl": 266, "recommend": [266, 279], "makefil": 266, "simu_opt": 266, "dmodel": 266, "hydro": [266, 268, 272], "dgraviti": 266, "dparticl": 266, "dncomp_passive_us": 266, "merger_coll_numhalo": 266, "merger_coll_usemet": 266, "dmhd": 266, "deo": 266, "eos_gamma": 266, "dpar_natt_us": 266, "dgpu": 266, "dload_bal": 266, "hilbert": 266, "dopenmp": 266, "dsupport_hdf5": 266, "proper": 266, "add_background_grid": 266, "config": 266, "configur": [266, 270, 271, 272, 273], "enabl": 266, "sh": 266, "soon": 266, "galleri": 267, "notic": [267, 272, 273, 276], "breakag": 267, "pleas": 267, "notifi": 267, "develop": 267, "aim": [267, 272, 280], "nut": 267, "bolt": 267, "advanc": 267, "accord": 268, "complex": [268, 272, 273, 276], "turbul": 268, "fashion": 268, "uniform": [268, 279], "natur": 268, "bf": [268, 272, 279], "tild": 268, "v_x": 268, "v_1": 268, "u_1": 268, "iN": 268, "u_2": 268, "v_y": 268, "v_2": 268, "u_3": 268, "u_4": 268, "v_z": 268, "v_3": 268, "u_5": 268, "u_6": 268, "special": 268, "handl": [268, 272], "constraint": 268, "cdot": [268, 269, 272], "least": [268, 276], "diverg": [268, 269, 272, 279, 280], "space": [268, 279], "subtract": 268, "off": [268, 273, 276, 280], "compon": [268, 272, 276, 279], "parallel": 268, "hat": [268, 269], "machin": 268, "precis": 268, "linearli": 268, "free": [268, 270], "small": [268, 272], "mhd": 268, "clean": 268, "substanti": 268, "concern": 268, "transport": 268, "evolv": 268, "amr": 268, "transform": 268, "clusterfield": 268, "map_field_to_particl": 268, "vfield": 268, "write_to_h5": 268, "bfield": 268, "build": [269, 276], "coupl": 269, "On": 269, "summari": 269, "postul": 269, "acceler": [269, 272, 276], "propos": 269, "milgrom": 269, "held": 269, "At": 269, "characterist": 269, "a_0": [269, 272], "asymptot": [269, 272], "_n": 269, "regim": [269, 272], "deep": [269, 272], "rang": 269, "accler": 269, "classic": 269, "sever": [269, 279], "aquadtrat": 269, "lagrangian": 269, "quintessenti": 269, "variat": 269, "mu": [269, 272], "dz": 269, "fulfil": 269, "paradigm": 269, "unlik": 269, "quasi": 269, "q": 269, "dyn": [269, 272, 273], "identifi": 269, "nu": [269, 272], "relat": [269, 272, 280], "much": [269, 273, 279], "meet": 269, "criteria": 269, "motion": 269, "reduc": 269, "h": [269, 273, 280], "_a": 269, "a_n": 269, "_q": 269, "curl": 269, "observ": [269, 280], "recogn": [269, 272], "commonli": [269, 272], "milgromian": 269, "1983apj": 269, "270": 269, "365m": 269, "2010mnra": 269, "403": 269, "886m": 269, "bekenstein": 269, "1984apj": 269, "286": 269, "7b": 269, "cross": 270, "platform": 270, "possibl": [270, 272, 273], "exhaust": 270, "versatil": 270, "mondian": 270, "uncor": 270, "einasto": 270, "broken": 270, "walker": 270, "softwar": [270, 273], "pain": 270, "packag": [270, 272, 273], "instal": [270, 276], "locat": 270, "quickstart": 270, "recipi": 270, "guid": [270, 273], "api": [270, 272, 273, 276], "search": 270, "spatial": [271, 276], "get": [271, 272, 273, 276, 279], "readi": [271, 273, 276], "hold": [272, 273, 276], "enforc": 272, "intial": 272, "protocol": 272, "learn": 272, "fluid": 272, "obei": 272, "euler": 272, "conserv": 272, "viscos": 272, "give": [272, 273], "context": [272, 280], "k_b": 272, "m_p": 272, "ln": [272, 280], "gasseou": 272, "It": [272, 273, 279, 280], "worth": [272, 273], "remaind": 272, "sim": [272, 280], "theoret": 272, "gm_": 272, "directli": [272, 273], "baryon": 272, "stabl": 272, "taken": 272, "stabil": 272, "approx": 272, "2r": 272, "situat": 272, "solvabl": 272, "implicit": [272, 276], "dmr": 272, "summar": 272, "tabl": 272, "from_arrai": [272, 273], "descript": [272, 276], "grav": 272, "t_g": 272, "chosen": 272, "incompress": 272, "bari": 272, "confirm": 272, "match": [272, 273], "contribut": 272, "patholog": 272, "incomplet": 272, "ill": 272, "interfer": 272, "underli": [272, 273, 276, 279], "prevent": 272, "Such": 272, "easili": [272, 279], "immedi": [272, 273], "implic": 272, "find_overdensity_radiu": [272, 273, 276], "snfw_total_mass": [272, 273, 276], "find_radius_mass": [272, 273, 276], "5e15": [272, 273, 276], "rhot": [272, 273, 276], "mt": [272, 273, 276], "500": [272, 273, 276, 279], "f_g": [272, 273, 276], "12": [272, 273, 276], "rhog": [272, 273, 276], "67": [272, 273, 276], "temp": 272, "42": [272, 273], "02": [272, 273, 276], "00": [272, 276], "350": 272, "19": [272, 273, 276], "10000": [272, 273, 276, 279], "set_magnetic_field_from_beta": [272, 273], "doe": [272, 273, 279], "require_phys": 272, "error": 272, "everywher": 272, "rho_i": 272, "choic": [272, 276, 280], "degre": 272, "face": 272, "signific": 272, "rebuild": 272, "from_dens_tden": 272, "uml": 272, "activ": 272, "diagram": [272, 273], "regener": 272, "caught": 272, "magenta": 272, "origin": [272, 273, 276, 279, 280], "restrict": 272, "viabil": 272, "clearli": [272, 273], "forest": 272, "green": [272, 273], "leav": 272, "teal": 272, "difficult": 272, "effici": 272, "int_": 272, "r_0": 272, "exactli": [272, 273, 279], "wide": [272, 273, 280], "accept": [272, 279], "Not": 272, "no_ga": 272, "syntact": 272, "vast": 272, "major": [272, 273], "success": 272, "algorithm": 272, "wa": [272, 279], "check_hs": [272, 273, 276], "xi": 272, "successfulli": 272, "equilibr": [272, 273], "plai": [272, 273], "role": 272, "ioniz": 272, "p_": 272, "whichev": 272, "expon": 272, "choos": [272, 279], "set_magnetic_field_from_dens": [272, 273], "py": [272, 273], "awar": 272, "slow": 272, "worthwhil": 272, "consult": 272, "regard": [272, 273, 276], "write_model_to_ascii": 272, "write_model_to_h5": [272, 276], "write_model_to_binari": 272, "quickguid": 273, "shown": 273, "lot": [273, 276], "bell": 273, "whistl": 273, "io": 273, "bit": [273, 276], "confus": 273, "usag": 273, "measur": 273, "easi": 273, "ones": [273, 276, 279], "builtin": 273, "25": [273, 276], "39": [273, 276], "9": [273, 276], "profile_exampl": 273, "other_profile_exampl": 273, "built_in": 273, "sum": 273, "behind": 273, "scene": 273, "add_cor": 273, "cutoff": 273, "respect": [273, 279], "10": [273, 276, 279], "subplot": [273, 276, 279], "color": 273, "t_profil": 273, "800": 273, "red": 273, "c_profil": 273, "50": [273, 279], "okai": [273, 276], "seen": [273, 276], "my": [273, 276], "raw": [273, 276], "11": 273, "profile_1": 273, "sine": 273, "profile_2": 273, "cosin": 273, "01": [273, 276], "last": 273, "interest": [273, 280], "featur": 273, "veri": [273, 279], "root": 273, "express": [273, 279], "elsewher": 273, "doesn": 273, "to_binari": 273, "from_binari": 273, "arbitrarili": 273, "next": [273, 279], "stop": 273, "tour": 273, "la": 273, "talk": 273, "pretti": 273, "useless": 273, "ll": 273, "is_calcul": 273, "reset": 273, "modular": 273, "newtoniangrav": 273, "classnam": 273, "_classnam": 273, "def": 273, "__init__": 273, "mylog": 273, "info": [273, 276], "__repr__": 273, "saniti": 273, "pull": 273, "debug": 273, "tdens_func": 273, "gpot_profil": 273, "gpot1": 273, "gpot2": 273, "convert_to_unit": 273, "compute_mass": 273, "log_str": 273, "comp": 273, "stream": 273, "sy": 273, "stderr": 273, "_val": 273, "succe": 273, "dev": 273, "theorist": 273, "solver": 273, "might": 273, "contributor": 273, "secondli": 273, "plain": 273, "got": 273, "sens": 273, "fanci": [273, 276], "again": [273, 276], "label": [273, 276, 279], "distinguish": 273, "satisfi": 273, "interphas": 273, "fact": 273, "start": [273, 276], "explor": 273, "basic_model": [273, 276], "5000": [273, 276, 279], "2023": [273, 276], "08": [273, 276], "24": 273, "18": 273, "616": 273, "619": 273, "15": [273, 276], "770": 273, "772": 273, "774": 273, "mdr": 273, "30": 273, "970": 273, "26": [273, 276], "03": [273, 276], "533": 273, "now": [273, 276, 279, 280], "under": [273, 276, 280], "hood": [273, 276], "everyth": [273, 276], "odict_kei": [273, 276], "gas_fract": [273, 276], "electron_number_dens": [273, 276], "popul": 273, "ask": 273, "aren": 273, "dm_virial": 273, "star_viri": 273, "back": [273, 276], "shortli": 273, "introduc": [273, 280], "asid": 273, "thing": [273, 276], "One": [273, 279], "21": 273, "559": 273, "33609e": [273, 276], "07": [273, 276], "That": 273, "000": 273, "neg": 273, "is_phys": 273, "22": 273, "aug": 273, "luster_gener": 273, "protect": 273, "_virial": 273, "23": 273, "_dm_virial": 273, "lt": [273, 276], "0x7fab14e65e80": 273, "gt": [273, 276], "did": 273, "moment": 273, "organiz": 273, "cython": 273, "virialization_method": 273, "explan": 273, "main": 273, "doc": 273, "mention": [273, 279], "actual": [273, 276], "gone": 273, "magic": 273, "ahead": 273, "try": [273, 276], "27": 273, "generate_dm_particl": [273, 279], "1_000_000": [273, 279], "031": 273, "1000000": [273, 279], "035": 273, "302": 273, "notebook": 273, "awhil": 273, "understand": 273, "were": [273, 280], "bread": 273, "butter": 273, "discret": 273, "awai": 273, "28": 273, "million": 273, "still": 273, "29": [273, 276], "field_nam": 273, "defaultdict": 273, "particle_posit": [273, 279], "particle_veloc": [273, 279], "bore": 273, "Its": 273, "realli": [273, 276], "32": 273, "gas_particl": [273, 279], "generate_gas_particl": [273, 279], "219": 273, "221": 273, "453": 273, "52": 273, "593": 273, "thermal_energi": [273, 279], "goe": [273, 276], "don": [273, 276], "rest": 273, "write_particl": [273, 279], "write_particles_to_h5": 273, "write_to_gadget_fil": [273, 279], "make_radial_cut": [273, 279], "add_offset": [273, 279], "add_black_hol": [273, 279], "33": 273, "4000": 273, "move": 273, "bix": 273, "to_yt_dataset": 273, "8000": 273, "44": 273, "13": [273, 276], "511": [273, 276], "current_tim": 273, "527": 273, "552": 273, "domain_left_edg": 273, "561": 273, "domain_right_edg": 273, "566": 273, "cosmological_simul": 273, "sort": 273, "phase": [273, 279], "field_list": 273, "p1": 273, "particleplot": 273, "particle_position_x": 273, "particle_position_i": 273, "particle_position_z": 273, "particle_velocity_x": 273, "particle_velocity_i": 273, "particle_velocity_z": 273, "nbodi": 273, "51": 273, "53": 273, "697": 273, "xlim": 273, "000000": 273, "700": 273, "ylim": [273, 276], "704": 273, "705": 273, "707": 273, "splat": 273, "mesh": 273, "ngp": 273, "38": 273, "set_cmap": 273, "kama": 273, "ds2": 273, "p2": 273, "phaseplot": 273, "weight_field": 273, "set_unit": 273, "59": 273, "635": 273, "639": 273, "644": 273, "647": 273, "649": 273, "653": 273, "alloc": 273, "215e": 273, "05": [273, 276], "decid": 276, "bunch": 276, "m0": 276, "1e14": 276, "1e3": 276, "1e": 276, "1e4": 276, "00000000e": 276, "59381366e": 276, "29154967e": 276, "64158883e": 276, "66810054e": 276, "99484250e": 276, "15443469e": 276, "74263683e": 276, "78255940e": 276, "04": 276, "59107206e": 276, "42380961e": 276, "22751658e": 276, "38158266e": 276, "06": 276, "07912050e": 276, "22940080e": 276, "11417258e": 276, "68024519e": 276, "05686232e": 276, "19575464e": 276, "rememb": 276, "1000x1000": 276, "xlabel": 276, "09": 276, "58": 276, "474": 276, "481": 276, "756": 276, "757": 276, "14": 276, "018": 276, "471": 276, "hard": 276, "end": 276, "carri": [276, 279], "prescrib": 276, "avg": 276, "trapz": 276, "averag": 276, "270685743725246": 276, "seriou": 276, "hse_check": 276, "yscale": 276, "symlog": 276, "great": 276, "sharex": 276, "gridspec_kw": 276, "hspace": 276, "wspace": 276, "figsiz": [276, 279], "_field": 276, "_field_group": 276, "lab": 276, "zip": 276, "ravel": 276, "_f": 276, "set_ylabel": [276, 279], "wrap": 276, "listdir": 276, "meta": 276, "16": [276, 280], "reloaded_model": 276, "769": 276, "busi": 276, "100_000": 276, "726": 276, "anti": 276, "climact": 276, "setup_ramses_": 276, "778": 276, "810": 276, "009": 276, "100000": 276, "011": 276, "063": 276, "659": 276, "merger_config": 276, "txt": 276, "And": 276, "tutori": 276, "draw": 279, "tot": 279, "sinc": 279, "tangenti": 279, "number_of_particl": 279, "latter": 279, "magnetic_field": 279, "hand": 279, "equal": 279, "n_ga": 279, "isotropi": 279, "dv": 279, "2dv": 279, "net": 279, "further": 279, "cal": 279, "integrel": 279, "_0": 279, "pair": 279, "reject": 279, "good": 279, "idea": 279, "check_dm_viri": 279, "check_star_viri": 279, "accuraci": 279, "diff": 279, "vir": 279, "markers": 279, "legend": 279, "set_xlabel": 279, "difficulti": 279, "infinit": 279, "long": 279, "generate_star_particl": 279, "wish": 279, "n_dm": 279, "n_star": 279, "dm_particl": 279, "star_particl": 279, "cover": 279, "generate_": 279, "_particl": 279, "kind": 279, "all_particl": 279, "concaten": 279, "gas_part": 279, "gas_parts1": 279, "gas_parts2": 279, "drop_ptyp": 279, "By": 279, "translat": 279, "boost": 279, "frame": 279, "shift": 279, "movement": 279, "mbh": 279, "0e9": 279, "300": 279, "rather": 279, "tag": 279, "keep": 279, "track": 279, "num_particles1": 279, "num_particles2": 279, "200_000": 279, "halo1": 279, "halo2": 279, "cluster1": 279, "cluster2": 279, "pick": 279, "overwritten": 279, "ug": 279, "microgauss": 279, "magnetic_field_x": 279, "metal": 279, "zsun": 279, "obvious": 279, "my_particl": 279, "new_part": 279, "gas_onli": 279, "dm_star": 279, "cluster_": 279, "from_gadget_fil": 279, "fall": 280, "0e": 280, "literatur": 280, "manifestli": 280, "0e7": 280, "dp": 280, "mp": 280, "nfw_scale_dens": 280, "except": 280, "finit": 280, "infin": 280, "3m": 280, "0e15": 280, "minim": 280, "bulg": 280, "shperic": 280, "regularli": 280, "brightest": 280, "bcg": 280, "m_h": 280, "rho_e": 280, "3n": 280, "d_n": 280, "1215n": 280, "184": 280, "229635n": 280, "replic": 280, "band": 280, "modif": 280, "flat": 280, "parameter": 280, "increas": 280, "freedom": 280, "v06": 280, "am06": 280, "ca_c": 280, "t_": 280, "t_0t": 280, "min": 280, "a_": 280, "k_": 280, "journal": 280, "1965": 280, "kinemat": 280, "trudi": 280, "inst": 280, "astrofiz": 280, "alma": 280, "ata": 280, "87": 280, "jone": 280, "murrai": 280, "van": 280, "speybroeck": 280, "chandra": 280, "nearbi": 280, "1978": 280, "70": 280, "677": 280, "cold": 280, "front": 280}, "objects": {"": [[1, 0, 0, "-", "codes"], [10, 0, 0, "-", "fields"], [53, 0, 0, "-", "gravity"], [80, 0, 0, "-", "ics"], [97, 0, 0, "-", "model"], [170, 0, 0, "-", "particles"], [192, 0, 0, "-", "radial_profiles"], [234, 0, 0, "-", "relations"], [240, 0, 0, "-", "utils"], [252, 0, 0, "-", "virial"]], "codes": [[2, 1, 1, "", "setup_arepo_ics"], [3, 1, 1, "", "setup_athena_ics"], [4, 1, 1, "", "setup_enzo_ics"], [5, 1, 1, "", "setup_flash_ics"], [6, 1, 1, "", "setup_gamer_ics"], [7, 1, 1, "", "setup_gizmo_ics"], [8, 1, 1, "", "setup_ramses_ics"], [9, 1, 1, "", "write_amr_particles"]], "fields": [[11, 2, 1, "", "ClusterField"], [16, 2, 1, "", "GaussianRandomField"], [21, 2, 1, "", "RadialRandomMagneticField"], [26, 2, 1, "", "RadialRandomMagneticVectorPotential"], [31, 2, 1, "", "RadialRandomVelocityField"], [36, 2, 1, "", "RandomMagneticField"], [41, 2, 1, "", "RandomMagneticVectorPotential"], [46, 2, 1, "", "RandomVelocityField"], [51, 1, 1, "", "parse_value"], [52, 1, 1, "", "rot_3d"]], "fields.ClusterField": [[12, 3, 1, "", "__init__"], [13, 3, 1, "", "map_field_to_particles"], [14, 4, 1, "", "units"], [15, 3, 1, "", "write_file"]], "fields.GaussianRandomField": [[17, 3, 1, "", "__init__"], [18, 3, 1, "", "map_field_to_particles"], [19, 4, 1, "", "units"], [20, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[22, 3, 1, "", "__init__"], [23, 3, 1, "", "map_field_to_particles"], [24, 4, 1, "", "units"], [25, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[27, 3, 1, "", "__init__"], [28, 3, 1, "", "map_field_to_particles"], [29, 4, 1, "", "units"], [30, 3, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[32, 3, 1, "", "__init__"], [33, 3, 1, "", "map_field_to_particles"], [34, 4, 1, "", "units"], [35, 3, 1, "", "write_file"]], "fields.RandomMagneticField": [[37, 3, 1, "", "__init__"], [38, 3, 1, "", "map_field_to_particles"], [39, 4, 1, "", "units"], [40, 3, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[42, 3, 1, "", "__init__"], [43, 3, 1, "", "map_field_to_particles"], [44, 4, 1, "", "units"], [45, 3, 1, "", "write_file"]], "fields.RandomVelocityField": [[47, 3, 1, "", "__init__"], [48, 3, 1, "", "map_field_to_particles"], [49, 4, 1, "", "units"], [50, 3, 1, "", "write_file"]], "gravity": [[54, 2, 1, "", "AQUALGravity"], [61, 2, 1, "", "Gravity"], [66, 2, 1, "", "NewtonianGravity"], [73, 2, 1, "", "QUMONDGravity"]], "gravity.AQUALGravity": [[55, 3, 1, "", "__init__"], [56, 3, 1, "", "compute_mass"], [57, 4, 1, "", "is_calculated"], [58, 5, 1, "", "model"], [59, 3, 1, "", "potential"], [60, 3, 1, "", "reset"]], "gravity.Gravity": [[62, 3, 1, "", "__init__"], [63, 4, 1, "", "is_calculated"], [64, 5, 1, "", "model"], [65, 3, 1, "", "reset"]], "gravity.NewtonianGravity": [[67, 3, 1, "", "__init__"], [68, 3, 1, "", "compute_mass"], [69, 4, 1, "", "is_calculated"], [70, 5, 1, "", "model"], [71, 3, 1, "", "potential"], [72, 3, 1, "", "reset"]], "gravity.QUMONDGravity": [[74, 3, 1, "", "__init__"], [75, 3, 1, "", "compute_mass"], [76, 4, 1, "", "is_calculated"], [77, 5, 1, "", "model"], [78, 3, 1, "", "potential"], [79, 3, 1, "", "reset"]], "ics": [[81, 2, 1, "", "ClusterICs"], [96, 1, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[82, 3, 1, "", "__init__"], [83, 5, 1, "", "basename"], [84, 5, 1, "", "center"], [85, 3, 1, "", "create_dataset"], [86, 3, 1, "", "from_file"], [87, 5, 1, "", "mag_file"], [88, 5, 1, "", "num_halos"], [89, 5, 1, "", "profiles"], [90, 5, 1, "", "r_max"], [91, 3, 1, "", "resample_particle_ics"], [92, 3, 1, "", "setup_particle_ics"], [93, 3, 1, "", "to_file"], [94, 5, 1, "", "tot_np"], [95, 5, 1, "", "velocity"]], "model": [[98, 2, 1, "", "ClusterModel"], [134, 2, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[99, 3, 1, "", "__init__"], [100, 5, 1, "", "attrs"], [101, 3, 1, "", "check_dm_virial"], [102, 3, 1, "", "check_hse"], [103, 3, 1, "", "check_star_virial"], [104, 5, 1, "", "default_fields"], [105, 4, 1, "", "dm_virial"], [106, 5, 1, "", "fields"], [107, 3, 1, "", "find_field_at_radius"], [108, 3, 1, "", "from_arrays"], [109, 3, 1, "", "from_dens_and_entr"], [110, 3, 1, "", "from_dens_and_tden"], [111, 3, 1, "", "from_dens_and_temp"], [112, 3, 1, "", "from_h5_file"], [113, 3, 1, "", "generate_dm_particles"], [114, 3, 1, "", "generate_gas_particles"], [115, 3, 1, "", "generate_star_particles"], [116, 3, 1, "", "generate_tracer_particles"], [117, 3, 1, "", "is_physical"], [118, 3, 1, "", "keys"], [119, 3, 1, "", "mass_in_radius"], [120, 3, 1, "", "no_gas"], [121, 5, 1, "", "num_elements"], [122, 3, 1, "", "plot"], [123, 4, 1, "", "pot"], [124, 3, 1, "", "rebuild_physical"], [125, 3, 1, "", "set_field"], [126, 3, 1, "", "set_magnetic_field_from_beta"], [127, 3, 1, "", "set_magnetic_field_from_density"], [128, 3, 1, "", "set_rmax"], [129, 4, 1, "", "star_virial"], [130, 4, 1, "", "virialization_method"], [131, 3, 1, "", "write_model_to_ascii"], [132, 3, 1, "", "write_model_to_binary"], [133, 3, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[135, 3, 1, "", "__init__"], [136, 5, 1, "", "attrs"], [137, 3, 1, "", "check_dm_virial"], [138, 3, 1, "", "check_hse"], [139, 3, 1, "", "check_star_virial"], [140, 5, 1, "", "default_fields"], [141, 4, 1, "", "dm_virial"], [142, 5, 1, "", "fields"], [143, 3, 1, "", "find_field_at_radius"], [144, 3, 1, "", "from_arrays"], [145, 3, 1, "", "from_dens_and_entr"], [146, 3, 1, "", "from_dens_and_tden"], [147, 3, 1, "", "from_dens_and_temp"], [148, 3, 1, "", "from_h5_file"], [149, 3, 1, "", "generate_dm_particles"], [150, 3, 1, "", "generate_gas_particles"], [151, 3, 1, "", "generate_star_particles"], [152, 3, 1, "", "generate_tracer_particles"], [153, 3, 1, "", "is_physical"], [154, 3, 1, "", "keys"], [155, 3, 1, "", "mass_in_radius"], [156, 3, 1, "", "no_gas"], [157, 5, 1, "", "num_elements"], [158, 3, 1, "", "plot"], [159, 4, 1, "", "pot"], [160, 3, 1, "", "rebuild_physical"], [161, 3, 1, "", "set_field"], [162, 3, 1, "", "set_magnetic_field_from_beta"], [163, 3, 1, "", "set_magnetic_field_from_density"], [164, 3, 1, "", "set_rmax"], [165, 4, 1, "", "star_virial"], [166, 4, 1, "", "virialization_method"], [167, 3, 1, "", "write_model_to_ascii"], [168, 3, 1, "", "write_model_to_binary"], [169, 3, 1, "", "write_model_to_h5"]], "particles": [[171, 2, 1, "", "ClusterParticles"], [187, 1, 1, "", "combine_three_clusters"], [188, 1, 1, "", "combine_two_clusters"], [189, 1, 1, "", "resample_one_cluster"], [190, 1, 1, "", "resample_three_clusters"], [191, 1, 1, "", "resample_two_clusters"]], "particles.ClusterParticles": [[172, 3, 1, "", "__init__"], [173, 3, 1, "", "add_black_hole"], [174, 3, 1, "", "add_offsets"], [175, 3, 1, "", "drop_ptypes"], [176, 3, 1, "", "from_file"], [177, 3, 1, "", "from_gadget_file"], [178, 3, 1, "", "from_h5_file"], [179, 3, 1, "", "keys"], [180, 3, 1, "", "make_radial_cut"], [181, 4, 1, "", "num_passive_scalars"], [182, 3, 1, "", "set_field"], [183, 3, 1, "", "to_yt_dataset"], [184, 3, 1, "", "write_particles"], [185, 3, 1, "", "write_particles_to_h5"], [186, 3, 1, "", "write_to_gadget_file"]], "radial_profiles": [[193, 2, 1, "", "RadialProfile"], [203, 1, 1, "", "am06_density_profile"], [204, 1, 1, "", "am06_temperature_profile"], [205, 1, 1, "", "baseline_entropy_profile"], [206, 1, 1, "", "beta_model_profile"], [207, 1, 1, "", "broken_entropy_profile"], [208, 1, 1, "", "constant_profile"], [209, 1, 1, "", "convert_nfw_to_hernquist"], [210, 1, 1, "", "cored_hernquist_density_profile"], [211, 1, 1, "", "cored_snfw_density_profile"], [212, 1, 1, "", "cored_snfw_mass_profile"], [213, 1, 1, "", "cored_snfw_total_mass"], [214, 1, 1, "", "einasto_density_profile"], [215, 1, 1, "", "einasto_mass_profile"], [216, 1, 1, "", "find_overdensity_radius"], [217, 1, 1, "", "find_radius_mass"], [218, 1, 1, "", "hernquist_density_profile"], [219, 1, 1, "", "hernquist_mass_profile"], [220, 1, 1, "", "nfw_density_profile"], [221, 1, 1, "", "nfw_mass_profile"], [222, 1, 1, "", "nfw_scale_density"], [223, 1, 1, "", "power_law_profile"], [224, 1, 1, "", "rescale_profile_by_mass"], [225, 1, 1, "", "snfw_conc"], [226, 1, 1, "", "snfw_density_profile"], [227, 1, 1, "", "snfw_mass_profile"], [228, 1, 1, "", "snfw_total_mass"], [229, 1, 1, "", "tnfw_density_profile"], [230, 1, 1, "", "tnfw_mass_profile"], [231, 1, 1, "", "vikhlinin_density_profile"], [232, 1, 1, "", "vikhlinin_temperature_profile"], [233, 1, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[194, 3, 1, "", "__init__"], [195, 3, 1, "", "add_core"], [196, 3, 1, "", "built_in"], [197, 5, 1, "", "builtin"], [198, 3, 1, "", "cutoff"], [199, 3, 1, "", "from_array"], [200, 3, 1, "", "from_binary"], [201, 3, 1, "", "plot"], [202, 3, 1, "", "to_binary"]], "relations": [[235, 1, 1, "", "convert_ne_to_density"], [236, 1, 1, "", "f_gas"], [237, 1, 1, "", "m_bcg"], [238, 1, 1, "", "m_sat"], [239, 1, 1, "", "r_bcg"]], "utils": [[241, 1, 1, "", "ensure_list"], [242, 1, 1, "", "ensure_ytarray"], [243, 1, 1, "", "ensure_ytquantity"], [244, 1, 1, "", "generate_particle_radii"], [245, 1, 1, "", "integrate"], [246, 1, 1, "", "integrate_mass"], [247, 1, 1, "", "integrate_toinf"], [248, 1, 1, "", "log_string"], [249, 1, 1, "", "moving_average"], [250, 1, 1, "", "parse_prng"], [251, 1, 1, "", "truncate_spline"]], "virial": [[253, 2, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[254, 3, 1, "", "__init__"], [255, 3, 1, "", "check_virial"], [256, 4, 1, "", "df"], [257, 4, 1, "", "ee"], [258, 4, 1, "", "ff"], [259, 3, 1, "", "generate_particles"], [260, 5, 1, "", "model"], [261, 5, 1, "", "num_elements"], [262, 5, 1, "", "ptype"], [263, 4, 1, "", "sigma"], [264, 5, 1, "", "type"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"quickstart": [0, 276, 277, 278], "guid": [0, 267, 276, 277, 278], "introduct": 0, "get": [0, 270, 277], "start": [0, 270], "unit": [0, 14, 19, 24, 29, 34, 39, 44, 49], "packag": 0, "from": [0, 271, 272, 279], "pypi": 0, "sourc": 0, "depend": 0, "recommend": 0, "instal": 0, "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 266, 267], "avail": 1, "softwar": 1, "setup_arepo_": 2, "setup_athena_": 3, "setup_enzo_": 4, "setup_flash_": 5, "setup_gamer_": 6, "setup_gizmo_": 7, "setup_ramses_": 8, "write_amr_particl": 9, "field": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 106, 142, 268, 272, 279], "clusterfield": [11, 12, 13, 14, 15], "__init__": [12, 17, 22, 27, 32, 37, 42, 47, 55, 62, 67, 74, 82, 99, 135, 172, 194, 254], "map_field_to_particl": [13, 18, 23, 28, 33, 38, 43, 48], "write_fil": [15, 20, 25, 30, 35, 40, 45, 50], "gaussianrandomfield": [16, 17, 18, 19, 20], "radialrandommagneticfield": [21, 22, 23, 24, 25], "radialrandommagneticvectorpotenti": [26, 27, 28, 29, 30], "radialrandomvelocityfield": [31, 32, 33, 34, 35], "randommagneticfield": [36, 37, 38, 39, 40], "randommagneticvectorpotenti": [41, 42, 43, 44, 45], "randomvelocityfield": [46, 47, 48, 49, 50], "parse_valu": 51, "rot_3d": 52, "graviti": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 269, 272, 273], "aqualgrav": [54, 55, 56, 57, 58, 59, 60], "compute_mass": [56, 68, 75], "is_calcul": [57, 63, 69, 76], "model": [58, 64, 70, 77, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 260, 272], "potenti": [59, 71, 78, 268], "reset": [60, 65, 72, 79], "newtoniangrav": [66, 67, 68, 69, 70, 71, 72], "qumondgrav": [73, 74, 75, 76, 77, 78, 79], "ic": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "cluster": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 266, 268, 271, 272, 273, 276], "basenam": 83, "center": 84, "create_dataset": 85, "from_fil": [86, 176], "mag_fil": 87, "num_halo": 88, "profil": [89, 192, 272, 273, 276, 280], "r_max": 90, "resample_particle_": 91, "setup_particle_": 92, "to_fil": 93, "tot_np": 94, "veloc": [95, 268, 279], "compute_centers_for_binari": 96, "galaxi": [97, 276], "clustermodel": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 272, 273, 279], "attr": [100, 136], "check_dm_viri": [101, 137], "check_hs": [102, 138], "check_star_viri": [103, 139], "default_field": [104, 140], "dm_virial": [105, 141], "find_field_at_radiu": [107, 143], "from_arrai": [108, 144, 199], "develop": [108, 144], "note": [108, 144, 269, 272, 280], "from_dens_and_entr": [109, 145], "from_dens_and_tden": [110, 146], "from_dens_and_temp": [111, 147], "from_h5_fil": [112, 148, 178], "generate_dm_particl": [113, 149], "generate_gas_particl": [114, 150], "generate_star_particl": [115, 151], "generate_tracer_particl": [116, 152], "is_phys": [117, 153], "kei": [118, 154, 179], "mass_in_radiu": [119, 155], "no_ga": [120, 156], "num_el": [121, 157, 261], "plot": [122, 158, 201], "pot": [123, 159], "rebuild_phys": [124, 160], "set_field": [125, 161, 182], "set_magnetic_field_from_beta": [126, 162], "set_magnetic_field_from_dens": [127, 163], "set_rmax": [128, 164], "star_viri": [129, 165], "virialization_method": [130, 166], "write_model_to_ascii": [131, 167], "write_model_to_binari": [132, 168], "write_model_to_h5": [133, 169], "hydrostaticequilibrium": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "particl": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 268, 273, 279], "clusterparticl": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 273, 279], "add_black_hol": 173, "add_offset": 174, "drop_ptyp": 175, "from_gadget_fil": 177, "make_radial_cut": 180, "num_passive_scalar": 181, "to_yt_dataset": 183, "write_particl": 184, "write_particles_to_h5": 185, "write_to_gadget_fil": 186, "combine_three_clust": 187, "combine_two_clust": 188, "resample_one_clust": 189, "resample_three_clust": 190, "resample_two_clust": 191, "radial_profil": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "radial": [192, 268, 272, 273, 280], "radialprofil": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 273], "info": 193, "add_cor": 195, "built_in": 196, "builtin": 197, "cutoff": 198, "from_binari": 200, "to_binari": 202, "am06_density_profil": 203, "am06_temperature_profil": 204, "baseline_entropy_profil": 205, "beta_model_profil": 206, "broken_entropy_profil": 207, "constant_profil": 208, "convert_nfw_to_hernquist": 209, "cored_hernquist_density_profil": 210, "cored_snfw_density_profil": 211, "cored_snfw_mass_profil": 212, "cored_snfw_total_mass": 213, "einasto_density_profil": 214, "einasto_mass_profil": 215, "find_overdensity_radiu": 216, "find_radius_mass": 217, "hernquist_density_profil": 218, "hernquist_mass_profil": 219, "nfw_density_profil": 220, "nfw_mass_profil": 221, "nfw_scale_dens": 222, "power_law_profil": 223, "rescale_profile_by_mass": 224, "snfw_conc": 225, "snfw_density_profil": 226, "snfw_mass_profil": 227, "snfw_total_mass": 228, "tnfw_density_profil": 229, "tnfw_mass_profil": 230, "vikhlinin_density_profil": 231, "vikhlinin_temperature_profil": 232, "walker_entropy_profil": 233, "relat": [234, 235, 236, 237, 238, 239], "convert_ne_to_dens": 235, "f_ga": 236, "m_bcg": 237, "m_sat": 238, "r_bcg": 239, "util": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "ensure_list": 241, "ensure_ytarrai": 242, "ensure_ytquant": 243, "generate_particle_radii": 244, "integr": 245, "integrate_mass": 246, "integrate_toinf": 247, "log_str": 248, "moving_averag": 249, "parse_prng": 250, "truncate_splin": 251, "virial": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 274, 279], "virialequilibrium": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273], "gener": [253, 268, 271, 272, 273, 279, 280], "phase": 253, "space": 253, "densiti": [253, 272, 280], "check_viri": 255, "df": 256, "ee": 257, "ff": 258, "generate_particl": 259, "ptype": 262, "sigma": 263, "type": [264, 279], "api": [265, 267], "set": [266, 272], "up": 266, "ideal": 266, "problem": 266, "variou": 266, "flash": 266, "gamer": 266, "arepo": 266, "gizmo": 266, "enzo": 266, "rams": 266, "athena": 266, "exampl": [267, 269], "3d": 268, "mathemat": [268, 269, 272, 279, 280], "overview": [268, 272, 279], "initi": [268, 271, 276], "magnet": [268, 272], "random": 268, "vector": 268, "map": 268, "write": [268, 272], "out": [268, 277], "disk": [268, 272], "theori": 269, "mondian": 269, "aqual": [269, 272], "qumond": [269, 272], "refer": [269, 280], "cluster_gener": [270, 273, 277], "featur": 270, "content": [270, 272, 273], "indic": 270, "tabl": 270, "condit": [271, 276], "script": 271, "paramet": 271, "file": 271, "reader": 272, "suggest": 272, "newtonian": 272, "mond": [272, 278], "us": [272, 273, 275], "ga": [272, 279], "temperatur": [272, 280], "addit": 272, "non": 272, "physic": 272, "total": 272, "entropi": [272, 280], "without": 272, "check": [272, 279], "hydrostat": 272, "equilibrium": [272, 279], "strength": 272, "beta": 272, "plasma": 272, "ad": [272, 279], "other": 272, "read": 272, "object": [272, 279], "user": 272, "advic": 272, "data": 273, "structur": 273, "access": 273, "exist": 273, "creat": [273, 276], "i": [273, 279], "o": [273, 279], "oper": [273, 279], "advanc": 275, "case": 275, "The": [276, 279], "basic": 276, "most": 277, "what": 278, "about": 278, "dark": 279, "matter": 279, "star": 279, "equilibria": 279, "class": 279, "drop": 279, "add": 279, "posit": 279, "offset": 279, "make": 279, "cut": 279, "radiu": 279, "black": 279, "hole": 279, "new": 279, "chang": 279, "gadget": 279, "like": 279, "constant": 280, "power": 280, "law": 280, "mass": 280, "nfw": 280, "super": 280, "truncat": 280, "hernquist": 280, "einasto": 280, "vikhlinin": 280, "et": 280, "al": 280, "2006": 280, "ascasibar": 280, "markevitch": 280, "baselin": 280}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Quickstart Guide": [[0, "quickstart-guide"]], "Introduction": [[0, "introduction"]], "Getting Started": [[0, "id1"], [270, "getting-started"]], "Quickstart Guides:": [[0, null]], "Units": [[0, "units"]], "Getting the Package": [[0, "getting-the-package"]], "From PyPI": [[0, "from-pypi"]], "From Source": [[0, "from-source"]], "Dependencies": [[0, "dependencies"]], "Recommended": [[0, null]], "Installation": [[0, "id6"]], "codes": [[1, "module-codes"]], "Available Softwares": [[1, "available-softwares"]], "codes.setup_arepo_ics": [[2, "codes-setup-arepo-ics"]], "codes.setup_athena_ics": [[3, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[4, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[5, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[6, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[7, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[8, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[9, "codes-write-amr-particles"]], "fields": [[10, "module-fields"]], "fields.ClusterField": [[11, "fields-clusterfield"]], "fields.ClusterField.__init__": [[12, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[13, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[14, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[15, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[16, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[17, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[18, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[19, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[20, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[21, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[22, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[23, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[24, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[25, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[26, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[27, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[28, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[29, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[30, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[31, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[32, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[33, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[34, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[35, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[36, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[37, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[38, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[39, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[40, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[41, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[42, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[43, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[44, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[45, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[46, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[47, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[48, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[49, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[50, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[51, "fields-parse-value"]], "fields.rot_3d": [[52, "fields-rot-3d"]], "gravity": [[53, "module-gravity"]], "Gravity": [[53, "id1"], [273, "Gravity"]], "gravity.AQUALGravity": [[54, "gravity-aqualgravity"]], "gravity.AQUALGravity.__init__": [[55, "gravity-aqualgravity-init"]], "gravity.AQUALGravity.compute_mass": [[56, "gravity-aqualgravity-compute-mass"]], "gravity.AQUALGravity.is_calculated": [[57, "gravity-aqualgravity-is-calculated"]], "gravity.AQUALGravity.model": [[58, "gravity-aqualgravity-model"]], "gravity.AQUALGravity.potential": [[59, "gravity-aqualgravity-potential"]], "gravity.AQUALGravity.reset": [[60, "gravity-aqualgravity-reset"]], "gravity.Gravity": [[61, "gravity-gravity"]], "gravity.Gravity.__init__": [[62, "gravity-gravity-init"]], "gravity.Gravity.is_calculated": [[63, "gravity-gravity-is-calculated"]], "gravity.Gravity.model": [[64, "gravity-gravity-model"]], "gravity.Gravity.reset": [[65, "gravity-gravity-reset"]], "gravity.NewtonianGravity": [[66, "gravity-newtoniangravity"]], "gravity.NewtonianGravity.__init__": [[67, "gravity-newtoniangravity-init"]], "gravity.NewtonianGravity.compute_mass": [[68, "gravity-newtoniangravity-compute-mass"]], "gravity.NewtonianGravity.is_calculated": [[69, "gravity-newtoniangravity-is-calculated"]], "gravity.NewtonianGravity.model": [[70, "gravity-newtoniangravity-model"]], "gravity.NewtonianGravity.potential": [[71, "gravity-newtoniangravity-potential"]], "gravity.NewtonianGravity.reset": [[72, "gravity-newtoniangravity-reset"]], "gravity.QUMONDGravity": [[73, "gravity-qumondgravity"]], "gravity.QUMONDGravity.__init__": [[74, "gravity-qumondgravity-init"]], "gravity.QUMONDGravity.compute_mass": [[75, "gravity-qumondgravity-compute-mass"]], "gravity.QUMONDGravity.is_calculated": [[76, "gravity-qumondgravity-is-calculated"]], "gravity.QUMONDGravity.model": [[77, "gravity-qumondgravity-model"]], "gravity.QUMONDGravity.potential": [[78, "gravity-qumondgravity-potential"]], "gravity.QUMONDGravity.reset": [[79, "gravity-qumondgravity-reset"]], "ics": [[80, "module-ics"]], "ics.ClusterICs": [[81, "ics-clusterics"]], "ics.ClusterICs.__init__": [[82, "ics-clusterics-init"]], "ics.ClusterICs.basename": [[83, "ics-clusterics-basename"]], "ics.ClusterICs.center": [[84, "ics-clusterics-center"]], "ics.ClusterICs.create_dataset": [[85, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[86, "ics-clusterics-from-file"]], "ics.ClusterICs.mag_file": [[87, "ics-clusterics-mag-file"]], "ics.ClusterICs.num_halos": [[88, "ics-clusterics-num-halos"]], "ics.ClusterICs.profiles": [[89, "ics-clusterics-profiles"]], "ics.ClusterICs.r_max": [[90, "ics-clusterics-r-max"]], "ics.ClusterICs.resample_particle_ics": [[91, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[92, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[93, "ics-clusterics-to-file"]], "ics.ClusterICs.tot_np": [[94, "ics-clusterics-tot-np"]], "ics.ClusterICs.velocity": [[95, "ics-clusterics-velocity"]], "ics.compute_centers_for_binary": [[96, "ics-compute-centers-for-binary"]], "model": [[97, "module-model"]], "Galaxy Cluster Models": [[97, "galaxy-cluster-models"]], "model.ClusterModel": [[98, "model-clustermodel"]], "model.ClusterModel.__init__": [[99, "model-clustermodel-init"]], "model.ClusterModel.attrs": [[100, "model-clustermodel-attrs"]], "model.ClusterModel.check_dm_virial": [[101, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[102, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[103, "model-clustermodel-check-star-virial"]], "model.ClusterModel.default_fields": [[104, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[105, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[106, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[107, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.from_arrays": [[108, "model-clustermodel-from-arrays"]], "development note": [[108, null], [144, null]], "model.ClusterModel.from_dens_and_entr": [[109, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[110, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[111, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[112, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[113, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[114, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[115, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[116, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.is_physical": [[117, "model-clustermodel-is-physical"]], "model.ClusterModel.keys": [[118, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[119, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[120, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[121, "model-clustermodel-num-elements"]], "model.ClusterModel.plot": [[122, "model-clustermodel-plot"]], "model.ClusterModel.pot": [[123, "model-clustermodel-pot"]], "model.ClusterModel.rebuild_physical": [[124, "model-clustermodel-rebuild-physical"]], "model.ClusterModel.set_field": [[125, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[126, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[127, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[128, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[129, "model-clustermodel-star-virial"]], "model.ClusterModel.virialization_method": [[130, "model-clustermodel-virialization-method"]], "model.ClusterModel.write_model_to_ascii": [[131, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[132, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[133, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[134, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[135, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.attrs": [[136, "model-hydrostaticequilibrium-attrs"]], "model.HydrostaticEquilibrium.check_dm_virial": [[137, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[138, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[139, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.default_fields": [[140, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[141, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[142, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[143, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.from_arrays": [[144, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[145, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[146, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[147, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[148, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[149, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[150, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[151, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[152, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.is_physical": [[153, "model-hydrostaticequilibrium-is-physical"]], "model.HydrostaticEquilibrium.keys": [[154, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[155, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[156, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[157, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.plot": [[158, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.pot": [[159, "model-hydrostaticequilibrium-pot"]], "model.HydrostaticEquilibrium.rebuild_physical": [[160, "model-hydrostaticequilibrium-rebuild-physical"]], "model.HydrostaticEquilibrium.set_field": [[161, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[162, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[163, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[164, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[165, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.virialization_method": [[166, "model-hydrostaticequilibrium-virialization-method"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[167, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[168, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[169, "model-hydrostaticequilibrium-write-model-to-h5"]], "particles": [[170, "module-particles"]], "particles.ClusterParticles": [[171, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[172, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[173, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[174, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[175, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.from_file": [[176, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[177, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[178, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[179, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[180, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[181, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.set_field": [[182, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[183, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[184, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[185, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[186, "particles-clusterparticles-write-to-gadget-file"]], "particles.combine_three_clusters": [[187, "particles-combine-three-clusters"]], "particles.combine_two_clusters": [[188, "particles-combine-two-clusters"]], "particles.resample_one_cluster": [[189, "particles-resample-one-cluster"]], "particles.resample_three_clusters": [[190, "particles-resample-three-clusters"]], "particles.resample_two_clusters": [[191, "particles-resample-two-clusters"]], "radial_profiles": [[192, "module-radial_profiles"]], "Radial Profiles": [[192, "id1"], [273, "Radial-Profiles"], [280, "radial-profiles"]], "radial_profiles.RadialProfile": [[193, "radial-profiles-radialprofile"]], "info": [[193, null]], "radial_profiles.RadialProfile.__init__": [[194, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[195, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[196, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[197, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[198, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[199, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[200, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.plot": [[201, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[202, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.am06_density_profile": [[203, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[204, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[205, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[206, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[207, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[208, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[209, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[210, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[211, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[212, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[213, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[214, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[215, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[216, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[217, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[218, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[219, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[220, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[221, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[222, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[223, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[224, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[225, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[226, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[227, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[228, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[229, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[230, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[231, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[232, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[233, "radial-profiles-walker-entropy-profile"]], "relations": [[234, "module-relations"]], "Relations": [[234, "id1"]], "relations.convert_ne_to_density": [[235, "relations-convert-ne-to-density"]], "relations.f_gas": [[236, "relations-f-gas"]], "relations.m_bcg": [[237, "relations-m-bcg"]], "relations.m_sat": [[238, "relations-m-sat"]], "relations.r_bcg": [[239, "relations-r-bcg"]], "utils": [[240, "module-utils"]], "utils.ensure_list": [[241, "utils-ensure-list"]], "utils.ensure_ytarray": [[242, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[243, "utils-ensure-ytquantity"]], "utils.generate_particle_radii": [[244, "utils-generate-particle-radii"]], "utils.integrate": [[245, "utils-integrate"]], "utils.integrate_mass": [[246, "utils-integrate-mass"]], "utils.integrate_toinf": [[247, "utils-integrate-toinf"]], "utils.log_string": [[248, "utils-log-string"]], "utils.moving_average": [[249, "utils-moving-average"]], "utils.parse_prng": [[250, "utils-parse-prng"]], "utils.truncate_spline": [[251, "utils-truncate-spline"]], "virial": [[252, "module-virial"]], "virial.VirialEquilibrium": [[253, "virial-virialequilibrium"]], "Generating the Phase Space Density": [[253, "generating-the-phase-space-density"]], "virial.VirialEquilibrium.__init__": [[254, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[255, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.df": [[256, "virial-virialequilibrium-df"]], "virial.VirialEquilibrium.ee": [[257, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[258, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[259, "virial-virialequilibrium-generate-particles"]], "virial.VirialEquilibrium.model": [[260, "virial-virialequilibrium-model"]], "virial.VirialEquilibrium.num_elements": [[261, "virial-virialequilibrium-num-elements"]], "virial.VirialEquilibrium.ptype": [[262, "virial-virialequilibrium-ptype"]], "virial.VirialEquilibrium.sigma": [[263, "virial-virialequilibrium-sigma"]], "virial.VirialEquilibrium.type": [[264, "virial-virialequilibrium-type"]], "API": [[265, "api"]], "Setting Up Idealized Cluster Problems in Various Codes": [[266, "setting-up-idealized-cluster-problems-in-various-codes"]], "FLASH": [[266, "flash"]], "GAMER": [[266, "gamer"]], "Arepo": [[266, "arepo"]], "GIZMO": [[266, "gizmo"]], "Enzo": [[266, "enzo"]], "Ramses": [[266, "ramses"]], "Athena++": [[266, "athena"]], "Examples": [[267, "examples"]], "API Guides": [[267, "api-guides"]], "Code Examples": [[267, "code-examples"]], "Generating 3D Cluster Fields": [[268, "generating-3d-cluster-fields"]], "Mathematical Overview": [[268, "mathematical-overview"]], "Initializing a Magnetic Field": [[268, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[268, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[268, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[268, "initializing-a-velocity-field"]], "Random Velocity Fields": [[268, "random-velocity-fields"]], "Radial Random Velocity Fields": [[268, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[268, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[268, "writing-a-field-out-to-disk"]], "Gravity Theories": [[269, "gravity-theories"]], "MONDian Gravity": [[269, "mondian-gravity"]], "AQUAL": [[269, "aqual"]], "QUMOND": [[269, "qumond"]], "Mathematical Note": [[269, null], [280, null]], "Example": [[269, null]], "References": [[269, "references"], [280, "references"]], "cluster_generator": [[270, "cluster-generator"]], "Features": [[270, "features"]], "Contents": [[270, "contents"], [272, "contents"], [273, "Contents"]], "Indices and tables": [[270, "indices-and-tables"]], "Initial Conditions Generation": [[271, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[271, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[271, "clusterics-parameter-files"]], "Cluster Models": [[272, "cluster-models"]], "Cluster Models: Mathematical Overview": [[272, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[272, null]], "Newtonian Gravity": [[272, "newtonian-gravity"]], "MOND Gravity: AQUAL": [[272, "mond-gravity-aqual"]], "MOND Gravity: QUMOND": [[272, "mond-gravity-qumond"]], "Generating a model.ClusterModel Using Radial Profiles": [[272, "generating-a-model-clustermodel-using-radial-profiles"]], "ClusterModel from Gas Density and Gas Temperature Profiles": [[272, "clustermodel-from-gas-density-and-gas-temperature-profiles"]], "Additional Notes": [[272, "additional-notes"]], "Non-Physical Profiles": [[272, "non-physical-profiles"]], "ClusterModel from Gas Density and Total Density Profiles": [[272, "clustermodel-from-gas-density-and-total-density-profiles"]], "ClusterModel from Gas Density and Gas Entropy Profiles": [[272, "clustermodel-from-gas-density-and-gas-entropy-profiles"]], "ClusterModel Without Gas": [[272, "clustermodel-without-gas"]], "Checking the Hydrostatic Equilibrium": [[272, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[272, "setting-a-magnetic-field-strength-profile"]], "Setting a Magnetic Field from \\beta": [[272, "setting-a-magnetic-field-from-beta"]], "Setting a Magnetic Field from plasma density": [[272, "setting-a-magnetic-field-from-plasma-density"]], "Adding Other Fields": [[272, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[272, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[272, null]], "Data Structures in cluster_generator": [[273, "Data-Structures-in-cluster_generator"]], "Data Structures": [[273, "Data-Structures"]], "Accessing and Using Existing Profiles": [[273, "Accessing-and-Using-Existing-Profiles"]], "Creating Profiles": [[273, "Creating-Profiles"]], "I/O Operations on RadialProfiles": [[273, "I/O-Operations-on-RadialProfiles"]], "ClusterModel": [[273, "ClusterModel"]], "VirialEquilibrium": [[273, "VirialEquilibrium"]], "Generating Particles": [[273, "Generating-Particles"]], "ClusterParticles": [[273, "ClusterParticles"]], "ClusterICs": [[273, "ClusterICs"]], "Virialization": [[274, "Virialization"]], "Advanced Use Cases": [[275, "Advanced-Use-Cases"]], "Quickstart Guide: The Basics": [[276, "Quickstart-Guide:-The-Basics"]], "Profiles": [[276, "Profiles"]], "Creating a Galaxy Cluster": [[276, "Creating-a-Galaxy-Cluster"]], "Creating Initial Conditions": [[276, "Creating-Initial-Conditions"]], "Quickstart Guide: Getting the most out of cluster_generator": [[277, "Quickstart-Guide:-Getting-the-most-out-of-cluster_generator"]], "Quickstart Guide: What About MOND?": [[278, "Quickstart-Guide:-What-About-MOND?"]], "Particles": [[279, "particles"]], "Generating Particles from ClusterModel Objects": [[279, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[279, "gas-particles"]], "Dark Matter and Star Particles": [[279, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[279, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[279, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[279, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[279, "the-clusterparticles-class"]], "ClusterParticles Operations": [[279, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[279, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[279, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[279, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[279, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[279, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[279, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[279, "clusterparticles-i-o"]], "Gadget-Like I/O": [[279, "gadget-like-i-o"]], "General Profiles": [[280, "general-profiles"]], "Constant Profile": [[280, "constant-profile"]], "Power-Law Profile": [[280, "power-law-profile"]], "Density and Mass Profiles": [[280, "density-and-mass-profiles"]], "NFW Profile": [[280, "nfw-profile"]], "\u201csuper-NFW\u201d Profile": [[280, "super-nfw-profile"]], "Truncated NFW Profile": [[280, "truncated-nfw-profile"]], "Hernquist Profile": [[280, "hernquist-profile"]], "Einasto Profile": [[280, "einasto-profile"]], "Vikhlinin et al. 2006 Density Profile": [[280, "vikhlinin-et-al-2006-density-profile"]], "Ascasibar & Markevitch 2006 Density Profile": [[280, "ascasibar-markevitch-2006-density-profile"]], "Temperature Profiles": [[280, "temperature-profiles"]], "Vikhlinin et al. 2006 Temperature Profile": [[280, "vikhlinin-et-al-2006-temperature-profile"]], "Ascasibar & Markevitch 2006 Temperature Profile": [[280, "ascasibar-markevitch-2006-temperature-profile"]], "Entropy Profiles": [[280, "entropy-profiles"]], "Baseline Entropy Profile": [[280, "baseline-entropy-profile"]]}, "indexentries": {"codes": [[1, "module-codes"]], "module": [[1, "module-codes"], [10, "module-fields"], [53, "module-gravity"], [80, "module-ics"], [97, "module-model"], [170, "module-particles"], [192, "module-radial_profiles"], [234, "module-relations"], [240, "module-utils"], [252, "module-virial"]], "setup_arepo_ics() (in module codes)": [[2, "codes.setup_arepo_ics"]], "setup_athena_ics() (in module codes)": [[3, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[4, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[5, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[6, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[7, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[8, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[9, "codes.write_amr_particles"]], "fields": [[10, "module-fields"]], "clusterfield (class in fields)": [[11, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[12, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[13, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[14, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[15, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[16, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[17, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[18, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[19, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[20, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[21, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[22, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[23, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[24, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[25, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[26, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[27, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[28, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[29, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[30, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[31, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[32, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[33, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[34, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[35, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[36, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[37, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[38, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[39, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[40, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[41, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[42, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[43, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[44, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[45, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[46, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[47, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[48, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[49, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[50, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[51, "fields.parse_value"]], "rot_3d() (in module fields)": [[52, "fields.rot_3d"]], "gravity": [[53, "module-gravity"]], "aqualgravity (class in gravity)": [[54, "gravity.AQUALGravity"]], "__init__() (gravity.aqualgravity method)": [[55, "gravity.AQUALGravity.__init__"]], "compute_mass() (gravity.aqualgravity class method)": [[56, "gravity.AQUALGravity.compute_mass"]], "is_calculated (gravity.aqualgravity property)": [[57, "gravity.AQUALGravity.is_calculated"]], "model (gravity.aqualgravity attribute)": [[58, "gravity.AQUALGravity.model"]], "potential() (gravity.aqualgravity method)": [[59, "gravity.AQUALGravity.potential"]], "reset() (gravity.aqualgravity method)": [[60, "gravity.AQUALGravity.reset"]], "gravity (class in gravity)": [[61, "gravity.Gravity"]], "__init__() (gravity.gravity method)": [[62, "gravity.Gravity.__init__"]], "is_calculated (gravity.gravity property)": [[63, "gravity.Gravity.is_calculated"]], "model (gravity.gravity attribute)": [[64, "gravity.Gravity.model"]], "reset() (gravity.gravity method)": [[65, "gravity.Gravity.reset"]], "newtoniangravity (class in gravity)": [[66, "gravity.NewtonianGravity"]], "__init__() (gravity.newtoniangravity method)": [[67, "gravity.NewtonianGravity.__init__"]], "compute_mass() (gravity.newtoniangravity class method)": [[68, "gravity.NewtonianGravity.compute_mass"]], "is_calculated (gravity.newtoniangravity property)": [[69, "gravity.NewtonianGravity.is_calculated"]], "model (gravity.newtoniangravity attribute)": [[70, "gravity.NewtonianGravity.model"]], "potential() (gravity.newtoniangravity method)": [[71, "gravity.NewtonianGravity.potential"]], "reset() (gravity.newtoniangravity method)": [[72, "gravity.NewtonianGravity.reset"]], "qumondgravity (class in gravity)": [[73, "gravity.QUMONDGravity"]], "__init__() (gravity.qumondgravity method)": [[74, "gravity.QUMONDGravity.__init__"]], "compute_mass() (gravity.qumondgravity class method)": [[75, "gravity.QUMONDGravity.compute_mass"]], "is_calculated (gravity.qumondgravity property)": [[76, "gravity.QUMONDGravity.is_calculated"]], "model (gravity.qumondgravity attribute)": [[77, "gravity.QUMONDGravity.model"]], "potential() (gravity.qumondgravity method)": [[78, "gravity.QUMONDGravity.potential"]], "reset() (gravity.qumondgravity method)": [[79, "gravity.QUMONDGravity.reset"]], "ics": [[80, "module-ics"]], "clusterics (class in ics)": [[81, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[82, "ics.ClusterICs.__init__"]], "basename (ics.clusterics attribute)": [[83, "ics.ClusterICs.basename"]], "center (ics.clusterics attribute)": [[84, "ics.ClusterICs.center"]], "create_dataset() (ics.clusterics method)": [[85, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[86, "ics.ClusterICs.from_file"]], "mag_file (ics.clusterics attribute)": [[87, "ics.ClusterICs.mag_file"]], "num_halos (ics.clusterics attribute)": [[88, "ics.ClusterICs.num_halos"]], "profiles (ics.clusterics attribute)": [[89, "ics.ClusterICs.profiles"]], "r_max (ics.clusterics attribute)": [[90, "ics.ClusterICs.r_max"]], "resample_particle_ics() (ics.clusterics method)": [[91, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[92, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[93, "ics.ClusterICs.to_file"]], "tot_np (ics.clusterics attribute)": [[94, "ics.ClusterICs.tot_np"]], "velocity (ics.clusterics attribute)": [[95, "ics.ClusterICs.velocity"]], "compute_centers_for_binary() (in module ics)": [[96, "ics.compute_centers_for_binary"]], "model": [[97, "module-model"]], "clustermodel (class in model)": [[98, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[99, "model.ClusterModel.__init__"]], "attrs (model.clustermodel attribute)": [[100, "model.ClusterModel.attrs"]], "check_dm_virial() (model.clustermodel method)": [[101, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[102, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[103, "model.ClusterModel.check_star_virial"]], "default_fields (model.clustermodel attribute)": [[104, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[105, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[106, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[107, "model.ClusterModel.find_field_at_radius"]], "from_arrays() (model.clustermodel class method)": [[108, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[109, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[110, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[111, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[112, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[113, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[114, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[115, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[116, "model.ClusterModel.generate_tracer_particles"]], "is_physical() (model.clustermodel method)": [[117, "model.ClusterModel.is_physical"]], "keys() (model.clustermodel method)": [[118, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[119, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[120, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[121, "model.ClusterModel.num_elements"]], "plot() (model.clustermodel method)": [[122, "model.ClusterModel.plot"]], "pot (model.clustermodel property)": [[123, "model.ClusterModel.pot"]], "rebuild_physical() (model.clustermodel method)": [[124, "model.ClusterModel.rebuild_physical"]], "set_field() (model.clustermodel method)": [[125, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[126, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[127, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[128, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[129, "model.ClusterModel.star_virial"]], "virialization_method (model.clustermodel property)": [[130, "model.ClusterModel.virialization_method"]], "write_model_to_ascii() (model.clustermodel method)": [[131, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[132, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[133, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[134, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[135, "model.HydrostaticEquilibrium.__init__"]], "attrs (model.hydrostaticequilibrium attribute)": [[136, "model.HydrostaticEquilibrium.attrs"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[137, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[138, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[139, "model.HydrostaticEquilibrium.check_star_virial"]], "default_fields (model.hydrostaticequilibrium attribute)": [[140, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[141, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[142, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[143, "model.HydrostaticEquilibrium.find_field_at_radius"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[144, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[145, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[146, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[147, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[148, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[149, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[150, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[151, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[152, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "is_physical() (model.hydrostaticequilibrium method)": [[153, "model.HydrostaticEquilibrium.is_physical"]], "keys() (model.hydrostaticequilibrium method)": [[154, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[155, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[156, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[157, "model.HydrostaticEquilibrium.num_elements"]], "plot() (model.hydrostaticequilibrium method)": [[158, "model.HydrostaticEquilibrium.plot"]], "pot (model.hydrostaticequilibrium property)": [[159, "model.HydrostaticEquilibrium.pot"]], "rebuild_physical() (model.hydrostaticequilibrium method)": [[160, "model.HydrostaticEquilibrium.rebuild_physical"]], "set_field() (model.hydrostaticequilibrium method)": [[161, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[162, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[163, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[164, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[165, "model.HydrostaticEquilibrium.star_virial"]], "virialization_method (model.hydrostaticequilibrium property)": [[166, "model.HydrostaticEquilibrium.virialization_method"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[167, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[168, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[169, "model.HydrostaticEquilibrium.write_model_to_h5"]], "particles": [[170, "module-particles"]], "clusterparticles (class in particles)": [[171, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[172, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[173, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[174, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[175, "particles.ClusterParticles.drop_ptypes"]], "from_file() (particles.clusterparticles class method)": [[176, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[177, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[178, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[179, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[180, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[181, "particles.ClusterParticles.num_passive_scalars"]], "set_field() (particles.clusterparticles method)": [[182, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[183, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[184, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[185, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[186, "particles.ClusterParticles.write_to_gadget_file"]], "combine_three_clusters() (in module particles)": [[187, "particles.combine_three_clusters"]], "combine_two_clusters() (in module particles)": [[188, "particles.combine_two_clusters"]], "resample_one_cluster() (in module particles)": [[189, "particles.resample_one_cluster"]], "resample_three_clusters() (in module particles)": [[190, "particles.resample_three_clusters"]], "resample_two_clusters() (in module particles)": [[191, "particles.resample_two_clusters"]], "radial_profiles": [[192, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[193, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[194, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[195, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[196, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[197, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[198, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[199, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[200, "radial_profiles.RadialProfile.from_binary"]], "plot() (radial_profiles.radialprofile method)": [[201, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[202, "radial_profiles.RadialProfile.to_binary"]], "am06_density_profile() (in module radial_profiles)": [[203, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[204, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[205, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[206, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[207, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[208, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[209, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[210, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[211, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[212, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[213, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[214, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[215, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[216, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[217, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[218, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[219, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[220, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[221, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[222, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[223, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[224, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[225, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[226, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[227, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[228, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[229, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[230, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[231, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[232, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[233, "radial_profiles.walker_entropy_profile"]], "relations": [[234, "module-relations"]], "convert_ne_to_density() (in module relations)": [[235, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[236, "relations.f_gas"]], "m_bcg() (in module relations)": [[237, "relations.m_bcg"]], "m_sat() (in module relations)": [[238, "relations.m_sat"]], "r_bcg() (in module relations)": [[239, "relations.r_bcg"]], "utils": [[240, "module-utils"]], "ensure_list() (in module utils)": [[241, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[242, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[243, "utils.ensure_ytquantity"]], "generate_particle_radii() (in module utils)": [[244, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[245, "utils.integrate"]], "integrate_mass() (in module utils)": [[246, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[247, "utils.integrate_toinf"]], "log_string() (in module utils)": [[248, "utils.log_string"]], "moving_average() (in module utils)": [[249, "utils.moving_average"]], "parse_prng() (in module utils)": [[250, "utils.parse_prng"]], "truncate_spline() (in module utils)": [[251, "utils.truncate_spline"]], "virial": [[252, "module-virial"]], "virialequilibrium (class in virial)": [[253, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[254, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[255, "virial.VirialEquilibrium.check_virial"]], "df (virial.virialequilibrium property)": [[256, "virial.VirialEquilibrium.df"]], "ee (virial.virialequilibrium property)": [[257, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[258, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[259, "virial.VirialEquilibrium.generate_particles"]], "model (virial.virialequilibrium attribute)": [[260, "virial.VirialEquilibrium.model"]], "num_elements (virial.virialequilibrium attribute)": [[261, "virial.VirialEquilibrium.num_elements"]], "ptype (virial.virialequilibrium attribute)": [[262, "virial.VirialEquilibrium.ptype"]], "sigma (virial.virialequilibrium property)": [[263, "virial.VirialEquilibrium.sigma"]], "type (virial.virialequilibrium attribute)": [[264, "virial.VirialEquilibrium.type"]]}})