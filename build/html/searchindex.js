Search.setIndex({"docnames": ["_as_gen/codes", "_as_gen/codes.resample_arepo_ics", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/correction", "_as_gen/correction.NonPhysicalRegion", "_as_gen/correction.NonPhysicalRegion.__init__", "_as_gen/correction.NonPhysicalRegion.correct", "_as_gen/correction.NonPhysicalRegion.correctable", "_as_gen/correction.NonPhysicalRegion.identify", "_as_gen/correction.NonPhysicalRegion.is_close", "_as_gen/correction.NonPhysicalRegion.message", "_as_gen/correction.NonPhysicalRegion.obj", "_as_gen/correction.NonPhysicalRegion.rmax", "_as_gen/correction.NonPhysicalRegion.rmin", "_as_gen/correction.NonPhysicalRegion.size", "_as_gen/correction.NonPhysicalRegion.type", "_as_gen/correction.Type0NPR", "_as_gen/correction.Type0NPR.__init__", "_as_gen/correction.Type0NPR.correct", "_as_gen/correction.Type0NPR.correctable", "_as_gen/correction.Type0NPR.identify", "_as_gen/correction.Type0NPR.is_close", "_as_gen/correction.Type0NPR.message", "_as_gen/correction.Type0NPR.obj", "_as_gen/correction.Type0NPR.rmax", "_as_gen/correction.Type0NPR.rmin", "_as_gen/correction.Type0NPR.size", "_as_gen/correction.Type0NPR.type", "_as_gen/correction.Type0aNPR", "_as_gen/correction.Type0aNPR.__init__", "_as_gen/correction.Type0aNPR.correct", "_as_gen/correction.Type0aNPR.correctable", "_as_gen/correction.Type0aNPR.identify", "_as_gen/correction.Type0aNPR.is_close", "_as_gen/correction.Type0aNPR.message", "_as_gen/correction.Type0aNPR.obj", "_as_gen/correction.Type0aNPR.rmax", "_as_gen/correction.Type0aNPR.rmin", "_as_gen/correction.Type0aNPR.size", "_as_gen/correction.Type0aNPR.type", "_as_gen/correction.Type0bNPR", "_as_gen/correction.Type0bNPR.__init__", "_as_gen/correction.Type0bNPR.correct", "_as_gen/correction.Type0bNPR.correctable", "_as_gen/correction.Type0bNPR.identify", "_as_gen/correction.Type0bNPR.is_close", "_as_gen/correction.Type0bNPR.message", "_as_gen/correction.Type0bNPR.obj", "_as_gen/correction.Type0bNPR.rmax", "_as_gen/correction.Type0bNPR.rmin", "_as_gen/correction.Type0bNPR.size", "_as_gen/correction.Type0bNPR.type", "_as_gen/correction.Type0cNPR", "_as_gen/correction.Type0cNPR.__init__", "_as_gen/correction.Type0cNPR.correct", "_as_gen/correction.Type0cNPR.correctable", "_as_gen/correction.Type0cNPR.identify", "_as_gen/correction.Type0cNPR.is_close", "_as_gen/correction.Type0cNPR.message", "_as_gen/correction.Type0cNPR.obj", "_as_gen/correction.Type0cNPR.rmax", "_as_gen/correction.Type0cNPR.rmin", "_as_gen/correction.Type0cNPR.size", "_as_gen/correction.Type0cNPR.type", "_as_gen/correction.Type1NPR", "_as_gen/correction.Type1NPR.__init__", "_as_gen/correction.Type1NPR.correct", "_as_gen/correction.Type1NPR.correctable", "_as_gen/correction.Type1NPR.identify", "_as_gen/correction.Type1NPR.is_close", "_as_gen/correction.Type1NPR.message", "_as_gen/correction.Type1NPR.obj", "_as_gen/correction.Type1NPR.rmax", "_as_gen/correction.Type1NPR.rmin", "_as_gen/correction.Type1NPR.size", "_as_gen/correction.Type1NPR.type", "_as_gen/correction.Type1aNPR", "_as_gen/correction.Type1aNPR.__init__", "_as_gen/correction.Type1aNPR.correct", "_as_gen/correction.Type1aNPR.correctable", "_as_gen/correction.Type1aNPR.identify", "_as_gen/correction.Type1aNPR.is_close", "_as_gen/correction.Type1aNPR.message", "_as_gen/correction.Type1aNPR.obj", "_as_gen/correction.Type1aNPR.rmax", "_as_gen/correction.Type1aNPR.rmin", "_as_gen/correction.Type1aNPR.size", "_as_gen/correction.Type1aNPR.type", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.create_dataset", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.find_radius_for_density", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.items", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.panel_plot", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.properties", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.values", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.create_dataset", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.items", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.panel_plot", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.properties", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.values", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/numalgs", "_as_gen/numalgs.find_holes", "_as_gen/numalgs.identify_domain_borders", "_as_gen/numalgs.monotone_interpolation", "_as_gen/numalgs.positive_interpolation", "_as_gen/numalgs.solve_temperature", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.combine_three_clusters", "_as_gen/particles.combine_two_clusters", "_as_gen/particles.resample_one_cluster", "_as_gen/particles.resample_three_clusters", "_as_gen/particles.resample_two_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.name", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/relations.rho_scale_hern", "_as_gen/utils", "_as_gen/utils.LogMute", "_as_gen/utils.LogMute.__init__", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.parse_prng", "_as_gen/utils.time_limit", "_as_gen/utils.truncate_spline", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_notebooks/examples/FirstJourney", "api", "codes", "correction", "correction_methods", "examples", "fields", "getting_started", "index", "initial_conditions", "models", "particles", "radial_profiles"], "filenames": ["_as_gen/codes.rst", "_as_gen/codes.resample_arepo_ics.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/correction.rst", "_as_gen/correction.NonPhysicalRegion.rst", "_as_gen/correction.NonPhysicalRegion.__init__.rst", "_as_gen/correction.NonPhysicalRegion.correct.rst", "_as_gen/correction.NonPhysicalRegion.correctable.rst", "_as_gen/correction.NonPhysicalRegion.identify.rst", "_as_gen/correction.NonPhysicalRegion.is_close.rst", "_as_gen/correction.NonPhysicalRegion.message.rst", "_as_gen/correction.NonPhysicalRegion.obj.rst", "_as_gen/correction.NonPhysicalRegion.rmax.rst", "_as_gen/correction.NonPhysicalRegion.rmin.rst", "_as_gen/correction.NonPhysicalRegion.size.rst", "_as_gen/correction.NonPhysicalRegion.type.rst", "_as_gen/correction.Type0NPR.rst", "_as_gen/correction.Type0NPR.__init__.rst", "_as_gen/correction.Type0NPR.correct.rst", "_as_gen/correction.Type0NPR.correctable.rst", "_as_gen/correction.Type0NPR.identify.rst", "_as_gen/correction.Type0NPR.is_close.rst", "_as_gen/correction.Type0NPR.message.rst", "_as_gen/correction.Type0NPR.obj.rst", "_as_gen/correction.Type0NPR.rmax.rst", "_as_gen/correction.Type0NPR.rmin.rst", "_as_gen/correction.Type0NPR.size.rst", "_as_gen/correction.Type0NPR.type.rst", "_as_gen/correction.Type0aNPR.rst", "_as_gen/correction.Type0aNPR.__init__.rst", "_as_gen/correction.Type0aNPR.correct.rst", "_as_gen/correction.Type0aNPR.correctable.rst", "_as_gen/correction.Type0aNPR.identify.rst", "_as_gen/correction.Type0aNPR.is_close.rst", "_as_gen/correction.Type0aNPR.message.rst", "_as_gen/correction.Type0aNPR.obj.rst", "_as_gen/correction.Type0aNPR.rmax.rst", "_as_gen/correction.Type0aNPR.rmin.rst", "_as_gen/correction.Type0aNPR.size.rst", "_as_gen/correction.Type0aNPR.type.rst", "_as_gen/correction.Type0bNPR.rst", "_as_gen/correction.Type0bNPR.__init__.rst", "_as_gen/correction.Type0bNPR.correct.rst", "_as_gen/correction.Type0bNPR.correctable.rst", "_as_gen/correction.Type0bNPR.identify.rst", "_as_gen/correction.Type0bNPR.is_close.rst", "_as_gen/correction.Type0bNPR.message.rst", "_as_gen/correction.Type0bNPR.obj.rst", "_as_gen/correction.Type0bNPR.rmax.rst", "_as_gen/correction.Type0bNPR.rmin.rst", "_as_gen/correction.Type0bNPR.size.rst", "_as_gen/correction.Type0bNPR.type.rst", "_as_gen/correction.Type0cNPR.rst", "_as_gen/correction.Type0cNPR.__init__.rst", "_as_gen/correction.Type0cNPR.correct.rst", "_as_gen/correction.Type0cNPR.correctable.rst", "_as_gen/correction.Type0cNPR.identify.rst", "_as_gen/correction.Type0cNPR.is_close.rst", "_as_gen/correction.Type0cNPR.message.rst", "_as_gen/correction.Type0cNPR.obj.rst", "_as_gen/correction.Type0cNPR.rmax.rst", "_as_gen/correction.Type0cNPR.rmin.rst", "_as_gen/correction.Type0cNPR.size.rst", "_as_gen/correction.Type0cNPR.type.rst", "_as_gen/correction.Type1NPR.rst", "_as_gen/correction.Type1NPR.__init__.rst", "_as_gen/correction.Type1NPR.correct.rst", "_as_gen/correction.Type1NPR.correctable.rst", "_as_gen/correction.Type1NPR.identify.rst", "_as_gen/correction.Type1NPR.is_close.rst", "_as_gen/correction.Type1NPR.message.rst", "_as_gen/correction.Type1NPR.obj.rst", "_as_gen/correction.Type1NPR.rmax.rst", "_as_gen/correction.Type1NPR.rmin.rst", "_as_gen/correction.Type1NPR.size.rst", "_as_gen/correction.Type1NPR.type.rst", "_as_gen/correction.Type1aNPR.rst", "_as_gen/correction.Type1aNPR.__init__.rst", "_as_gen/correction.Type1aNPR.correct.rst", "_as_gen/correction.Type1aNPR.correctable.rst", "_as_gen/correction.Type1aNPR.identify.rst", "_as_gen/correction.Type1aNPR.is_close.rst", "_as_gen/correction.Type1aNPR.message.rst", "_as_gen/correction.Type1aNPR.obj.rst", "_as_gen/correction.Type1aNPR.rmax.rst", "_as_gen/correction.Type1aNPR.rmin.rst", "_as_gen/correction.Type1aNPR.size.rst", "_as_gen/correction.Type1aNPR.type.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.create_dataset.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.find_radius_for_density.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.items.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.panel_plot.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.properties.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.values.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.create_dataset.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.items.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.panel_plot.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.properties.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.values.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/numalgs.rst", "_as_gen/numalgs.find_holes.rst", "_as_gen/numalgs.identify_domain_borders.rst", "_as_gen/numalgs.monotone_interpolation.rst", "_as_gen/numalgs.positive_interpolation.rst", "_as_gen/numalgs.solve_temperature.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.combine_three_clusters.rst", "_as_gen/particles.combine_two_clusters.rst", "_as_gen/particles.resample_one_cluster.rst", "_as_gen/particles.resample_three_clusters.rst", "_as_gen/particles.resample_two_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.name.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/relations.rho_scale_hern.rst", "_as_gen/utils.rst", "_as_gen/utils.LogMute.rst", "_as_gen/utils.LogMute.__init__.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.time_limit.rst", "_as_gen/utils.truncate_spline.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_notebooks/examples/FirstJourney.ipynb", "api.rst", "codes.rst", "correction.rst", "correction_methods.rst", "examples.rst", "fields.rst", "getting_started.rst", "index.rst", "initial_conditions.rst", "models.rst", "particles.rst", "radial_profiles.rst"], "titles": ["codes", "codes.resample_arepo_ics", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "correction", "correction.NonPhysicalRegion", "correction.NonPhysicalRegion.__init__", "correction.NonPhysicalRegion.correct", "correction.NonPhysicalRegion.correctable", "correction.NonPhysicalRegion.identify", "correction.NonPhysicalRegion.is_close", "correction.NonPhysicalRegion.message", "correction.NonPhysicalRegion.obj", "correction.NonPhysicalRegion.rmax", "correction.NonPhysicalRegion.rmin", "correction.NonPhysicalRegion.size", "correction.NonPhysicalRegion.type", "correction.Type0NPR", "correction.Type0NPR.__init__", "correction.Type0NPR.correct", "correction.Type0NPR.correctable", "correction.Type0NPR.identify", "correction.Type0NPR.is_close", "correction.Type0NPR.message", "correction.Type0NPR.obj", "correction.Type0NPR.rmax", "correction.Type0NPR.rmin", "correction.Type0NPR.size", "correction.Type0NPR.type", "correction.Type0aNPR", "correction.Type0aNPR.__init__", "correction.Type0aNPR.correct", "correction.Type0aNPR.correctable", "correction.Type0aNPR.identify", "correction.Type0aNPR.is_close", "correction.Type0aNPR.message", "correction.Type0aNPR.obj", "correction.Type0aNPR.rmax", "correction.Type0aNPR.rmin", "correction.Type0aNPR.size", "correction.Type0aNPR.type", "correction.Type0bNPR", "correction.Type0bNPR.__init__", "correction.Type0bNPR.correct", "correction.Type0bNPR.correctable", "correction.Type0bNPR.identify", "correction.Type0bNPR.is_close", "correction.Type0bNPR.message", "correction.Type0bNPR.obj", "correction.Type0bNPR.rmax", "correction.Type0bNPR.rmin", "correction.Type0bNPR.size", "correction.Type0bNPR.type", "correction.Type0cNPR", "correction.Type0cNPR.__init__", "correction.Type0cNPR.correct", "correction.Type0cNPR.correctable", "correction.Type0cNPR.identify", "correction.Type0cNPR.is_close", "correction.Type0cNPR.message", "correction.Type0cNPR.obj", "correction.Type0cNPR.rmax", "correction.Type0cNPR.rmin", "correction.Type0cNPR.size", "correction.Type0cNPR.type", "correction.Type1NPR", "correction.Type1NPR.__init__", "correction.Type1NPR.correct", "correction.Type1NPR.correctable", "correction.Type1NPR.identify", "correction.Type1NPR.is_close", "correction.Type1NPR.message", "correction.Type1NPR.obj", "correction.Type1NPR.rmax", "correction.Type1NPR.rmin", "correction.Type1NPR.size", "correction.Type1NPR.type", "correction.Type1aNPR", "correction.Type1aNPR.__init__", "correction.Type1aNPR.correct", "correction.Type1aNPR.correctable", "correction.Type1aNPR.identify", "correction.Type1aNPR.is_close", "correction.Type1aNPR.message", "correction.Type1aNPR.obj", "correction.Type1aNPR.rmax", "correction.Type1aNPR.rmin", "correction.Type1aNPR.size", "correction.Type1aNPR.type", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.create_dataset", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.find_radius_for_density", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.items", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.panel_plot", "model.ClusterModel.plot", "model.ClusterModel.properties", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.values", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.create_dataset", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.find_radius_for_density", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.items", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.panel_plot", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.properties", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.values", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "numalgs", "numalgs.find_holes", "numalgs.identify_domain_borders", "numalgs.monotone_interpolation", "numalgs.positive_interpolation", "numalgs.solve_temperature", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.combine_three_clusters", "particles.combine_two_clusters", "particles.resample_one_cluster", "particles.resample_three_clusters", "particles.resample_two_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.name", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "relations.rho_scale_hern", "utils", "utils.LogMute", "utils.LogMute.__init__", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.parse_prng", "utils.time_limit", "utils.truncate_spline", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "Your First Journey With CG", "API", "Simulation Software", "Correcting Non-Physical Behavior", "Methods For Correcting Non-Physical Regions", "Examples", "Generating 3D Cluster Fields", "Quickstart Guide", "The Cluster Generator", "Initial Conditions Generation", "Cluster Models", "Particles", "Radial Profiles"], "terms": {"specif": [0, 175, 212, 246, 260, 326, 331, 332, 334, 335], "util": [0, 297, 324, 326, 327, 331], "cluster_gener": [0, 10, 11, 12, 24, 36, 48, 60, 72, 84, 164, 201, 236, 237, 304, 324, 326, 327, 330, 331, 332, 333, 334, 335, 336], "librari": [0, 329, 331, 332], "function": [0, 14, 18, 26, 30, 38, 42, 50, 54, 62, 66, 74, 78, 86, 90, 96, 139, 152, 189, 223, 224, 227, 229, 252, 253, 259, 297, 304, 315, 316, 319, 320, 324, 330, 331, 334, 335, 336], "ic": [1, 2, 3, 4, 5, 6, 7, 8, 9, 324, 326, 331, 335], "infil": 1, "outfil": 1, "overwrit": [1, 2, 10, 101, 106, 111, 116, 121, 126, 131, 136, 146, 174, 183, 184, 185, 211, 220, 221, 222, 244, 245, 246, 324, 335], "fals": [1, 2, 6, 7, 9, 10, 12, 15, 24, 27, 36, 39, 48, 51, 60, 63, 72, 75, 97, 98, 101, 102, 103, 106, 111, 116, 117, 118, 121, 126, 131, 132, 133, 136, 145, 146, 165, 166, 167, 183, 184, 185, 202, 203, 204, 220, 221, 222, 225, 232, 242, 244, 245, 246, 323], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 22, 24, 25, 36, 37, 48, 49, 60, 61, 72, 73, 84, 85, 97, 98, 99, 101, 102, 103, 107, 108, 112, 117, 118, 122, 123, 127, 132, 133, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 331, 332, 335], "resampl": [1, 144, 249, 250, 251], "arepo": [1, 2, 144, 237, 332, 335], "boxsiz": 2, "nx": 2, "ic_fil": 2, "regenerate_particl": [2, 6, 7, 9, 145], "prng": [2, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133, 145, 165, 166, 167, 168, 202, 203, 204, 205, 310, 314, 323], "none": [2, 18, 30, 42, 54, 66, 78, 90, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 140, 141, 142, 144, 145, 149, 150, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 175, 184, 185, 186, 187, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 212, 221, 222, 224, 225, 232, 233, 236, 237, 238, 240, 242, 243, 246, 250, 251, 253, 254, 262, 263, 279, 280, 285, 294, 310, 318, 319, 323, 334], "setup": [2, 3, 6, 7, 324, 326], "art": 3, "paramet": [4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 26, 28, 29, 30, 38, 40, 41, 42, 50, 52, 53, 54, 62, 64, 65, 66, 74, 76, 77, 78, 86, 88, 89, 90, 97, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 137, 138, 141, 142, 144, 145, 146, 147, 149, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 175, 176, 178, 179, 180, 183, 184, 185, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 212, 213, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 232, 233, 236, 237, 240, 242, 243, 244, 246, 253, 255, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 315, 316, 319, 323, 328, 335, 336], "cluster": [4, 5, 6, 7, 8, 9, 16, 28, 40, 52, 64, 76, 84, 88, 147, 148, 149, 154, 191, 232, 233, 236, 247, 248, 249, 250, 251, 264, 265, 266, 267, 268, 294, 295, 299, 319, 326, 327, 328, 329, 331, 335, 336], "object": [4, 5, 6, 7, 8, 9, 16, 19, 28, 31, 40, 43, 52, 55, 64, 67, 76, 79, 88, 91, 99, 104, 109, 114, 119, 124, 129, 134, 157, 165, 166, 167, 168, 176, 194, 202, 203, 204, 205, 213, 252, 253, 257, 258, 260, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 319, 323, 327, 330, 331, 336], "The": [4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 81, 83, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 116, 119, 120, 121, 124, 125, 126, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 146, 147, 149, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 232, 236, 237, 240, 242, 243, 244, 246, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 315, 316, 319, 320, 323, 326, 327, 328, 329, 330, 331, 333, 336], "gener": [4, 5, 6, 7, 8, 9, 97, 141, 145, 149, 160, 165, 166, 167, 168, 174, 175, 197, 202, 203, 204, 205, 211, 212, 224, 236, 258, 259, 270, 296, 310, 319, 323, 324, 326, 327, 328, 331], "athena": [4, 329, 330, 332], "from": [4, 5, 6, 7, 8, 9, 84, 137, 141, 142, 143, 144, 145, 147, 152, 160, 161, 164, 174, 175, 178, 184, 189, 197, 198, 201, 211, 212, 215, 221, 225, 227, 228, 236, 237, 240, 256, 260, 264, 265, 279, 280, 285, 288, 294, 295, 299, 319, 320, 324, 326, 327, 331, 332, 336], "enzo": [5, 332], "use_particl": 6, "true": [6, 7, 9, 10, 14, 16, 26, 28, 38, 40, 50, 52, 62, 64, 74, 76, 84, 86, 87, 88, 97, 145, 146, 165, 166, 167, 178, 179, 184, 202, 203, 204, 215, 216, 221, 224, 232, 242, 298, 323, 324, 327, 335], "flash": [6, 10, 329, 330, 332], "par": 6, "line": [6, 7], "need": [6, 7, 286, 326, 327, 330, 331, 332, 334, 335, 336], "us": [6, 7, 9, 12, 18, 30, 42, 54, 66, 78, 90, 99, 104, 109, 114, 119, 124, 129, 134, 141, 142, 144, 145, 149, 154, 162, 163, 174, 175, 183, 184, 191, 199, 200, 211, 212, 220, 221, 223, 224, 225, 232, 233, 242, 246, 259, 262, 279, 280, 285, 286, 299, 319, 320, 324, 326, 327, 328, 330, 331, 332, 333, 335], "galaxyclustermerg": [6, 326], "If": [6, 7, 9, 14, 16, 17, 26, 28, 29, 38, 40, 41, 50, 52, 53, 62, 64, 65, 74, 76, 77, 86, 88, 89, 97, 137, 145, 146, 154, 164, 165, 166, 167, 168, 174, 176, 184, 191, 201, 202, 203, 204, 205, 211, 213, 221, 224, 227, 232, 233, 237, 240, 242, 243, 246, 279, 280, 285, 294, 319, 323, 324, 327, 328, 330, 331, 332, 334, 335, 336], "particl": [6, 7, 9, 10, 99, 104, 109, 114, 119, 124, 129, 134, 141, 144, 145, 165, 166, 167, 168, 202, 203, 204, 205, 310, 319, 320, 323, 324, 326, 331, 332, 333, 334], "dark": [6, 7, 149, 156, 165, 193, 202, 232, 264, 323, 326, 331], "matter": [6, 7, 149, 156, 165, 193, 202, 232, 264, 323, 326, 328, 331], "potenti": [6, 7, 97, 101, 106, 111, 116, 121, 126, 131, 136, 157, 165, 166, 167, 175, 194, 202, 203, 204, 212, 228, 232, 315, 323, 324, 326, 331, 334, 335], "star": [6, 7, 141, 167, 204, 323, 326, 331, 334], "have": [6, 7, 9, 14, 26, 38, 50, 62, 74, 84, 86, 99, 104, 109, 114, 119, 124, 129, 134, 145, 165, 166, 167, 168, 174, 202, 203, 204, 205, 211, 263, 323, 324, 327, 330, 331, 332, 334, 335, 336], "been": [6, 7, 9, 144, 327, 334], "creat": [6, 7, 9, 99, 104, 109, 114, 119, 124, 129, 134, 142, 154, 191, 243, 262, 326, 327, 331, 333, 335], "yet": [6, 7, 334], "thei": [6, 7, 84, 99, 104, 109, 114, 119, 124, 129, 134, 174, 176, 211, 213, 233, 324, 327, 334, 335], "thi": [6, 7, 9, 12, 14, 16, 21, 26, 28, 33, 38, 40, 45, 50, 52, 57, 62, 64, 69, 74, 76, 81, 84, 86, 88, 93, 99, 104, 109, 114, 119, 124, 129, 134, 141, 145, 154, 165, 166, 167, 168, 174, 175, 184, 191, 202, 203, 204, 205, 211, 212, 221, 224, 232, 233, 255, 259, 263, 288, 294, 315, 316, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336], "step": [6, 7, 226, 227, 324, 326, 327, 329, 331], "gamer": [6, 7, 10, 330, 332], "boolean": [6, 7, 9, 10, 101, 106, 111, 116, 121, 126, 131, 136, 146, 165, 166, 167, 178, 179, 202, 203, 204, 215, 216, 232, 242, 244, 246, 323, 335], "option": [6, 7, 9, 10, 14, 17, 18, 26, 29, 30, 38, 41, 42, 50, 53, 54, 62, 65, 66, 74, 77, 78, 86, 89, 90, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 138, 141, 142, 146, 147, 149, 154, 160, 162, 163, 164, 165, 166, 167, 168, 172, 174, 176, 178, 179, 183, 185, 191, 197, 199, 200, 201, 202, 203, 204, 205, 209, 211, 213, 215, 216, 220, 222, 224, 225, 226, 227, 232, 233, 237, 240, 242, 243, 244, 246, 257, 262, 264, 279, 280, 285, 299, 315, 319, 323, 326, 330, 331, 334, 335], "set": [6, 7, 9, 99, 104, 109, 114, 119, 124, 129, 134, 141, 145, 149, 165, 166, 167, 168, 174, 177, 178, 179, 202, 203, 204, 205, 211, 214, 215, 216, 232, 240, 242, 243, 323, 326, 327, 330, 331, 333, 335], "up": [6, 145, 174, 211, 326, 327, 331, 333, 335, 336], "distribut": [6, 168, 205, 233, 249, 264, 265, 319, 320, 324, 326, 331, 332, 333, 334, 335], "default": [6, 7, 9, 10, 14, 18, 26, 30, 38, 42, 50, 54, 62, 66, 74, 78, 86, 90, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 137, 142, 146, 147, 149, 154, 155, 165, 166, 167, 168, 175, 176, 178, 179, 183, 185, 191, 192, 202, 203, 204, 205, 212, 213, 215, 216, 220, 222, 224, 226, 227, 232, 233, 240, 242, 244, 246, 262, 264, 279, 280, 285, 294, 299, 319, 323, 324, 328, 330, 335], "file": [6, 7, 9, 10, 101, 106, 111, 116, 121, 126, 131, 136, 141, 144, 146, 164, 183, 184, 185, 201, 220, 221, 222, 236, 237, 244, 246, 260, 263, 324, 326, 331, 335, 336], "alreadi": [6, 7, 9, 242, 324, 330, 331, 334, 335], "ar": [6, 9, 17, 24, 29, 41, 53, 65, 72, 77, 84, 89, 101, 106, 111, 116, 121, 126, 131, 136, 137, 138, 142, 147, 149, 162, 163, 172, 174, 176, 183, 199, 200, 209, 211, 213, 220, 226, 232, 233, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336], "being": [6, 9, 149, 154, 191, 327, 334, 335], "flag": [6, 7, 9], "i": [6, 7, 9, 12, 14, 16, 17, 18, 20, 21, 26, 28, 29, 30, 32, 33, 38, 40, 41, 42, 44, 45, 50, 52, 53, 54, 56, 57, 62, 64, 65, 66, 68, 69, 74, 76, 77, 78, 80, 81, 84, 86, 88, 89, 90, 92, 93, 97, 137, 145, 147, 149, 154, 165, 166, 167, 168, 172, 174, 175, 176, 177, 179, 191, 202, 203, 204, 205, 209, 211, 212, 213, 214, 216, 224, 225, 226, 227, 232, 242, 253, 255, 258, 263, 264, 277, 278, 285, 286, 298, 308, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 336], "re": [6, 7, 9, 324, 327, 328, 331, 332], "use_trac": 7, "input_testprob": 7, "clustermerg": [7, 326], "new": [7, 99, 104, 109, 114, 119, 124, 129, 134, 180, 217, 233, 316, 329, 330, 332], "profil": [7, 24, 48, 72, 84, 140, 141, 144, 145, 158, 161, 162, 163, 172, 178, 179, 195, 198, 199, 200, 209, 215, 216, 224, 226, 227, 228, 249, 252, 253, 254, 255, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 311, 312, 313, 319, 320, 324, 327, 328, 329, 331, 332, 333, 335], "also": [7, 101, 106, 111, 116, 121, 126, 131, 136, 324, 326, 327, 331, 332, 334, 335, 336], "which": [7, 10, 20, 21, 24, 32, 33, 36, 44, 45, 48, 56, 57, 60, 68, 69, 72, 80, 81, 84, 92, 93, 99, 104, 109, 114, 119, 124, 129, 134, 137, 138, 141, 142, 144, 147, 154, 159, 160, 161, 165, 166, 167, 168, 172, 174, 175, 177, 179, 180, 191, 196, 197, 198, 202, 203, 204, 205, 209, 211, 212, 214, 216, 217, 224, 225, 226, 227, 232, 233, 246, 255, 258, 285, 286, 316, 319, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336], "all": [7, 12, 14, 16, 24, 26, 28, 36, 38, 40, 48, 50, 52, 60, 62, 64, 72, 74, 76, 84, 86, 88, 142, 154, 174, 176, 184, 191, 211, 213, 221, 233, 234, 237, 240, 243, 324, 326, 327, 329, 331, 332, 334, 335, 336], "field": [7, 84, 141, 144, 149, 150, 154, 155, 158, 160, 169, 170, 173, 174, 175, 177, 178, 179, 182, 184, 186, 187, 191, 192, 195, 197, 206, 207, 210, 211, 212, 214, 215, 216, 219, 221, 230, 231, 235, 242, 246, 324, 326, 327, 328, 331, 332], "cg": [7, 148, 183, 184, 185, 220, 221, 222, 223, 229, 317, 325, 326, 327, 328, 331, 332, 334, 335, 336], "unit": [7, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 137, 175, 178, 179, 183, 185, 212, 215, 216, 220, 222, 232, 233, 240, 242, 246, 259, 299, 308, 309, 324, 326, 330, 335], "read": [7, 10, 143, 164, 201, 236, 237, 326, 331, 335, 336], "magnet": [7, 96, 141, 178, 179, 215, 216, 326, 331], "present": [7, 17, 29, 41, 53, 65, 77, 89], "note": [7, 84, 149, 164, 176, 201, 213, 224, 226, 227, 255, 258, 259, 327, 331, 334], "given": [7, 144, 147, 171, 208, 232, 233, 256, 272, 277, 278, 279, 280, 285, 288, 298, 300, 302, 327, 330, 331, 334, 335], "about": [7, 138, 316, 324, 329, 331, 334, 336], "how": [7, 326, 327, 329, 331, 332, 334, 335, 336], "should": [7, 84, 141, 174, 175, 176, 184, 211, 212, 213, 221, 226, 227, 233, 258, 260, 263, 285, 324, 326, 327, 329, 334, 335, 336], "name": [7, 10, 101, 106, 111, 116, 121, 126, 131, 136, 141, 146, 164, 174, 176, 177, 183, 184, 185, 201, 211, 213, 214, 220, 221, 222, 236, 237, 242, 244, 246, 253, 254, 256, 334, 335, 336], "add": [7, 97, 99, 104, 109, 114, 119, 124, 129, 134, 232, 233, 242, 255, 326, 327, 334, 336], "tracer": [7, 141, 168, 205], "gizmo": [8, 237, 329, 332, 335], "func": [8, 18, 30, 42, 54, 66, 78, 90], "rams": [9, 10, 329, 331, 332], "output_filenam": [10, 183, 184, 185, 220, 221, 222, 244, 245], "ptype": [10, 99, 104, 109, 114, 119, 124, 129, 134, 233, 234, 236, 237, 238, 240, 242, 243, 318, 319, 330, 335], "ptype_num": 10, "in_cg": [10, 183, 184, 185, 220, 221, 222], "format": [10, 101, 106, 111, 116, 121, 126, 131, 136, 143, 174, 175, 211, 212, 246, 279, 280, 285, 331, 332, 334, 335], "hdf5": [10, 101, 106, 111, 116, 121, 126, 131, 136, 144, 164, 185, 201, 222, 236, 244, 246, 326, 334, 335], "write": [10, 101, 106, 111, 116, 121, 126, 131, 136, 146, 183, 184, 185, 220, 221, 222, 244, 246, 335], "an": [10, 14, 26, 38, 50, 62, 74, 86, 101, 106, 111, 116, 121, 126, 131, 136, 137, 138, 141, 142, 152, 154, 177, 183, 185, 189, 191, 214, 220, 222, 226, 227, 236, 242, 243, 244, 246, 259, 262, 272, 279, 280, 283, 284, 285, 288, 300, 324, 326, 327, 330, 331, 332, 334, 335, 336], "clusterparticl": [10, 99, 104, 109, 114, 119, 124, 129, 134, 165, 167, 202, 204, 323, 330], "instanc": [10, 11, 12, 14, 16, 17, 26, 28, 29, 38, 40, 41, 50, 52, 53, 62, 64, 65, 74, 76, 77, 86, 88, 89, 141, 149, 150, 156, 164, 172, 174, 176, 180, 181, 187, 193, 201, 209, 211, 213, 217, 218, 253, 260, 262, 263, 324, 327, 328, 334, 335, 336], "written": [10, 101, 106, 111, 116, 121, 126, 131, 136, 246, 330, 334, 335], "string": [10, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 146, 175, 176, 212, 213, 233, 236, 237, 240, 242, 243, 244, 246, 319, 336], "exist": [10, 84, 101, 106, 111, 116, 121, 126, 131, 136, 174, 183, 184, 185, 211, 220, 221, 222, 242, 244, 246, 255, 329, 330, 335], "same": [10, 101, 106, 111, 116, 121, 126, 131, 136, 146, 165, 166, 167, 168, 183, 184, 185, 202, 203, 204, 205, 220, 221, 222, 242, 244, 323, 324, 327, 331, 335], "todo": [10, 107, 112, 117, 122, 127, 132, 140, 144, 249, 301, 318], "return": [10, 14, 16, 17, 18, 22, 26, 28, 29, 30, 34, 38, 40, 41, 42, 46, 50, 52, 53, 54, 58, 62, 64, 65, 66, 70, 74, 76, 77, 78, 82, 86, 88, 89, 90, 94, 137, 138, 152, 160, 161, 165, 167, 172, 174, 175, 180, 184, 189, 197, 198, 202, 204, 209, 211, 212, 217, 221, 224, 225, 226, 227, 228, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 316, 320, 323, 327, 331, 335, 336], "type": [10, 14, 16, 17, 18, 24, 26, 28, 29, 30, 36, 38, 40, 41, 42, 48, 50, 52, 53, 54, 60, 62, 64, 65, 66, 72, 74, 76, 77, 78, 84, 86, 88, 89, 90, 99, 104, 109, 114, 119, 124, 129, 134, 137, 144, 152, 160, 161, 165, 167, 172, 175, 180, 184, 189, 197, 198, 202, 204, 209, 212, 217, 221, 225, 228, 229, 233, 234, 236, 237, 240, 242, 243, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 316, 319, 323, 326, 330, 331, 332, 334], "method": [11, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86, 97, 102, 107, 112, 117, 122, 127, 132, 140, 148, 149, 154, 164, 186, 191, 201, 224, 226, 230, 253, 305, 310, 318, 320, 324, 326, 327, 329, 330, 331, 334, 335], "non": [11, 12, 14, 16, 22, 23, 24, 26, 28, 34, 35, 36, 38, 40, 46, 47, 48, 50, 52, 58, 59, 60, 62, 64, 70, 71, 72, 74, 76, 82, 83, 84, 86, 88, 94, 95, 174, 211, 224, 326, 329, 331, 332], "physic": [11, 12, 14, 16, 22, 23, 24, 26, 28, 34, 35, 36, 38, 40, 46, 47, 48, 50, 52, 58, 59, 60, 62, 64, 70, 71, 72, 74, 76, 82, 83, 84, 86, 88, 94, 95, 148, 174, 211, 253, 326, 329, 331, 332, 336], "other": [11, 17, 29, 41, 53, 65, 77, 89, 96, 149, 176, 213, 326, 327, 331, 333, 336], "issu": [11, 154, 164, 174, 191, 201, 211, 327, 329, 331, 332, 334], "cgp": 11, "": [11, 12, 18, 30, 42, 54, 66, 78, 90, 175, 183, 212, 220, 233, 249, 268, 272, 299, 324, 327, 328, 329, 330, 331, 332, 334, 336], "model": [11, 12, 14, 16, 26, 28, 38, 40, 50, 52, 62, 64, 74, 76, 86, 88, 141, 145, 236, 269, 276, 291, 294, 318, 319, 326, 327, 329, 330, 331, 332, 335], "clustermodel": [11, 12, 14, 16, 26, 28, 38, 40, 50, 52, 62, 64, 74, 76, 86, 88, 141, 148, 186, 187, 197, 198, 201, 209, 213, 217, 319, 324], "modul": [11, 148, 229, 304, 317, 327, 329, 331, 332, 336], "diagram": [11, 12, 24, 36, 48, 60, 72, 84, 327], "nonphysicalregion": [11, 24, 29, 36, 41, 48, 53, 60, 65, 72, 77, 84, 89, 327], "type0npr": [11, 12, 36, 48, 60, 72, 84, 327], "type0anpr": [11, 12, 24, 48, 60, 72, 84, 327], "type0bnpr": [11, 12, 24, 36, 60, 72, 84, 327], "type0cnpr": [11, 12, 24, 36, 48, 72, 84, 327], "type1npr": [11, 12, 24, 36, 48, 60, 84, 327], "type1anpr": [11, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 327, 328], "correctionfailur": [11, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86, 327], "class": [11, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86, 96, 97, 102, 107, 112, 117, 122, 127, 132, 139, 140, 148, 149, 160, 186, 197, 229, 230, 252, 253, 304, 305, 317, 318, 324, 327, 333, 334, 336], "except": [11, 304], "rmin": [12, 13, 17, 24, 25, 29, 36, 37, 41, 48, 49, 53, 60, 61, 65, 72, 73, 77, 84, 85, 89, 161, 162, 163, 172, 198, 199, 200, 209, 262, 327], "rmax": [12, 13, 17, 24, 25, 29, 36, 37, 41, 48, 49, 53, 60, 61, 65, 72, 73, 77, 84, 85, 89, 161, 162, 163, 172, 198, 199, 200, 209, 262, 327], "npr_type": [12, 13], "obj": [12, 13, 24, 25, 36, 37, 48, 49, 60, 61, 72, 73, 84, 85, 327], "archetyp": [12, 334], "parent": 12, "sub": [12, 14, 26, 38, 50, 62, 74, 86, 165, 166, 167, 168, 202, 203, 204, 205, 323, 326, 327], "denot": 12, "relev": [12, 226, 227], "properti": [12, 24, 36, 48, 60, 72, 84, 100, 105, 110, 115, 120, 125, 130, 135, 149, 150, 156, 160, 164, 172, 181, 184, 186, 187, 193, 197, 201, 209, 218, 221, 241, 321, 322, 324, 327, 331, 335], "scope": [12, 24, 36, 48, 60, 72, 84, 327], "graviti": [12, 24, 36, 48, 60, 72, 84, 176, 184, 213, 221, 326, 327, 329, 332], "attribut": [12, 24, 36, 48, 60, 72, 84, 97, 102, 107, 112, 117, 122, 127, 132, 149, 160, 164, 176, 184, 186, 197, 201, 213, 221, 230, 253, 318, 326, 334], "classmethod": [14, 16, 26, 28, 38, 40, 50, 52, 62, 64, 74, 76, 86, 88, 143, 160, 161, 162, 163, 164, 172, 197, 198, 199, 200, 201, 209, 235, 236, 237, 238, 256, 259, 260, 327], "recurs": [14, 16, 26, 28, 38, 40, 50, 52, 62, 64, 74, 76, 86, 88, 327], "fiter": [14, 26, 38, 50, 62, 74, 86], "10": [14, 26, 38, 50, 62, 74, 86, 226, 227, 324, 335, 336], "kwarg": [14, 26, 38, 50, 62, 74, 86, 142, 154, 160, 161, 162, 163, 172, 174, 175, 191, 197, 198, 199, 200, 209, 211, 212, 262, 315, 327, 328], "identifi": [14, 26, 38, 50, 62, 74, 86, 224, 225, 246, 327], "provid": [14, 26, 38, 50, 62, 74, 86, 224, 262, 271, 324, 326, 327, 328, 331, 332, 334, 335, 336], "seek": [14, 16, 26, 28, 38, 40, 50, 52, 62, 64, 74, 76, 86, 88, 164, 201], "bool": [14, 16, 17, 26, 28, 29, 38, 40, 41, 50, 52, 53, 62, 64, 65, 74, 76, 77, 86, 88, 89, 97, 145, 183, 184, 185, 220, 221, 222], "iter": [14, 17, 26, 29, 38, 41, 50, 53, 62, 65, 74, 77, 86, 89, 227], "through": [14, 26, 38, 50, 62, 74, 86, 160, 197, 324, 326, 331], "npr": [14, 16, 17, 18, 24, 26, 28, 29, 30, 38, 40, 41, 42, 50, 52, 53, 54, 62, 64, 65, 66, 72, 74, 76, 77, 78, 86, 88, 89, 90], "correspond": [14, 26, 38, 50, 62, 74, 84, 86, 141, 174, 176, 211, 213, 226, 227, 258, 259, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 327, 328, 330, 334, 335], "int": [14, 26, 38, 50, 62, 74, 86, 138, 141, 142, 154, 161, 174, 191, 198, 211, 224, 226, 227, 258, 264, 335], "maxim": [14, 26, 38, 50, 62, 74, 86, 141, 164, 180, 201, 217, 315, 331, 334], "number": [14, 26, 38, 50, 62, 74, 86, 97, 141, 142, 145, 149, 154, 160, 161, 162, 163, 165, 166, 167, 168, 172, 173, 191, 197, 198, 199, 200, 202, 203, 204, 205, 209, 210, 224, 227, 242, 262, 323, 331, 332, 335], "time": [14, 26, 38, 50, 62, 74, 86, 165, 166, 167, 168, 202, 203, 204, 205, 272, 315, 323, 324, 329, 330, 331, 334], "attempt": [14, 26, 38, 50, 62, 74, 86, 327], "befor": [14, 26, 38, 50, 62, 74, 86, 183, 185, 220, 222, 326, 331], "process": [14, 26, 38, 50, 62, 74, 86, 144, 156, 181, 193, 218, 224, 315, 326, 327, 331, 336], "failur": [14, 26, 38, 50, 62, 74, 86, 327, 328, 332], "mai": [14, 26, 38, 50, 62, 74, 84, 86, 176, 213, 259, 286, 324, 327, 330, 331, 334, 335], "more": [14, 26, 38, 50, 62, 74, 86, 145, 233, 316, 324, 327, 330, 331, 332, 333, 334, 335, 336], "than": [14, 26, 38, 50, 62, 74, 86, 145, 226, 227, 255], "onli": [14, 26, 38, 50, 62, 74, 84, 86, 165, 166, 167, 168, 172, 184, 202, 203, 204, 205, 209, 221, 323, 326, 327, 332, 335, 336], "made": [14, 26, 38, 50, 62, 74, 86, 137, 327, 331], "ani": [14, 26, 38, 50, 62, 74, 84, 86, 141, 174, 175, 184, 211, 212, 221, 255, 327, 331, 332, 335, 336], "select": [14, 26, 38, 50, 62, 74, 86, 174, 211, 285, 324], "region": [14, 22, 23, 24, 26, 34, 35, 36, 38, 46, 47, 48, 50, 58, 59, 60, 62, 70, 71, 72, 74, 82, 83, 84, 86, 94, 95, 295], "addit": [14, 26, 38, 50, 62, 74, 86, 97, 149, 160, 172, 174, 176, 197, 209, 211, 213, 246, 327, 331, 334, 335, 336], "pass": [14, 17, 18, 26, 29, 30, 38, 41, 42, 50, 53, 54, 62, 65, 66, 74, 77, 78, 86, 89, 90, 149, 160, 172, 174, 176, 197, 209, 211, 213, 224, 315, 328, 331], "kei": [14, 17, 26, 29, 38, 41, 50, 53, 62, 65, 74, 77, 86, 89, 141, 149, 160, 174, 175, 176, 197, 211, 212, 213], "inform": [14, 26, 38, 50, 62, 74, 86, 143, 146, 246, 324, 332, 334, 335, 336], "correction_paramet": [14, 26, 38, 50, 62, 74, 86, 227, 328], "degre": [14, 26, 38, 50, 62, 74, 86, 227, 264, 265, 328], "impos": [14, 26, 38, 50, 62, 74, 86, 327], "dure": [14, 26, 38, 50, 62, 72, 74, 86, 227, 327], "interpol": [14, 26, 38, 50, 62, 74, 86, 99, 104, 109, 114, 119, 124, 129, 134, 226, 227, 259, 328, 330, 331], "procedur": [14, 26, 38, 50, 62, 74, 86, 184, 221, 324, 330, 334], "rais": [14, 26, 38, 50, 62, 74, 86, 327], "one": [14, 26, 38, 50, 62, 74, 86, 145, 165, 166, 167, 168, 174, 175, 202, 203, 204, 205, 211, 212, 233, 255, 262, 279, 280, 285, 286, 320, 323, 324, 326, 327, 330, 331, 333, 334, 335], "uncorrect": [14, 26, 38, 50, 62, 74, 86], "them": [16, 28, 40, 52, 64, 76, 88, 145, 324, 326, 327, 328, 334, 335, 336], "just": [16, 28, 40, 52, 64, 76, 88, 324, 336], "subtyp": [16, 28, 40, 52, 64, 76, 88], "propag": [16, 28, 40, 52, 64, 76, 88], "downward": [16, 28, 40, 52, 64, 76, 88], "tree": [16, 28, 40, 52, 64, 76, 88, 327], "pattern": [16, 28, 40, 52, 64, 76, 88], "A": [16, 28, 40, 52, 64, 76, 88, 162, 163, 165, 166, 167, 168, 172, 174, 175, 180, 199, 200, 202, 203, 204, 205, 209, 211, 212, 217, 226, 227, 233, 236, 262, 269, 273, 274, 275, 277, 278, 281, 282, 286, 289, 290, 292, 293, 294, 295, 296, 299, 323, 327, 328, 330, 335], "list": [16, 17, 28, 29, 40, 41, 52, 53, 64, 65, 76, 77, 88, 89, 141, 174, 176, 184, 211, 213, 221, 225, 233, 236, 237, 240, 243, 307, 326, 331, 332, 334], "indic": [16, 24, 28, 36, 40, 48, 52, 60, 64, 72, 76, 88, 224, 225, 233, 242, 327, 334], "regim": [16, 28, 40, 52, 64, 76, 88], "rtol": [17, 29, 41, 53, 65, 77, 89, 224, 226, 227], "0": [17, 24, 29, 41, 53, 65, 77, 84, 89, 97, 98, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133, 140, 141, 142, 147, 154, 179, 191, 216, 224, 226, 227, 232, 240, 255, 264, 270, 279, 280, 285, 299, 324, 326, 330, 334, 335], "01": [17, 29, 41, 53, 65, 77, 89], "compar": [17, 29, 41, 53, 65, 77, 89, 224], "two": [17, 29, 41, 53, 65, 77, 89, 145, 147, 326, 327, 331, 334, 335], "check": [17, 29, 41, 53, 65, 77, 84, 89, 174, 177, 211, 214, 242, 301, 324, 327, 331], "rel": [17, 29, 41, 53, 65, 77, 89, 145, 152, 154, 189, 191, 226, 227, 320, 327, 332, 334, 335], "separ": [17, 29, 41, 53, 65, 77, 89, 147], "within": [17, 29, 41, 53, 65, 77, 84, 89, 165, 166, 167, 168, 171, 202, 203, 204, 205, 208, 246, 287, 299, 323, 328, 335], "toler": [17, 29, 41, 53, 65, 77, 89, 224, 226, 227], "dict": [17, 29, 41, 53, 65, 77, 89, 141, 149, 160, 174, 175, 176, 197, 211, 212, 213], "equal": [17, 29, 41, 53, 65, 77, 89, 335], "valu": [17, 29, 41, 53, 65, 77, 84, 89, 137, 141, 158, 174, 176, 177, 195, 211, 213, 214, 224, 225, 226, 227, 232, 242, 259, 264, 265, 271, 279, 286, 300, 301, 302, 316, 324, 330, 334, 335, 336], "minimum": [17, 21, 29, 33, 41, 45, 53, 57, 65, 69, 77, 81, 89, 93, 142, 154, 161, 162, 163, 164, 172, 174, 175, 184, 185, 191, 198, 199, 200, 201, 209, 211, 212, 221, 222, 224, 227, 232, 262, 295, 335], "maximum": [17, 20, 29, 32, 41, 44, 53, 56, 65, 68, 77, 80, 89, 92, 161, 162, 163, 165, 166, 167, 168, 172, 174, 175, 184, 185, 198, 199, 200, 202, 203, 204, 205, 209, 211, 212, 221, 222, 224, 227, 240, 262, 315, 323, 335], "radii": [17, 29, 41, 53, 65, 77, 89, 149, 165, 166, 167, 168, 202, 203, 204, 205, 250, 251, 259, 310, 311, 323, 324, 327, 329, 331, 334, 335], "requir": [17, 29, 41, 53, 65, 77, 89, 165, 166, 167, 168, 202, 203, 204, 205, 263, 323, 326, 330, 331, 334, 335], "tupl": [17, 29, 41, 53, 65, 77, 89, 137, 142, 154, 175, 191, 212, 225], "assum": [17, 29, 41, 53, 65, 77, 84, 89, 137, 178, 179, 215, 216, 232, 233, 330, 331, 334, 335], "element": [17, 29, 41, 53, 65, 77, 89, 160, 173, 197, 210, 233, 312], "form": [17, 29, 41, 53, 65, 77, 89, 137, 175, 212, 258, 277, 278, 334], "describ": [17, 29, 41, 53, 65, 77, 89, 162, 163, 172, 176, 199, 200, 209, 213, 327, 334, 335], "abov": [17, 29, 41, 53, 65, 77, 89, 330, 331, 334, 335], "each": [17, 29, 41, 53, 65, 77, 89, 97, 141, 142, 165, 166, 167, 173, 174, 202, 203, 204, 210, 211, 224, 323, 324, 326, 327, 329, 330, 332, 334, 335, 336], "must": [17, 29, 41, 53, 65, 77, 89, 154, 160, 175, 191, 197, 212, 226, 227, 253, 327, 334, 335], "comparison": [17, 29, 41, 53, 65, 77, 89], "float": [17, 29, 41, 53, 65, 77, 89, 138, 141, 142, 147, 154, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 175, 178, 179, 180, 184, 185, 191, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 212, 215, 216, 217, 221, 222, 224, 226, 227, 232, 240, 243, 246, 255, 258, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 315, 316, 323, 336], "built": [18, 30, 42, 54, 66, 78, 90, 257, 324, 327, 332, 334], "print": [18, 30, 42, 54, 66, 78, 90, 324, 336], "output": [18, 30, 42, 54, 66, 78, 90, 101, 106, 111, 116, 121, 126, 131, 136, 141, 144, 184, 221, 305, 324, 331, 336], "callabl": [18, 30, 42, 54, 66, 78, 90, 161, 198, 224, 253, 259, 315, 316, 336], "displai": [18, 30, 42, 54, 66, 78, 90], "progenitor": [19, 31, 43, 55, 67, 79, 91], "referenc": [19, 31, 43, 55, 67, 79, 91], "radiu": [20, 21, 32, 33, 44, 45, 56, 57, 68, 69, 80, 81, 92, 93, 141, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 180, 184, 185, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 217, 221, 222, 228, 240, 255, 258, 262, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 302, 303, 316, 323, 324, 336], "defect": [20, 21, 32, 33, 44, 45, 56, 57, 68, 69, 80, 81, 92, 93], "detect": [20, 21, 32, 33, 44, 45, 56, 57, 68, 69, 80, 81, 92, 93, 327], "marker": [24, 72], "subclass": [24, 36, 48, 60, 72, 327], "character": 24, "inher": 24, "basic": [24, 297, 304, 324, 329, 331, 332, 334], "initi": [24, 72, 84, 96, 139, 141, 143, 144, 145, 146, 149, 150, 160, 164, 172, 187, 197, 201, 209, 229, 230, 246, 256, 324, 326, 327, 328, 329, 331, 332, 334, 335], "For": [24, 154, 191, 263, 324, 327, 331, 332, 334, 335, 336], "exampl": [24, 164, 201, 236, 237, 324, 327, 331, 332, 334, 335, 336], "user": [24, 139, 176, 184, 213, 221, 326, 327, 328, 331, 332, 335, 336], "try": [24, 324], "neg": [24, 36, 48, 327, 328], "temperatur": [24, 36, 84, 142, 155, 163, 192, 200, 228, 264, 265, 266, 267, 286, 295, 324, 327, 328, 331, 334], "associ": [36, 48, 60, 100, 105, 110, 115, 120, 125, 130, 135, 156, 157, 176, 181, 193, 194, 213, 218, 252], "entropi": [36, 161, 198, 268, 270, 286, 296, 324, 327, 331, 332, 334], "0a": 36, "t_g": [36, 72, 84, 327, 334], "rho_g": [36, 72, 84, 327, 334], "s_g": [36, 327], "densiti": [48, 84, 142, 144, 145, 155, 159, 160, 161, 162, 163, 166, 168, 172, 179, 192, 196, 197, 198, 199, 200, 203, 205, 209, 216, 228, 264, 265, 266, 269, 272, 273, 274, 277, 279, 280, 281, 283, 284, 285, 286, 287, 289, 292, 293, 294, 298, 303, 320, 324, 327, 331, 334, 335], "0b": 48, "caus": [60, 255, 258, 316, 327, 328, 334], "elsewher": 60, "specifi": [60, 138, 154, 159, 165, 166, 167, 168, 174, 176, 180, 184, 191, 196, 202, 203, 204, 205, 211, 213, 217, 221, 225, 246, 256, 323, 327, 331, 334, 335], "0c": 60, "1": [72, 97, 98, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133, 138, 165, 166, 167, 168, 174, 175, 202, 203, 204, 205, 211, 212, 224, 225, 226, 227, 255, 258, 296, 298, 323, 324, 326, 334, 335], "gravit": [72, 84, 165, 166, 167, 175, 176, 202, 203, 204, 212, 213, 232, 323, 324, 327, 328, 329, 331, 332, 334, 335], "theori": [72, 176, 213, 327, 329, 331, 332, 334], "independ": [72, 327, 334], "driven": 72, "breakdown": [72, 326], "deriv": [72, 224, 327, 330, 331, 334, 335], "behavior": [72, 174, 176, 211, 213, 258, 259, 329, 331, 332, 334, 336], "construct": [72, 161, 162, 163, 198, 199, 200, 319, 327, 328, 332, 334], "where": [84, 147, 184, 221, 224, 277, 278, 327, 334, 335], "growth": 84, "rate": [84, 258, 316], "ga": [84, 99, 104, 109, 114, 119, 124, 129, 134, 141, 144, 145, 161, 162, 163, 166, 168, 198, 199, 200, 203, 205, 228, 237, 264, 265, 324, 327, 330, 331, 334], "inconsist": [84, 327, 328], "posit": [84, 145, 147, 165, 166, 167, 168, 202, 203, 204, 205, 225, 227, 232, 233, 323, 324, 327, 328, 330, 331], "1a": [84, 327, 328], "when": [84, 142, 149, 176, 213, 262, 279, 280, 285, 327, 332, 334], "nabla": [84, 327, 328, 330, 334], "phi": [84, 327, 328, 334, 335], "determin": [84, 147, 152, 159, 171, 174, 189, 196, 208, 211, 227, 232, 327, 328, 334, 335], "frac": [84, 255, 258, 316, 324, 327, 334, 335], "k_bt": 84, "m_p": [84, 327, 334], "eta": [84, 179, 216, 327, 334], "left": [84, 142, 154, 175, 191, 212, 224, 255, 258, 316, 327, 334, 335], "partial_r": 84, "ln": [84, 327, 334], "right": [84, 224, 255, 258, 316, 324, 327, 334, 335], "becaus": [84, 326, 327, 328, 334], "spheric": [84, 312, 330, 331, 335], "symmetr": [84, 331, 335], "entir": [84, 141, 327, 334], "mass": [84, 142, 145, 162, 163, 171, 172, 199, 200, 208, 209, 232, 264, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 289, 290, 291, 293, 298, 300, 301, 303, 324, 327, 331, 334, 335], "shell": 84, "therefor": [84, 327, 334], "alwai": [84, 99, 104, 109, 114, 119, 124, 129, 134], "thu": [84, 327, 330, 335], "d": [84, 147, 255, 272, 326, 327, 334, 335], "dr": [84, 255, 327, 334], "t": [84, 264, 265, 268, 324, 326, 327, 334], "condit": [84, 139, 141, 143, 144, 145, 146, 149, 229, 230, 246, 324, 326, 327, 329, 330, 331, 332, 334, 335], "type1a": 84, "reli": [84, 326, 336], "doe": [84, 327, 335], "consid": [84, 329, 331, 334], "avail": [84, 149, 165, 166, 167, 168, 174, 202, 203, 204, 205, 211, 323, 324, 327, 329, 331, 332, 334], "even": [84, 324, 328, 335], "3d": [96, 99, 101, 104, 106, 109, 111, 114, 116, 119, 121, 124, 126, 129, 131, 134, 136, 142, 154, 191, 331, 335], "base": [96, 165, 166, 167, 168, 174, 202, 203, 204, 205, 211, 224, 226, 227, 323, 326, 331, 332, 334, 335], "task": [96, 331, 332, 333], "left_edg": [97, 98, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133, 142, 154, 191], "right_edg": [97, 98, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133], "ddim": [97, 98, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133], "pad": [97, 98, 102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133], "vector_potenti": [97, 98, 102, 103], "divergence_clean": [97, 98, 102, 103, 117, 118, 132, 133], "arrai": [97, 137, 141, 147, 149, 152, 154, 160, 173, 177, 189, 191, 197, 210, 214, 224, 225, 226, 227, 232, 233, 240, 242, 259, 298, 300, 301, 308, 320, 329, 331, 335, 336], "like": [97, 137, 144, 147, 226, 227, 232, 233, 240, 259, 324, 326, 327, 331, 332, 336], "lower": 97, "edg": [97, 142, 154, 191, 225], "box": [97, 142, 154, 191, 246, 335], "kpc": [97, 101, 106, 111, 116, 121, 126, 131, 136, 142, 147, 154, 162, 163, 165, 166, 167, 168, 172, 174, 175, 191, 199, 200, 202, 203, 204, 205, 209, 211, 212, 232, 233, 240, 243, 246, 255, 258, 259, 262, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 323, 324, 331, 335], "dimens": [97, 142, 154, 191, 331], "upper": 97, "grid": [97, 142, 154, 174, 191, 211, 326, 330, 331], "ax": [97, 101, 106, 111, 116, 121, 126, 131, 136, 174, 175, 211, 212, 262, 324, 335], "amount": [97, 335], "boundari": [97, 225], "vector": [97, 138, 334, 335], "diverg": [97, 330, 335], "remov": [97, 240, 330], "cluster_particl": [99, 104, 109, 114, 119, 124, 129, 134], "map": [99, 104, 109, 114, 119, 124, 129, 134, 335], "tri": [99, 104, 109, 114, 119, 124, 129, 134], "linear": [99, 104, 109, 114, 119, 124, 129, 134, 330], "ad": [99, 104, 109, 114, 119, 124, 129, 134, 142, 145, 233, 242, 255, 329, 332], "almost": [99, 104, 109, 114, 119, 124, 129, 134, 327], "case": [99, 104, 109, 114, 119, 124, 129, 134, 141, 144, 175, 184, 212, 221, 232, 327, 329, 332, 334, 335], "chang": [99, 104, 109, 114, 119, 124, 129, 134], "impli": [99, 104, 109, 114, 119, 124, 129, 134, 334], "remain": [99, 104, 109, 114, 119, 124, 129, 134], "galact": [99, 104, 109, 114, 119, 124, 129, 134], "filenam": [101, 106, 111, 116, 121, 126, 131, 136, 143, 146, 164, 184, 201, 221, 236, 237, 238, 260, 263], "length_unit": [101, 106, 111, 116, 121, 126, 131, 136], "field_unit": [101, 106, 111, 116, 121, 126, 131, 136], "coordin": [101, 106, 111, 116, 121, 126, 131, 136, 142, 154, 191, 233, 240], "cell": [101, 106, 111, 116, 121, 126, 131, 136, 142, 144, 154, 191, 326, 330], "along": [101, 106, 111, 116, 121, 126, 131, 136, 147, 276, 291], "differ": [101, 106, 111, 116, 121, 126, 131, 136, 174, 211, 224, 253, 320, 324, 332, 334, 335], "length": [101, 106, 111, 116, 121, 126, 131, 136, 174, 211, 264, 265, 303, 324, 331, 334], "affect": [101, 106, 111, 116, 121, 126, 131, 136], "str": [101, 106, 111, 116, 121, 126, 131, 136, 137, 141, 149, 160, 164, 174, 176, 183, 184, 185, 197, 201, 211, 213, 220, 221, 222, 260, 263], "l_min": [102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133], "l_max": [102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133], "alpha": [102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133, 255, 264, 265, 266, 268, 270, 286, 294, 296, 334], "3": [102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133, 138, 142, 154, 174, 179, 191, 211, 216, 224, 233, 247, 250, 266, 269, 283, 284, 292, 293, 294, 324, 326, 327, 331, 334, 335], "6666666666666665": [102, 103, 107, 108, 112, 113, 117, 118, 122, 123, 127, 128, 132, 133], "g_rm": [102, 103], "ctr1": [102, 103, 107, 108, 112, 113, 117, 118], "ctr2": [102, 103, 107, 108, 112, 113, 117, 118], "ctr3": [102, 103, 107, 108, 112, 113, 117, 118], "r1": [102, 103], "r2": [102, 103], "r3": [102, 103], "g1": [102, 103], "g2": [102, 103], "g3": [102, 103], "r_max": [102, 103, 107, 108, 112, 113, 117, 118, 140, 141, 164, 165, 166, 167, 168, 174, 175, 180, 184, 185, 201, 202, 203, 204, 205, 211, 212, 217, 221, 222, 240, 310, 323, 335], "manag": [102, 229, 305, 318, 324], "gaussian": [102, 178, 179, 215, 216], "random": [102, 145, 165, 166, 167, 168, 202, 203, 204, 205, 314, 323, 335, 336], "profile1": [107, 108, 112, 113, 117, 118], "profile2": [107, 108, 112, 113, 117, 118], "profile3": [107, 108, 112, 113, 117, 118], "docstr": [107, 112, 117, 122, 127, 132, 140, 249, 331], "b_rm": [122, 123, 127, 128], "v_rm": [132, 133], "default_unit": [137, 309], "pars": 137, "correct": [137, 227, 303, 329, 331, 332, 334], "convert": [137, 183, 185, 220, 222, 242, 298, 331, 332, 334], "unyt_arrai": [137, 141, 149, 154, 160, 161, 177, 191, 197, 198, 214, 228, 233, 242, 298, 319, 334], "simpli": [137, 224, 327, 335], "v_arrai": 137, "v_unit": 137, "convers": [137, 298], "final": [137, 324, 327, 331, 335, 336], "quantiti": [137, 141, 142, 309, 331, 334, 335], "axi": [138, 175, 212], "gx": 138, "gy": 138, "gz": 138, "ang": 138, "rotat": 138, "angl": 138, "around": [138, 224, 324, 336], "2": [138, 147, 178, 179, 215, 216, 224, 225, 226, 227, 248, 251, 268, 277, 278, 324, 326, 331, 334, 335], "x": [138, 147, 175, 212, 224, 225, 226, 227, 307, 309, 316, 326, 331, 332, 335, 336], "compon": [138, 160, 197, 324, 330, 332, 334, 335], "y": [138, 147, 224, 226, 227, 266, 326], "z": [138, 147, 279, 280, 285], "over": [138, 175, 212, 224, 226, 227, 311, 312, 320, 335], "face": 139, "structur": [139, 176, 213, 324, 330, 331, 334, 336], "interfac": [139, 331, 332], "simul": [139, 141, 246, 324, 329, 330, 331, 332, 333, 334, 335, 336], "softwar": [139, 324, 327, 331, 332, 335], "basenam": [140, 141], "num_halo": [140, 141], "center": [140, 141, 147, 227, 233, 240, 249, 335, 336], "veloc": [140, 141, 142, 144, 145, 154, 165, 167, 191, 202, 204, 232, 233, 249, 323, 324, 331, 333, 334], "num_particl": [140, 141, 165, 166, 167, 168, 202, 203, 204, 205, 310, 323, 324, 335], "mag_fil": [140, 141], "particle_fil": [140, 141], "20000": [140, 141, 335], "r_max_trac": [140, 141], "refer": [141, 154, 191, 264, 266, 268, 269, 272, 276, 277, 281, 289, 291, 292, 295, 324, 325, 334, 336], "halo": [141, 272, 279, 280, 285, 326, 331, 334, 335], "includ": [141, 155, 174, 183, 192, 211, 220, 326, 330, 332, 334], "system": [141, 165, 166, 167, 168, 202, 203, 204, 205, 240, 277, 323, 327, 331, 332, 334, 335], "part": [141, 144, 327, 330, 332, 335], "unyt": [141, 149, 160, 197, 298, 300, 301, 331, 335], "speci": [141, 172, 209], "dictionari": [141, 174, 175, 176, 184, 211, 212, 213, 221], "dm": [141, 237, 324, 331, 334, 335], "run": [141, 315, 324, 326, 329, 331, 333], "sph": [141, 145], "code": [141, 145, 246, 324, 326, 327, 330, 331, 332, 335, 336], "follow": [141, 224, 324, 326, 327, 331, 332, 334, 336], "path": [141, 184, 221], "contain": [141, 148, 152, 160, 175, 189, 197, 212, 224, 225, 230, 255, 332, 334, 335], "pre": [141, 174, 211, 255, 331, 332, 334], "data": [141, 237, 324, 334], "truncat": [141, 180, 217, 258, 292, 293, 316, 336], "domain": [141, 142, 154, 191, 224, 225, 226, 227, 243, 327, 328], "domain_dimens": [142, 154, 191], "box_siz": [142, 154, 191, 243, 246, 335], "memori": [142, 154, 191, 243, 331], "uniformli": [142, 154, 174, 191, 211], "dataset": [142, 154, 191, 243, 331, 332], "yt": [142, 154, 191, 243, 246, 279, 280, 285, 329, 331], "place": [142, 154, 174, 191, 211, 331, 332, 335, 336], "multipl": [142, 335], "per": 142, "volum": [142, 312], "pressur": [142, 155, 178, 192, 215, 324, 331, 334], "wherea": 142, "weight": [142, 145], "side": [142, 154, 191, 224, 243], "size": [142, 154, 177, 191, 214, 224, 242], "array_lik": [142, 154, 191, 224], "three": [142, 145, 154, 191, 326, 327, 330, 331, 335], "mean": [142, 154, 165, 166, 167, 168, 191, 202, 203, 204, 205, 233, 264, 298, 323, 324, 331, 334], "yaml": [143, 331], "passive_scalar": [144, 242, 250, 251, 335], "gadget": [144, 237, 246, 326, 329], "ha": [144, 177, 214, 242, 285, 286, 309, 324, 326, 327, 330, 334, 335], "some": [144, 179, 216, 287, 302, 324, 326, 327, 330, 331, 332, 333, 334], "relax": 144, "make": [144, 175, 177, 212, 214, 240, 242, 262, 324, 327, 328], "glass": 144, "meshrelax": 144, "thermal": [144, 145, 178, 215, 334], "energi": [144, 145, 166, 168, 203, 205, 331, 335], "onto": [144, 174, 211, 249, 330], "hydrostat": [144, 152, 162, 163, 166, 189, 199, 200, 203, 331, 335], "routin": 145, "either": [145, 237, 246, 319, 330, 335], "singl": [145, 233, 237, 249, 326, 327, 330, 331, 333, 334, 335], "combin": [145, 247, 248, 324, 335], "togeth": [145, 327, 335], "overlap": 145, "regener": 145, "b": [147, 178, 179, 215, 216, 273, 295, 296, 326, 328, 330, 336], "common": [147, 327, 334], "distanc": 147, "calcul": [147, 288, 320, 327, 331, 335], "central": [147, 179, 216, 224, 268], "first": [147, 326, 327, 329, 331, 334, 335], "direct": [147, 332, 335], "sep_x": 147, "sqrt": [147, 335], "between": [147, 262, 297, 299, 320, 331, 332, 334, 335], "impact": 147, "so": [147, 149, 183, 220, 246, 286, 324, 327, 330, 332, 334, 335, 336], "result": [147, 172, 209, 298, 324, 327, 330, 335], "center1": [147, 247, 248, 250, 251], "5": [147, 258, 277, 324, 335], "center2": [147, 247, 248, 250, 251], "core": [148, 255, 264, 265, 266, 267, 269, 273, 274, 275, 276, 294, 327, 331, 332, 334, 336], "relat": [148, 334], "repres": [148, 253, 264, 265, 324, 326, 327, 328, 336], "self": [148, 149, 151, 153, 160, 169, 170, 182, 184, 188, 190, 197, 206, 207, 219, 221, 327, 336], "consist": [148, 160, 197, 263, 327, 335, 336], "galaxi": [148, 266, 267, 268, 294, 295, 324, 329, 331, 332, 334], "dm_virial": [149, 150, 151, 186, 187, 188], "star_viri": [149, 150, 153, 186, 187, 190], "comprehens": [149, 332, 334, 336], "represent": 149, "can": [149, 154, 155, 178, 179, 184, 191, 192, 215, 216, 221, 227, 233, 246, 286, 319, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336], "accur": 149, "predic": 149, "fix": [149, 327, 328, 334], "sampl": [149, 161, 165, 166, 167, 168, 198, 202, 203, 204, 205, 310, 323], "These": [149, 174, 176, 211, 213, 327, 328, 331, 334, 335, 336], "found": [149, 164, 176, 201, 213, 227, 327, 328], "see": [149, 324, 326, 328, 329, 331, 332, 334, 335], "section": [149, 277, 278, 327, 328, 331, 334], "detail": [149, 324, 331, 332, 335, 336], "virialequilibrium": [149, 156, 181, 193, 218], "virial": [149, 156, 165, 167, 181, 193, 202, 204, 218, 268, 329, 331, 332, 334], "By": [149, 335], "necessari": [149, 324, 330, 332, 334, 336], "stellar": [149, 160, 161, 162, 163, 172, 181, 197, 198, 199, 200, 209, 218, 277, 319, 334, 335], "__getitem__": 149, "__contains__": 149, "alias": 149, "down": 149, "There": [149, 174, 211, 327, 328, 331, 334], "__setitem__": 149, "index": [149, 255, 264, 277, 278, 286, 332], "assign": [149, 324, 330, 335], "cannot": [149, 164, 201, 334], "done": [149, 324, 326, 330, 331, 334], "set_field": [149, 334, 335], "instead": [149, 224, 225, 255, 334, 336], "equival": [151, 153, 169, 170, 182, 186, 188, 190, 206, 207, 219, 316, 327, 334], "check_viri": [151, 153, 188, 190], "deviat": [152, 189, 334], "equilibrium": [152, 162, 163, 165, 166, 167, 183, 185, 189, 199, 200, 202, 203, 204, 220, 222, 319, 323, 331], "chk": [152, 189, 320], "numpi": [152, 189, 224, 225, 226, 227, 233, 320, 331, 335], "intens": [154, 191], "we": [154, 191, 324, 326, 327, 328, 329, 331, 332, 334, 335, 336], "suggest": [154, 191, 266, 267, 332], "conserv": [154, 191, 334], "your": [154, 191, 224, 327, 329, 330, 331, 332, 336], "choic": [154, 191, 324, 334], "begin": [154, 191, 331, 334], "order": [154, 191], "avoid": [154, 191], "oom": [154, 191], "500": [154, 191, 300, 301, 324, 335], "take": [154, 191, 224, 255, 316, 324, 327, 329, 330, 331, 334], "appox": [154, 191], "3gb": [154, 191], "r": [154, 158, 191, 195, 226, 227, 228, 255, 258, 259, 269, 286, 303, 310, 316, 324, 326, 327, 330, 334, 335], "frame": [154, 191, 329, 335], "1x3": [154, 191], "total_dens": [155, 162, 172, 192, 199, 209, 324], "gravitational_potenti": [155, 192, 324], "gravitational_field": [155, 192, 324], "total_mass": [155, 192, 324], "gas_mass": [155, 192, 324], "dark_matter_mass": [155, 192, 324], "dark_matter_dens": [155, 192, 324, 335], "stellar_dens": [155, 160, 161, 162, 163, 172, 192, 197, 198, 199, 200, 209], "stellar_mass": [155, 192], "access": [155, 192, 332, 336], "find": [158, 195, 224, 276, 279, 280, 291, 324, 327, 328, 329, 332, 334, 335, 336], "reach": [159, 196], "alon": [160, 197], "its": [160, 164, 197, 201, 255, 326, 328, 329, 330, 331, 336], "definit": [160, 197], "assess": [160, 197], "radial_profil": [160, 197, 324, 334, 336], "radialprofil": [160, 162, 163, 172, 197, 199, 200, 209, 252, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 324, 334, 336], "from_dens_and_tden": [160, 197, 324, 334], "from_dens_and_temp": [160, 197, 334], "from_dens_and_entr": [160, 197, 334], "from_h5_fil": [160, 197, 334], "num_point": [161, 162, 163, 172, 198, 199, 200, 209, 262], "1000": [161, 162, 163, 172, 198, 199, 200, 209, 262, 335], "comput": [161, 165, 166, 167, 198, 202, 203, 204, 228, 279, 280, 285, 300, 302, 320, 323, 324, 327, 328, 330, 334, 335], "point": [161, 162, 163, 172, 198, 199, 200, 209, 224, 262, 334], "total": [162, 172, 199, 209, 273, 274, 275, 276, 277, 278, 281, 282, 287, 289, 290, 291, 300, 301, 303, 324, 334, 335], "radial": [162, 163, 172, 178, 179, 199, 200, 209, 215, 216, 240, 249, 253, 259, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 320, 324, 331, 332, 333, 335], "desir": [162, 163, 172, 176, 199, 200, 209, 213, 335], "integ": [162, 163, 165, 166, 167, 168, 172, 199, 200, 202, 203, 204, 205, 209, 226, 227, 262, 266, 323], "evalu": [162, 163, 172, 199, 200, 209], "r_min": [164, 174, 175, 184, 185, 201, 211, 212, 221, 222], "both": [164, 201, 264, 265, 324, 327, 335], "later": [164, 201, 327, 330, 335], "lose": [164, 184, 201, 221], "warn": [164, 201, 335], "import": [164, 201, 236, 237, 324, 327, 334, 335, 336], "hse_model": [164, 201], "h5": [164, 201, 236, 237, 324, 330, 331, 335], "sub_sampl": [165, 166, 167, 168, 202, 203, 204, 205, 323], "compute_potenti": [165, 166, 167, 202, 203, 204, 323, 335], "suppli": [165, 166, 167, 168, 176, 202, 203, 204, 205, 213, 279, 280, 285, 319, 323, 331, 334, 335], "out": [165, 166, 167, 168, 202, 203, 204, 205, 227, 323, 324, 329, 331, 335, 336], "allow": [165, 166, 167, 168, 202, 203, 204, 205, 227, 323, 328, 331, 334, 335, 336], "uniqu": [165, 166, 167, 168, 202, 203, 204, 205, 323, 335], "repeat": [165, 166, 167, 168, 202, 203, 204, 205, 323], "fill": [165, 166, 167, 168, 202, 203, 204, 205, 227, 323], "randomst": [165, 166, 167, 168, 202, 203, 204, 205, 323], "pseudo": [165, 166, 167, 168, 202, 203, 204, 205, 264, 265, 323], "typic": [165, 166, 167, 168, 202, 203, 204, 205, 323, 333, 334], "you": [165, 166, 167, 168, 184, 202, 203, 204, 205, 221, 323, 324, 326, 327, 329, 331, 332, 335, 336], "reason": [165, 166, 167, 168, 202, 203, 204, 205, 323, 327, 334], "test": [165, 166, 167, 168, 202, 203, 204, 205, 323], "seed": [165, 166, 167, 168, 202, 203, 204, 205, 323], "compos": [172, 209, 327], "collisionless": [172, 209, 320, 335], "keyword": [172, 174, 209, 211, 315, 327], "fig": [174, 175, 211, 212, 262, 324, 335], "aspect_ratio": [174, 211, 324], "base_length": [174, 211, 324], "gs_kwarg": [174, 211], "plot": [174, 211, 324, 331, 335], "get": [174, 211, 327, 332, 333, 334, 335, 336], "impress": [174, 211], "otherwis": [174, 178, 179, 211, 215, 216, 331, 335], "figur": [174, 175, 211, 212, 262, 324], "fresh": [174, 211], "cover": [174, 211, 335], "those": [174, 184, 211, 221, 324, 331, 335], "drawn": [174, 211], "organ": [174, 211], "belong": [174, 211, 246], "subdivid": [174, 211], "facilit": [174, 211, 327, 332], "draw": [174, 211, 335], "aspect": [174, 211, 327, 331, 332], "ratio": [174, 178, 211, 215, 264], "individu": [174, 211, 331, 336], "subplot": [174, 211, 335], "rest": [174, 211, 324], "geometri": [174, 211], "matplotlib": [174, 175, 211, 212, 262, 324, 335], "gridspec": [174, 211], "argument": [174, 211, 232, 315, 327, 330], "directli": [174, 211, 327, 329, 331, 336], "pyplot": [174, 211, 324, 335], "sever": [174, 211, 327, 328, 335], "depend": [174, 211, 324, 330], "miss": [174, 211], "appli": [174, 211, 334], "across": [174, 211], "v": [175, 212, 324, 326, 330, 334, 335], "load": [175, 212, 236, 260, 334, 336], "unset": [175, 212], "label": [175, 212, 335], "scale": [175, 212, 264, 265, 266, 267, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 303, 316, 324, 331], "revis": [175, 212], "charact": [175, 212], "valid": [175, 212, 260], "input": [175, 212, 276, 287, 291, 320, 326, 327, 330, 331, 335], "set_yscal": [175, 212], "normal": [175, 212, 233, 335], "flip": [175, 212], "below": [176, 213, 224, 227, 326, 331, 334], "therein": [176, 213], "taken": [176, 213], "standard": [176, 213, 253, 298, 331, 336], "anoth": [176, 213, 253, 327, 334], "prefer": [176, 213, 263], "further": [176, 213, 335], "document": [176, 213, 327, 328, 331, 332, 334], "In": [176, 213, 224, 324, 326, 327, 329, 330, 331, 334, 335], "meth": [176, 213], "behind": [176, 213, 324], "scene": [176, 213, 324], "dictat": [176, 213], "certain": [176, 213, 240, 286, 329, 331, 335, 336], "backend": [176, 213, 223], "It": [176, 213, 324, 334, 335], "ill": [176, 213], "advis": [176, 213], "alter": [176, 213, 255, 335], "without": [176, 213, 327, 331], "thorough": [176, 213], "understand": [176, 213, 327], "what": [176, 213, 324, 326, 329, 331], "do": [176, 213, 324, 326, 327, 330, 331, 332, 335, 336], "sure": [177, 214, 242, 324], "appropri": [177, 214, 242, 259, 331, 336], "beta": [178, 215, 266, 269, 294, 334], "plasma": [178, 215, 334], "p_th": [178, 215], "p_b": [178, 179, 215, 216], "lorentz": [178, 179, 215, 216], "heavisid": [178, 179, 215, 216], "dimensionless": [178, 179, 215, 216, 264, 265, 324], "8": [178, 179, 215, 216, 324, 331, 335], "pi": [178, 179, 215, 216, 324, 335], "b0": [179, 216, 335], "6666666666666666": [179, 216], "proport": [179, 216, 334], "power": [179, 216, 255, 277, 278, 286, 316, 334], "usual": [179, 216, 331, 336], "strength": [179, 216], "gauss": [179, 216, 327], "ascii": [183, 220, 334], "text": [183, 220, 324, 331, 332], "astropi": [183, 220], "qtabl": [183, 220], "whether": [183, 185, 220, 222, 246, 327, 331], "fields_to_writ": [184, 221], "unformat": [184, 221], "fortran": [184, 221], "binari": [184, 221, 263, 326, 334, 336], "But": [184, 221], "why": [184, 221, 327], "would": [184, 221, 331, 336], "want": [184, 221, 324, 330, 331, 332, 334, 335, 336], "metadata": [184, 221], "attr": [184, 221], "As": [184, 221, 327, 328, 334], "manual": [184, 221, 334], "upon": [184, 221], "reopen": [184, 221], "too": [185, 222, 327], "numer": [223, 331, 334, 335], "algorithm": [223, 224, 327, 328, 332, 334], "001": [224, 226, 227], "dy": 224, "locat": 224, "hole": [224, 226, 227, 232, 328], "monoton": [224, 226, 227, 316, 327, 328], "defin": [224, 240, 252, 285, 324, 334, 335, 336], "identif": [224, 226, 227], "nearli": 224, "increas": [224, 327], "e": [224, 226, 227, 253, 255, 277, 280, 289, 292, 330, 331, 335], "fail": 224, "wrong": [224, 327], "wai": [224, 226, 324, 326, 327, 328, 329, 330, 331, 334, 335], "1e": 224, "scheme": [224, 226, 227, 328], "secant": 224, "slope": [224, 227, 268, 277, 278, 294, 295, 316, 328], "n": [224, 226, 227, 264, 266, 277, 278, 289, 326, 330, 331, 332], "h": [224, 326], "ndarrai": [224, 225, 226, 227, 334], "hx": 224, "respect": [224, 327, 334, 335, 336], "hy": 224, "everi": [224, 324, 327, 332], "hi": 224, "To": [224, 324, 327, 328, 331, 332, 334, 335], "cumul": 224, "fall": 224, "1d": [225, 330], "truth": 225, "obtain": [225, 331, 334], "consider": 225, "mark": 225, "buffer": [226, 227], "piecewis": [226, 227, 326], "cubic": [226, 227, 246, 335], "spline": [226, 328], "patch": [226, 326, 328], "continu": [226, 259, 316], "differenti": [226, 334, 335], "howev": [226, 263, 324, 327, 330, 331, 334], "2x": 226, "occur": [226, 227, 327, 332], "forc": [226, 227, 307, 328], "forward": 226, "larger": [226, 227], "enforc": [226, 227, 334], "newli": [226, 227], "solut": [226, 227], "methodologi": [226, 227, 327], "wa": [226, 227, 324, 327, 334, 335], "develop": [226, 227, 326, 332], "eliza": [226, 227], "diggin": [226, 227], "univers": [226, 227, 272, 326, 331], "utah": [226, 227], "work": [226, 227, 252, 266, 267, 324, 327, 328, 330, 331, 336], "frisch": [226, 227], "f": [226, 227, 255, 260, 263, 264, 272, 316, 324, 326, 335], "carlson": [226, 227], "1980sjna": [226, 227], "17": [226, 227], "238f": [226, 227], "steffen": [226, 227], "m": [226, 227, 266, 268, 272, 274, 275, 277, 278, 279, 289, 290, 292, 303, 310, 324, 326, 335], "1990a": [226, 227], "239": [226, 227], "443": [226, 227], "maxit": 227, "drop": [227, 234, 266, 267], "zero": [227, 258, 328, 330, 334, 335], "insist": 227, "carri": [227, 335, 336], "interv": 227, "potential_gradi": 228, "solv": [228, 330, 334, 335], "equat": [228, 288, 324, 334, 335], "gradient": [228, 327], "particle_typ": [230, 231], "bh_mass": 232, "po": [232, 335], "vel": [232, 335], "use_pot_min": [232, 335], "black": 232, "solar": 232, "ignor": [232, 334], "myr": [232, 233, 324, 331, 335], "r_ctr": [233, 335], "v_ctr": [233, 335], "offset": 233, "bulk": [233, 335], "circumst": 233, "dm_particl": [236, 335], "etc": [237, 331, 334, 335], "snapshot": [237, 335], "snapshot_060": 237, "cut": [240, 258], "outsid": 240, "perform": [240, 324, 326, 331, 333, 335], "export": [240, 243, 326], "updat": [242, 327, 331], "itself": 242, "shape": [242, 327, 335], "preserv": [242, 316, 330], "passiv": [242, 335], "scalar": [242, 331, 335], "width": [243, 246, 294, 295, 335], "ic_filenam": 246, "dtype": 246, "float32": 246, "datatyp": 246, "float64": 246, "frontend": 246, "particles1": [247, 248], "particles2": [247, 248], "particles3": 247, "hse1": [247, 248, 250, 251], "hse2": [247, 248, 250, 251], "hse3": [247, 250], "center3": [247, 250], "velocity1": [247, 248, 250, 251], "velocity2": [247, 248, 250, 251], "velocity3": [247, 250], "hse": [249, 327, 334], "complet": [249, 324, 327, 331, 332, 336], "tool": [252, 329, 331, 332], "analyt": [252, 329, 331, 335], "act": 253, "wrapper": [253, 324], "variabl": [253, 334, 336], "lambda": [253, 336], "r_core": 255, "low": 255, "insid": 255, "exponenti": 255, "implement": [255, 327, 330, 332, 334], "exp": [255, 258], "r_": [255, 258, 270, 272, 277, 278, 283, 284, 286, 292, 293, 294, 324], "cuspi": 255, "_": [255, 324, 335], "grow": 255, "faster": [255, 258], "term": [255, 334], "go": [255, 258, 324, 327, 328], "limit": [255, 315, 327, 335], "arg": [256, 315, 336], "constant_profil": [257, 332, 336], "power_law_profil": [257, 332], "beta_model_profil": [257, 332], "hernquist_density_profil": [257, 324, 332], "cored_hernquist_density_profil": [257, 332], "hernquist_mass_profil": [257, 332], "nfw_density_profil": [257, 332], "nfw_mass_profil": [257, 332], "tnfw_density_profil": [257, 332], "tnfw_mass_profil": [257, 332], "snfw_density_profil": [257, 332], "snfw_mass_profil": [257, 332], "cored_snfw_density_profil": [257, 332], "cored_snfw_mass_profil": [257, 332], "cored_snfw_total_mass": 257, "einasto_density_profil": [257, 332], "einasto_mass_profil": [257, 332], "am06_density_profil": [257, 267, 332], "vikhlinin_density_profil": [257, 332], "vikhlinin_temperature_profil": [257, 332], "am06_temperature_profil": [257, 266, 332], "baseline_entropy_profil": [257, 332], "broken_entropy_profil": [257, 332], "walker_entropy_profil": [257, 332], "r_cut": 258, "k": [258, 324, 326, 330], "beyond": [258, 259, 335], "domin": 258, "higher": [258, 316], "achiev": 258, "multipli": 258, "factor": [258, 327, 334], "2k": 258, "f_r": 259, "scipi": [259, 331], "univariatesplin": 259, "spectrum": 259, "lead": [259, 327, 328], "problemat": [259, 315], "intend": [259, 332], "serial": [260, 263, 331, 336], "version": [260, 328, 331], "save": [260, 324, 336], "disk": [260, 324, 335, 336], "open": 260, "rp": [260, 263], "quick": [262, 335], "logspac": 262, "send": 263, "extens": [263, 334], "t0": [264, 265], "4": [264, 324, 335], "mu": [264, 334], "6": [264, 298, 324, 334, 336], "omega_b": 264, "048": 264, "omega_dm": 264, "262": 264, "polytrop": [264, 265], "asdi08": [264, 265], "kev": [264, 265, 267, 268, 295, 324, 331], "cool": [264, 265, 266, 267, 295, 327], "a_c": [264, 265, 266, 267], "fraction": 264, "molecular": [264, 298, 334], "cosmic": 264, "baryon": [264, 334], "ascasibar": [264, 266, 332], "diego": 264, "2008mnra": 264, "383": 264, "369a": 264, "rho_0": [266, 294], "c": [266, 267, 295, 326, 328], "asma06": [266, 267], "best": [266, 267, 327, 328, 330, 331, 332], "concert": [266, 267], "msun": [266, 269, 272, 273, 274, 275, 276, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 299, 324, 335], "markevitch": [266, 332], "2006": [266, 295, 328, 332], "apj": [266, 281, 295, 299, 328], "650": 266, "102": 266, "t_0": [267, 295], "k_0": [268, 270], "k_200": 268, "r_200": [268, 272, 296], "baselin": 268, "vokb05": 268, "floor": 268, "cm": [268, 324, 331], "logarithm": [268, 277, 278, 294, 295], "voit": 268, "g": [268, 280, 330, 331, 334], "kai": 268, "bryan": 268, "l": [268, 281, 289], "2005": 268, "mnra": [268, 289], "364": 268, "909": 268, "rho_c": 269, "r_c": [269, 274, 275, 276, 294], "cafu76": 269, "cavalier": 269, "fusco": 269, "femiano": 269, "1976": 269, "49": 269, "137": 269, "k_scale": [270, 296], "broken": 270, "const": 271, "constant": [271, 335], "m_200": 272, "conc": [272, 285], "m200": [272, 280], "r200": [272, 280, 302], "concentr": [272, 285, 288], "nfw": [272, 274, 275, 276, 283, 284, 285, 288, 289, 290, 291, 292, 293, 332], "nafrw90": [272, 283, 284, 285, 292], "hernquist": [272, 273, 281, 282, 324, 332], "hern90": [272, 273, 281, 282], "overdens": [272, 279, 280, 285], "200": [272, 285, 324, 335], "critic": [272, 279, 280, 285], "navarro": 272, "julio": 272, "frenk": 272, "carlo": 272, "white": 272, "simon": 272, "1997apj": 272, "490": 272, "493n": 272, "m_0": [273, 281, 282], "super": [274, 275, 276, 289, 290, 291, 327], "liwys18": [274, 275, 276, 288, 289, 290, 291], "sai": [276, 291], "m200c": [276, 291], "r200c": [276, 288, 291], "law": [277, 278, 286, 316, 327, 334], "eina65": [277, 278], "here": [277, 278, 327, 331, 332, 334, 336], "rvgb12": [277, 278], "invers": [277, 278, 310], "einasto": [277, 332], "1965": 277, "kinemat": 277, "dynam": [277, 327, 332, 334, 335], "trudi": 277, "inst": 277, "astrofiz": 277, "alma": 277, "ata": 277, "87": 277, "retana": 277, "montenegro": 277, "et": [277, 295, 299, 328, 332], "al": [277, 295, 299, 328, 332], "2012a": 277, "540a": 277, "70r": 277, "delta": [279, 280, 285], "cosmo": [279, 280, 285], "enclos": 279, "redshift": [279, 280, 285], "cosmologi": [279, 280, 285], "m_r": 280, "1990": 281, "356": 281, "359": 281, "rho_": [283, 284, 292, 293, 324, 327, 334], "whatev": 286, "els": 286, "rescal": 287, "conc_nfw": 288, "snfw": 288, "come": [288, 326, 327], "31": 288, "lillei": 289, "j": 289, "wyn": 289, "evan": 289, "sander": 289, "2018": 289, "r_t": [292, 293, 295, 316], "tnfw": [292, 293], "bamao09": [292, 293], "baltz": 292, "marshal": 292, "p": [292, 326, 334, 335, 336], "oguri": 292, "2009": [292, 299], "jcap": 292, "015": 292, "epsilon": 294, "gamma": [294, 334], "modifi": [294, 326], "vikrf06": [294, 295, 328], "inner": [294, 295], "middl": 294, "outer": [294, 295], "control": 294, "transit": [294, 295, 316], "t_min": 295, "r_cool": 295, "a_cool": 295, "vikhlinin": [295, 299, 328, 332], "kravtsov": [295, 328], "forman": [295, 328], "w": [295, 328], "640": [295, 328], "691": [295, 328], "walker": 296, "relationship": [297, 299, 334], "variou": [297, 326, 331, 332, 334, 335], "ne": 298, "electron": 298, "unyt_quant": [298, 300, 301], "m500": [299, 300, 301], "hubbl": 299, "7": [299, 324], "mga": 299, "mtot": 299, "r500": 299, "692": 299, "1033": 299, "http": [299, 331], "ui": 299, "adsab": 299, "harvard": 299, "edu": 299, "ab": 299, "2009apj": 299, "1033v": 299, "100": [299, 335], "km": [299, 330], "mpc": 299, "bcg": [300, 302], "m_": [300, 301, 324, 331, 334, 335], "fact": 301, "satellit": 301, "py": [304, 336], "packag": [304, 332, 334], "logger": [305, 306], "context": [305, 334], "mute": 305, "log": 305, "arr": 308, "ensur": [308, 309], "rr": [311, 312, 313], "integr": [312, 313, 320, 324, 335], "infin": 313, "grab": 314, "state": 314, "max_execution_tim": 315, "assert": 315, "unbound": 315, "execut": [315, 332], "launch": 315, "daemon": 315, "under": [315, 336], "runtim": 315, "second": [315, 335], "becom": [316, 334], "df": [316, 318, 319], "dx": 316, "yield": [316, 334], "larg": [316, 327, 334, 335], "interpolatedunivariatesplin": 316, "quickli": 316, "dark_matt": [318, 319, 324], "rho": [320, 324, 334, 335], "introduct": 324, "ve": [324, 326, 327, 331, 334], "successfulli": [324, 334], "download": 324, "instal": [324, 332], "python": [324, 331, 332, 336], "congratul": 324, "now": [324, 327, 335], "guid": [324, 326, 332], "walk": 324, "finish": [324, 331], "show": [324, 326, 329, 331], "rope": 324, "onc": [324, 331, 334, 335, 336], "got": 324, "hang": 324, "page": [324, 326, 327, 329, 331, 334, 336], "mani": [324, 327, 331, 334], "explor": [324, 332], "featur": [324, 331], "let": [324, 334], "properli": 324, "termin": 324, "pip": [324, 331], "everyth": 324, "goe": [324, 327], "plan": 324, "messag": 324, "tell": [324, 327], "brief": 324, "project": [324, 331], "appear": 324, "id": 324, "abl": [324, 329], "lot": [324, 327], "off": [324, 330], "slow": [324, 334], "simpl": [324, 327, 332], "mathrm": [324, 327, 334, 335], "dyn": [324, 327, 334], "ahead": 324, "leg": 324, "produc": [324, 329, 331, 334, 336], "beauti": 324, "veri": [324, 331, 335], "15": 324, "odot": [324, 331, 335], "total_density_profil": 324, "2e15": 324, "That": 324, "pretti": 324, "wasn": 324, "someth": [324, 327, 331], "14": 324, "littl": [324, 331], "shorter": 324, "gas_density_profil": 324, "2e14": 324, "look": [324, 327, 329, 331, 332, 336], "far": [324, 327], "plt": [324, 335], "add_subplot": 324, "111": 324, "5000": [324, 335], "color": 324, "red": [324, 328], "blue": [324, 328], "excel": 324, "our": [324, 328, 331, 332, 335], "acquaint": 324, "most": [324, 327, 330, 331, 334, 336], "were": 324, "essenti": 324, "next": [324, 327, 335], "chosen": [324, 327, 334], "actual": [324, 328, 329, 331], "advantag": 324, "math": 324, "u": [324, 335], "galaxy_cluster_model": 324, "10000": [324, 335], "info": 324, "2023": 324, "27": 324, "09": 324, "50": [324, 335], "43": 324, "933": 324, "939": 324, "994": 324, "45": 324, "651": 324, "happen": [324, 327], "000": 324, "worth": [324, 334], "rememb": 324, "own": [324, 330, 336], "varieti": [324, 326, 327, 329, 331, 332, 334], "piec": 324, "item": 324, "gas_fract": 324, "electron_number_dens": 324, "discret": 324, "close": 324, "realli": 324, "good": [324, 335], "summari": 324, "panel_plot": 324, "cgparam": 324, "usetex": 324, "Not": [324, 334], "nice": 324, "isol": 324, "9": 324, "write_model_to_h5": [324, 334], "cluster_": [324, 335], "example_clust": 324, "1_000_000": [324, 335], "And": 324, "last": 324, "major": [324, 334], "setup_ramses_": 324, "53": 324, "412": 324, "1000000": [324, 335], "413": 324, "755": 324, "51": 324, "13": 324, "721": 324, "merger_config": 324, "txt": 324, "local": [324, 331], "directori": [324, 331, 332], "still": [324, 328], "readi": [324, 327, 333], "ll": [324, 329, 336], "instruct": [324, 331], "hallmark": 326, "abil": [326, 331], "eas": [326, 332], "On": [326, 329, 336], "support": [326, 331], "tip": 326, "hydrodynam": [326, 330, 331, 332], "frolri": 326, "chicago": 326, "purpos": [326, 327, 329, 331, 332], "adapt": 326, "mesh": 326, "refin": 326, "parabol": 326, "ppm": 326, "merger": [326, 330, 331, 333], "mode": 326, "rigidgrav": 326, "rigid": 326, "selfgrav": 326, "inclus": 326, "tangl": 326, "gpu": 326, "acceler": [326, 334], "sctsch": 326, "amr": [326, 330], "approach": [326, 327, 332, 334], "design": [326, 331, 332], "tripl": 326, "recommend": [326, 331, 332, 335], "makefil": 326, "simu_opt": 326, "dmodel": 326, "hydro": [326, 330, 334], "dgraviti": 326, "dparticl": 326, "dncomp_passive_us": 326, "merger_coll_numhalo": 326, "merger_coll_usemet": 326, "dmhd": 326, "deo": 326, "eos_gamma": 326, "dpar_natt_us": 326, "dgpu": 326, "dload_bal": 326, "hilbert": 326, "dopenmp": 326, "dsupport_hdf5": 326, "wesppa": 326, "smooth": 326, "max": 326, "planck": 326, "institut": 326, "astrophys": [326, 331, 332], "ideal": [326, 331, 334], "after": [326, 335], "proper": 326, "background": [326, 331], "add_background_grid": 326, "config": 326, "configur": [326, 333], "enabl": 326, "sh": 326, "soon": 326, "multipurpos": 326, "romain": 326, "teyssier": 326, "minim": 326, "invas": 326, "newtonian": [326, 329, 331, 332, 334], "particular": [326, 327, 332], "capabl": 326, "mondian": [326, 329, 331, 332], "due": [326, 330, 335], "regard": [326, 334], "interest": 326, "full": [326, 330], "fryxel": 326, "olson": 326, "ricker": 326, "timm": 326, "zingal": 326, "lamb": 326, "q": 326, "tufo": 326, "2000": 326, "thermonuclear": 326, "journal": 326, "supplement": 326, "seri": 326, "131": 326, "273": 326, "schive": 326, "tsai": 326, "chiueh": 326, "2010": 326, "graphic": 326, "186": 326, "457": 326, "weinberg": 326, "springel": 326, "pakmor": 326, "2020": 326, "public": 326, "releas": 326, "248": 326, "32": 326, "perfectli": 327, "manifestli": 327, "explicitli": 327, "flaw": 327, "ask": 327, "icm": [327, 331], "intrins": 327, "connect": 327, "sometim": [327, 331, 334], "won": 327, "viabl": [327, 328], "regularli": 327, "literatur": [327, 329, 331, 332], "fit": [327, 328, 329, 331, 332], "constraint": [327, 330, 334], "while": [327, 329, 331], "fine": 327, "observ": [327, 331, 332], "problem": [327, 334], "choos": [327, 331, 334, 335], "mond": [327, 334], "sim": [327, 334], "asymptot": [327, 334], "stabil": [327, 334], "clearli": [327, 334], "thing": 327, "often": [327, 331], "hard": 327, "predict": 327, "end": [327, 332], "previou": [327, 334], "could": 327, "gear": 327, "toward": [327, 328, 331], "possibl": [327, 332, 334], "easier": 327, "scienc": 327, "contend": 327, "descend": 327, "categori": 327, "start": [327, 332], "categor": 327, "aris": 327, "commonli": [327, 334], "temperament": 327, "match": [327, 334], "encourag": [327, 331], "k_b": [327, 334], "decreas": 327, "criterion": 327, "express": [327, 334, 335], "nabla_r": 327, "fast": 327, "Of": 327, "k_bt_g": 327, "n_e": [327, 334], "immedi": 327, "meet": [327, 332], "criteria": 327, "long": [327, 335], "upcom": 327, "establish": 327, "discuss": [327, 329, 331, 334], "repar": 327, "deem": 327, "obviou": 327, "wherev": 327, "reconstruct": 327, "excis": 327, "isn": 327, "fixabl": 327, "error": 327, "enough": 327, "warrant": 327, "reconsider": 327, "practic": [327, 331, 334], "visit": [327, 332], "depth": [327, 331], "explan": [327, 332, 336], "contributor": 327, "yourself": 327, "situat": 327, "novel": 327, "inherit": 327, "highest": 327, "level": [327, 332], "templat": [327, 336], "type__npr": 327, "insert": [327, 336], "descript": [327, 334], "grav": [327, 334], "_method": 327, "_messag": 327, "_scope": 327, "def": [327, 336], "__init__": 327, "_identifi": 327, "cl": 327, "TO": 327, "THE": 327, "_correct": 327, "new_model": 327, "convent": [328, 331], "never": 328, "fundament": 328, "clear": 328, "foundat": 328, "recal": [328, 334], "origin": [328, 335], "numalg": 328, "underli": [328, 332, 335], "strictli": 328, "gamma_c": 328, "dip": 328, "significantli": 328, "naiv": 328, "a133": [328, 329, 331], "steep": 328, "particularli": 328, "high": 328, "intract": 328, "pardon": [328, 331], "dust": [328, 331], "welcom": 329, "wide": [329, 332, 334], "script": 329, "tag": [329, 335], "knowledg": 329, "journei": [329, 331], "learn": [329, 331, 332, 334], "abel": [329, 331, 335], "133": [329, 331], "pipelin": [329, 331], "wonderland": [329, 331], "collect": [329, 331, 332], "pull": [329, 331], "ins": [329, 331], "pynbodi": 329, "pyxsim": [329, 331, 332], "sox": [329, 331, 332], "symmetri": [330, 335], "applic": [330, 331], "accord": 330, "complex": 330, "magneto": [330, 331], "turbul": 330, "dimension": [330, 331], "fashion": 330, "uniform": [330, 335], "Then": 330, "natur": 330, "question": 330, "bf": [330, 334, 335], "tild": 330, "v_x": 330, "v_1": 330, "u_1": 330, "iN": 330, "u_2": 330, "v_y": 330, "v_2": 330, "u_3": 330, "u_4": 330, "v_z": 330, "v_3": 330, "u_5": 330, "u_6": 330, "special": 330, "handl": 330, "cdot": [330, 334], "least": 330, "space": [330, 335], "subtract": 330, "parallel": 330, "hat": 330, "machin": 330, "precis": 330, "linearli": 330, "stage": 330, "free": 330, "small": 330, "mhd": 330, "clean": 330, "substanti": 330, "concern": 330, "constrain": [330, 334], "transport": 330, "evolv": 330, "transform": 330, "clusterfield": 330, "map_field_to_particl": 330, "vfield": 330, "write_to_h5": 330, "bfield": 330, "largest": 331, "gravitation": 331, "bound": 331, "current": [331, 334], "endpoint": 331, "cosmolog": 331, "hot": 331, "rai": [331, 332], "emit": 331, "known": [331, 334], "intraclust": 331, "medium": 331, "constitu": 331, "especi": 331, "focus": [331, 334], "approxim": 331, "roughli": 331, "well": 331, "semi": 331, "studi": [331, 332], "bodi": [331, 332], "commun": 331, "few": 331, "127760": 331, "pypi": 331, "quit": 331, "128225": 331, "128013": 331, "conda": 331, "128195": 331, "surprisingli": 331, "easi": [331, 332, 336], "navig": 331, "raw": 331, "git": 331, "command": 331, "www": 331, "github": [331, 332], "com": 331, "jzuhon": 331, "clone": 331, "compat": 331, "manipul": 331, "oper": 331, "curv": 331, "h5py": 331, "interact": [331, 334], "tqdm": 331, "progress": 331, "bar": 331, "ruamel": 331, "dill": 331, "spinner": 331, "panda": 331, "automat": [331, 334], "though": 331, "measur": 331, "photon": [331, 332], "analyz": 331, "spectra": 331, "instrument": [331, 332], "mock": [331, 332], "complement": 331, "familiar": 331, "feet": 331, "wet": 331, "somewhat": 331, "concret": 331, "help": 331, "mathemat": [331, 336], "overview": 331, "analysi": 331, "equilibria": 331, "handi": 331, "popular": 331, "throughout": [331, 334], "fulli": 331, "rm": [331, 335], "straighforwardli": 331, "unless": 331, "attach": 331, "intern": 331, "cross": 332, "platform": 332, "assumpt": [332, 334], "furthermor": [332, 334], "reduc": 332, "headach": 332, "gcp": 332, "goal": [332, 336], "promot": 332, "repositori": 332, "modularli": 332, "scientif": 332, "build": [332, 336], "scratch": 332, "doc": [332, 336], "encount": 332, "bug": 332, "submit": 332, "cored_hernquist_mass_profil": 332, "paper": 332, "capac": 332, "catalog": 332, "altern": [332, 335], "aqual": [332, 334], "qumond": [332, 334], "autom": 332, "labor": 332, "overhead": 332, "quickstart": 332, "offer": 332, "experi": 332, "copi": 332, "past": 332, "backbon": 332, "api": [332, 334], "deep": 332, "dive": 332, "contribut": [332, 336], "hint": 332, "might": [332, 334], "synthet": 332, "event": 332, "observatori": 332, "easili": [332, 334, 335], "much": [332, 335], "coupl": 332, "turn": 332, "count": 332, "realist": 332, "chandra": 332, "xmm": 332, "newton": 332, "nustar": 332, "beginn": 332, "intermedi": 332, "advanc": 332, "search": 332, "spatial": 333, "hold": 334, "protocol": 334, "fluid": 334, "momentum": [334, 335], "obei": 334, "euler": 334, "viscos": 334, "partial": 334, "give": [334, 336], "recogn": 334, "gasseou": 334, "remaind": 334, "infti": 334, "preced": 334, "window": 334, "poisson": 334, "flavor": 334, "a_0": 334, "implicit": 334, "nu": 334, "psi": [334, 335], "gm_": 334, "tabl": 334, "from_arrai": 334, "via": [334, 335], "incompress": 334, "bari": 334, "trivial": 334, "difficult": 334, "effici": 334, "invert": [334, 335], "int_": 334, "r_0": 334, "exactli": [334, 335], "accept": [334, 335], "formula": 334, "less": 334, "no_ga": 334, "syntact": 334, "vast": 334, "aim": 334, "success": 334, "check_hs": 334, "xi": 334, "approx": 334, "equilibr": 334, "plai": 334, "role": 334, "ioniz": 334, "set_magnetic_field_from_beta": 334, "p_": 334, "whichev": 334, "expon": 334, "set_magnetic_field_from_dens": 334, "awar": 334, "np": [334, 335], "num_el": 334, "worthwhil": 334, "summar": 334, "consult": 334, "write_model_to_ascii": 334, "write_model_to_binari": 334, "poor": 334, "tot": 335, "sinc": 335, "isotrop": 335, "tangenti": 335, "theta": 335, "particle_posit": 335, "particle_veloc": 335, "particle_mass": 335, "number_of_particl": 335, "latter": 335, "mention": 335, "thermal_energi": 335, "magnetic_field": 335, "hand": 335, "creation": 335, "n_ga": 335, "gas_particl": 335, "generate_gas_particl": 335, "phase": 335, "isotropi": 335, "dv": 335, "2dv": 335, "net": 335, "angular": 335, "cal": 335, "int_0": 335, "integrel": 335, "_0": 335, "pair": 335, "speed": 335, "reject": 335, "probabl": 335, "idea": 335, "check_dm_viri": 335, "check_star_viri": 335, "accuraci": 335, "diff": 335, "figsiz": 335, "loglog": 335, "vir": 335, "markers": 335, "lw": 335, "legend": 335, "set_xlabel": 335, "set_ylabel": 335, "One": 335, "difficulti": 335, "infinit": 335, "generate_dm_particl": 335, "generate_star_particl": 335, "wish": 335, "n_dm": 335, "n_star": 335, "star_particl": 335, "generate_": 335, "_particl": 335, "kind": 335, "all_particl": 335, "concaten": 335, "gas_part": 335, "gas_parts1": 335, "gas_parts2": 335, "drop_ptyp": 335, "translat": 335, "boost": 335, "add_offset": 335, "shift": 335, "movement": 335, "make_radial_cut": 335, "add_black_hol": 335, "simplest": 335, "mbh": 335, "0e9": 335, "300": 335, "rather": 335, "keep": 335, "track": 335, "num_particles1": 335, "num_particles2": 335, "200_000": 335, "halo1": 335, "ones": 335, "halo2": 335, "cluster1": 335, "cluster2": 335, "pick": 335, "overwritten": 335, "ug": 335, "microgauss": 335, "magnetic_field_x": 335, "metal": 335, "zsun": 335, "obvious": 335, "write_particl": 335, "my_particl": 335, "from_fil": 335, "new_part": 335, "gas_onli": 335, "dm_star": 335, "write_to_gadget_fil": 335, "from_gadget_fil": 335, "hood": 336, "wrap": 336, "custom": 336, "framework": 336, "call": 336, "click": 336, "top": 336, "expect": 336, "great": 336, "cutoff": 336, "add_cor": 336, "to_binari": 336, "again": 336, "from_binari": 336, "built_in": 336, "havi": 336, "priori": 336, "extrem": 336, "new_profil": 336, "prof": 336, "my": 336, "perman": 336, "request": 336, "your_function_her": 336, "citat": 336, "desc": 336}, "objects": {"": [[0, 0, 0, "-", "codes"], [11, 0, 0, "-", "correction"], [96, 0, 0, "-", "fields"], [139, 0, 0, "-", "ics"], [148, 0, 0, "-", "model"], [223, 0, 0, "-", "numalgs"], [229, 0, 0, "-", "particles"], [252, 0, 0, "-", "radial_profiles"], [297, 0, 0, "-", "relations"], [304, 0, 0, "-", "utils"], [317, 0, 0, "-", "virial"]], "codes": [[1, 1, 1, "", "resample_arepo_ics"], [2, 1, 1, "", "setup_arepo_ics"], [3, 1, 1, "", "setup_art_ics"], [4, 1, 1, "", "setup_athena_ics"], [5, 1, 1, "", "setup_enzo_ics"], [6, 1, 1, "", "setup_flash_ics"], [7, 1, 1, "", "setup_gamer_ics"], [8, 1, 1, "", "setup_gizmo_ics"], [9, 1, 1, "", "setup_ramses_ics"], [10, 1, 1, "", "write_amr_particles"]], "correction": [[12, 2, 1, "", "NonPhysicalRegion"], [24, 2, 1, "", "Type0NPR"], [36, 2, 1, "", "Type0aNPR"], [48, 2, 1, "", "Type0bNPR"], [60, 2, 1, "", "Type0cNPR"], [72, 2, 1, "", "Type1NPR"], [84, 2, 1, "", "Type1aNPR"]], "correction.NonPhysicalRegion": [[13, 3, 1, "", "__init__"], [14, 3, 1, "", "correct"], [15, 4, 1, "", "correctable"], [16, 3, 1, "", "identify"], [17, 3, 1, "", "is_close"], [18, 3, 1, "", "message"], [19, 4, 1, "", "obj"], [20, 4, 1, "", "rmax"], [21, 4, 1, "", "rmin"], [22, 3, 1, "", "size"], [23, 4, 1, "", "type"]], "correction.Type0NPR": [[25, 3, 1, "", "__init__"], [26, 3, 1, "", "correct"], [27, 4, 1, "", "correctable"], [28, 3, 1, "", "identify"], [29, 3, 1, "", "is_close"], [30, 3, 1, "", "message"], [31, 4, 1, "", "obj"], [32, 4, 1, "", "rmax"], [33, 4, 1, "", "rmin"], [34, 3, 1, "", "size"], [35, 4, 1, "", "type"]], "correction.Type0aNPR": [[37, 3, 1, "", "__init__"], [38, 3, 1, "", "correct"], [39, 4, 1, "", "correctable"], [40, 3, 1, "", "identify"], [41, 3, 1, "", "is_close"], [42, 3, 1, "", "message"], [43, 4, 1, "", "obj"], [44, 4, 1, "", "rmax"], [45, 4, 1, "", "rmin"], [46, 3, 1, "", "size"], [47, 4, 1, "", "type"]], "correction.Type0bNPR": [[49, 3, 1, "", "__init__"], [50, 3, 1, "", "correct"], [51, 4, 1, "", "correctable"], [52, 3, 1, "", "identify"], [53, 3, 1, "", "is_close"], [54, 3, 1, "", "message"], [55, 4, 1, "", "obj"], [56, 4, 1, "", "rmax"], [57, 4, 1, "", "rmin"], [58, 3, 1, "", "size"], [59, 4, 1, "", "type"]], "correction.Type0cNPR": [[61, 3, 1, "", "__init__"], [62, 3, 1, "", "correct"], [63, 4, 1, "", "correctable"], [64, 3, 1, "", "identify"], [65, 3, 1, "", "is_close"], [66, 3, 1, "", "message"], [67, 4, 1, "", "obj"], [68, 4, 1, "", "rmax"], [69, 4, 1, "", "rmin"], [70, 3, 1, "", "size"], [71, 4, 1, "", "type"]], "correction.Type1NPR": [[73, 3, 1, "", "__init__"], [74, 3, 1, "", "correct"], [75, 4, 1, "", "correctable"], [76, 3, 1, "", "identify"], [77, 3, 1, "", "is_close"], [78, 3, 1, "", "message"], [79, 4, 1, "", "obj"], [80, 4, 1, "", "rmax"], [81, 4, 1, "", "rmin"], [82, 3, 1, "", "size"], [83, 4, 1, "", "type"]], "correction.Type1aNPR": [[85, 3, 1, "", "__init__"], [86, 3, 1, "", "correct"], [87, 4, 1, "", "correctable"], [88, 3, 1, "", "identify"], [89, 3, 1, "", "is_close"], [90, 3, 1, "", "message"], [91, 4, 1, "", "obj"], [92, 4, 1, "", "rmax"], [93, 4, 1, "", "rmin"], [94, 3, 1, "", "size"], [95, 4, 1, "", "type"]], "fields": [[97, 2, 1, "", "ClusterField"], [102, 2, 1, "", "GaussianRandomField"], [107, 2, 1, "", "RadialRandomMagneticField"], [112, 2, 1, "", "RadialRandomMagneticVectorPotential"], [117, 2, 1, "", "RadialRandomVelocityField"], [122, 2, 1, "", "RandomMagneticField"], [127, 2, 1, "", "RandomMagneticVectorPotential"], [132, 2, 1, "", "RandomVelocityField"], [137, 1, 1, "", "parse_value"], [138, 1, 1, "", "rot_3d"]], "fields.ClusterField": [[98, 3, 1, "", "__init__"], [99, 3, 1, "", "map_field_to_particles"], [100, 5, 1, "", "units"], [101, 3, 1, "", "write_file"]], "fields.GaussianRandomField": [[103, 3, 1, "", "__init__"], [104, 3, 1, "", "map_field_to_particles"], [105, 5, 1, "", "units"], [106, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[108, 3, 1, "", "__init__"], [109, 3, 1, "", "map_field_to_particles"], [110, 5, 1, "", "units"], [111, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[113, 3, 1, "", "__init__"], [114, 3, 1, "", "map_field_to_particles"], [115, 5, 1, "", "units"], [116, 3, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[118, 3, 1, "", "__init__"], [119, 3, 1, "", "map_field_to_particles"], [120, 5, 1, "", "units"], [121, 3, 1, "", "write_file"]], "fields.RandomMagneticField": [[123, 3, 1, "", "__init__"], [124, 3, 1, "", "map_field_to_particles"], [125, 5, 1, "", "units"], [126, 3, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[128, 3, 1, "", "__init__"], [129, 3, 1, "", "map_field_to_particles"], [130, 5, 1, "", "units"], [131, 3, 1, "", "write_file"]], "fields.RandomVelocityField": [[133, 3, 1, "", "__init__"], [134, 3, 1, "", "map_field_to_particles"], [135, 5, 1, "", "units"], [136, 3, 1, "", "write_file"]], "ics": [[140, 2, 1, "", "ClusterICs"], [147, 1, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[141, 3, 1, "", "__init__"], [142, 3, 1, "", "create_dataset"], [143, 3, 1, "", "from_file"], [144, 3, 1, "", "resample_particle_ics"], [145, 3, 1, "", "setup_particle_ics"], [146, 3, 1, "", "to_file"]], "model": [[149, 2, 1, "", "ClusterModel"], [186, 2, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[150, 3, 1, "", "__init__"], [151, 3, 1, "", "check_dm_virial"], [152, 3, 1, "", "check_hse"], [153, 3, 1, "", "check_star_virial"], [154, 3, 1, "", "create_dataset"], [155, 4, 1, "", "default_fields"], [156, 5, 1, "", "dm_virial"], [157, 4, 1, "", "fields"], [158, 3, 1, "", "find_field_at_radius"], [159, 3, 1, "", "find_radius_for_density"], [160, 3, 1, "", "from_arrays"], [161, 3, 1, "", "from_dens_and_entr"], [162, 3, 1, "", "from_dens_and_tden"], [163, 3, 1, "", "from_dens_and_temp"], [164, 3, 1, "", "from_h5_file"], [165, 3, 1, "", "generate_dm_particles"], [166, 3, 1, "", "generate_gas_particles"], [167, 3, 1, "", "generate_star_particles"], [168, 3, 1, "", "generate_tracer_particles"], [169, 3, 1, "", "items"], [170, 3, 1, "", "keys"], [171, 3, 1, "", "mass_in_radius"], [172, 3, 1, "", "no_gas"], [173, 4, 1, "", "num_elements"], [174, 3, 1, "", "panel_plot"], [175, 3, 1, "", "plot"], [176, 5, 1, "", "properties"], [177, 3, 1, "", "set_field"], [178, 3, 1, "", "set_magnetic_field_from_beta"], [179, 3, 1, "", "set_magnetic_field_from_density"], [180, 3, 1, "", "set_rmax"], [181, 5, 1, "", "star_virial"], [182, 3, 1, "", "values"], [183, 3, 1, "", "write_model_to_ascii"], [184, 3, 1, "", "write_model_to_binary"], [185, 3, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[187, 3, 1, "", "__init__"], [188, 3, 1, "", "check_dm_virial"], [189, 3, 1, "", "check_hse"], [190, 3, 1, "", "check_star_virial"], [191, 3, 1, "", "create_dataset"], [192, 4, 1, "", "default_fields"], [193, 5, 1, "", "dm_virial"], [194, 4, 1, "", "fields"], [195, 3, 1, "", "find_field_at_radius"], [196, 3, 1, "", "find_radius_for_density"], [197, 3, 1, "", "from_arrays"], [198, 3, 1, "", "from_dens_and_entr"], [199, 3, 1, "", "from_dens_and_tden"], [200, 3, 1, "", "from_dens_and_temp"], [201, 3, 1, "", "from_h5_file"], [202, 3, 1, "", "generate_dm_particles"], [203, 3, 1, "", "generate_gas_particles"], [204, 3, 1, "", "generate_star_particles"], [205, 3, 1, "", "generate_tracer_particles"], [206, 3, 1, "", "items"], [207, 3, 1, "", "keys"], [208, 3, 1, "", "mass_in_radius"], [209, 3, 1, "", "no_gas"], [210, 4, 1, "", "num_elements"], [211, 3, 1, "", "panel_plot"], [212, 3, 1, "", "plot"], [213, 5, 1, "", "properties"], [214, 3, 1, "", "set_field"], [215, 3, 1, "", "set_magnetic_field_from_beta"], [216, 3, 1, "", "set_magnetic_field_from_density"], [217, 3, 1, "", "set_rmax"], [218, 5, 1, "", "star_virial"], [219, 3, 1, "", "values"], [220, 3, 1, "", "write_model_to_ascii"], [221, 3, 1, "", "write_model_to_binary"], [222, 3, 1, "", "write_model_to_h5"]], "numalgs": [[224, 1, 1, "", "find_holes"], [225, 1, 1, "", "identify_domain_borders"], [226, 1, 1, "", "monotone_interpolation"], [227, 1, 1, "", "positive_interpolation"], [228, 1, 1, "", "solve_temperature"]], "particles": [[230, 2, 1, "", "ClusterParticles"], [247, 1, 1, "", "combine_three_clusters"], [248, 1, 1, "", "combine_two_clusters"], [249, 1, 1, "", "resample_one_cluster"], [250, 1, 1, "", "resample_three_clusters"], [251, 1, 1, "", "resample_two_clusters"]], "particles.ClusterParticles": [[231, 3, 1, "", "__init__"], [232, 3, 1, "", "add_black_hole"], [233, 3, 1, "", "add_offsets"], [234, 3, 1, "", "drop_ptypes"], [235, 3, 1, "", "from_fields"], [236, 3, 1, "", "from_file"], [237, 3, 1, "", "from_gadget_file"], [238, 3, 1, "", "from_h5_file"], [239, 3, 1, "", "keys"], [240, 3, 1, "", "make_radial_cut"], [241, 5, 1, "", "num_passive_scalars"], [242, 3, 1, "", "set_field"], [243, 3, 1, "", "to_yt_dataset"], [244, 3, 1, "", "write_particles"], [245, 3, 1, "", "write_particles_to_h5"], [246, 3, 1, "", "write_to_gadget_file"]], "radial_profiles": [[253, 2, 1, "", "RadialProfile"], [264, 1, 1, "", "ad07_density_profile"], [265, 1, 1, "", "ad07_temperature_profile"], [266, 1, 1, "", "am06_density_profile"], [267, 1, 1, "", "am06_temperature_profile"], [268, 1, 1, "", "baseline_entropy_profile"], [269, 1, 1, "", "beta_model_profile"], [270, 1, 1, "", "broken_entropy_profile"], [271, 1, 1, "", "constant_profile"], [272, 1, 1, "", "convert_nfw_to_hernquist"], [273, 1, 1, "", "cored_hernquist_density_profile"], [274, 1, 1, "", "cored_snfw_density_profile"], [275, 1, 1, "", "cored_snfw_mass_profile"], [276, 1, 1, "", "cored_snfw_total_mass"], [277, 1, 1, "", "einasto_density_profile"], [278, 1, 1, "", "einasto_mass_profile"], [279, 1, 1, "", "find_overdensity_radius"], [280, 1, 1, "", "find_radius_mass"], [281, 1, 1, "", "hernquist_density_profile"], [282, 1, 1, "", "hernquist_mass_profile"], [283, 1, 1, "", "nfw_density_profile"], [284, 1, 1, "", "nfw_mass_profile"], [285, 1, 1, "", "nfw_scale_density"], [286, 1, 1, "", "power_law_profile"], [287, 1, 1, "", "rescale_profile_by_mass"], [288, 1, 1, "", "snfw_conc"], [289, 1, 1, "", "snfw_density_profile"], [290, 1, 1, "", "snfw_mass_profile"], [291, 1, 1, "", "snfw_total_mass"], [292, 1, 1, "", "tnfw_density_profile"], [293, 1, 1, "", "tnfw_mass_profile"], [294, 1, 1, "", "vikhlinin_density_profile"], [295, 1, 1, "", "vikhlinin_temperature_profile"], [296, 1, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[254, 3, 1, "", "__init__"], [255, 3, 1, "", "add_core"], [256, 3, 1, "", "built_in"], [257, 4, 1, "", "builtin"], [258, 3, 1, "", "cutoff"], [259, 3, 1, "", "from_array"], [260, 3, 1, "", "from_binary"], [261, 4, 1, "", "name"], [262, 3, 1, "", "plot"], [263, 3, 1, "", "to_binary"]], "relations": [[298, 1, 1, "", "convert_ne_to_density"], [299, 1, 1, "", "f_gas"], [300, 1, 1, "", "m_bcg"], [301, 1, 1, "", "m_sat"], [302, 1, 1, "", "r_bcg"], [303, 1, 1, "", "rho_scale_hern"]], "utils": [[305, 2, 1, "", "LogMute"], [307, 1, 1, "", "ensure_list"], [308, 1, 1, "", "ensure_ytarray"], [309, 1, 1, "", "ensure_ytquantity"], [310, 1, 1, "", "generate_particle_radii"], [311, 1, 1, "", "integrate"], [312, 1, 1, "", "integrate_mass"], [313, 1, 1, "", "integrate_toinf"], [314, 1, 1, "", "parse_prng"], [315, 1, 1, "", "time_limit"], [316, 1, 1, "", "truncate_spline"]], "utils.LogMute": [[306, 3, 1, "", "__init__"]], "virial": [[318, 2, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[319, 3, 1, "", "__init__"], [320, 3, 1, "", "check_virial"], [321, 5, 1, "", "ee"], [322, 5, 1, "", "ff"], [323, 3, 1, "", "generate_particles"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 329], "resample_arepo_": 1, "setup_arepo_": 2, "setup_art_": 3, "setup_athena_": 4, "setup_enzo_": 5, "setup_flash_": 6, "setup_gamer_": 7, "setup_gizmo_": 8, "setup_ramses_": 9, "write_amr_particl": 10, "correct": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 327, 328], "nonphysicalregion": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__init__": [13, 25, 37, 49, 61, 73, 85, 98, 103, 108, 113, 118, 123, 128, 133, 141, 150, 187, 231, 254, 306, 319], "identifi": [16, 28, 40, 52, 64, 76, 88], "is_clos": [17, 29, 41, 53, 65, 77, 89], "messag": [18, 30, 42, 54, 66, 78, 90], "obj": [19, 31, 43, 55, 67, 79, 91], "rmax": [20, 32, 44, 56, 68, 80, 92], "rmin": [21, 33, 45, 57, 69, 81, 93], "size": [22, 34, 46, 58, 70, 82, 94], "type": [23, 35, 47, 59, 71, 83, 95, 327, 328, 335], "type0npr": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "type0anpr": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "type0bnpr": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "type0cnpr": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "type1npr": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "type1anpr": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "field": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 157, 194, 330, 334, 335], "clusterfield": [97, 98, 99, 100, 101], "map_field_to_particl": [99, 104, 109, 114, 119, 124, 129, 134], "unit": [100, 105, 110, 115, 120, 125, 130, 135, 331], "write_fil": [101, 106, 111, 116, 121, 126, 131, 136], "gaussianrandomfield": [102, 103, 104, 105, 106], "radialrandommagneticfield": [107, 108, 109, 110, 111], "radialrandommagneticvectorpotenti": [112, 113, 114, 115, 116], "radialrandomvelocityfield": [117, 118, 119, 120, 121], "randommagneticfield": [122, 123, 124, 125, 126], "randommagneticvectorpotenti": [127, 128, 129, 130, 131], "randomvelocityfield": [132, 133, 134, 135, 136], "parse_valu": 137, "rot_3d": 138, "ic": [139, 140, 141, 142, 143, 144, 145, 146, 147], "cluster": [140, 141, 142, 143, 144, 145, 146, 324, 330, 332, 333, 334], "create_dataset": [142, 154, 191], "from_fil": [143, 236], "resample_particle_": 144, "setup_particle_": 145, "to_fil": 146, "compute_centers_for_binari": 147, "model": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 324, 334], "clustermodel": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 334, 335], "check_dm_viri": [151, 188], "check_hs": [152, 189], "check_star_viri": [153, 190], "default_field": [155, 192], "dm_virial": [156, 193], "find_field_at_radiu": [158, 195], "find_radius_for_dens": [159, 196], "from_arrai": [160, 197, 259], "develop": [160, 197, 329], "note": [160, 197], "from_dens_and_entr": [161, 198], "from_dens_and_tden": [162, 199], "from_dens_and_temp": [163, 200], "from_h5_fil": [164, 201, 238], "generate_dm_particl": [165, 202], "generate_gas_particl": [166, 203], "generate_star_particl": [167, 204], "generate_tracer_particl": [168, 205], "item": [169, 206], "kei": [170, 207, 239], "mass_in_radiu": [171, 208], "no_ga": [172, 209], "num_el": [173, 210], "panel_plot": [174, 211], "plot": [175, 212, 262], "properti": [176, 213], "set_field": [177, 214, 242], "set_magnetic_field_from_beta": [178, 215], "set_magnetic_field_from_dens": [179, 216], "set_rmax": [180, 217], "star_viri": [181, 218], "valu": [182, 219], "write_model_to_ascii": [183, 220], "write_model_to_binari": [184, 221], "write_model_to_h5": [185, 222], "hydrostaticequilibrium": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "numalg": [223, 224, 225, 226, 227, 228], "find_hol": 224, "identify_domain_bord": 225, "monotone_interpol": 226, "positive_interpol": 227, "solve_temperatur": 228, "particl": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 330, 335], "clusterparticl": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 335], "add_black_hol": 232, "add_offset": 233, "drop_ptyp": 234, "from_field": 235, "from_gadget_fil": 237, "make_radial_cut": 240, "num_passive_scalar": 241, "to_yt_dataset": 243, "write_particl": 244, "write_particles_to_h5": 245, "write_to_gadget_fil": 246, "combine_three_clust": 247, "combine_two_clust": 248, "resample_one_clust": 249, "resample_three_clust": 250, "resample_two_clust": 251, "radial_profil": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "radialprofil": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "add_cor": 255, "built_in": 256, "builtin": 257, "cutoff": 258, "from_binari": 260, "name": 261, "to_binari": 263, "ad07_density_profil": 264, "ad07_temperature_profil": 265, "am06_density_profil": 266, "am06_temperature_profil": 267, "baseline_entropy_profil": 268, "beta_model_profil": 269, "broken_entropy_profil": 270, "constant_profil": 271, "convert_nfw_to_hernquist": 272, "cored_hernquist_density_profil": 273, "cored_snfw_density_profil": 274, "cored_snfw_mass_profil": 275, "cored_snfw_total_mass": 276, "einasto_density_profil": 277, "einasto_mass_profil": 278, "find_overdensity_radiu": 279, "find_radius_mass": 280, "hernquist_density_profil": 281, "hernquist_mass_profil": 282, "nfw_density_profil": 283, "nfw_mass_profil": 284, "nfw_scale_dens": 285, "power_law_profil": 286, "rescale_profile_by_mass": 287, "snfw_conc": 288, "snfw_density_profil": 289, "snfw_mass_profil": 290, "snfw_total_mass": 291, "tnfw_density_profil": 292, "tnfw_mass_profil": 293, "vikhlinin_density_profil": 294, "vikhlinin_temperature_profil": 295, "walker_entropy_profil": 296, "relat": [297, 298, 299, 300, 301, 302, 303, 332], "convert_ne_to_dens": 298, "f_ga": 299, "m_bcg": 300, "m_sat": 301, "r_bcg": 302, "rho_scale_hern": 303, "util": [304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "logmut": [305, 306], "ensure_list": 307, "ensure_ytarrai": 308, "ensure_ytquant": 309, "generate_particle_radii": 310, "integr": 311, "integrate_mass": 312, "integrate_toinf": 313, "parse_prng": 314, "time_limit": 315, "truncate_splin": 316, "virial": [317, 318, 319, 320, 321, 322, 323, 335], "virialequilibrium": [318, 319, 320, 321, 322, 323], "check_viri": 320, "ee": 321, "ff": 322, "generate_particl": 323, "your": 324, "first": 324, "journei": 324, "With": 324, "cg": [324, 329], "content": [324, 327, 331, 334, 336], "introduc": 324, "get": [324, 331], "start": [324, 331], "packag": [324, 329, 331], "set": [324, 334], "up": 324, "build": 324, "The": [324, 332, 334, 335], "api": 325, "simul": 326, "softwar": 326, "flash": 326, "gamer": 326, "arepo": 326, "gizmo": 326, "enzo": 326, "rams": 326, "athena": 326, "refer": [326, 328, 332], "non": [327, 328, 334], "physic": [327, 328, 334], "behavior": 327, "region": [327, 328], "0": [327, 328], "1": [327, 328], "2": [327, 328], "ad": [327, 334, 335], "new": [327, 335], "npr": [327, 328], "method": 328, "For": 328, "exampl": 329, "us": [329, 334, 336], "guid": [329, 331], "go": 329, "from": [329, 333, 334, 335], "To": 329, "scienc": 329, "beyond": 329, "extern": 329, "gener": [330, 332, 333, 334, 335], "3d": 330, "mathemat": [330, 334, 335], "overview": [330, 334, 335], "initi": [330, 333], "magnet": [330, 334], "random": 330, "vector": 330, "potenti": 330, "radial": [330, 334, 336], "veloc": [330, 335], "map": 330, "write": [330, 334], "out": 330, "disk": [330, 334], "quickstart": 331, "introduct": 331, "instal": 331, "Not": 331, "yet": 331, "implement": 331, "depend": 331, "featur": 332, "resourc": 332, "project": 332, "page": 332, "indic": 332, "tabl": 332, "addit": 332, "condit": 333, "script": 333, "paramet": 333, "file": 333, "reader": 334, "suggest": 334, "intraclust": 334, "medium": 334, "icm": 334, "graviti": 334, "profil": [334, 336], "check": [334, 335], "hydrostat": 334, "equilibrium": [334, 335], "strength": 334, "other": 334, "read": 334, "object": [334, 335], "user": 334, "advic": 334, "ga": 335, "dark": 335, "matter": 335, "star": 335, "equilibria": 335, "class": 335, "oper": 335, "drop": 335, "add": 335, "posit": 335, "offset": 335, "make": 335, "cut": 335, "radiu": 335, "black": 335, "hole": 335, "chang": 335, "i": 335, "o": 335, "gadget": 335, "like": 335, "built": 336, "In": 336, "creat": 336}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"codes": [[0, "module-codes"]], "codes.resample_arepo_ics": [[1, "codes-resample-arepo-ics"]], "codes.setup_arepo_ics": [[2, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[3, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[4, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[5, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[6, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[7, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[8, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[9, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[10, "codes-write-amr-particles"]], "correction": [[11, "module-correction"]], "correction.NonPhysicalRegion": [[12, "correction-nonphysicalregion"]], "correction.NonPhysicalRegion.__init__": [[13, "correction-nonphysicalregion-init"]], "correction.NonPhysicalRegion.correct": [[14, "correction-nonphysicalregion-correct"]], "correction.NonPhysicalRegion.correctable": [[15, "correction-nonphysicalregion-correctable"]], "correction.NonPhysicalRegion.identify": [[16, "correction-nonphysicalregion-identify"]], "correction.NonPhysicalRegion.is_close": [[17, "correction-nonphysicalregion-is-close"]], "correction.NonPhysicalRegion.message": [[18, "correction-nonphysicalregion-message"]], "correction.NonPhysicalRegion.obj": [[19, "correction-nonphysicalregion-obj"]], "correction.NonPhysicalRegion.rmax": [[20, "correction-nonphysicalregion-rmax"]], "correction.NonPhysicalRegion.rmin": [[21, "correction-nonphysicalregion-rmin"]], "correction.NonPhysicalRegion.size": [[22, "correction-nonphysicalregion-size"]], "correction.NonPhysicalRegion.type": [[23, "correction-nonphysicalregion-type"]], "correction.Type0NPR": [[24, "correction-type0npr"]], "correction.Type0NPR.__init__": [[25, "correction-type0npr-init"]], "correction.Type0NPR.correct": [[26, "correction-type0npr-correct"]], "correction.Type0NPR.correctable": [[27, "correction-type0npr-correctable"]], "correction.Type0NPR.identify": [[28, "correction-type0npr-identify"]], "correction.Type0NPR.is_close": [[29, "correction-type0npr-is-close"]], "correction.Type0NPR.message": [[30, "correction-type0npr-message"]], "correction.Type0NPR.obj": [[31, "correction-type0npr-obj"]], "correction.Type0NPR.rmax": [[32, "correction-type0npr-rmax"]], "correction.Type0NPR.rmin": [[33, "correction-type0npr-rmin"]], "correction.Type0NPR.size": [[34, "correction-type0npr-size"]], "correction.Type0NPR.type": [[35, "correction-type0npr-type"]], "correction.Type0aNPR": [[36, "correction-type0anpr"]], "correction.Type0aNPR.__init__": [[37, "correction-type0anpr-init"]], "correction.Type0aNPR.correct": [[38, "correction-type0anpr-correct"]], "correction.Type0aNPR.correctable": [[39, "correction-type0anpr-correctable"]], "correction.Type0aNPR.identify": [[40, "correction-type0anpr-identify"]], "correction.Type0aNPR.is_close": [[41, "correction-type0anpr-is-close"]], "correction.Type0aNPR.message": [[42, "correction-type0anpr-message"]], "correction.Type0aNPR.obj": [[43, "correction-type0anpr-obj"]], "correction.Type0aNPR.rmax": [[44, "correction-type0anpr-rmax"]], "correction.Type0aNPR.rmin": [[45, "correction-type0anpr-rmin"]], "correction.Type0aNPR.size": [[46, "correction-type0anpr-size"]], "correction.Type0aNPR.type": [[47, "correction-type0anpr-type"]], "correction.Type0bNPR": [[48, "correction-type0bnpr"]], "correction.Type0bNPR.__init__": [[49, "correction-type0bnpr-init"]], "correction.Type0bNPR.correct": [[50, "correction-type0bnpr-correct"]], "correction.Type0bNPR.correctable": [[51, "correction-type0bnpr-correctable"]], "correction.Type0bNPR.identify": [[52, "correction-type0bnpr-identify"]], "correction.Type0bNPR.is_close": [[53, "correction-type0bnpr-is-close"]], "correction.Type0bNPR.message": [[54, "correction-type0bnpr-message"]], "correction.Type0bNPR.obj": [[55, "correction-type0bnpr-obj"]], "correction.Type0bNPR.rmax": [[56, "correction-type0bnpr-rmax"]], "correction.Type0bNPR.rmin": [[57, "correction-type0bnpr-rmin"]], "correction.Type0bNPR.size": [[58, "correction-type0bnpr-size"]], "correction.Type0bNPR.type": [[59, "correction-type0bnpr-type"]], "correction.Type0cNPR": [[60, "correction-type0cnpr"]], "correction.Type0cNPR.__init__": [[61, "correction-type0cnpr-init"]], "correction.Type0cNPR.correct": [[62, "correction-type0cnpr-correct"]], "correction.Type0cNPR.correctable": [[63, "correction-type0cnpr-correctable"]], "correction.Type0cNPR.identify": [[64, "correction-type0cnpr-identify"]], "correction.Type0cNPR.is_close": [[65, "correction-type0cnpr-is-close"]], "correction.Type0cNPR.message": [[66, "correction-type0cnpr-message"]], "correction.Type0cNPR.obj": [[67, "correction-type0cnpr-obj"]], "correction.Type0cNPR.rmax": [[68, "correction-type0cnpr-rmax"]], "correction.Type0cNPR.rmin": [[69, "correction-type0cnpr-rmin"]], "correction.Type0cNPR.size": [[70, "correction-type0cnpr-size"]], "correction.Type0cNPR.type": [[71, "correction-type0cnpr-type"]], "correction.Type1NPR": [[72, "correction-type1npr"]], "correction.Type1NPR.__init__": [[73, "correction-type1npr-init"]], "correction.Type1NPR.correct": [[74, "correction-type1npr-correct"]], "correction.Type1NPR.correctable": [[75, "correction-type1npr-correctable"]], "correction.Type1NPR.identify": [[76, "correction-type1npr-identify"]], "correction.Type1NPR.is_close": [[77, "correction-type1npr-is-close"]], "correction.Type1NPR.message": [[78, "correction-type1npr-message"]], "correction.Type1NPR.obj": [[79, "correction-type1npr-obj"]], "correction.Type1NPR.rmax": [[80, "correction-type1npr-rmax"]], "correction.Type1NPR.rmin": [[81, "correction-type1npr-rmin"]], "correction.Type1NPR.size": [[82, "correction-type1npr-size"]], "correction.Type1NPR.type": [[83, "correction-type1npr-type"]], "correction.Type1aNPR": [[84, "correction-type1anpr"]], "correction.Type1aNPR.__init__": [[85, "correction-type1anpr-init"]], "correction.Type1aNPR.correct": [[86, "correction-type1anpr-correct"]], "correction.Type1aNPR.correctable": [[87, "correction-type1anpr-correctable"]], "correction.Type1aNPR.identify": [[88, "correction-type1anpr-identify"]], "correction.Type1aNPR.is_close": [[89, "correction-type1anpr-is-close"]], "correction.Type1aNPR.message": [[90, "correction-type1anpr-message"]], "correction.Type1aNPR.obj": [[91, "correction-type1anpr-obj"]], "correction.Type1aNPR.rmax": [[92, "correction-type1anpr-rmax"]], "correction.Type1aNPR.rmin": [[93, "correction-type1anpr-rmin"]], "correction.Type1aNPR.size": [[94, "correction-type1anpr-size"]], "correction.Type1aNPR.type": [[95, "correction-type1anpr-type"]], "fields": [[96, "module-fields"]], "fields.ClusterField": [[97, "fields-clusterfield"]], "fields.ClusterField.__init__": [[98, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[99, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[100, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[101, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[102, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[103, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[104, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[105, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[106, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[107, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[108, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[109, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[110, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[111, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[112, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[113, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[114, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[115, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[116, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[117, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[118, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[119, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[120, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[121, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[122, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[123, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[124, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[125, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[126, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[127, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[128, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[129, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[130, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[131, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[132, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[133, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[134, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[135, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[136, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[137, "fields-parse-value"]], "fields.rot_3d": [[138, "fields-rot-3d"]], "ics": [[139, "module-ics"]], "ics.ClusterICs": [[140, "ics-clusterics"]], "ics.ClusterICs.__init__": [[141, "ics-clusterics-init"]], "ics.ClusterICs.create_dataset": [[142, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[143, "ics-clusterics-from-file"]], "ics.ClusterICs.resample_particle_ics": [[144, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[145, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[146, "ics-clusterics-to-file"]], "ics.compute_centers_for_binary": [[147, "ics-compute-centers-for-binary"]], "model": [[148, "module-model"]], "model.ClusterModel": [[149, "model-clustermodel"]], "model.ClusterModel.__init__": [[150, "model-clustermodel-init"]], "model.ClusterModel.check_dm_virial": [[151, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[152, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[153, "model-clustermodel-check-star-virial"]], "model.ClusterModel.create_dataset": [[154, "model-clustermodel-create-dataset"]], "model.ClusterModel.default_fields": [[155, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[156, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[157, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[158, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.find_radius_for_density": [[159, "model-clustermodel-find-radius-for-density"]], "model.ClusterModel.from_arrays": [[160, "model-clustermodel-from-arrays"]], "development note": [[160, null], [197, null]], "model.ClusterModel.from_dens_and_entr": [[161, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[162, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[163, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[164, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[165, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[166, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[167, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[168, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.items": [[169, "model-clustermodel-items"]], "model.ClusterModel.keys": [[170, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[171, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[172, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[173, "model-clustermodel-num-elements"]], "model.ClusterModel.panel_plot": [[174, "model-clustermodel-panel-plot"]], "model.ClusterModel.plot": [[175, "model-clustermodel-plot"]], "model.ClusterModel.properties": [[176, "model-clustermodel-properties"]], "model.ClusterModel.set_field": [[177, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[178, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[179, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[180, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[181, "model-clustermodel-star-virial"]], "model.ClusterModel.values": [[182, "model-clustermodel-values"]], "model.ClusterModel.write_model_to_ascii": [[183, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[184, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[185, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[186, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[187, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.check_dm_virial": [[188, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[189, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[190, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.create_dataset": [[191, "model-hydrostaticequilibrium-create-dataset"]], "model.HydrostaticEquilibrium.default_fields": [[192, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[193, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[194, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[195, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.find_radius_for_density": [[196, "model-hydrostaticequilibrium-find-radius-for-density"]], "model.HydrostaticEquilibrium.from_arrays": [[197, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[198, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[199, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[200, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[201, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[202, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[203, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[204, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[205, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.items": [[206, "model-hydrostaticequilibrium-items"]], "model.HydrostaticEquilibrium.keys": [[207, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[208, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[209, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[210, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.panel_plot": [[211, "model-hydrostaticequilibrium-panel-plot"]], "model.HydrostaticEquilibrium.plot": [[212, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.properties": [[213, "model-hydrostaticequilibrium-properties"]], "model.HydrostaticEquilibrium.set_field": [[214, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[215, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[216, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[217, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[218, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.values": [[219, "model-hydrostaticequilibrium-values"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[220, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[221, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[222, "model-hydrostaticequilibrium-write-model-to-h5"]], "numalgs": [[223, "module-numalgs"]], "numalgs.find_holes": [[224, "numalgs-find-holes"]], "numalgs.identify_domain_borders": [[225, "numalgs-identify-domain-borders"]], "numalgs.monotone_interpolation": [[226, "numalgs-monotone-interpolation"]], "numalgs.positive_interpolation": [[227, "numalgs-positive-interpolation"]], "numalgs.solve_temperature": [[228, "numalgs-solve-temperature"]], "particles": [[229, "module-particles"]], "particles.ClusterParticles": [[230, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[231, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[232, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[233, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[234, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.from_fields": [[235, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[236, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[237, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[238, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[239, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[240, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[241, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.set_field": [[242, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[243, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[244, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[245, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[246, "particles-clusterparticles-write-to-gadget-file"]], "particles.combine_three_clusters": [[247, "particles-combine-three-clusters"]], "particles.combine_two_clusters": [[248, "particles-combine-two-clusters"]], "particles.resample_one_cluster": [[249, "particles-resample-one-cluster"]], "particles.resample_three_clusters": [[250, "particles-resample-three-clusters"]], "particles.resample_two_clusters": [[251, "particles-resample-two-clusters"]], "radial_profiles": [[252, "module-radial_profiles"]], "radial_profiles.RadialProfile": [[253, "radial-profiles-radialprofile"]], "radial_profiles.RadialProfile.__init__": [[254, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[255, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[256, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[257, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[258, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[259, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[260, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.name": [[261, "radial-profiles-radialprofile-name"]], "radial_profiles.RadialProfile.plot": [[262, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[263, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[264, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[265, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[266, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[267, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[268, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[269, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[270, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[271, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[272, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[273, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[274, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[275, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[276, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[277, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[278, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[279, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[280, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[281, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[282, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[283, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[284, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[285, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[286, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[287, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[288, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[289, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[290, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[291, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[292, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[293, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[294, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[295, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[296, "radial-profiles-walker-entropy-profile"]], "relations": [[297, "module-relations"]], "relations.convert_ne_to_density": [[298, "relations-convert-ne-to-density"]], "relations.f_gas": [[299, "relations-f-gas"]], "relations.m_bcg": [[300, "relations-m-bcg"]], "relations.m_sat": [[301, "relations-m-sat"]], "relations.r_bcg": [[302, "relations-r-bcg"]], "relations.rho_scale_hern": [[303, "relations-rho-scale-hern"]], "utils": [[304, "module-utils"]], "utils.LogMute": [[305, "utils-logmute"]], "utils.LogMute.__init__": [[306, "utils-logmute-init"]], "utils.ensure_list": [[307, "utils-ensure-list"]], "utils.ensure_ytarray": [[308, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[309, "utils-ensure-ytquantity"]], "utils.generate_particle_radii": [[310, "utils-generate-particle-radii"]], "utils.integrate": [[311, "utils-integrate"]], "utils.integrate_mass": [[312, "utils-integrate-mass"]], "utils.integrate_toinf": [[313, "utils-integrate-toinf"]], "utils.parse_prng": [[314, "utils-parse-prng"]], "utils.time_limit": [[315, "utils-time-limit"]], "utils.truncate_spline": [[316, "utils-truncate-spline"]], "virial": [[317, "module-virial"]], "virial.VirialEquilibrium": [[318, "virial-virialequilibrium"]], "virial.VirialEquilibrium.__init__": [[319, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[320, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.ee": [[321, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[322, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[323, "virial-virialequilibrium-generate-particles"]], "Your First Journey With CG": [[324, "Your-First-Journey-With-CG"]], "Contents": [[324, "Contents"], [327, "contents"], [331, "contents"], [334, "contents"], [336, "contents"]], "Introducing CG": [[324, "Introducing-CG"]], "Getting Started With the Package": [[324, "Getting-Started-With-the-Package"]], "Setting Up Your First Cluster": [[324, "Setting-Up-Your-First-Cluster"]], "Building The Model": [[324, "Building-The-Model"]], "API": [[325, "api"]], "Simulation Software": [[326, "simulation-software"]], "FLASH": [[326, "flash"]], "GAMER": [[326, "gamer"]], "Arepo": [[326, "arepo"]], "GIZMO": [[326, "gizmo"]], "Enzo": [[326, "enzo"]], "RAMSES": [[326, "ramses"]], "Athena++": [[326, "athena"]], "References": [[326, "references"], [328, "references"]], "Correcting Non-Physical Behavior": [[327, "correcting-non-physical-behavior"], [327, "id1"]], "Non-Physical Regions": [[327, "non-physical-regions"]], "Type 0 Non-Physicalities": [[327, "type-0-non-physicalities"]], "Type 1 Non-Physicalities": [[327, "type-1-non-physicalities"], [327, null]], "Type 2 Non-Physicalities": [[327, "type-2-non-physicalities"]], "Adding a New NPR": [[327, "adding-a-new-npr"]], "Methods For Correcting Non-Physical Regions": [[328, "methods-for-correcting-non-physical-regions"]], "Type 0 NPRs": [[328, "type-0-nprs"]], "Type 1 NPRs": [[328, "type-1-nprs"]], "Type 2 NPRs": [[328, "type-2-nprs"]], "Examples": [[329, "examples"]], "Using CG": [[329, "using-cg"]], "Code Guides - Going From Code To Science": [[329, "code-guides-going-from-code-to-science"]], "Beyond CG - External Packages": [[329, "beyond-cg-external-packages"]], "Developing in CG": [[329, "developing-in-cg"]], "Generating 3D Cluster Fields": [[330, "generating-3d-cluster-fields"]], "Mathematical Overview": [[330, "mathematical-overview"]], "Initializing a Magnetic Field": [[330, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[330, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[330, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[330, "initializing-a-velocity-field"]], "Random Velocity Fields": [[330, "random-velocity-fields"]], "Radial Random Velocity Fields": [[330, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[330, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[330, "writing-a-field-out-to-disk"]], "Quickstart Guide": [[331, "quickstart-guide"]], "Introduction": [[331, "introduction"]], "Installing the Package": [[331, "installing-the-package"]], "Not Yet Implemented": [[331, null], [331, null], [331, null]], "Dependencies": [[331, "dependencies"]], "Getting Started": [[331, "id1"]], "Quickstart Guides": [[331, "quickstart-guides"]], "Units": [[331, "units"]], "The Cluster Generator": [[332, "the-cluster-generator"]], "Features": [[332, "features"]], "Resources": [[332, "resources"]], "Related Projects": [[332, "related-projects"]], "Reference Pages": [[332, "reference-pages"]], "Indices and tables": [[332, "indices-and-tables"]], "Additional Pages": [[332, "additional-pages"]], "Initial Conditions Generation": [[333, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[333, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[333, "clusterics-parameter-files"]], "Cluster Models": [[334, "cluster-models"]], "Cluster Models: Mathematical Overview": [[334, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[334, null]], "The Intracluster Medium (ICM)": [[334, "the-intracluster-medium-icm"]], "Gravity": [[334, "gravity"]], "Generating a model.ClusterModel Using Radial Profiles": [[334, "generating-a-model-clustermodel-using-radial-profiles"]], "Checking the Hydrostatic Equilibrium": [[334, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[334, "setting-a-magnetic-field-strength-profile"]], "Adding Other Fields": [[334, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[334, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[334, null]], "Non-Physical Profiles": [[334, "non-physical-profiles"]], "Particles": [[335, "particles"]], "Generating Particles from ClusterModel Objects": [[335, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[335, "gas-particles"]], "Dark Matter and Star Particles": [[335, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[335, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[335, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[335, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[335, "the-clusterparticles-class"]], "ClusterParticles Operations": [[335, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[335, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[335, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[335, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[335, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[335, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[335, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[335, "clusterparticles-i-o"]], "Gadget-Like I/O": [[335, "gadget-like-i-o"]], "Radial Profiles": [[336, "radial-profiles"]], "Built-In Radial Profiles": [[336, "built-in-radial-profiles"]], "Using Radial Profiles": [[336, "using-radial-profiles"]], "Creating a Radial Profile": [[336, "creating-a-radial-profile"]]}, "indexentries": {"codes": [[0, "module-codes"]], "module": [[0, "module-codes"], [11, "module-correction"], [96, "module-fields"], [139, "module-ics"], [148, "module-model"], [223, "module-numalgs"], [229, "module-particles"], [252, "module-radial_profiles"], [297, "module-relations"], [304, "module-utils"], [317, "module-virial"]], "resample_arepo_ics() (in module codes)": [[1, "codes.resample_arepo_ics"]], "setup_arepo_ics() (in module codes)": [[2, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[3, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[4, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[5, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[6, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[7, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[8, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[9, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[10, "codes.write_amr_particles"]], "correction": [[11, "module-correction"]], "nonphysicalregion (class in correction)": [[12, "correction.NonPhysicalRegion"]], "__init__() (correction.nonphysicalregion method)": [[13, "correction.NonPhysicalRegion.__init__"]], "correct() (correction.nonphysicalregion class method)": [[14, "correction.NonPhysicalRegion.correct"]], "correctable (correction.nonphysicalregion attribute)": [[15, "correction.NonPhysicalRegion.correctable"]], "identify() (correction.nonphysicalregion class method)": [[16, "correction.NonPhysicalRegion.identify"]], "is_close() (correction.nonphysicalregion method)": [[17, "correction.NonPhysicalRegion.is_close"]], "message() (correction.nonphysicalregion method)": [[18, "correction.NonPhysicalRegion.message"]], "obj (correction.nonphysicalregion attribute)": [[19, "correction.NonPhysicalRegion.obj"]], "rmax (correction.nonphysicalregion attribute)": [[20, "correction.NonPhysicalRegion.rmax"]], "rmin (correction.nonphysicalregion attribute)": [[21, "correction.NonPhysicalRegion.rmin"]], "size() (correction.nonphysicalregion method)": [[22, "correction.NonPhysicalRegion.size"]], "type (correction.nonphysicalregion attribute)": [[23, "correction.NonPhysicalRegion.type"]], "type0npr (class in correction)": [[24, "correction.Type0NPR"]], "__init__() (correction.type0npr method)": [[25, "correction.Type0NPR.__init__"]], "correct() (correction.type0npr class method)": [[26, "correction.Type0NPR.correct"]], "correctable (correction.type0npr attribute)": [[27, "correction.Type0NPR.correctable"]], "identify() (correction.type0npr class method)": [[28, "correction.Type0NPR.identify"]], "is_close() (correction.type0npr method)": [[29, "correction.Type0NPR.is_close"]], "message() (correction.type0npr method)": [[30, "correction.Type0NPR.message"]], "obj (correction.type0npr attribute)": [[31, "correction.Type0NPR.obj"]], "rmax (correction.type0npr attribute)": [[32, "correction.Type0NPR.rmax"]], "rmin (correction.type0npr attribute)": [[33, "correction.Type0NPR.rmin"]], "size() (correction.type0npr method)": [[34, "correction.Type0NPR.size"]], "type (correction.type0npr attribute)": [[35, "correction.Type0NPR.type"]], "type0anpr (class in correction)": [[36, "correction.Type0aNPR"]], "__init__() (correction.type0anpr method)": [[37, "correction.Type0aNPR.__init__"]], "correct() (correction.type0anpr class method)": [[38, "correction.Type0aNPR.correct"]], "correctable (correction.type0anpr attribute)": [[39, "correction.Type0aNPR.correctable"]], "identify() (correction.type0anpr class method)": [[40, "correction.Type0aNPR.identify"]], "is_close() (correction.type0anpr method)": [[41, "correction.Type0aNPR.is_close"]], "message() (correction.type0anpr method)": [[42, "correction.Type0aNPR.message"]], "obj (correction.type0anpr attribute)": [[43, "correction.Type0aNPR.obj"]], "rmax (correction.type0anpr attribute)": [[44, "correction.Type0aNPR.rmax"]], "rmin (correction.type0anpr attribute)": [[45, "correction.Type0aNPR.rmin"]], "size() (correction.type0anpr method)": [[46, "correction.Type0aNPR.size"]], "type (correction.type0anpr attribute)": [[47, "correction.Type0aNPR.type"]], "type0bnpr (class in correction)": [[48, "correction.Type0bNPR"]], "__init__() (correction.type0bnpr method)": [[49, "correction.Type0bNPR.__init__"]], "correct() (correction.type0bnpr class method)": [[50, "correction.Type0bNPR.correct"]], "correctable (correction.type0bnpr attribute)": [[51, "correction.Type0bNPR.correctable"]], "identify() (correction.type0bnpr class method)": [[52, "correction.Type0bNPR.identify"]], "is_close() (correction.type0bnpr method)": [[53, "correction.Type0bNPR.is_close"]], "message() (correction.type0bnpr method)": [[54, "correction.Type0bNPR.message"]], "obj (correction.type0bnpr attribute)": [[55, "correction.Type0bNPR.obj"]], "rmax (correction.type0bnpr attribute)": [[56, "correction.Type0bNPR.rmax"]], "rmin (correction.type0bnpr attribute)": [[57, "correction.Type0bNPR.rmin"]], "size() (correction.type0bnpr method)": [[58, "correction.Type0bNPR.size"]], "type (correction.type0bnpr attribute)": [[59, "correction.Type0bNPR.type"]], "type0cnpr (class in correction)": [[60, "correction.Type0cNPR"]], "__init__() (correction.type0cnpr method)": [[61, "correction.Type0cNPR.__init__"]], "correct() (correction.type0cnpr class method)": [[62, "correction.Type0cNPR.correct"]], "correctable (correction.type0cnpr attribute)": [[63, "correction.Type0cNPR.correctable"]], "identify() (correction.type0cnpr class method)": [[64, "correction.Type0cNPR.identify"]], "is_close() (correction.type0cnpr method)": [[65, "correction.Type0cNPR.is_close"]], "message() (correction.type0cnpr method)": [[66, "correction.Type0cNPR.message"]], "obj (correction.type0cnpr attribute)": [[67, "correction.Type0cNPR.obj"]], "rmax (correction.type0cnpr attribute)": [[68, "correction.Type0cNPR.rmax"]], "rmin (correction.type0cnpr attribute)": [[69, "correction.Type0cNPR.rmin"]], "size() (correction.type0cnpr method)": [[70, "correction.Type0cNPR.size"]], "type (correction.type0cnpr attribute)": [[71, "correction.Type0cNPR.type"]], "type1npr (class in correction)": [[72, "correction.Type1NPR"]], "__init__() (correction.type1npr method)": [[73, "correction.Type1NPR.__init__"]], "correct() (correction.type1npr class method)": [[74, "correction.Type1NPR.correct"]], "correctable (correction.type1npr attribute)": [[75, "correction.Type1NPR.correctable"]], "identify() (correction.type1npr class method)": [[76, "correction.Type1NPR.identify"]], "is_close() (correction.type1npr method)": [[77, "correction.Type1NPR.is_close"]], "message() (correction.type1npr method)": [[78, "correction.Type1NPR.message"]], "obj (correction.type1npr attribute)": [[79, "correction.Type1NPR.obj"]], "rmax (correction.type1npr attribute)": [[80, "correction.Type1NPR.rmax"]], "rmin (correction.type1npr attribute)": [[81, "correction.Type1NPR.rmin"]], "size() (correction.type1npr method)": [[82, "correction.Type1NPR.size"]], "type (correction.type1npr attribute)": [[83, "correction.Type1NPR.type"]], "type1anpr (class in correction)": [[84, "correction.Type1aNPR"]], "__init__() (correction.type1anpr method)": [[85, "correction.Type1aNPR.__init__"]], "correct() (correction.type1anpr class method)": [[86, "correction.Type1aNPR.correct"]], "correctable (correction.type1anpr attribute)": [[87, "correction.Type1aNPR.correctable"]], "identify() (correction.type1anpr class method)": [[88, "correction.Type1aNPR.identify"]], "is_close() (correction.type1anpr method)": [[89, "correction.Type1aNPR.is_close"]], "message() (correction.type1anpr method)": [[90, "correction.Type1aNPR.message"]], "obj (correction.type1anpr attribute)": [[91, "correction.Type1aNPR.obj"]], "rmax (correction.type1anpr attribute)": [[92, "correction.Type1aNPR.rmax"]], "rmin (correction.type1anpr attribute)": [[93, "correction.Type1aNPR.rmin"]], "size() (correction.type1anpr method)": [[94, "correction.Type1aNPR.size"]], "type (correction.type1anpr attribute)": [[95, "correction.Type1aNPR.type"]], "fields": [[96, "module-fields"]], "clusterfield (class in fields)": [[97, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[98, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[99, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[100, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[101, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[102, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[103, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[104, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[105, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[106, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[107, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[108, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[109, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[110, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[111, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[112, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[113, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[114, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[115, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[116, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[117, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[118, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[119, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[120, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[121, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[122, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[123, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[124, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[125, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[126, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[127, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[128, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[129, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[130, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[131, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[132, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[133, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[134, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[135, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[136, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[137, "fields.parse_value"]], "rot_3d() (in module fields)": [[138, "fields.rot_3d"]], "ics": [[139, "module-ics"]], "clusterics (class in ics)": [[140, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[141, "ics.ClusterICs.__init__"]], "create_dataset() (ics.clusterics method)": [[142, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[143, "ics.ClusterICs.from_file"]], "resample_particle_ics() (ics.clusterics method)": [[144, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[145, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[146, "ics.ClusterICs.to_file"]], "compute_centers_for_binary() (in module ics)": [[147, "ics.compute_centers_for_binary"]], "model": [[148, "module-model"]], "clustermodel (class in model)": [[149, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[150, "model.ClusterModel.__init__"]], "check_dm_virial() (model.clustermodel method)": [[151, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[152, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[153, "model.ClusterModel.check_star_virial"]], "create_dataset() (model.clustermodel method)": [[154, "model.ClusterModel.create_dataset"]], "default_fields (model.clustermodel attribute)": [[155, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[156, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[157, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[158, "model.ClusterModel.find_field_at_radius"]], "find_radius_for_density() (model.clustermodel method)": [[159, "model.ClusterModel.find_radius_for_density"]], "from_arrays() (model.clustermodel class method)": [[160, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[161, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[162, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[163, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[164, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[165, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[166, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[167, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[168, "model.ClusterModel.generate_tracer_particles"]], "items() (model.clustermodel method)": [[169, "model.ClusterModel.items"]], "keys() (model.clustermodel method)": [[170, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[171, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[172, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[173, "model.ClusterModel.num_elements"]], "panel_plot() (model.clustermodel method)": [[174, "model.ClusterModel.panel_plot"]], "plot() (model.clustermodel method)": [[175, "model.ClusterModel.plot"]], "properties (model.clustermodel property)": [[176, "model.ClusterModel.properties"]], "set_field() (model.clustermodel method)": [[177, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[178, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[179, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[180, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[181, "model.ClusterModel.star_virial"]], "values() (model.clustermodel method)": [[182, "model.ClusterModel.values"]], "write_model_to_ascii() (model.clustermodel method)": [[183, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[184, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[185, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[186, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[187, "model.HydrostaticEquilibrium.__init__"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[188, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[189, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[190, "model.HydrostaticEquilibrium.check_star_virial"]], "create_dataset() (model.hydrostaticequilibrium method)": [[191, "model.HydrostaticEquilibrium.create_dataset"]], "default_fields (model.hydrostaticequilibrium attribute)": [[192, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[193, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[194, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[195, "model.HydrostaticEquilibrium.find_field_at_radius"]], "find_radius_for_density() (model.hydrostaticequilibrium method)": [[196, "model.HydrostaticEquilibrium.find_radius_for_density"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[197, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[198, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[199, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[200, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[201, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[202, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[203, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[204, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[205, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "items() (model.hydrostaticequilibrium method)": [[206, "model.HydrostaticEquilibrium.items"]], "keys() (model.hydrostaticequilibrium method)": [[207, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[208, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[209, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[210, "model.HydrostaticEquilibrium.num_elements"]], "panel_plot() (model.hydrostaticequilibrium method)": [[211, "model.HydrostaticEquilibrium.panel_plot"]], "plot() (model.hydrostaticequilibrium method)": [[212, "model.HydrostaticEquilibrium.plot"]], "properties (model.hydrostaticequilibrium property)": [[213, "model.HydrostaticEquilibrium.properties"]], "set_field() (model.hydrostaticequilibrium method)": [[214, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[215, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[216, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[217, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[218, "model.HydrostaticEquilibrium.star_virial"]], "values() (model.hydrostaticequilibrium method)": [[219, "model.HydrostaticEquilibrium.values"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[220, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[221, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[222, "model.HydrostaticEquilibrium.write_model_to_h5"]], "numalgs": [[223, "module-numalgs"]], "find_holes() (in module numalgs)": [[224, "numalgs.find_holes"]], "identify_domain_borders() (in module numalgs)": [[225, "numalgs.identify_domain_borders"]], "monotone_interpolation() (in module numalgs)": [[226, "numalgs.monotone_interpolation"]], "positive_interpolation() (in module numalgs)": [[227, "numalgs.positive_interpolation"]], "solve_temperature() (in module numalgs)": [[228, "numalgs.solve_temperature"]], "particles": [[229, "module-particles"]], "clusterparticles (class in particles)": [[230, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[231, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[232, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[233, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[234, "particles.ClusterParticles.drop_ptypes"]], "from_fields() (particles.clusterparticles class method)": [[235, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[236, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[237, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[238, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[239, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[240, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[241, "particles.ClusterParticles.num_passive_scalars"]], "set_field() (particles.clusterparticles method)": [[242, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[243, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[244, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[245, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[246, "particles.ClusterParticles.write_to_gadget_file"]], "combine_three_clusters() (in module particles)": [[247, "particles.combine_three_clusters"]], "combine_two_clusters() (in module particles)": [[248, "particles.combine_two_clusters"]], "resample_one_cluster() (in module particles)": [[249, "particles.resample_one_cluster"]], "resample_three_clusters() (in module particles)": [[250, "particles.resample_three_clusters"]], "resample_two_clusters() (in module particles)": [[251, "particles.resample_two_clusters"]], "radial_profiles": [[252, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[253, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[254, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[255, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[256, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[257, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[258, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[259, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[260, "radial_profiles.RadialProfile.from_binary"]], "name (radial_profiles.radialprofile attribute)": [[261, "radial_profiles.RadialProfile.name"]], "plot() (radial_profiles.radialprofile method)": [[262, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[263, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[264, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[265, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[266, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[267, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[268, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[269, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[270, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[271, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[272, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[273, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[274, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[275, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[276, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[277, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[278, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[279, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[280, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[281, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[282, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[283, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[284, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[285, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[286, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[287, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[288, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[289, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[290, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[291, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[292, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[293, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[294, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[295, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[296, "radial_profiles.walker_entropy_profile"]], "relations": [[297, "module-relations"]], "convert_ne_to_density() (in module relations)": [[298, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[299, "relations.f_gas"]], "m_bcg() (in module relations)": [[300, "relations.m_bcg"]], "m_sat() (in module relations)": [[301, "relations.m_sat"]], "r_bcg() (in module relations)": [[302, "relations.r_bcg"]], "rho_scale_hern() (in module relations)": [[303, "relations.rho_scale_hern"]], "utils": [[304, "module-utils"]], "logmute (class in utils)": [[305, "utils.LogMute"]], "__init__() (utils.logmute method)": [[306, "utils.LogMute.__init__"]], "ensure_list() (in module utils)": [[307, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[308, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[309, "utils.ensure_ytquantity"]], "generate_particle_radii() (in module utils)": [[310, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[311, "utils.integrate"]], "integrate_mass() (in module utils)": [[312, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[313, "utils.integrate_toinf"]], "parse_prng() (in module utils)": [[314, "utils.parse_prng"]], "time_limit() (in module utils)": [[315, "utils.time_limit"]], "truncate_spline() (in module utils)": [[316, "utils.truncate_spline"]], "virial": [[317, "module-virial"]], "virialequilibrium (class in virial)": [[318, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[319, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[320, "virial.VirialEquilibrium.check_virial"]], "ee (virial.virialequilibrium property)": [[321, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[322, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[323, "virial.VirialEquilibrium.generate_particles"]]}})