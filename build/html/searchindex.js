Search.setIndex({"docnames": ["Articles", "_as_gen/cluster_collections", "_as_gen/cluster_collections.Ascasibar07", "_as_gen/cluster_collections.Ascasibar07.__init__", "_as_gen/cluster_collections.Ascasibar07.authors", "_as_gen/cluster_collections.Ascasibar07.citation", "_as_gen/cluster_collections.Ascasibar07.items", "_as_gen/cluster_collections.Ascasibar07.keys", "_as_gen/cluster_collections.Ascasibar07.name", "_as_gen/cluster_collections.Ascasibar07.profiles", "_as_gen/cluster_collections.Ascasibar07.source_authors", "_as_gen/cluster_collections.Ascasibar07.values", "_as_gen/cluster_collections.Collection", "_as_gen/cluster_collections.Collection.__init__", "_as_gen/cluster_collections.Collection.authors", "_as_gen/cluster_collections.Collection.citation", "_as_gen/cluster_collections.Collection.items", "_as_gen/cluster_collections.Collection.keys", "_as_gen/cluster_collections.Collection.name", "_as_gen/cluster_collections.Collection.profiles", "_as_gen/cluster_collections.Collection.source_authors", "_as_gen/cluster_collections.Collection.values", "_as_gen/cluster_collections.ProtoCluster", "_as_gen/cluster_collections.ProtoCluster.__init__", "_as_gen/cluster_collections.ProtoCluster.items", "_as_gen/cluster_collections.ProtoCluster.keys", "_as_gen/cluster_collections.ProtoCluster.load", "_as_gen/cluster_collections.ProtoCluster.value", "_as_gen/cluster_collections.Sanderson10", "_as_gen/cluster_collections.Sanderson10.__init__", "_as_gen/cluster_collections.Sanderson10.authors", "_as_gen/cluster_collections.Sanderson10.citation", "_as_gen/cluster_collections.Sanderson10.items", "_as_gen/cluster_collections.Sanderson10.keys", "_as_gen/cluster_collections.Sanderson10.name", "_as_gen/cluster_collections.Sanderson10.profiles", "_as_gen/cluster_collections.Sanderson10.source_authors", "_as_gen/cluster_collections.Sanderson10.values", "_as_gen/cluster_collections.Vikhlinin06", "_as_gen/cluster_collections.Vikhlinin06.__init__", "_as_gen/cluster_collections.Vikhlinin06.authors", "_as_gen/cluster_collections.Vikhlinin06.citation", "_as_gen/cluster_collections.Vikhlinin06.items", "_as_gen/cluster_collections.Vikhlinin06.keys", "_as_gen/cluster_collections.Vikhlinin06.name", "_as_gen/cluster_collections.Vikhlinin06.profiles", "_as_gen/cluster_collections.Vikhlinin06.source_authors", "_as_gen/cluster_collections.Vikhlinin06.values", "_as_gen/codes", "_as_gen/codes.resample_arepo_ics", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/correction", "_as_gen/correction.NonPhysicalRegion", "_as_gen/correction.NonPhysicalRegion.__init__", "_as_gen/correction.NonPhysicalRegion.correct", "_as_gen/correction.NonPhysicalRegion.correctable", "_as_gen/correction.NonPhysicalRegion.identify", "_as_gen/correction.NonPhysicalRegion.is_close", "_as_gen/correction.NonPhysicalRegion.message", "_as_gen/correction.NonPhysicalRegion.obj", "_as_gen/correction.NonPhysicalRegion.rmax", "_as_gen/correction.NonPhysicalRegion.rmin", "_as_gen/correction.NonPhysicalRegion.size", "_as_gen/correction.NonPhysicalRegion.type", "_as_gen/correction.Type0NPR", "_as_gen/correction.Type0NPR.__init__", "_as_gen/correction.Type0NPR.correct", "_as_gen/correction.Type0NPR.correctable", "_as_gen/correction.Type0NPR.identify", "_as_gen/correction.Type0NPR.is_close", "_as_gen/correction.Type0NPR.message", "_as_gen/correction.Type0NPR.obj", "_as_gen/correction.Type0NPR.rmax", "_as_gen/correction.Type0NPR.rmin", "_as_gen/correction.Type0NPR.size", "_as_gen/correction.Type0NPR.type", "_as_gen/correction.Type0aNPR", "_as_gen/correction.Type0aNPR.__init__", "_as_gen/correction.Type0aNPR.correct", "_as_gen/correction.Type0aNPR.correctable", "_as_gen/correction.Type0aNPR.identify", "_as_gen/correction.Type0aNPR.is_close", "_as_gen/correction.Type0aNPR.message", "_as_gen/correction.Type0aNPR.obj", "_as_gen/correction.Type0aNPR.rmax", "_as_gen/correction.Type0aNPR.rmin", "_as_gen/correction.Type0aNPR.size", "_as_gen/correction.Type0aNPR.type", "_as_gen/correction.Type0bNPR", "_as_gen/correction.Type0bNPR.__init__", "_as_gen/correction.Type0bNPR.correct", "_as_gen/correction.Type0bNPR.correctable", "_as_gen/correction.Type0bNPR.identify", "_as_gen/correction.Type0bNPR.is_close", "_as_gen/correction.Type0bNPR.message", "_as_gen/correction.Type0bNPR.obj", "_as_gen/correction.Type0bNPR.rmax", "_as_gen/correction.Type0bNPR.rmin", "_as_gen/correction.Type0bNPR.size", "_as_gen/correction.Type0bNPR.type", "_as_gen/correction.Type0cNPR", "_as_gen/correction.Type0cNPR.__init__", "_as_gen/correction.Type0cNPR.correct", "_as_gen/correction.Type0cNPR.correctable", "_as_gen/correction.Type0cNPR.identify", "_as_gen/correction.Type0cNPR.is_close", "_as_gen/correction.Type0cNPR.message", "_as_gen/correction.Type0cNPR.obj", "_as_gen/correction.Type0cNPR.rmax", "_as_gen/correction.Type0cNPR.rmin", "_as_gen/correction.Type0cNPR.size", "_as_gen/correction.Type0cNPR.type", "_as_gen/correction.Type1NPR", "_as_gen/correction.Type1NPR.__init__", "_as_gen/correction.Type1NPR.correct", "_as_gen/correction.Type1NPR.correctable", "_as_gen/correction.Type1NPR.identify", "_as_gen/correction.Type1NPR.is_close", "_as_gen/correction.Type1NPR.message", "_as_gen/correction.Type1NPR.obj", "_as_gen/correction.Type1NPR.rmax", "_as_gen/correction.Type1NPR.rmin", "_as_gen/correction.Type1NPR.size", "_as_gen/correction.Type1NPR.type", "_as_gen/correction.Type1aNPR", "_as_gen/correction.Type1aNPR.__init__", "_as_gen/correction.Type1aNPR.correct", "_as_gen/correction.Type1aNPR.correctable", "_as_gen/correction.Type1aNPR.identify", "_as_gen/correction.Type1aNPR.is_close", "_as_gen/correction.Type1aNPR.message", "_as_gen/correction.Type1aNPR.obj", "_as_gen/correction.Type1aNPR.rmax", "_as_gen/correction.Type1aNPR.rmin", "_as_gen/correction.Type1aNPR.size", "_as_gen/correction.Type1aNPR.type", "_as_gen/correction.Type2NPR", "_as_gen/correction.Type2NPR.__init__", "_as_gen/correction.Type2NPR.correct", "_as_gen/correction.Type2NPR.correctable", "_as_gen/correction.Type2NPR.identify", "_as_gen/correction.Type2NPR.is_close", "_as_gen/correction.Type2NPR.message", "_as_gen/correction.Type2NPR.obj", "_as_gen/correction.Type2NPR.rmax", "_as_gen/correction.Type2NPR.rmin", "_as_gen/correction.Type2NPR.size", "_as_gen/correction.Type2NPR.type", "_as_gen/correction.Type2aNPR", "_as_gen/correction.Type2aNPR.__init__", "_as_gen/correction.Type2aNPR.correct", "_as_gen/correction.Type2aNPR.correctable", "_as_gen/correction.Type2aNPR.identify", "_as_gen/correction.Type2aNPR.is_close", "_as_gen/correction.Type2aNPR.message", "_as_gen/correction.Type2aNPR.obj", "_as_gen/correction.Type2aNPR.rmax", "_as_gen/correction.Type2aNPR.rmin", "_as_gen/correction.Type2aNPR.size", "_as_gen/correction.Type2aNPR.type", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.create_dataset", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.find_radius_for_density", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.items", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.panel_plot", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.properties", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.values", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.create_dataset", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.items", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.panel_plot", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.properties", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.values", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/numalgs", "_as_gen/numalgs.extrap_power_law", "_as_gen/numalgs.find_holes", "_as_gen/numalgs.identify_domain_borders", "_as_gen/numalgs.monotone_interpolation", "_as_gen/numalgs.positive_interpolation", "_as_gen/numalgs.solve_temperature", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.combine_three_clusters", "_as_gen/particles.combine_two_clusters", "_as_gen/particles.resample_one_cluster", "_as_gen/particles.resample_three_clusters", "_as_gen/particles.resample_two_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.name", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/relations.rho_scale_hern", "_as_gen/utils", "_as_gen/utils.LogMute", "_as_gen/utils.LogMute.__init__", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.parse_prng", "_as_gen/utils.time_limit", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_notebooks/examples/FirstJourney", "api", "codes", "collections", "correction", "correction_methods", "examples", "fields", "getting_started", "index", "initial_conditions", "models", "particles", "radial_profiles"], "filenames": ["Articles.rst", "_as_gen/cluster_collections.rst", "_as_gen/cluster_collections.Ascasibar07.rst", "_as_gen/cluster_collections.Ascasibar07.__init__.rst", "_as_gen/cluster_collections.Ascasibar07.authors.rst", "_as_gen/cluster_collections.Ascasibar07.citation.rst", "_as_gen/cluster_collections.Ascasibar07.items.rst", "_as_gen/cluster_collections.Ascasibar07.keys.rst", "_as_gen/cluster_collections.Ascasibar07.name.rst", "_as_gen/cluster_collections.Ascasibar07.profiles.rst", "_as_gen/cluster_collections.Ascasibar07.source_authors.rst", "_as_gen/cluster_collections.Ascasibar07.values.rst", "_as_gen/cluster_collections.Collection.rst", "_as_gen/cluster_collections.Collection.__init__.rst", "_as_gen/cluster_collections.Collection.authors.rst", "_as_gen/cluster_collections.Collection.citation.rst", "_as_gen/cluster_collections.Collection.items.rst", "_as_gen/cluster_collections.Collection.keys.rst", "_as_gen/cluster_collections.Collection.name.rst", "_as_gen/cluster_collections.Collection.profiles.rst", "_as_gen/cluster_collections.Collection.source_authors.rst", "_as_gen/cluster_collections.Collection.values.rst", "_as_gen/cluster_collections.ProtoCluster.rst", "_as_gen/cluster_collections.ProtoCluster.__init__.rst", "_as_gen/cluster_collections.ProtoCluster.items.rst", "_as_gen/cluster_collections.ProtoCluster.keys.rst", "_as_gen/cluster_collections.ProtoCluster.load.rst", "_as_gen/cluster_collections.ProtoCluster.value.rst", "_as_gen/cluster_collections.Sanderson10.rst", "_as_gen/cluster_collections.Sanderson10.__init__.rst", "_as_gen/cluster_collections.Sanderson10.authors.rst", "_as_gen/cluster_collections.Sanderson10.citation.rst", "_as_gen/cluster_collections.Sanderson10.items.rst", "_as_gen/cluster_collections.Sanderson10.keys.rst", "_as_gen/cluster_collections.Sanderson10.name.rst", "_as_gen/cluster_collections.Sanderson10.profiles.rst", "_as_gen/cluster_collections.Sanderson10.source_authors.rst", "_as_gen/cluster_collections.Sanderson10.values.rst", "_as_gen/cluster_collections.Vikhlinin06.rst", "_as_gen/cluster_collections.Vikhlinin06.__init__.rst", "_as_gen/cluster_collections.Vikhlinin06.authors.rst", "_as_gen/cluster_collections.Vikhlinin06.citation.rst", "_as_gen/cluster_collections.Vikhlinin06.items.rst", "_as_gen/cluster_collections.Vikhlinin06.keys.rst", "_as_gen/cluster_collections.Vikhlinin06.name.rst", "_as_gen/cluster_collections.Vikhlinin06.profiles.rst", "_as_gen/cluster_collections.Vikhlinin06.source_authors.rst", "_as_gen/cluster_collections.Vikhlinin06.values.rst", "_as_gen/codes.rst", "_as_gen/codes.resample_arepo_ics.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/correction.rst", "_as_gen/correction.NonPhysicalRegion.rst", "_as_gen/correction.NonPhysicalRegion.__init__.rst", "_as_gen/correction.NonPhysicalRegion.correct.rst", "_as_gen/correction.NonPhysicalRegion.correctable.rst", "_as_gen/correction.NonPhysicalRegion.identify.rst", "_as_gen/correction.NonPhysicalRegion.is_close.rst", "_as_gen/correction.NonPhysicalRegion.message.rst", "_as_gen/correction.NonPhysicalRegion.obj.rst", "_as_gen/correction.NonPhysicalRegion.rmax.rst", "_as_gen/correction.NonPhysicalRegion.rmin.rst", "_as_gen/correction.NonPhysicalRegion.size.rst", "_as_gen/correction.NonPhysicalRegion.type.rst", "_as_gen/correction.Type0NPR.rst", "_as_gen/correction.Type0NPR.__init__.rst", "_as_gen/correction.Type0NPR.correct.rst", "_as_gen/correction.Type0NPR.correctable.rst", "_as_gen/correction.Type0NPR.identify.rst", "_as_gen/correction.Type0NPR.is_close.rst", "_as_gen/correction.Type0NPR.message.rst", "_as_gen/correction.Type0NPR.obj.rst", "_as_gen/correction.Type0NPR.rmax.rst", "_as_gen/correction.Type0NPR.rmin.rst", "_as_gen/correction.Type0NPR.size.rst", "_as_gen/correction.Type0NPR.type.rst", "_as_gen/correction.Type0aNPR.rst", "_as_gen/correction.Type0aNPR.__init__.rst", "_as_gen/correction.Type0aNPR.correct.rst", "_as_gen/correction.Type0aNPR.correctable.rst", "_as_gen/correction.Type0aNPR.identify.rst", "_as_gen/correction.Type0aNPR.is_close.rst", "_as_gen/correction.Type0aNPR.message.rst", "_as_gen/correction.Type0aNPR.obj.rst", "_as_gen/correction.Type0aNPR.rmax.rst", "_as_gen/correction.Type0aNPR.rmin.rst", "_as_gen/correction.Type0aNPR.size.rst", "_as_gen/correction.Type0aNPR.type.rst", "_as_gen/correction.Type0bNPR.rst", "_as_gen/correction.Type0bNPR.__init__.rst", "_as_gen/correction.Type0bNPR.correct.rst", "_as_gen/correction.Type0bNPR.correctable.rst", "_as_gen/correction.Type0bNPR.identify.rst", "_as_gen/correction.Type0bNPR.is_close.rst", "_as_gen/correction.Type0bNPR.message.rst", "_as_gen/correction.Type0bNPR.obj.rst", "_as_gen/correction.Type0bNPR.rmax.rst", "_as_gen/correction.Type0bNPR.rmin.rst", "_as_gen/correction.Type0bNPR.size.rst", "_as_gen/correction.Type0bNPR.type.rst", "_as_gen/correction.Type0cNPR.rst", "_as_gen/correction.Type0cNPR.__init__.rst", "_as_gen/correction.Type0cNPR.correct.rst", "_as_gen/correction.Type0cNPR.correctable.rst", "_as_gen/correction.Type0cNPR.identify.rst", "_as_gen/correction.Type0cNPR.is_close.rst", "_as_gen/correction.Type0cNPR.message.rst", "_as_gen/correction.Type0cNPR.obj.rst", "_as_gen/correction.Type0cNPR.rmax.rst", "_as_gen/correction.Type0cNPR.rmin.rst", "_as_gen/correction.Type0cNPR.size.rst", "_as_gen/correction.Type0cNPR.type.rst", "_as_gen/correction.Type1NPR.rst", "_as_gen/correction.Type1NPR.__init__.rst", "_as_gen/correction.Type1NPR.correct.rst", "_as_gen/correction.Type1NPR.correctable.rst", "_as_gen/correction.Type1NPR.identify.rst", "_as_gen/correction.Type1NPR.is_close.rst", "_as_gen/correction.Type1NPR.message.rst", "_as_gen/correction.Type1NPR.obj.rst", "_as_gen/correction.Type1NPR.rmax.rst", "_as_gen/correction.Type1NPR.rmin.rst", "_as_gen/correction.Type1NPR.size.rst", "_as_gen/correction.Type1NPR.type.rst", "_as_gen/correction.Type1aNPR.rst", "_as_gen/correction.Type1aNPR.__init__.rst", "_as_gen/correction.Type1aNPR.correct.rst", "_as_gen/correction.Type1aNPR.correctable.rst", "_as_gen/correction.Type1aNPR.identify.rst", "_as_gen/correction.Type1aNPR.is_close.rst", "_as_gen/correction.Type1aNPR.message.rst", "_as_gen/correction.Type1aNPR.obj.rst", "_as_gen/correction.Type1aNPR.rmax.rst", "_as_gen/correction.Type1aNPR.rmin.rst", "_as_gen/correction.Type1aNPR.size.rst", "_as_gen/correction.Type1aNPR.type.rst", "_as_gen/correction.Type2NPR.rst", "_as_gen/correction.Type2NPR.__init__.rst", "_as_gen/correction.Type2NPR.correct.rst", "_as_gen/correction.Type2NPR.correctable.rst", "_as_gen/correction.Type2NPR.identify.rst", "_as_gen/correction.Type2NPR.is_close.rst", "_as_gen/correction.Type2NPR.message.rst", "_as_gen/correction.Type2NPR.obj.rst", "_as_gen/correction.Type2NPR.rmax.rst", "_as_gen/correction.Type2NPR.rmin.rst", "_as_gen/correction.Type2NPR.size.rst", "_as_gen/correction.Type2NPR.type.rst", "_as_gen/correction.Type2aNPR.rst", "_as_gen/correction.Type2aNPR.__init__.rst", "_as_gen/correction.Type2aNPR.correct.rst", "_as_gen/correction.Type2aNPR.correctable.rst", "_as_gen/correction.Type2aNPR.identify.rst", "_as_gen/correction.Type2aNPR.is_close.rst", "_as_gen/correction.Type2aNPR.message.rst", "_as_gen/correction.Type2aNPR.obj.rst", "_as_gen/correction.Type2aNPR.rmax.rst", "_as_gen/correction.Type2aNPR.rmin.rst", "_as_gen/correction.Type2aNPR.size.rst", "_as_gen/correction.Type2aNPR.type.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.create_dataset.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.find_radius_for_density.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.items.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.panel_plot.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.properties.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.values.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.create_dataset.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.items.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.panel_plot.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.properties.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.values.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/numalgs.rst", "_as_gen/numalgs.extrap_power_law.rst", "_as_gen/numalgs.find_holes.rst", "_as_gen/numalgs.identify_domain_borders.rst", "_as_gen/numalgs.monotone_interpolation.rst", "_as_gen/numalgs.positive_interpolation.rst", "_as_gen/numalgs.solve_temperature.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.combine_three_clusters.rst", "_as_gen/particles.combine_two_clusters.rst", "_as_gen/particles.resample_one_cluster.rst", "_as_gen/particles.resample_three_clusters.rst", "_as_gen/particles.resample_two_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.name.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/relations.rho_scale_hern.rst", "_as_gen/utils.rst", "_as_gen/utils.LogMute.rst", "_as_gen/utils.LogMute.__init__.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.time_limit.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_notebooks/examples/FirstJourney.ipynb", "api.rst", "codes.rst", "collections.rst", "correction.rst", "correction_methods.rst", "examples.rst", "fields.rst", "getting_started.rst", "index.rst", "initial_conditions.rst", "models.rst", "particles.rst", "radial_profiles.rst"], "titles": ["User Reference Guide", "cluster_collections", "cluster_collections.Ascasibar07", "cluster_collections.Ascasibar07.__init__", "cluster_collections.Ascasibar07.authors", "cluster_collections.Ascasibar07.citation", "cluster_collections.Ascasibar07.items", "cluster_collections.Ascasibar07.keys", "cluster_collections.Ascasibar07.name", "cluster_collections.Ascasibar07.profiles", "cluster_collections.Ascasibar07.source_authors", "cluster_collections.Ascasibar07.values", "cluster_collections.Collection", "cluster_collections.Collection.__init__", "cluster_collections.Collection.authors", "cluster_collections.Collection.citation", "cluster_collections.Collection.items", "cluster_collections.Collection.keys", "cluster_collections.Collection.name", "cluster_collections.Collection.profiles", "cluster_collections.Collection.source_authors", "cluster_collections.Collection.values", "cluster_collections.ProtoCluster", "cluster_collections.ProtoCluster.__init__", "cluster_collections.ProtoCluster.items", "cluster_collections.ProtoCluster.keys", "cluster_collections.ProtoCluster.load", "cluster_collections.ProtoCluster.value", "cluster_collections.Sanderson10", "cluster_collections.Sanderson10.__init__", "cluster_collections.Sanderson10.authors", "cluster_collections.Sanderson10.citation", "cluster_collections.Sanderson10.items", "cluster_collections.Sanderson10.keys", "cluster_collections.Sanderson10.name", "cluster_collections.Sanderson10.profiles", "cluster_collections.Sanderson10.source_authors", "cluster_collections.Sanderson10.values", "cluster_collections.Vikhlinin06", "cluster_collections.Vikhlinin06.__init__", "cluster_collections.Vikhlinin06.authors", "cluster_collections.Vikhlinin06.citation", "cluster_collections.Vikhlinin06.items", "cluster_collections.Vikhlinin06.keys", "cluster_collections.Vikhlinin06.name", "cluster_collections.Vikhlinin06.profiles", "cluster_collections.Vikhlinin06.source_authors", "cluster_collections.Vikhlinin06.values", "codes", "codes.resample_arepo_ics", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "correction", "correction.NonPhysicalRegion", "correction.NonPhysicalRegion.__init__", "correction.NonPhysicalRegion.correct", "correction.NonPhysicalRegion.correctable", "correction.NonPhysicalRegion.identify", "correction.NonPhysicalRegion.is_close", "correction.NonPhysicalRegion.message", "correction.NonPhysicalRegion.obj", "correction.NonPhysicalRegion.rmax", "correction.NonPhysicalRegion.rmin", "correction.NonPhysicalRegion.size", "correction.NonPhysicalRegion.type", "correction.Type0NPR", "correction.Type0NPR.__init__", "correction.Type0NPR.correct", "correction.Type0NPR.correctable", "correction.Type0NPR.identify", "correction.Type0NPR.is_close", "correction.Type0NPR.message", "correction.Type0NPR.obj", "correction.Type0NPR.rmax", "correction.Type0NPR.rmin", "correction.Type0NPR.size", "correction.Type0NPR.type", "correction.Type0aNPR", "correction.Type0aNPR.__init__", "correction.Type0aNPR.correct", "correction.Type0aNPR.correctable", "correction.Type0aNPR.identify", "correction.Type0aNPR.is_close", "correction.Type0aNPR.message", "correction.Type0aNPR.obj", "correction.Type0aNPR.rmax", "correction.Type0aNPR.rmin", "correction.Type0aNPR.size", "correction.Type0aNPR.type", "correction.Type0bNPR", "correction.Type0bNPR.__init__", "correction.Type0bNPR.correct", "correction.Type0bNPR.correctable", "correction.Type0bNPR.identify", "correction.Type0bNPR.is_close", "correction.Type0bNPR.message", "correction.Type0bNPR.obj", "correction.Type0bNPR.rmax", "correction.Type0bNPR.rmin", "correction.Type0bNPR.size", "correction.Type0bNPR.type", "correction.Type0cNPR", "correction.Type0cNPR.__init__", "correction.Type0cNPR.correct", "correction.Type0cNPR.correctable", "correction.Type0cNPR.identify", "correction.Type0cNPR.is_close", "correction.Type0cNPR.message", "correction.Type0cNPR.obj", "correction.Type0cNPR.rmax", "correction.Type0cNPR.rmin", "correction.Type0cNPR.size", "correction.Type0cNPR.type", "correction.Type1NPR", "correction.Type1NPR.__init__", "correction.Type1NPR.correct", "correction.Type1NPR.correctable", "correction.Type1NPR.identify", "correction.Type1NPR.is_close", "correction.Type1NPR.message", "correction.Type1NPR.obj", "correction.Type1NPR.rmax", "correction.Type1NPR.rmin", "correction.Type1NPR.size", "correction.Type1NPR.type", "correction.Type1aNPR", "correction.Type1aNPR.__init__", "correction.Type1aNPR.correct", "correction.Type1aNPR.correctable", "correction.Type1aNPR.identify", "correction.Type1aNPR.is_close", "correction.Type1aNPR.message", "correction.Type1aNPR.obj", "correction.Type1aNPR.rmax", "correction.Type1aNPR.rmin", "correction.Type1aNPR.size", "correction.Type1aNPR.type", "correction.Type2NPR", "correction.Type2NPR.__init__", "correction.Type2NPR.correct", "correction.Type2NPR.correctable", "correction.Type2NPR.identify", "correction.Type2NPR.is_close", "correction.Type2NPR.message", "correction.Type2NPR.obj", "correction.Type2NPR.rmax", "correction.Type2NPR.rmin", "correction.Type2NPR.size", "correction.Type2NPR.type", "correction.Type2aNPR", "correction.Type2aNPR.__init__", "correction.Type2aNPR.correct", "correction.Type2aNPR.correctable", "correction.Type2aNPR.identify", "correction.Type2aNPR.is_close", "correction.Type2aNPR.message", "correction.Type2aNPR.obj", "correction.Type2aNPR.rmax", "correction.Type2aNPR.rmin", "correction.Type2aNPR.size", "correction.Type2aNPR.type", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.create_dataset", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.find_radius_for_density", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.items", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.panel_plot", "model.ClusterModel.plot", "model.ClusterModel.properties", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.values", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.create_dataset", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.find_radius_for_density", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.items", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.panel_plot", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.properties", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.values", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "numalgs", "numalgs.extrap_power_law", "numalgs.find_holes", "numalgs.identify_domain_borders", "numalgs.monotone_interpolation", "numalgs.positive_interpolation", "numalgs.solve_temperature", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.combine_three_clusters", "particles.combine_two_clusters", "particles.resample_one_cluster", "particles.resample_three_clusters", "particles.resample_two_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.name", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "relations.rho_scale_hern", "utils", "utils.LogMute", "utils.LogMute.__init__", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.parse_prng", "utils.time_limit", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "Your First Journey With CG", "API", "Simulation Software", "Cluster Collections", "Correcting Non-Physical Behavior", "Methods For Correcting Non-Physical Regions", "Examples", "Generating 3D Cluster Fields", "Quickstart Guide", "Cluster Generator", "Initial Conditions Generation", "Cluster Models", "Particles", "Radial Profiles"], "terms": {"welcom": [0, 402], "cluster": [0, 2, 3, 6, 7, 11, 12, 13, 16, 17, 21, 22, 23, 28, 29, 32, 33, 37, 38, 39, 42, 43, 47, 52, 53, 54, 55, 56, 57, 64, 76, 88, 100, 112, 124, 132, 136, 148, 160, 219, 220, 221, 226, 263, 305, 306, 309, 320, 321, 322, 323, 324, 337, 338, 339, 340, 341, 367, 368, 372, 391, 398, 400, 401, 402, 404, 408, 409], "gener": [0, 12, 26, 52, 53, 54, 55, 56, 57, 169, 213, 217, 221, 232, 237, 238, 239, 240, 246, 247, 269, 274, 275, 276, 277, 283, 284, 297, 309, 331, 332, 343, 369, 383, 391, 395, 396, 398, 399, 400, 401, 404], "On": [0, 398, 402, 409], "thi": [0, 12, 23, 26, 54, 55, 57, 60, 62, 64, 69, 74, 76, 81, 86, 88, 93, 98, 100, 105, 110, 112, 117, 122, 124, 129, 132, 134, 136, 141, 146, 148, 153, 158, 160, 165, 171, 176, 181, 186, 191, 196, 201, 206, 213, 217, 226, 237, 238, 239, 240, 246, 247, 256, 263, 274, 275, 276, 277, 283, 284, 293, 296, 297, 305, 306, 328, 332, 336, 361, 367, 388, 391, 392, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409], "page": [0, 396, 398, 400, 402, 404, 407, 409], "you": [0, 237, 238, 239, 240, 256, 274, 275, 276, 277, 293, 395, 396, 398, 400, 402, 404, 405, 408, 409], "ll": [0, 396, 402, 409], "find": [0, 230, 267, 297, 349, 352, 353, 364, 396, 400, 401, 402, 405, 407, 408, 409], "link": 0, "varieti": [0, 396, 398, 400, 402, 404, 405, 407], "differ": [0, 173, 178, 183, 188, 193, 198, 203, 208, 246, 283, 297, 326, 392, 396, 405, 407, 408], "which": [0, 3, 13, 29, 39, 55, 58, 68, 69, 72, 80, 81, 84, 92, 93, 96, 104, 105, 108, 116, 117, 120, 128, 129, 132, 140, 141, 144, 152, 153, 164, 165, 171, 176, 181, 186, 191, 196, 201, 206, 209, 210, 213, 214, 216, 219, 226, 231, 232, 233, 237, 238, 239, 240, 244, 246, 247, 249, 251, 252, 263, 268, 269, 270, 274, 275, 276, 277, 281, 283, 284, 286, 288, 289, 296, 297, 298, 299, 300, 305, 306, 319, 328, 331, 358, 359, 391, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409], "provid": [0, 1, 3, 13, 29, 39, 62, 74, 86, 98, 110, 122, 134, 146, 158, 296, 297, 335, 344, 396, 398, 399, 400, 401, 404, 405, 407, 408, 409], "an": [0, 23, 58, 62, 74, 86, 98, 110, 122, 134, 146, 158, 173, 178, 183, 188, 193, 198, 203, 208, 209, 210, 213, 214, 224, 226, 249, 255, 257, 261, 263, 286, 292, 294, 296, 299, 300, 309, 315, 316, 317, 319, 332, 335, 345, 352, 353, 356, 357, 358, 361, 373, 396, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409], "indepth": 0, "look": [0, 396, 400, 402, 404, 405, 409], "under": [0, 388, 401, 409], "hood": [0, 409], "radial": [0, 1, 234, 235, 244, 250, 251, 271, 272, 281, 287, 288, 296, 313, 322, 326, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 392, 396, 404, 405, 406, 408], "profil": [0, 1, 2, 3, 13, 22, 23, 26, 28, 29, 38, 39, 55, 72, 96, 120, 132, 156, 212, 213, 216, 217, 230, 233, 234, 235, 244, 250, 251, 267, 270, 271, 272, 281, 287, 288, 296, 297, 299, 300, 301, 322, 325, 326, 327, 328, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 384, 385, 386, 391, 392, 396, 399, 400, 401, 402, 404, 405, 406, 408], "ar": [0, 22, 23, 54, 57, 65, 72, 77, 89, 101, 113, 120, 125, 132, 137, 144, 149, 156, 161, 173, 178, 183, 188, 193, 198, 203, 208, 209, 210, 214, 219, 221, 234, 235, 244, 246, 248, 255, 271, 272, 281, 283, 285, 292, 296, 299, 305, 306, 396, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409], "basi": 0, "all": [0, 12, 55, 60, 62, 64, 72, 74, 76, 84, 86, 88, 96, 98, 100, 108, 110, 112, 120, 122, 124, 132, 134, 136, 144, 146, 148, 156, 158, 160, 214, 226, 246, 248, 256, 263, 283, 285, 293, 306, 307, 310, 313, 316, 396, 398, 399, 400, 402, 404, 405, 407, 408, 409], "model": [0, 1, 22, 23, 26, 59, 60, 62, 64, 74, 76, 86, 88, 98, 100, 110, 112, 122, 124, 134, 136, 146, 148, 158, 160, 213, 217, 309, 342, 349, 364, 367, 390, 391, 398, 399, 400, 402, 403, 404, 405, 408], "built": [0, 23, 66, 78, 90, 102, 114, 126, 138, 150, 162, 330, 396, 400, 405, 407], "read": [0, 55, 58, 215, 236, 273, 309, 310, 398, 399, 404, 408, 409], "time": [0, 62, 74, 86, 98, 110, 122, 134, 146, 158, 237, 238, 239, 240, 274, 275, 276, 277, 345, 388, 395, 396, 399, 402, 403, 404, 407], "10": [0, 62, 74, 86, 98, 110, 122, 134, 146, 158, 296, 299, 300, 396, 408, 409], "minut": 0, "learn": [0, 402, 404, 405, 407], "more": [0, 62, 74, 86, 98, 110, 122, 134, 146, 158, 217, 306, 396, 400, 401, 403, 404, 405, 406, 407, 408, 409], "about": [0, 55, 210, 396, 399, 402, 404, 407, 409], "central": [0, 219, 251, 288, 297, 341], "clustermodel": [0, 22, 23, 26, 59, 60, 62, 64, 74, 76, 86, 88, 98, 100, 110, 112, 122, 124, 134, 136, 146, 148, 158, 160, 213, 220, 258, 259, 269, 270, 273, 281, 285, 289, 391, 396, 399], "class": [0, 1, 2, 12, 22, 23, 28, 38, 59, 60, 62, 72, 74, 84, 86, 96, 98, 108, 110, 120, 122, 132, 134, 144, 146, 156, 158, 168, 169, 174, 179, 184, 189, 194, 199, 204, 211, 212, 220, 221, 232, 258, 269, 302, 303, 325, 326, 377, 378, 389, 390, 396, 399, 400, 401, 406, 407, 409], "can": [0, 221, 226, 227, 250, 251, 256, 263, 264, 287, 288, 293, 300, 306, 319, 359, 391, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409], "your": [0, 226, 263, 297, 399, 400, 402, 403, 404, 405, 409], "workflow": 0, "30": 0, "code": [0, 26, 213, 217, 296, 319, 396, 398, 399, 400, 403, 404, 405, 408, 409], "avail": [0, 12, 23, 132, 221, 237, 238, 239, 240, 246, 274, 275, 276, 277, 283, 395, 396, 399, 400, 402, 404, 405, 407], "simul": [0, 211, 213, 319, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "ic": [0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 396, 398, 404, 408], "collect": [0, 2, 3, 4, 6, 7, 8, 11, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 47, 402, 404, 405], "pre": [0, 1, 23, 213, 246, 283, 296, 328, 404, 405, 407], "packag": [0, 377, 399, 405, 407], "particl": [0, 54, 55, 57, 58, 171, 176, 181, 186, 191, 196, 201, 206, 213, 216, 217, 237, 238, 239, 240, 274, 275, 276, 277, 383, 391, 392, 395, 396, 398, 404, 405, 406, 407], "initi": [0, 3, 13, 23, 26, 29, 39, 72, 120, 132, 168, 211, 213, 215, 216, 217, 218, 221, 222, 232, 236, 244, 259, 269, 273, 281, 302, 303, 319, 329, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408], "condit": [0, 132, 211, 213, 215, 216, 217, 218, 221, 302, 303, 319, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408], "interest": [0, 398, 399], "how": [0, 55, 398, 400, 402, 404, 405, 407, 408, 409], "oper": [0, 404], "here": [0, 296, 350, 351, 400, 404, 405, 407, 409], "": [0, 12, 38, 59, 60, 66, 78, 90, 102, 114, 126, 138, 150, 162, 247, 255, 284, 292, 306, 322, 341, 345, 372, 396, 399, 400, 401, 402, 403, 404, 405, 407, 409], "correct": [0, 23, 209, 296, 300, 376, 399, 402, 404, 405, 407], "non": [0, 59, 60, 62, 64, 70, 71, 72, 74, 76, 82, 83, 84, 86, 88, 94, 95, 96, 98, 100, 106, 107, 108, 110, 112, 118, 119, 120, 122, 124, 130, 131, 132, 134, 136, 142, 143, 144, 146, 148, 154, 155, 156, 158, 160, 166, 167, 246, 283, 297, 398, 399, 402, 404, 405], "physic": [0, 59, 60, 62, 64, 70, 71, 72, 74, 76, 82, 83, 84, 86, 88, 94, 95, 96, 98, 100, 106, 107, 108, 110, 112, 118, 119, 120, 122, 124, 130, 131, 132, 134, 136, 142, 143, 144, 146, 148, 154, 155, 156, 158, 160, 166, 167, 220, 246, 283, 326, 398, 399, 402, 404, 405, 409], "region": [0, 62, 70, 71, 72, 74, 82, 83, 84, 86, 94, 95, 96, 98, 106, 107, 108, 110, 118, 119, 120, 122, 130, 131, 132, 134, 142, 143, 144, 146, 154, 155, 156, 158, 166, 167, 368, 399], "what": [0, 248, 285, 396, 398, 402, 404], "goe": [0, 396, 400], "behind": [0, 248, 285, 396], "when": [0, 132, 214, 221, 248, 285, 335, 352, 353, 358, 400, 401, 405, 407], "us": [0, 2, 22, 28, 38, 54, 55, 57, 60, 66, 78, 90, 102, 114, 126, 138, 150, 162, 171, 176, 181, 186, 191, 196, 201, 206, 213, 214, 216, 217, 221, 226, 234, 235, 246, 247, 255, 256, 263, 271, 272, 283, 284, 292, 293, 295, 296, 297, 298, 305, 306, 315, 319, 332, 335, 352, 353, 358, 359, 372, 391, 392, 396, 398, 400, 401, 403, 404, 405, 406, 408], "modul": [0, 1, 23, 59, 220, 302, 377, 389, 399, 400, 402, 404, 405, 409], "npr": [0, 62, 64, 65, 66, 72, 74, 76, 77, 78, 86, 88, 89, 90, 98, 100, 101, 102, 110, 112, 113, 114, 120, 122, 124, 125, 126, 134, 136, 137, 138, 144, 146, 148, 149, 150, 156, 158, 160, 161, 162, 399], "numer": [0, 295, 399, 404, 407, 408], "analysi": [0, 2, 404], "go": [0, 2, 28, 38, 328, 331, 396, 399, 400, 401], "algorithm": [0, 295, 296, 297, 399, 400, 401, 405, 407], "underli": [0, 26, 401, 405, 408], "mathemat": [0, 404, 409], "field": [0, 55, 132, 213, 216, 221, 222, 226, 227, 230, 232, 241, 242, 245, 246, 247, 249, 250, 251, 254, 256, 258, 259, 263, 264, 267, 269, 278, 279, 282, 283, 284, 286, 287, 288, 291, 293, 303, 304, 308, 315, 319, 396, 398, 400, 401, 404, 405], "magnet": [0, 55, 168, 213, 250, 251, 287, 288, 398, 404], "The": [1, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 22, 23, 26, 29, 30, 31, 34, 35, 36, 39, 40, 41, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 81, 83, 86, 88, 89, 90, 91, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 119, 122, 124, 125, 126, 127, 128, 129, 131, 134, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 150, 151, 152, 153, 155, 158, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 186, 187, 188, 191, 192, 193, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 213, 214, 218, 219, 221, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 305, 309, 310, 313, 315, 316, 317, 319, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 388, 391, 392, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409], "user": [1, 12, 22, 23, 26, 72, 211, 248, 256, 285, 293, 296, 398, 399, 400, 401, 404, 405, 408, 409], "access": [1, 227, 264, 405, 409], "exist": [1, 58, 132, 173, 178, 183, 188, 193, 198, 203, 208, 246, 255, 256, 257, 283, 292, 293, 294, 315, 317, 319, 328, 401, 402, 403, 408], "known": [1, 399, 404, 407], "system": [1, 213, 237, 238, 239, 240, 274, 275, 276, 277, 313, 350, 395, 399, 400, 401, 404, 405, 407, 408], "sourc": [2, 3, 4, 5, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 70, 72, 73, 84, 85, 96, 97, 108, 109, 120, 121, 132, 133, 144, 145, 156, 157, 169, 170, 171, 173, 174, 175, 179, 180, 184, 189, 190, 194, 195, 199, 204, 205, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 404, 405, 408], "13": [2, 38, 396], "low": [2, 28, 38, 328], "redshift": [2, 28, 38, 352, 353, 358], "galaxi": [2, 28, 38, 220, 339, 340, 341, 367, 368, 396, 399, 402, 404, 405, 407], "chandra": [2, 28, 38, 405], "detail": [2, 28, 38, 221, 396, 404, 405, 408, 409], "type": [2, 23, 28, 38, 58, 62, 64, 65, 66, 72, 74, 76, 77, 78, 84, 86, 88, 89, 90, 96, 98, 100, 101, 102, 108, 110, 112, 113, 114, 120, 122, 124, 125, 126, 132, 134, 136, 137, 138, 144, 146, 148, 149, 150, 156, 158, 160, 161, 162, 171, 176, 181, 186, 191, 196, 201, 206, 209, 216, 224, 232, 233, 237, 239, 244, 247, 252, 256, 261, 269, 270, 274, 276, 281, 284, 289, 293, 296, 298, 301, 302, 306, 307, 309, 310, 313, 315, 316, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 391, 395, 398, 403, 404, 405, 407], "x": [2, 28, 38, 210, 219, 247, 284, 296, 297, 298, 299, 300, 380, 382, 398, 401, 404, 405, 408, 409], "rai": [2, 28, 38, 404, 405], "observ": [2, 28, 38, 399, 400, 404, 405], "secondari": [2, 28], "observatori": [2, 28, 38, 405], "rho_g": [2, 28, 38, 84, 120, 132, 144, 156, 399, 400, 401, 407], "t_g": [2, 28, 38, 84, 120, 132, 144, 156, 400, 407], "author": [2, 10, 20, 28, 36, 38, 46], "y": [2, 210, 219, 296, 297, 299, 300, 339, 398], "ascasibar": [2, 337, 339, 405], "j": [2, 28, 362], "m": [2, 38, 299, 300, 339, 341, 345, 347, 348, 350, 351, 352, 362, 363, 365, 376, 383, 396, 398, 401, 408], "diego": [2, 337], "recommend": [2, 23, 28, 38, 398, 404, 405, 408], "citat": [2, 28, 38, 409], "To": [2, 28, 38, 297, 396, 400, 401, 404, 405, 407, 408], "method": [2, 12, 22, 23, 28, 38, 59, 60, 62, 72, 74, 84, 86, 96, 98, 108, 110, 120, 122, 132, 134, 144, 146, 156, 158, 169, 174, 179, 184, 189, 194, 199, 204, 212, 220, 221, 226, 236, 258, 263, 273, 297, 299, 303, 326, 378, 383, 390, 392, 396, 398, 399, 400, 402, 403, 404, 407, 408], "attribut": [2, 12, 28, 38, 60, 72, 84, 96, 108, 120, 132, 144, 156, 169, 174, 179, 184, 189, 194, 199, 204, 221, 232, 236, 248, 256, 258, 269, 273, 285, 293, 303, 326, 390, 398, 407], "instanc": [3, 13, 23, 26, 29, 39, 58, 59, 60, 62, 64, 65, 74, 76, 77, 86, 88, 89, 98, 100, 101, 110, 112, 113, 122, 124, 125, 134, 136, 137, 146, 148, 149, 158, 160, 161, 213, 221, 222, 228, 236, 244, 246, 248, 252, 253, 259, 265, 273, 281, 283, 285, 289, 290, 326, 333, 335, 336, 396, 399, 400, 401, 407, 408, 409], "paramet": [3, 13, 22, 23, 26, 29, 39, 52, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 74, 76, 77, 78, 86, 88, 89, 90, 98, 100, 101, 102, 110, 112, 113, 114, 122, 124, 125, 126, 134, 136, 137, 138, 146, 148, 149, 150, 158, 160, 161, 162, 169, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 248, 250, 251, 252, 255, 256, 257, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 285, 287, 288, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 305, 306, 309, 310, 313, 315, 316, 317, 319, 326, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 388, 391, 395, 399, 401, 408, 409], "data": [3, 5, 12, 13, 15, 29, 31, 39, 41, 213, 296, 310, 396, 399, 407], "str": [3, 13, 23, 29, 39, 173, 178, 183, 188, 193, 198, 203, 208, 209, 213, 221, 232, 236, 246, 248, 255, 256, 257, 269, 273, 283, 285, 292, 293, 294, 333, 336], "pathlib": [3, 13, 29, 39], "path": [3, 13, 29, 39, 213, 256, 293], "panda": [3, 13, 29, 39, 404], "datafram": [3, 13, 29, 39], "If": [3, 13, 23, 26, 29, 39, 54, 55, 57, 62, 64, 65, 74, 76, 77, 86, 88, 89, 98, 100, 101, 110, 112, 113, 122, 124, 125, 134, 136, 137, 146, 148, 149, 158, 160, 161, 169, 209, 217, 218, 226, 236, 237, 238, 239, 240, 246, 248, 256, 263, 273, 274, 275, 276, 277, 283, 285, 293, 296, 297, 300, 305, 306, 310, 313, 315, 316, 319, 352, 353, 358, 367, 391, 395, 396, 400, 401, 403, 404, 405, 407, 408, 409], "object": [3, 13, 29, 39, 52, 53, 54, 55, 56, 57, 64, 67, 76, 79, 88, 91, 100, 103, 112, 115, 124, 127, 136, 139, 148, 151, 160, 163, 171, 176, 181, 186, 191, 196, 201, 206, 229, 237, 238, 239, 240, 248, 266, 274, 275, 276, 277, 285, 325, 326, 330, 331, 333, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 391, 395, 399, 400, 403, 404, 409], "result": [3, 13, 29, 39, 219, 244, 281, 296, 371, 396, 400, 403, 408], "should": [3, 12, 13, 23, 26, 29, 39, 55, 132, 213, 246, 247, 248, 256, 283, 284, 285, 293, 299, 300, 306, 331, 333, 336, 358, 396, 398, 400, 402, 407, 408, 409], "point": [3, 13, 29, 39, 233, 234, 235, 244, 270, 271, 272, 281, 296, 297, 335, 401, 407], "csv": [3, 13, 29, 39], "file": [3, 13, 29, 39, 54, 55, 57, 58, 173, 178, 183, 188, 193, 198, 203, 208, 213, 216, 218, 236, 255, 256, 257, 273, 292, 293, 294, 309, 310, 317, 319, 333, 336, 396, 398, 399, 404, 408, 409], "contain": [3, 13, 23, 26, 29, 39, 213, 220, 224, 232, 247, 261, 269, 284, 297, 298, 303, 328, 399, 405, 407, 408], "relev": [3, 13, 29, 39, 60, 299, 300], "i": [3, 12, 13, 22, 23, 29, 39, 54, 55, 57, 60, 62, 64, 65, 66, 68, 69, 74, 76, 77, 78, 80, 81, 86, 88, 89, 90, 92, 93, 98, 100, 101, 102, 104, 105, 110, 112, 113, 114, 116, 117, 122, 124, 125, 126, 128, 129, 132, 134, 136, 137, 138, 140, 141, 146, 148, 149, 150, 152, 153, 158, 160, 161, 162, 164, 165, 169, 209, 217, 219, 221, 226, 237, 238, 239, 240, 244, 246, 247, 248, 249, 251, 263, 274, 275, 276, 277, 281, 283, 284, 285, 286, 288, 296, 297, 298, 299, 300, 305, 315, 326, 328, 331, 336, 337, 350, 351, 358, 359, 371, 381, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 409], "tabl": [3, 13, 29, 39, 407], "each": [3, 13, 23, 29, 39, 65, 77, 89, 101, 113, 125, 137, 149, 161, 169, 213, 214, 237, 238, 239, 245, 246, 274, 275, 276, 282, 283, 296, 297, 395, 396, 398, 399, 400, 402, 403, 405, 407, 408, 409], "column": [3, 13, 29, 39], "name": [3, 13, 22, 23, 29, 39, 55, 58, 173, 178, 183, 188, 193, 198, 203, 208, 213, 218, 236, 246, 248, 249, 255, 256, 257, 273, 283, 285, 286, 292, 293, 294, 309, 310, 315, 317, 319, 326, 327, 329, 407, 408, 409], "float": [3, 13, 23, 26, 29, 39, 65, 77, 89, 101, 113, 125, 137, 149, 161, 210, 213, 214, 219, 226, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 250, 251, 252, 256, 257, 263, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 287, 288, 289, 293, 294, 296, 297, 299, 300, 305, 313, 316, 319, 328, 331, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 372, 373, 374, 375, 376, 388, 395, 409], "valu": [3, 13, 23, 29, 39, 65, 77, 89, 101, 113, 125, 132, 137, 149, 161, 209, 213, 230, 246, 248, 249, 267, 283, 285, 286, 296, 297, 298, 299, 300, 305, 315, 332, 337, 338, 344, 352, 359, 373, 374, 375, 396, 399, 403, 407, 408, 409], "subsequ": [3, 13, 29, 39], "correspond": [3, 12, 13, 23, 26, 29, 39, 62, 74, 86, 98, 110, 122, 132, 134, 146, 156, 158, 213, 246, 248, 283, 285, 296, 299, 300, 331, 332, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 399, 400, 401, 403, 407, 408], "IN": [3, 13, 29, 39], "order": [3, 13, 29, 39, 226, 263], "argument": [3, 13, 23, 26, 29, 39, 246, 283, 305, 388, 400, 403], "function": [3, 13, 23, 26, 29, 39, 48, 62, 66, 74, 78, 86, 90, 98, 102, 110, 114, 122, 126, 134, 138, 146, 150, 158, 162, 168, 211, 224, 261, 295, 296, 297, 300, 302, 325, 326, 332, 370, 377, 388, 391, 392, 396, 399, 401, 403, 404, 407, 408, 409], "schema": [3, 9, 12, 13, 19, 29, 35, 39, 45], "dict": [3, 13, 23, 26, 29, 39, 65, 77, 89, 101, 113, 125, 137, 149, 161, 213, 221, 232, 246, 247, 248, 269, 283, 284, 285], "properti": [4, 5, 8, 9, 10, 14, 15, 18, 19, 20, 30, 31, 34, 35, 36, 40, 41, 44, 45, 46, 60, 72, 84, 96, 108, 120, 132, 144, 156, 172, 177, 182, 187, 192, 197, 202, 207, 221, 222, 228, 232, 236, 244, 253, 256, 258, 259, 265, 269, 273, 281, 290, 293, 314, 393, 394, 396, 399, 400, 404, 408], "origin": [4, 10, 14, 20, 30, 36, 40, 46, 401, 408], "bibtex": [5, 15, 31, 41], "return": [6, 7, 11, 16, 17, 21, 32, 33, 37, 42, 43, 47, 58, 62, 64, 65, 66, 70, 74, 76, 77, 78, 82, 86, 88, 89, 90, 94, 98, 100, 101, 102, 106, 110, 112, 113, 114, 118, 122, 124, 125, 126, 130, 134, 136, 137, 138, 142, 146, 148, 149, 150, 154, 158, 160, 161, 162, 166, 209, 210, 224, 232, 233, 237, 239, 244, 246, 247, 252, 256, 261, 269, 270, 274, 276, 281, 283, 284, 289, 293, 296, 297, 298, 299, 300, 301, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 392, 395, 399, 400, 404, 408, 409], "equival": [6, 7, 11, 16, 17, 21, 32, 33, 37, 42, 43, 47, 223, 225, 241, 242, 254, 258, 260, 262, 278, 279, 291, 296, 400, 407], "self": [6, 7, 11, 16, 17, 21, 32, 33, 37, 42, 43, 47, 220, 221, 223, 225, 232, 241, 242, 254, 256, 260, 262, 269, 278, 279, 291, 293, 399, 400, 409], "from": [9, 19, 26, 35, 45, 52, 53, 54, 55, 56, 57, 132, 209, 213, 214, 215, 216, 217, 219, 224, 232, 233, 236, 246, 247, 250, 256, 261, 269, 270, 273, 283, 284, 287, 293, 296, 298, 300, 301, 309, 310, 313, 329, 333, 337, 338, 352, 353, 358, 361, 367, 368, 372, 391, 392, 396, 398, 399, 400, 404, 405, 409], "base": [12, 168, 237, 238, 239, 240, 246, 274, 275, 276, 277, 283, 297, 299, 300, 395, 398, 399, 404, 405, 407, 408], "rst": 12, "cgp": [12, 23, 59], "instanti": 12, "rather": [12, 408], "specif": [12, 23, 48, 247, 284, 319, 333, 398, 404, 405, 407, 408], "sub": [12, 60, 62, 74, 86, 98, 110, 122, 134, 146, 158, 237, 238, 239, 240, 274, 275, 276, 277, 395, 398, 400], "desir": [12, 234, 235, 244, 248, 271, 272, 281, 285, 399, 408], "databas": 12, "load_method": [22, 23], "precursor": 22, "fulli": [22, 399, 404], "realiz": [22, 399], "py": [22, 377, 409], "These": [22, 23, 221, 246, 248, 283, 285, 399, 400, 401, 404, 405, 407, 408, 409], "minim": [22, 398], "memori": [22, 214, 226, 263, 316, 404], "intens": [22, 226, 263], "placehold": 22, "allow": [22, 26, 237, 238, 239, 240, 274, 275, 276, 277, 300, 395, 401, 404, 407, 408, 409], "easili": [22, 405, 407, 408], "load": [22, 23, 247, 284, 309, 333, 399, 407, 409], "full": [22, 23, 398, 403], "callabl": [23, 66, 78, 90, 102, 114, 126, 138, 150, 162, 233, 270, 296, 297, 326, 332, 388, 409], "A": [23, 28, 38, 64, 76, 88, 100, 112, 124, 136, 148, 160, 234, 235, 237, 238, 239, 240, 244, 246, 247, 252, 271, 272, 274, 275, 276, 277, 281, 283, 284, 289, 296, 299, 300, 306, 309, 335, 342, 346, 347, 348, 350, 351, 354, 355, 359, 362, 363, 365, 366, 367, 368, 369, 372, 395, 400, 401, 403, 408], "dictionari": [23, 213, 246, 247, 248, 256, 283, 284, 285, 293], "definit": [23, 232, 269], "There": [23, 221, 246, 283, 400, 401, 404, 407], "two": [23, 65, 77, 89, 101, 113, 125, 137, 149, 161, 217, 219, 398, 400, 404, 407, 408], "option": [23, 26, 54, 55, 57, 58, 62, 65, 66, 74, 77, 78, 86, 89, 90, 98, 101, 102, 110, 113, 114, 122, 125, 126, 134, 137, 138, 146, 149, 150, 158, 161, 162, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 210, 213, 214, 218, 219, 221, 226, 232, 234, 235, 236, 237, 238, 239, 240, 244, 246, 248, 250, 251, 255, 257, 263, 269, 271, 272, 273, 274, 275, 276, 277, 281, 283, 285, 287, 288, 292, 294, 296, 297, 298, 299, 300, 305, 306, 310, 313, 315, 316, 317, 319, 330, 335, 337, 352, 353, 358, 372, 388, 391, 395, 398, 403, 404, 407, 408], "format": [23, 58, 173, 178, 183, 188, 193, 198, 203, 208, 215, 246, 247, 283, 284, 319, 352, 353, 358, 404, 405, 407, 408], "element": [23, 65, 77, 89, 101, 113, 125, 137, 149, 161, 232, 245, 269, 282, 306, 385], "assum": [23, 65, 77, 89, 101, 113, 125, 132, 137, 149, 161, 209, 250, 251, 287, 288, 305, 306, 403, 404, 407, 408], "defin": [23, 296, 297, 313, 325, 358, 396, 407, 408, 409], "alreadi": [23, 54, 55, 57, 315, 396, 403, 404, 407, 408], "cluster_gener": [23, 48, 58, 59, 60, 72, 84, 96, 108, 120, 132, 144, 156, 236, 273, 296, 309, 310, 377, 396, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409], "radial_profil": [23, 232, 269, 296, 396, 407, 409], "cannot": [23, 221, 236, 273, 407], "found": [23, 221, 236, 248, 273, 285, 300, 400, 401], "error": [23, 400], "rais": [23, 62, 74, 86, 98, 110, 122, 134, 146, 158, 296, 400], "ani": [23, 62, 74, 86, 98, 110, 122, 132, 134, 146, 158, 213, 246, 247, 256, 283, 284, 293, 328, 399, 400, 404, 405, 408, 409], "kind": [23, 408], "either": [23, 217, 296, 310, 319, 391, 403, 408], "explicit": 23, "lambda": [23, 326, 409], "It": [23, 248, 285, 396, 407, 408], "wrap": [23, 409], "radialprofil": [23, 232, 234, 235, 244, 269, 271, 272, 281, 296, 325, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 396, 407, 409], "dure": [23, 62, 74, 86, 98, 110, 120, 122, 134, 146, 158, 296, 300, 399, 400], "list": [23, 64, 65, 76, 77, 88, 89, 100, 101, 112, 113, 124, 125, 136, 137, 148, 149, 160, 161, 213, 246, 248, 256, 283, 285, 293, 298, 306, 309, 310, 313, 316, 380, 398, 404, 405, 407], "For": [23, 72, 226, 263, 296, 336, 396, 400, 404, 405, 407, 408, 409], "kei": [23, 26, 62, 65, 74, 77, 86, 89, 98, 101, 110, 113, 122, 125, 134, 137, 146, 149, 158, 161, 213, 221, 232, 246, 247, 248, 269, 283, 284, 285], "pair": [23, 408], "necessari": [23, 221, 396, 403, 405, 407, 409], "being": [23, 54, 57, 221, 226, 263, 400, 407, 408], "int": [23, 62, 74, 86, 98, 110, 122, 134, 146, 158, 210, 213, 214, 226, 233, 246, 263, 270, 283, 296, 297, 299, 300, 331, 337, 408], "follow": [23, 213, 297, 396, 398, 399, 400, 401, 404, 405, 407, 409], "unit": [23, 55, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 209, 247, 250, 251, 255, 257, 284, 287, 288, 292, 294, 305, 306, 313, 315, 319, 332, 372, 381, 382, 396, 398, 403, 408], "convent": [23, 401, 404], "doubt": 23, "we": [23, 226, 263, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409], "pass": [23, 26, 62, 65, 66, 74, 77, 78, 86, 89, 90, 98, 101, 102, 110, 113, 114, 122, 125, 126, 134, 137, 138, 146, 149, 150, 158, 161, 162, 221, 232, 244, 246, 248, 269, 281, 283, 285, 296, 297, 388, 401, 404], "unyt": [23, 213, 221, 232, 269, 371, 373, 374, 404, 408], "arrai": [23, 169, 209, 213, 219, 221, 224, 226, 232, 245, 249, 261, 263, 269, 282, 286, 296, 297, 298, 299, 300, 305, 306, 313, 315, 332, 371, 373, 374, 381, 392, 402, 404, 408, 409], "unyt_quant": [23, 371, 373, 374], "instead": [23, 221, 297, 298, 328, 407, 409], "process": [23, 62, 74, 86, 98, 110, 122, 134, 146, 158, 216, 228, 253, 265, 290, 297, 388, 398, 400, 401, 404, 405, 409], "befor": [23, 62, 74, 86, 98, 110, 122, 134, 146, 158, 255, 257, 292, 294, 398, 404], "proceed": 23, "analog": 23, "typic": [23, 237, 238, 239, 240, 274, 275, 276, 277, 395, 406, 407], "someth": [23, 396, 400, 404], "like": [23, 169, 209, 216, 219, 296, 299, 300, 305, 306, 313, 332, 396, 398, 399, 400, 404, 405, 409], "from_dens_and_temp": [23, 232, 269, 407], "from_dens_and_tden": [23, 232, 269, 396, 407], "rmin": [26, 60, 61, 65, 72, 73, 77, 84, 85, 89, 96, 97, 101, 108, 109, 113, 120, 121, 125, 132, 133, 137, 144, 145, 149, 156, 157, 161, 233, 234, 235, 244, 270, 271, 272, 281, 335, 400], "rmax": [26, 60, 61, 65, 72, 73, 77, 84, 85, 89, 96, 97, 101, 108, 109, 113, 120, 121, 125, 132, 133, 137, 144, 145, 149, 156, 157, 161, 233, 234, 235, 244, 270, 271, 272, 281, 335, 400], "additional_arg": 26, "none": [26, 50, 66, 78, 90, 102, 114, 126, 138, 150, 162, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 221, 222, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 256, 257, 258, 259, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 283, 284, 293, 294, 296, 297, 298, 305, 306, 309, 310, 311, 313, 315, 316, 319, 323, 324, 326, 327, 335, 336, 352, 353, 358, 367, 383, 390, 391, 395, 407], "kwarg": [26, 62, 74, 86, 98, 110, 122, 134, 146, 158, 214, 226, 232, 233, 234, 235, 244, 246, 247, 263, 269, 270, 271, 272, 281, 283, 284, 335, 388, 400, 401], "minimum": [26, 65, 69, 77, 81, 89, 93, 101, 105, 113, 117, 125, 129, 137, 141, 149, 153, 161, 165, 214, 226, 233, 234, 235, 236, 244, 246, 247, 256, 257, 263, 270, 271, 272, 273, 281, 283, 284, 293, 294, 297, 300, 305, 335, 368, 408], "radiu": [26, 68, 69, 80, 81, 92, 93, 104, 105, 116, 117, 128, 129, 140, 141, 152, 153, 164, 165, 213, 224, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 252, 256, 257, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 284, 289, 293, 294, 301, 313, 328, 331, 335, 337, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 375, 376, 395, 396, 401, 409], "regim": [26, 64, 76, 88, 100, 112, 124, 136, 148, 160, 296, 399], "kpc": [26, 169, 173, 178, 183, 188, 193, 198, 203, 208, 214, 219, 226, 234, 235, 237, 238, 239, 240, 244, 246, 247, 263, 271, 272, 274, 275, 276, 277, 281, 283, 284, 305, 306, 313, 316, 319, 328, 331, 332, 335, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 395, 396, 404, 408], "maximum": [26, 65, 68, 77, 80, 89, 92, 101, 104, 113, 116, 125, 128, 137, 140, 149, 152, 161, 164, 233, 234, 235, 237, 238, 239, 240, 244, 246, 247, 256, 257, 270, 271, 272, 274, 275, 276, 277, 281, 283, 284, 293, 294, 297, 300, 313, 335, 388, 395, 408], "addit": [26, 62, 74, 86, 98, 110, 122, 134, 146, 158, 169, 221, 232, 244, 246, 248, 269, 281, 283, 285, 319, 400, 404, 407, 408, 409], "reason": [26, 237, 238, 239, 240, 274, 275, 276, 277, 395, 400, 407], "specifi": [26, 108, 210, 226, 231, 237, 238, 239, 240, 246, 248, 252, 256, 263, 268, 274, 275, 276, 277, 283, 285, 289, 293, 296, 298, 319, 329, 395, 400, 404, 407, 408], "unless": [26, 404], "some": [26, 216, 251, 288, 296, 360, 375, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407], "alter": [26, 248, 285, 296, 328, 408], "ha": [26, 216, 249, 286, 296, 315, 358, 359, 382, 396, 398, 399, 400, 401, 403, 407, 408], "been": [26, 54, 55, 57, 216, 399, 400, 407], "made": [26, 62, 74, 86, 98, 110, 122, 134, 146, 158, 209, 399, 400, 404], "word": 26, "along": [26, 173, 178, 183, 188, 193, 198, 203, 208, 219, 349, 364], "stellar_dens": [26, 227, 232, 233, 234, 235, 244, 264, 269, 270, 271, 272, 281], "overridden": 26, "also": [26, 55, 173, 178, 183, 188, 193, 198, 203, 208, 296, 396, 398, 400, 404, 405, 407, 408, 409], "stellar": [26, 221, 232, 233, 234, 235, 244, 253, 269, 270, 271, 272, 281, 290, 350, 391, 407, 408], "densiti": [26, 96, 132, 214, 216, 217, 227, 231, 232, 233, 234, 235, 238, 240, 244, 251, 264, 268, 269, 270, 271, 272, 275, 277, 281, 288, 301, 337, 338, 339, 342, 345, 346, 347, 350, 352, 353, 354, 356, 357, 358, 359, 360, 362, 365, 366, 367, 371, 376, 392, 396, 399, 400, 401, 404, 407, 408], "20": 28, "r": [28, 226, 230, 263, 267, 296, 299, 300, 301, 328, 331, 332, 342, 359, 376, 383, 396, 398, 399, 400, 401, 403, 407, 408], "sanderson": 28, "t": [28, 132, 296, 337, 338, 341, 396, 398, 399, 400, 401, 407], "ponman": 28, "vikhlinin": [38, 368, 372, 405], "kravtsov": [38, 368], "w": [38, 368], "forman": [38, 368], "c": [38, 296, 339, 340, 368, 398, 399, 401], "jone": 38, "markevitch": [38, 339, 405], "murrai": 38, "l": [38, 341, 354, 362], "van": 38, "speybroeck": 38, "util": [48, 370, 396, 398, 400, 404, 405], "librari": [48, 399, 402, 404, 405], "infil": 49, "outfil": 49, "overwrit": [49, 50, 58, 173, 178, 183, 188, 193, 198, 203, 208, 218, 246, 255, 256, 257, 283, 292, 293, 294, 317, 318, 319, 396, 408], "fals": [49, 50, 54, 55, 57, 58, 60, 63, 72, 75, 84, 87, 96, 99, 108, 111, 120, 123, 147, 169, 170, 173, 174, 175, 178, 183, 188, 189, 190, 193, 198, 203, 204, 205, 208, 217, 218, 237, 238, 239, 255, 256, 257, 274, 275, 276, 292, 293, 294, 298, 305, 315, 317, 318, 319, 395], "resampl": [49, 216, 322, 323, 324], "arepo": [49, 50, 216, 310, 405, 408], "boxsiz": 50, "nx": 50, "ic_fil": 50, "regenerate_particl": [50, 54, 55, 57, 217], "prng": [50, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205, 217, 237, 238, 239, 240, 274, 275, 276, 277, 383, 387, 395], "setup": [50, 51, 54, 55, 396, 398], "art": 51, "athena": [52, 402, 403, 405], "enzo": [53, 405], "use_particl": 54, "true": [54, 55, 57, 58, 62, 64, 74, 76, 86, 88, 98, 100, 110, 112, 122, 124, 132, 134, 135, 136, 144, 146, 148, 156, 158, 159, 160, 169, 217, 218, 237, 238, 239, 250, 251, 256, 274, 275, 276, 287, 288, 293, 297, 305, 315, 371, 395, 396, 399, 400, 408], "flash": [54, 58, 402, 403, 405], "par": 54, "line": [54, 55], "need": [54, 55, 359, 398, 400, 403, 404, 405, 407, 408, 409], "galaxyclustermerg": [54, 398], "dark": [54, 55, 221, 228, 237, 265, 274, 305, 337, 395, 398, 404], "matter": [54, 55, 221, 228, 237, 265, 274, 305, 337, 395, 398, 401, 404], "potenti": [54, 55, 169, 173, 178, 183, 188, 193, 198, 203, 208, 229, 237, 238, 239, 247, 266, 274, 275, 276, 284, 301, 305, 388, 395, 396, 398, 399, 404, 407, 408], "star": [54, 55, 213, 239, 276, 395, 398, 404, 407], "have": [54, 55, 57, 62, 74, 86, 98, 110, 122, 132, 134, 146, 158, 171, 176, 181, 186, 191, 196, 201, 206, 217, 237, 238, 239, 240, 246, 274, 275, 276, 277, 283, 336, 395, 396, 399, 400, 403, 404, 405, 407, 408, 409], "creat": [54, 55, 57, 171, 176, 181, 186, 191, 196, 201, 206, 214, 226, 263, 316, 335, 398, 399, 400, 404, 406, 408], "yet": [54, 55, 399, 407], "thei": [54, 55, 132, 171, 176, 181, 186, 191, 196, 201, 206, 246, 248, 283, 285, 306, 396, 399, 400, 401, 407, 408], "step": [54, 55, 299, 300, 396, 398, 399, 400, 402, 404], "gamer": [54, 55, 58, 403, 405], "boolean": [54, 55, 57, 58, 173, 178, 183, 188, 193, 198, 203, 208, 218, 237, 238, 239, 250, 251, 274, 275, 276, 287, 288, 305, 315, 317, 319, 395, 408], "set": [54, 55, 57, 171, 176, 181, 186, 191, 196, 201, 206, 213, 217, 221, 237, 238, 239, 240, 246, 249, 250, 251, 274, 275, 276, 277, 283, 286, 287, 288, 305, 313, 315, 316, 395, 398, 400, 403, 404, 406, 408], "up": [54, 217, 246, 283, 398, 400, 404, 406, 408, 409], "distribut": [54, 240, 277, 306, 322, 337, 338, 391, 392, 396, 398, 404, 405, 406, 407, 408], "default": [54, 55, 57, 58, 62, 66, 74, 78, 86, 90, 98, 102, 110, 114, 122, 126, 134, 138, 146, 150, 158, 162, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 209, 214, 218, 219, 221, 226, 227, 237, 238, 239, 240, 247, 248, 250, 251, 255, 257, 263, 264, 274, 275, 276, 277, 284, 285, 287, 288, 292, 294, 296, 297, 299, 300, 305, 306, 313, 315, 317, 319, 335, 337, 352, 353, 358, 367, 372, 391, 395, 396, 399, 401, 403, 408], "flag": [54, 55, 57], "re": [54, 55, 57, 396, 400, 404, 405], "use_trac": 55, "input_testprob": 55, "clustermerg": [55, 398], "new": [55, 171, 176, 181, 186, 191, 196, 201, 206, 252, 289, 296, 306, 402, 403, 405], "cg": [55, 220, 255, 256, 257, 292, 293, 294, 295, 302, 389, 397, 398, 400, 401, 404, 405, 407, 408, 409], "present": [55, 65, 77, 89, 101, 113, 125, 137, 149, 161, 399], "note": [55, 132, 221, 236, 248, 273, 285, 296, 297, 299, 300, 328, 331, 332, 400, 404, 407], "given": [55, 216, 219, 243, 280, 305, 306, 329, 345, 350, 351, 352, 353, 358, 361, 371, 373, 375, 400, 403, 404, 407, 408], "add": [55, 169, 171, 176, 181, 186, 191, 196, 201, 206, 305, 306, 315, 328, 398, 400, 407, 409], "tracer": [55, 213, 240, 277], "gizmo": [56, 310, 402, 405, 408], "func": [56, 66, 78, 90, 102, 114, 126, 138, 150, 162], "rams": [57, 58, 402, 404, 405], "output_filenam": [58, 255, 256, 257, 292, 293, 294, 317, 318], "ptype": [58, 171, 176, 181, 186, 191, 196, 201, 206, 306, 307, 309, 310, 311, 313, 315, 316, 390, 391, 403, 408], "ptype_num": 58, "in_cg": [58, 255, 256, 257, 292, 293, 294], "hdf5": [58, 173, 178, 183, 188, 193, 198, 203, 208, 216, 236, 257, 273, 294, 309, 317, 319, 398, 407, 408], "write": [58, 173, 178, 183, 188, 193, 198, 203, 208, 218, 255, 256, 257, 292, 293, 294, 317, 319, 408], "clusterparticl": [58, 171, 176, 181, 186, 191, 196, 201, 206, 237, 239, 274, 276, 395, 403], "written": [58, 173, 178, 183, 188, 193, 198, 203, 208, 319, 403, 407, 408], "string": [58, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 218, 247, 248, 284, 285, 306, 309, 310, 313, 315, 316, 317, 319, 391, 409], "same": [58, 173, 178, 183, 188, 193, 198, 203, 208, 218, 237, 238, 239, 240, 255, 256, 257, 274, 275, 276, 277, 292, 293, 294, 315, 317, 395, 396, 400, 404, 408], "todo": [58, 179, 184, 189, 194, 199, 204, 212, 216, 322, 374, 390], "other": [59, 65, 77, 89, 101, 113, 125, 137, 149, 161, 168, 221, 248, 285, 398, 400, 404, 406, 409], "issu": [59, 226, 236, 246, 263, 273, 283, 399, 400, 401, 402, 404, 405, 407], "diagram": [59, 60, 72, 84, 96, 108, 120, 132, 144, 156, 400], "nonphysicalregion": [59, 72, 77, 84, 89, 96, 101, 108, 113, 120, 125, 132, 137, 144, 149, 156, 161, 399, 400], "type0npr": [59, 60, 84, 96, 108, 120, 132, 144, 156, 400], "type0anpr": [59, 60, 72, 96, 108, 120, 132, 144, 156, 400], "type0bnpr": [59, 60, 72, 84, 108, 120, 132, 144, 156, 400], "type0cnpr": [59, 60, 72, 84, 96, 120, 132, 144, 156, 400], "type1npr": [59, 60, 72, 84, 96, 108, 132, 144, 156, 400], "type1anpr": [59, 60, 62, 72, 74, 84, 86, 96, 98, 108, 110, 120, 122, 144, 146, 156, 158, 400, 401], "type2npr": [59, 60, 72, 84, 96, 108, 120, 132, 156], "type2anpr": [59, 60, 72, 84, 96, 108, 120, 132, 144, 401], "correctionfailur": [59, 60, 62, 72, 74, 84, 86, 96, 98, 108, 110, 120, 122, 132, 134, 144, 146, 156, 158, 400], "except": [59, 377, 399], "npr_type": [60, 61], "obj": [60, 61, 72, 73, 84, 85, 96, 97, 108, 109, 120, 121, 132, 133, 144, 145, 156, 157, 400], "archetyp": [60, 407], "parent": 60, "denot": 60, "scope": [60, 72, 84, 96, 108, 120, 132, 144, 156, 400], "graviti": [60, 72, 84, 96, 108, 120, 132, 144, 156, 248, 256, 285, 293, 398, 400, 402, 405], "classmethod": [62, 64, 74, 76, 86, 88, 98, 100, 110, 112, 122, 124, 134, 136, 146, 148, 158, 160, 215, 232, 233, 234, 235, 236, 244, 269, 270, 271, 272, 273, 281, 308, 309, 310, 311, 329, 332, 333, 400], "recurs": [62, 64, 74, 76, 86, 88, 98, 100, 110, 112, 122, 124, 134, 136, 146, 148, 158, 160, 399, 400], "fiter": [62, 74, 86, 98, 110, 122, 134, 146, 158], "identifi": [62, 74, 86, 98, 110, 122, 134, 146, 158, 297, 298, 319, 399, 400, 401], "seek": [62, 64, 74, 76, 86, 88, 98, 100, 110, 112, 122, 124, 134, 136, 146, 148, 158, 160, 236, 273], "bool": [62, 64, 65, 74, 76, 77, 86, 88, 89, 98, 100, 101, 110, 112, 113, 122, 124, 125, 134, 136, 137, 146, 148, 149, 158, 160, 161, 169, 217, 255, 256, 257, 292, 293, 294], "iter": [62, 65, 74, 77, 86, 89, 98, 101, 110, 113, 122, 125, 134, 137, 146, 149, 158, 161, 300], "through": [62, 74, 86, 98, 110, 122, 134, 146, 158, 232, 269, 296, 396, 398, 399, 404], "maxim": [62, 74, 86, 98, 110, 122, 134, 146, 158, 213, 236, 252, 273, 289, 388, 404, 407], "number": [62, 74, 86, 98, 110, 122, 134, 146, 158, 169, 213, 214, 217, 221, 226, 232, 233, 234, 235, 237, 238, 239, 240, 244, 245, 263, 269, 270, 271, 272, 274, 275, 276, 277, 281, 282, 297, 300, 315, 335, 395, 399, 404, 405, 408], "attempt": [62, 74, 86, 98, 110, 122, 134, 146, 158, 400], "failur": [62, 74, 86, 98, 110, 122, 134, 146, 158, 400, 401, 405], "mai": [62, 74, 86, 98, 110, 122, 132, 134, 146, 158, 248, 285, 296, 332, 359, 396, 399, 400, 401, 403, 404, 407, 408], "than": [62, 74, 86, 98, 110, 122, 134, 146, 158, 217, 299, 300, 328], "onli": [62, 74, 86, 98, 110, 122, 132, 134, 146, 158, 237, 238, 239, 240, 244, 256, 274, 275, 276, 277, 281, 293, 395, 398, 400, 401, 405, 408, 409], "select": [62, 74, 86, 98, 110, 122, 134, 146, 158, 246, 283, 358, 396], "inform": [62, 74, 86, 98, 110, 122, 134, 146, 158, 215, 218, 319, 396, 405, 407, 408, 409], "correction_paramet": [62, 74, 86, 98, 110, 122, 134, 146, 158, 300, 401], "degre": [62, 74, 86, 98, 110, 122, 134, 146, 158, 300, 337, 338, 401], "impos": [62, 74, 86, 98, 110, 122, 134, 146, 158, 400], "interpol": [62, 74, 86, 98, 110, 122, 134, 146, 158, 171, 176, 181, 186, 191, 196, 201, 206, 299, 300, 332, 401, 403, 404], "procedur": [62, 74, 86, 98, 110, 122, 134, 146, 158, 256, 293, 396, 403, 407], "one": [62, 74, 86, 98, 110, 122, 134, 146, 158, 217, 237, 238, 239, 240, 246, 247, 274, 275, 276, 277, 283, 284, 296, 306, 328, 335, 352, 353, 358, 359, 392, 395, 396, 398, 399, 400, 401, 403, 404, 406, 407, 408], "uncorrect": [62, 74, 86, 98, 110, 122, 134, 146, 158], "them": [64, 76, 88, 100, 112, 124, 136, 148, 160, 217, 396, 398, 400, 401, 407, 408, 409], "just": [64, 76, 88, 100, 112, 124, 136, 148, 160, 396, 409], "subtyp": [64, 76, 88, 100, 112, 124, 136, 148, 160], "propag": [64, 76, 88, 100, 112, 124, 136, 148, 160], "downward": [64, 76, 88, 100, 112, 124, 136, 148, 160], "tree": [64, 76, 88, 100, 112, 124, 136, 148, 160, 400], "pattern": [64, 76, 88, 100, 112, 124, 136, 148, 160], "indic": [64, 72, 76, 84, 88, 96, 100, 108, 112, 120, 124, 136, 144, 148, 160, 297, 298, 306, 315, 400, 407], "rtol": [65, 77, 89, 101, 113, 125, 137, 149, 161, 297, 299, 300], "0": [65, 72, 77, 89, 101, 113, 125, 132, 137, 149, 161, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205, 212, 213, 214, 219, 226, 251, 263, 288, 296, 297, 299, 300, 305, 313, 328, 337, 343, 352, 353, 358, 372, 396, 398, 399, 403, 407, 408], "01": [65, 77, 89, 101, 113, 125, 137, 149, 161, 399], "compar": [65, 77, 89, 101, 113, 125, 137, 149, 161, 297], "check": [65, 77, 89, 101, 113, 125, 132, 137, 149, 161, 246, 249, 283, 286, 315, 374, 396, 400, 404], "rel": [65, 77, 89, 101, 113, 125, 137, 149, 161, 217, 224, 226, 261, 263, 299, 300, 392, 399, 400, 405, 407, 408], "separ": [65, 77, 89, 101, 113, 125, 137, 149, 161, 219], "within": [65, 77, 89, 101, 113, 125, 132, 137, 149, 161, 237, 238, 239, 240, 243, 274, 275, 276, 277, 280, 319, 360, 372, 395, 401, 408], "toler": [65, 77, 89, 101, 113, 125, 137, 149, 161, 297, 299, 300], "equal": [65, 77, 89, 101, 113, 125, 137, 149, 161, 408], "radii": [65, 77, 89, 101, 113, 125, 137, 149, 161, 221, 237, 238, 239, 240, 274, 275, 276, 277, 296, 323, 324, 332, 383, 384, 395, 396, 400, 401, 402, 404, 407, 408], "requir": [65, 77, 89, 101, 113, 125, 137, 149, 161, 237, 238, 239, 240, 274, 275, 276, 277, 296, 336, 395, 398, 399, 401, 403, 404, 407, 408], "tupl": [65, 77, 89, 101, 113, 125, 137, 149, 161, 209, 214, 226, 247, 263, 284, 298], "form": [65, 77, 89, 101, 113, 125, 137, 149, 161, 209, 247, 284, 331, 350, 351, 399, 407], "describ": [65, 77, 89, 101, 113, 125, 137, 149, 161, 234, 235, 244, 248, 271, 272, 281, 285, 400, 407, 408], "abov": [65, 77, 89, 101, 113, 125, 137, 149, 161, 296, 399, 403, 404, 407, 408], "must": [65, 77, 89, 101, 113, 125, 137, 149, 161, 226, 232, 247, 263, 269, 284, 296, 299, 300, 326, 400, 407, 408], "comparison": [65, 77, 89, 101, 113, 125, 137, 149, 161], "print": [66, 78, 90, 102, 114, 126, 138, 150, 162, 396, 399, 409], "output": [66, 78, 90, 102, 114, 126, 138, 150, 162, 173, 178, 183, 188, 193, 198, 203, 208, 213, 216, 256, 293, 296, 378, 396, 404, 409], "displai": [66, 78, 90, 102, 114, 126, 138, 150, 162], "progenitor": [67, 79, 91, 103, 115, 127, 139, 151, 163], "referenc": [67, 79, 91, 103, 115, 127, 139, 151, 163], "defect": [68, 69, 80, 81, 92, 93, 104, 105, 116, 117, 128, 129, 140, 141, 152, 153, 164, 165], "detect": [68, 69, 80, 81, 92, 93, 104, 105, 116, 117, 128, 129, 140, 141, 152, 153, 164, 165, 399, 400], "marker": [72, 120, 144], "subclass": [72, 84, 96, 108, 120, 144, 400], "character": 72, "inher": 72, "basic": [72, 370, 377, 396, 402, 404, 405, 407], "exampl": [72, 236, 273, 296, 309, 310, 396, 399, 400, 404, 405, 407, 408, 409], "try": [72, 396, 399], "neg": [72, 84, 96, 400, 401], "temperatur": [72, 84, 132, 156, 214, 227, 235, 264, 272, 301, 337, 338, 339, 340, 359, 368, 396, 399, 400, 401, 404, 407], "associ": [84, 96, 108, 172, 177, 182, 187, 192, 197, 202, 207, 228, 229, 248, 253, 265, 266, 285, 290, 325], "entropi": [84, 233, 270, 341, 343, 359, 369, 396, 400, 404, 405, 407], "0a": 84, "s_g": [84, 400], "0b": 96, "caus": [108, 328, 331, 400, 401, 407], "elsewher": 108, "0c": 108, "1": [120, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205, 210, 237, 238, 239, 240, 246, 247, 274, 275, 276, 277, 283, 284, 296, 297, 298, 299, 300, 328, 331, 369, 371, 395, 396, 398, 399, 407, 408], "gravit": [120, 132, 144, 156, 237, 238, 239, 247, 248, 274, 275, 276, 284, 285, 305, 395, 396, 399, 400, 401, 402, 404, 405, 407, 408], "theori": [120, 144, 156, 248, 285, 400, 402, 404, 405, 407], "independ": [120, 400, 407], "driven": [120, 399], "breakdown": [120, 398], "deriv": [120, 296, 297, 399, 400, 401, 403, 404, 405, 407, 408], "behavior": [120, 246, 248, 283, 285, 296, 331, 332, 401, 402, 404, 405, 407, 409], "construct": [120, 233, 234, 235, 270, 271, 272, 391, 399, 400, 401, 405, 407], "where": [132, 219, 256, 293, 296, 297, 350, 351, 400, 401, 407, 408], "growth": 132, "rate": [132, 331], "ga": [132, 171, 176, 181, 186, 191, 196, 201, 206, 213, 216, 217, 233, 234, 235, 238, 240, 270, 271, 272, 275, 277, 301, 310, 337, 338, 396, 400, 403, 404, 407], "inconsist": [132, 156, 400, 401], "posit": [132, 217, 219, 237, 238, 239, 240, 274, 275, 276, 277, 296, 298, 300, 305, 306, 395, 396, 400, 401, 403, 404], "1a": [132, 400, 401], "nabla": [132, 400, 401, 403, 407], "phi": [132, 400, 401, 407, 408], "determin": [132, 219, 224, 231, 243, 246, 261, 268, 280, 283, 296, 300, 305, 399, 400, 401, 407, 408], "frac": [132, 296, 328, 331, 396, 400, 401, 407, 408], "k_bt": [132, 401], "m_p": [132, 400, 401, 407], "eta": [132, 251, 288, 400, 401, 407], "left": [132, 214, 226, 247, 263, 284, 296, 297, 328, 331, 400, 401, 407, 408], "partial_r": 132, "ln": [132, 400, 401, 407], "right": [132, 296, 297, 328, 331, 396, 400, 401, 407, 408], "becaus": [132, 296, 398, 399, 400, 401, 407], "spheric": [132, 385, 403, 404, 408], "symmetr": [132, 404, 408], "entir": [132, 213, 296, 399, 400, 407], "mass": [132, 214, 217, 234, 235, 243, 244, 271, 272, 280, 281, 305, 337, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 362, 363, 364, 366, 371, 373, 374, 376, 396, 400, 401, 404, 407, 408], "shell": 132, "therefor": [132, 400, 401, 407], "alwai": [132, 171, 176, 181, 186, 191, 196, 201, 206], "thu": [132, 296, 400, 401, 403, 408], "d": [132, 219, 328, 345, 398, 400, 401, 407, 408], "dr": [132, 328, 400, 401, 407], "type1a": 132, "reli": [132, 398, 409], "doe": [132, 400, 408], "consid": [132, 399, 401, 402, 404, 407], "even": [132, 396, 401, 408], "2": [144, 156, 210, 219, 250, 251, 287, 288, 296, 297, 298, 299, 300, 321, 324, 341, 350, 351, 396, 398, 404, 407, 408], "depend": [144, 156, 246, 283, 296, 396, 403], "asymptot": [156, 296, 400, 401, 407], "3d": [168, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 214, 226, 263, 404, 408], "task": [168, 404, 405, 406], "left_edg": [169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205, 214, 226, 263], "right_edg": [169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205], "ddim": [169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205], "pad": [169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205], "vector_potenti": [169, 170, 174, 175], "divergence_clean": [169, 170, 174, 175, 189, 190, 204, 205], "lower": 169, "edg": [169, 214, 226, 263, 298], "box": [169, 214, 226, 263, 319, 408], "dimens": [169, 214, 226, 263, 404], "upper": 169, "grid": [169, 214, 226, 246, 263, 283, 398, 403, 404], "ax": [169, 173, 178, 183, 188, 193, 198, 203, 208, 246, 247, 283, 284, 296, 335, 396, 408], "amount": [169, 408], "boundari": [169, 298], "vector": [169, 210, 407, 408], "diverg": [169, 403, 408], "remov": [169, 313, 403], "cluster_particl": [171, 176, 181, 186, 191, 196, 201, 206], "map": [171, 176, 181, 186, 191, 196, 201, 206, 296, 408], "tri": [171, 176, 181, 186, 191, 196, 201, 206], "linear": [171, 176, 181, 186, 191, 196, 201, 206, 403], "ad": [171, 176, 181, 186, 191, 196, 201, 206, 214, 217, 306, 315, 328, 402, 405], "almost": [171, 176, 181, 186, 191, 196, 201, 206, 400], "case": [171, 176, 181, 186, 191, 196, 201, 206, 213, 216, 247, 256, 284, 293, 296, 305, 399, 400, 401, 402, 405, 407, 408], "chang": [171, 176, 181, 186, 191, 196, 201, 206, 399], "impli": [171, 176, 181, 186, 191, 196, 201, 206, 296, 401, 407], "remain": [171, 176, 181, 186, 191, 196, 201, 206], "galact": [171, 176, 181, 186, 191, 196, 201, 206], "filenam": [173, 178, 183, 188, 193, 198, 203, 208, 215, 218, 236, 256, 273, 293, 309, 310, 311, 333, 336], "length_unit": [173, 178, 183, 188, 193, 198, 203, 208], "field_unit": [173, 178, 183, 188, 193, 198, 203, 208], "coordin": [173, 178, 183, 188, 193, 198, 203, 208, 214, 226, 263, 306, 313], "cell": [173, 178, 183, 188, 193, 198, 203, 208, 214, 216, 226, 263, 398, 403], "length": [173, 178, 183, 188, 193, 198, 203, 208, 246, 283, 337, 338, 376, 396, 404, 407], "affect": [173, 178, 183, 188, 193, 198, 203, 208], "l_min": [174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205], "l_max": [174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205], "alpha": [174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205, 296, 328, 337, 338, 339, 341, 343, 359, 367, 369, 401, 407], "3": [174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205, 210, 214, 226, 246, 251, 263, 283, 288, 296, 297, 306, 320, 323, 339, 342, 356, 357, 365, 366, 367, 396, 398, 400, 404, 407, 408], "6666666666666665": [174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 199, 200, 204, 205], "g_rm": [174, 175], "ctr1": [174, 175, 179, 180, 184, 185, 189, 190], "ctr2": [174, 175, 179, 180, 184, 185, 189, 190], "ctr3": [174, 175, 179, 180, 184, 185, 189, 190], "r1": [174, 175], "r2": [174, 175], "r3": [174, 175], "g1": [174, 175], "g2": [174, 175], "g3": [174, 175], "r_max": [174, 175, 179, 180, 184, 185, 189, 190, 212, 213, 236, 237, 238, 239, 240, 246, 247, 252, 256, 257, 273, 274, 275, 276, 277, 283, 284, 289, 293, 294, 313, 383, 395, 408], "manag": [174, 302, 378, 390, 396, 399], "gaussian": [174, 250, 251, 287, 288], "random": [174, 217, 237, 238, 239, 240, 274, 275, 276, 277, 387, 395, 408, 409], "profile1": [179, 180, 184, 185, 189, 190], "profile2": [179, 180, 184, 185, 189, 190], "profile3": [179, 180, 184, 185, 189, 190], "docstr": [179, 184, 189, 194, 199, 204, 212, 322, 404], "b_rm": [194, 195, 199, 200], "v_rm": [204, 205], "default_unit": [209, 382], "pars": 209, "convert": [209, 255, 257, 292, 294, 315, 371, 399, 404, 405, 407], "unyt_arrai": [209, 213, 221, 226, 232, 233, 249, 263, 269, 270, 286, 301, 306, 315, 371, 391, 407], "simpli": [209, 297, 400, 408], "v_arrai": 209, "v_unit": 209, "convers": [209, 371], "final": [209, 396, 400, 404, 408, 409], "quantiti": [209, 213, 214, 382, 404, 407, 408], "axi": [210, 247, 284], "gx": 210, "gy": 210, "gz": 210, "ang": 210, "rotat": 210, "angl": 210, "around": [210, 297, 396, 409], "compon": [210, 232, 269, 396, 403, 405, 407, 408], "z": [210, 219, 352, 353, 358], "over": [210, 247, 284, 297, 299, 300, 384, 385, 392, 408], "face": 211, "structur": [211, 248, 285, 396, 403, 404, 407, 409], "interfac": [211, 404, 405], "softwar": [211, 396, 400, 404, 405, 408], "basenam": [212, 213], "num_halo": [212, 213], "center": [212, 213, 219, 300, 306, 313, 322, 408, 409], "veloc": [212, 213, 214, 216, 217, 226, 237, 239, 263, 274, 276, 305, 306, 322, 395, 396, 404, 406, 407], "num_particl": [212, 213, 237, 238, 239, 240, 274, 275, 276, 277, 383, 395, 396, 408], "mag_fil": [212, 213], "particle_fil": [212, 213], "20000": [212, 213, 408], "r_max_trac": [212, 213], "refer": [213, 226, 263, 337, 339, 341, 342, 345, 349, 350, 354, 362, 364, 365, 368, 396, 397, 407, 409], "halo": [213, 345, 352, 353, 358, 398, 401, 404, 407, 408], "includ": [213, 227, 246, 255, 264, 283, 292, 398, 399, 403, 405, 407], "part": [213, 216, 400, 403, 405, 408], "speci": [213, 244, 281], "dm": [213, 310, 396, 404, 407, 408], "run": [213, 388, 396, 398, 402, 404, 406], "sph": [213, 217], "truncat": [213, 252, 289, 331, 365, 366, 409], "domain": [213, 214, 226, 263, 296, 297, 298, 299, 300, 316, 400, 401], "domain_dimens": [214, 226, 263], "box_siz": [214, 226, 263, 316, 319, 408], "uniformli": [214, 226, 246, 263, 283], "dataset": [214, 226, 263, 316, 399, 404, 405], "yt": [214, 226, 263, 316, 319, 352, 353, 358, 402, 404], "place": [214, 226, 246, 263, 283, 404, 405, 408, 409], "multipl": [214, 408], "per": 214, "volum": [214, 385], "pressur": [214, 227, 250, 264, 287, 396, 404, 407], "wherea": 214, "weight": [214, 217], "side": [214, 226, 263, 297, 316], "size": [214, 226, 249, 263, 286, 297, 315], "array_lik": [214, 226, 263, 297], "three": [214, 217, 226, 263, 398, 400, 403, 404, 408], "mean": [214, 226, 237, 238, 239, 240, 263, 274, 275, 276, 277, 306, 337, 371, 395, 396, 399, 404, 407], "yaml": [215, 404], "passive_scalar": [216, 315, 323, 324, 408], "gadget": [216, 310, 319, 398, 402], "relax": 216, "make": [216, 247, 249, 284, 286, 313, 315, 335, 396, 400, 401], "glass": 216, "meshrelax": 216, "thermal": [216, 217, 250, 287, 407], "energi": [216, 217, 238, 240, 275, 277, 404, 408], "onto": [216, 246, 283, 322, 403], "hydrostat": [216, 224, 234, 235, 238, 261, 271, 272, 275, 404, 408], "routin": 217, "singl": [217, 306, 310, 322, 398, 400, 403, 404, 406, 407, 408], "combin": [217, 320, 321, 396, 408], "togeth": [217, 400, 408], "overlap": 217, "regener": 217, "b": [219, 250, 251, 287, 288, 346, 368, 369, 398, 399, 401, 403, 409], "common": [219, 400, 401, 407], "distanc": 219, "calcul": [219, 361, 392, 400, 404, 408], "first": [219, 398, 399, 400, 402, 404, 407, 408], "direct": [219, 405, 408], "sep_x": 219, "sqrt": [219, 408], "between": [219, 335, 370, 372, 392, 404, 405, 407, 408], "impact": 219, "so": [219, 221, 255, 292, 319, 359, 396, 400, 403, 405, 407, 408, 409], "center1": [219, 320, 321, 323, 324], "5": [219, 296, 331, 350, 396, 399, 408], "center2": [219, 320, 321, 323, 324], "core": [220, 328, 337, 338, 339, 340, 342, 346, 347, 348, 349, 367, 399, 400, 404, 405, 407, 409], "relat": [220, 407], "repres": [220, 326, 337, 338, 396, 398, 399, 400, 401, 409], "consist": [220, 232, 269, 336, 399, 400, 408, 409], "dm_virial": [221, 222, 223, 258, 259, 260], "star_viri": [221, 222, 225, 258, 259, 262], "comprehens": [221, 405, 407, 409], "represent": 221, "accur": 221, "predic": 221, "fix": [221, 400, 401, 407], "sampl": [221, 233, 237, 238, 239, 240, 270, 274, 275, 276, 277, 383, 395], "see": [221, 396, 398, 399, 401, 402, 404, 405, 407, 408], "section": [221, 350, 351, 400, 404, 407], "virialequilibrium": [221, 228, 253, 265, 290], "virial": [221, 228, 237, 239, 253, 265, 274, 276, 290, 341, 402, 404, 405, 407], "By": [221, 408], "__getitem__": 221, "__contains__": 221, "alias": 221, "down": 221, "__setitem__": 221, "index": [221, 296, 328, 337, 350, 351, 359, 405], "assign": [221, 396, 403, 408], "done": [221, 296, 396, 398, 399, 403, 404, 407], "set_field": [221, 407, 408], "check_viri": [223, 225, 260, 262], "deviat": [224, 261, 407], "equilibrium": [224, 234, 235, 237, 238, 239, 255, 257, 261, 271, 272, 274, 275, 276, 292, 294, 391, 395, 404], "chk": [224, 261, 392], "numpi": [224, 261, 296, 297, 298, 299, 300, 306, 392, 404, 408], "suggest": [226, 263, 339, 340, 405], "conserv": [226, 263, 407], "choic": [226, 263, 396, 407], "begin": [226, 263, 401, 404, 407], "avoid": [226, 263], "oom": [226, 263], "500": [226, 263, 373, 374, 396, 408], "take": [226, 263, 296, 297, 328, 396, 399, 400, 402, 403, 404, 407], "appox": [226, 263], "3gb": [226, 263], "frame": [226, 263, 402, 408], "1x3": [226, 263], "total_dens": [227, 234, 244, 264, 271, 281, 396], "gravitational_potenti": [227, 264, 396], "gravitational_field": [227, 264, 396], "total_mass": [227, 264, 396], "gas_mass": [227, 264, 396], "dark_matter_mass": [227, 264, 396], "dark_matter_dens": [227, 264, 396, 408], "stellar_mass": [227, 264], "reach": [231, 268], "alon": [232, 269], "its": [232, 236, 269, 273, 296, 328, 398, 399, 401, 402, 403, 404, 409], "assess": [232, 269], "from_dens_and_entr": [232, 269, 407], "from_h5_fil": [232, 269, 407], "num_point": [233, 234, 235, 244, 270, 271, 272, 281, 335], "1000": [233, 234, 235, 244, 270, 271, 272, 281, 335, 408], "comput": [233, 237, 238, 239, 270, 274, 275, 276, 301, 352, 353, 358, 373, 375, 392, 395, 396, 399, 400, 401, 403, 407, 408], "total": [234, 244, 271, 281, 346, 347, 348, 349, 350, 351, 354, 355, 360, 362, 363, 364, 373, 374, 376, 396, 407, 408], "integ": [234, 235, 237, 238, 239, 240, 244, 271, 272, 274, 275, 276, 277, 281, 299, 300, 335, 339, 395], "evalu": [234, 235, 244, 271, 272, 281], "r_min": [236, 246, 247, 256, 257, 273, 283, 284, 293, 294], "both": [236, 273, 337, 338, 396, 400, 408], "later": [236, 273, 400, 403, 408], "lose": [236, 256, 273, 293], "warn": [236, 273, 399, 408], "import": [236, 273, 296, 309, 310, 396, 399, 400, 407, 408, 409], "hse_model": [236, 273], "h5": [236, 273, 309, 310, 396, 403, 404, 408], "sub_sampl": [237, 238, 239, 240, 274, 275, 276, 277, 395], "compute_potenti": [237, 238, 239, 274, 275, 276, 395, 408], "suppli": [237, 238, 239, 240, 248, 274, 275, 276, 277, 285, 352, 353, 358, 391, 395, 404, 407, 408], "out": [237, 238, 239, 240, 274, 275, 276, 277, 300, 395, 396, 402, 404, 408, 409], "uniqu": [237, 238, 239, 240, 274, 275, 276, 277, 395, 408], "repeat": [237, 238, 239, 240, 274, 275, 276, 277, 395], "fill": [237, 238, 239, 240, 274, 275, 276, 277, 300, 395], "randomst": [237, 238, 239, 240, 274, 275, 276, 277, 395], "pseudo": [237, 238, 239, 240, 274, 275, 276, 277, 337, 338, 395], "test": [237, 238, 239, 240, 274, 275, 276, 277, 395], "seed": [237, 238, 239, 240, 274, 275, 276, 277, 395], "compos": [244, 281, 400], "collisionless": [244, 281, 392, 408], "keyword": [244, 246, 281, 283, 388, 400], "fig": [246, 247, 283, 284, 296, 335, 396, 408], "aspect_ratio": [246, 283, 396], "base_length": [246, 283, 396], "gs_kwarg": [246, 283, 399], "plot": [246, 283, 396, 404, 408], "get": [246, 283, 400, 405, 406, 407, 408, 409], "impress": [246, 283], "otherwis": [246, 250, 251, 283, 287, 288, 296, 404, 408], "figur": [246, 247, 283, 284, 335, 396], "fresh": [246, 283], "cover": [246, 283, 408], "those": [246, 256, 283, 293, 396, 399, 404, 408], "drawn": [246, 283], "organ": [246, 283], "belong": [246, 283, 319], "subdivid": [246, 283], "facilit": [246, 283, 400, 405], "draw": [246, 283, 408], "aspect": [246, 283, 399, 400, 404, 405], "ratio": [246, 250, 283, 287, 337], "individu": [246, 283, 404, 409], "subplot": [246, 283, 296, 408], "rest": [246, 283, 396], "geometri": [246, 283], "matplotlib": [246, 247, 283, 284, 296, 335, 396, 399, 408], "gridspec": [246, 283], "directli": [246, 283, 399, 400, 402, 404, 409], "pyplot": [246, 283, 296, 396, 399, 408], "sever": [246, 283, 400, 401, 408], "miss": [246, 283], "appli": [246, 283, 407], "across": [246, 283], "v": [247, 284, 396, 398, 403, 407, 408], "unset": [247, 284], "label": [247, 284, 408], "scale": [247, 284, 337, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 376, 396, 404], "revis": [247, 284], "charact": [247, 284], "valid": [247, 284, 296, 333], "input": [247, 284, 349, 360, 364, 392, 398, 400, 403, 404, 408], "set_yscal": [247, 284], "normal": [247, 284, 306, 408], "flip": [247, 284], "below": [248, 285, 296, 297, 300, 398, 404, 407], "therein": [248, 285], "taken": [248, 285, 399], "standard": [248, 285, 326, 371, 404, 409], "anoth": [248, 285, 326, 400, 401, 407], "prefer": [248, 285, 336], "further": [248, 285, 408], "document": [248, 285, 400, 404, 405, 407], "In": [248, 285, 296, 297, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408], "meth": [248, 285], "scene": [248, 285, 396], "dictat": [248, 285, 296], "certain": [248, 285, 313, 359, 402, 404, 408, 409], "backend": [248, 285, 295, 399], "ill": [248, 285], "advis": [248, 285], "without": [248, 285, 400, 404, 405], "thorough": [248, 285], "understand": [248, 285, 400], "do": [248, 285, 396, 398, 399, 400, 403, 404, 405, 408, 409], "sure": [249, 286, 315, 396], "appropri": [249, 286, 315, 332, 404, 409], "beta": [250, 287, 339, 342, 367, 401, 407], "plasma": [250, 287, 407], "p_th": [250, 287], "p_b": [250, 251, 287, 288], "lorentz": [250, 251, 287, 288], "heavisid": [250, 251, 287, 288], "dimensionless": [250, 251, 287, 288, 337, 338, 396], "8": [250, 251, 287, 288, 396, 404, 408], "pi": [250, 251, 287, 288, 396, 408], "b0": [251, 288, 408], "6666666666666666": [251, 288], "proport": [251, 288, 407], "power": [251, 288, 296, 328, 350, 351, 359, 407], "usual": [251, 288, 404, 409], "strength": [251, 288], "gauss": [251, 288, 400], "ascii": [255, 292, 407], "text": [255, 292, 396, 401, 404, 405], "astropi": [255, 292], "qtabl": [255, 292], "whether": [255, 257, 292, 294, 319, 399, 400, 404], "fields_to_writ": [256, 293], "unformat": [256, 293], "fortran": [256, 293], "binari": [256, 293, 336, 398, 407, 409], "But": [256, 293], "why": [256, 293, 400], "would": [256, 293, 399, 404, 409], "want": [256, 293, 396, 401, 403, 404, 405, 407, 408, 409], "metadata": [256, 293], "attr": [256, 293], "As": [256, 293, 400, 401, 407], "manual": [256, 293, 407], "upon": [256, 293], "reopen": [256, 293], "too": [257, 294, 296, 399, 400], "x0": 296, "x1": 296, "f": [296, 299, 300, 328, 333, 336, 337, 345, 396, 398, 401, 408], "df": [296, 390, 391], "sign": 296, "extrapol": [296, 401], "give": [296, 407, 409], "particular": [296, 398, 400, 405], "law": [296, 350, 351, 359, 400, 407], "maintain": 296, "mathbb": 296, "x_0": [296, 401], "bound": [296, 404], "y1": 296, "piecewis": [296, 299, 300, 398, 401], "transit": [296, 367, 368], "vertex": [296, 401], "g": [296, 341, 353, 403, 404, 407], "y_1": [296, 401], "x_1": [296, 401], "suffici": 296, "larg": [296, 400, 401, 407, 408], "match": [296, 400, 407], "adjust": 296, "ndarrai": [296, 297, 298, 299, 300, 407], "valueerror": 296, "omega": [296, 401], "le": [296, 401], "design": [296, 398, 399, 404, 405], "presum": 296, "undesir": 296, "beyond": [296, 331, 332, 408], "tild": [296, 403], "xi": [296, 407], "e_": [296, 401], "pm": [296, 401], "mp": [296, 401], "gamma": [296, 367, 401, 407], "y_0": [296, 401], "yield": [296, 407], "x_0y_0": 296, "well": [296, 404], "suit": 296, "vikhlinin_temperature_profil": [296, 330, 405], "a133": [296, 399, 401, 402, 404], "fall": [296, 297], "off": [296, 396, 399, 403], "far": [296, 396, 400], "quickli": 296, "wa": [296, 299, 300, 396, 399, 400, 407, 408], "fit": [296, 399, 400, 401, 402, 404], "np": [296, 407, 408], "plt": [296, 396, 399, 408], "61": 296, "12": 296, "00": 296, "1420": 296, "9747": 296, "57": 296, "88": 296, "geomspac": 296, "5000": [296, 396, 408], "semilogx": 296, "k": [296, 331, 396, 398, 403], "xn": 296, "yn": 296, "700": 296, "800": 296, "show": [296, 396, 398, 399, 402, 404], "png": 296, "hire": 296, "pdf": 296, "001": [297, 299, 300], "dy": 297, "locat": 297, "hole": [297, 299, 300, 305, 401], "monoton": [297, 299, 300, 400, 401], "identif": [297, 299, 300], "nearli": 297, "increas": [297, 400, 401], "e": [297, 299, 300, 326, 328, 350, 353, 362, 365, 403, 404, 408], "fail": 297, "wrong": [297, 400], "wai": [297, 299, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408], "1e": 297, "scheme": [297, 299, 300, 401], "secant": 297, "slope": [297, 300, 341, 350, 351, 367, 368, 399, 401], "n": [297, 299, 300, 337, 339, 350, 351, 362, 398, 401, 403, 404, 405], "h": [297, 398, 399], "hx": 297, "respect": [297, 400, 407, 408, 409], "hy": 297, "everi": [297, 396, 400, 405], "hi": 297, "cumul": 297, "1d": [298, 403], "truth": [298, 399], "obtain": [298, 399, 404, 407], "consider": 298, "mark": 298, "buffer": [299, 300], "cubic": [299, 300, 319, 408], "spline": [299, 401], "patch": [299, 398, 401], "continu": [299, 332], "differenti": [299, 407, 408], "howev": [299, 336, 396, 399, 400, 401, 403, 404, 407], "2x": 299, "occur": [299, 300, 400, 405], "forc": [299, 300, 380, 401], "forward": 299, "larger": [299, 300], "enforc": [299, 300, 407], "newli": [299, 300], "solut": [299, 300], "methodologi": [299, 300, 400, 401], "develop": [299, 300, 398, 405], "eliza": [299, 300], "diggin": [299, 300, 401], "univers": [299, 300, 345, 398, 404], "utah": [299, 300], "work": [299, 300, 325, 339, 340, 396, 399, 400, 401, 403, 404, 409], "frisch": [299, 300], "carlson": [299, 300], "1980sjna": [299, 300], "17": [299, 300], "238f": [299, 300], "steffen": [299, 300], "1990a": [299, 300], "239": [299, 300], "443": [299, 300], "maxit": 300, "drop": [300, 307, 339, 340], "zero": [300, 331, 401, 403, 407, 408], "insist": 300, "carri": [300, 408, 409], "interv": 300, "potential_gradi": 301, "solv": [301, 403, 407, 408], "equat": [301, 361, 396, 407, 408], "gradient": [301, 400], "particle_typ": [303, 304], "bh_mass": 305, "po": [305, 408], "vel": [305, 408], "use_pot_min": [305, 408], "black": 305, "solar": 305, "ignor": [305, 407], "myr": [305, 306, 396, 404, 408], "r_ctr": [306, 408], "v_ctr": [306, 408], "offset": 306, "bulk": [306, 408], "circumst": 306, "dm_particl": [309, 408], "etc": [310, 404, 407, 408], "snapshot": [310, 408], "snapshot_060": 310, "cut": [313, 331], "outsid": [313, 399], "perform": [313, 396, 398, 404, 406, 408], "export": [313, 316, 398], "updat": [315, 400, 404], "itself": 315, "shape": [315, 400, 408], "preserv": [315, 403], "passiv": [315, 408], "scalar": [315, 404, 408], "width": [316, 319, 367, 368, 408], "ic_filenam": 319, "dtype": 319, "float32": 319, "datatyp": 319, "float64": 319, "frontend": 319, "particles1": [320, 321], "particles2": [320, 321], "particles3": 320, "hse1": [320, 321, 323, 324], "hse2": [320, 321, 323, 324], "hse3": [320, 323], "center3": [320, 323], "velocity1": [320, 321, 323, 324], "velocity2": [320, 321, 323, 324], "velocity3": [320, 323], "hse": [322, 400, 401, 407], "complet": [322, 396, 400, 404, 405, 409], "tool": [325, 402, 404, 405], "analyt": [325, 399, 402, 404, 408], "act": 326, "wrapper": [326, 396], "variabl": [326, 407, 409], "r_core": 328, "insid": 328, "exponenti": [328, 401], "implement": [328, 400, 403, 405, 407], "exp": [328, 331], "r_": [328, 331, 343, 345, 350, 351, 356, 357, 359, 365, 366, 367, 396], "cuspi": 328, "_": [328, 396, 401, 408], "grow": [328, 399], "faster": [328, 331], "term": [328, 407], "limit": [328, 388, 400, 408], "arg": [329, 388, 409], "constant_profil": [330, 405, 409], "power_law_profil": [330, 405], "beta_model_profil": [330, 405], "hernquist_density_profil": [330, 396, 405], "cored_hernquist_density_profil": [330, 405], "hernquist_mass_profil": [330, 405], "nfw_density_profil": [330, 405], "nfw_mass_profil": [330, 405], "tnfw_density_profil": [330, 405], "tnfw_mass_profil": [330, 405], "snfw_density_profil": [330, 405], "snfw_mass_profil": [330, 405], "cored_snfw_density_profil": [330, 405], "cored_snfw_mass_profil": [330, 405], "cored_snfw_total_mass": 330, "einasto_density_profil": [330, 405], "einasto_mass_profil": [330, 405], "am06_density_profil": [330, 340, 405], "vikhlinin_density_profil": [330, 405], "am06_temperature_profil": [330, 339, 405], "baseline_entropy_profil": [330, 405], "broken_entropy_profil": [330, 405], "walker_entropy_profil": [330, 405], "r_cut": 331, "domin": 331, "higher": 331, "achiev": 331, "multipli": 331, "factor": [331, 400, 407], "2k": 331, "f_r": 332, "scipi": [332, 404], "univariatesplin": 332, "spectrum": 332, "lead": [332, 400, 401], "problemat": [332, 388], "intend": [332, 405], "serial": [333, 336, 404, 409], "version": [333, 401, 404], "save": [333, 396, 409], "disk": [333, 396, 408, 409], "open": 333, "rp": [333, 336], "quick": [335, 408], "logspac": 335, "send": 336, "extens": [336, 407], "t0": [337, 338], "4": [337, 396, 399, 408], "mu": [337, 407], "6": [337, 371, 396, 407, 409], "omega_b": 337, "048": 337, "omega_dm": 337, "262": 337, "polytrop": [337, 338], "asdi08": [337, 338], "kev": [337, 338, 340, 341, 368, 396, 404], "cool": [337, 338, 339, 340, 368, 400], "a_c": [337, 338, 339, 340], "fraction": 337, "molecular": [337, 371, 407], "cosmic": 337, "baryon": [337, 407], "2008mnra": 337, "383": 337, "369a": 337, "rho_0": [339, 367], "asma06": [339, 340], "best": [339, 340, 400, 401, 403, 404, 405], "concert": [339, 340], "msun": [339, 342, 345, 346, 347, 348, 349, 354, 355, 356, 357, 360, 362, 363, 364, 365, 366, 367, 372, 396, 408], "2006": [339, 368, 405], "apj": [339, 354, 368, 372], "650": 339, "102": 339, "t_0": [340, 368], "k_0": [341, 343], "k_200": 341, "r_200": [341, 345, 369], "baselin": 341, "vokb05": 341, "floor": 341, "cm": [341, 396, 404], "logarithm": [341, 350, 351, 367, 368], "voit": 341, "kai": 341, "bryan": 341, "2005": 341, "mnra": [341, 362], "364": 341, "909": 341, "rho_c": 342, "r_c": [342, 347, 348, 349, 367], "cafu76": 342, "cavalier": 342, "fusco": 342, "femiano": 342, "1976": 342, "49": 342, "137": 342, "k_scale": [343, 369], "broken": 343, "const": 344, "constant": [344, 408], "m_200": 345, "conc": [345, 358], "m200": [345, 353], "r200": [345, 353, 375], "concentr": [345, 358, 361], "nfw": [345, 347, 348, 349, 356, 357, 358, 361, 362, 363, 364, 365, 366, 405], "nafrw90": [345, 356, 357, 358, 365], "hernquist": [345, 346, 354, 355, 396, 405], "hern90": [345, 346, 354, 355], "overdens": [345, 352, 353, 358], "200": [345, 358, 396, 408], "critic": [345, 352, 353, 358], "navarro": 345, "julio": 345, "frenk": 345, "carlo": 345, "white": 345, "simon": 345, "1997apj": 345, "490": 345, "493n": 345, "m_0": [346, 354, 355], "super": [347, 348, 349, 362, 363, 364, 400], "liwys18": [347, 348, 349, 361, 362, 363, 364], "sai": [349, 364, 399], "m200c": [349, 364], "r200c": [349, 361, 364], "eina65": [350, 351], "rvgb12": [350, 351], "invers": [350, 351, 383], "einasto": [350, 405], "1965": 350, "kinemat": 350, "dynam": [350, 400, 401, 405, 407, 408], "trudi": 350, "inst": 350, "astrofiz": 350, "alma": 350, "ata": 350, "87": 350, "retana": 350, "montenegro": 350, "et": [350, 368, 372, 405], "al": [350, 368, 372, 405], "2012a": 350, "540a": 350, "70r": 350, "delta": [352, 353, 358], "cosmo": [352, 353, 358], "enclos": 352, "cosmologi": [352, 353, 358], "m_r": 353, "1990": 354, "356": 354, "359": 354, "rho_": [356, 357, 365, 366, 396, 400, 407], "whatev": [359, 399], "els": 359, "rescal": 360, "conc_nfw": 361, "snfw": 361, "come": [361, 398, 400], "31": 361, "lillei": 362, "wyn": 362, "evan": 362, "sander": 362, "2018": 362, "r_t": [365, 366, 368], "tnfw": [365, 366], "bamao09": [365, 366], "baltz": 365, "marshal": 365, "p": [365, 398, 407, 408, 409], "oguri": 365, "2009": [365, 372], "jcap": 365, "015": 365, "epsilon": 367, "modifi": [367, 398], "vikrf06": [367, 368, 401], "inner": [367, 368], "middl": 367, "outer": [367, 368], "control": 367, "t_min": 368, "r_cool": 368, "a_cool": 368, "640": 368, "691": 368, "walker": 369, "relationship": [370, 372, 407], "variou": [370, 398, 404, 405, 407, 408], "ne": 371, "electron": 371, "m500": [372, 373, 374], "hubbl": 372, "7": [372, 396], "mga": 372, "mtot": 372, "r500": 372, "692": 372, "1033": 372, "http": [372, 404], "ui": 372, "adsab": 372, "harvard": 372, "edu": 372, "ab": 372, "2009apj": 372, "1033v": 372, "100": [372, 408], "km": [372, 403], "mpc": 372, "bcg": [373, 375], "m_": [373, 374, 396, 401, 404, 407, 408], "fact": 374, "satellit": 374, "logger": [378, 379], "context": [378, 407], "mute": 378, "log": 378, "arr": 381, "ensur": [381, 382], "rr": [384, 385, 386], "integr": [385, 386, 392, 396, 399, 408], "infin": 386, "grab": 387, "state": 387, "max_execution_tim": 388, "assert": 388, "unbound": 388, "execut": [388, 405], "launch": 388, "daemon": 388, "runtim": 388, "second": [388, 408], "dark_matt": [390, 391, 396], "rho": [392, 396, 401, 407, 408], "introduct": 396, "ve": [396, 398, 400, 404, 407], "successfulli": [396, 399, 407], "download": 396, "instal": [396, 405], "python": [396, 404, 405, 409], "congratul": 396, "now": [396, 399, 400, 408], "guid": [396, 398, 405], "walk": 396, "finish": [396, 404], "rope": 396, "onc": [396, 404, 407, 408, 409], "got": 396, "hang": 396, "mani": [396, 400, 401, 404, 407], "explor": [396, 405], "featur": [396, 404], "let": [396, 399, 401, 407], "properli": 396, "termin": 396, "pip": [396, 404], "everyth": 396, "plan": 396, "messag": 396, "tell": [396, 400], "brief": 396, "project": [396, 404], "appear": 396, "id": 396, "abl": [396, 402], "lot": [396, 399, 400], "slow": [396, 407], "simpl": [396, 400, 405], "mathrm": [396, 400, 401, 407, 408], "dyn": [396, 400, 401, 407], "ahead": [396, 399], "leg": 396, "produc": [396, 401, 402, 404, 407, 409], "beauti": 396, "veri": [396, 404, 408], "15": 396, "odot": [396, 404, 408], "total_density_profil": 396, "2e15": 396, "That": 396, "pretti": 396, "wasn": 396, "14": 396, "littl": [396, 404], "shorter": 396, "gas_density_profil": 396, "2e14": 396, "add_subplot": 396, "111": 396, "color": 396, "red": [396, 401], "blue": [396, 401], "excel": 396, "our": [396, 404, 405, 408], "acquaint": 396, "most": [396, 399, 400, 401, 403, 404, 407, 409], "were": [396, 399], "essenti": 396, "next": [396, 400, 408], "chosen": [396, 400, 407], "actual": [396, 399, 401, 402, 404], "advantag": 396, "math": 396, "u": [396, 408], "galaxy_cluster_model": 396, "10000": [396, 399, 408], "info": [396, 399], "2023": [396, 399, 401], "27": 396, "09": 396, "50": [396, 408], "43": 396, "933": 396, "939": 396, "994": 396, "45": 396, "651": 396, "happen": [396, 399, 400], "000": 396, "worth": [396, 407], "rememb": 396, "own": [396, 399, 403, 409], "piec": 396, "item": [396, 399], "gas_fract": 396, "electron_number_dens": 396, "discret": 396, "close": 396, "realli": 396, "good": [396, 408], "summari": 396, "panel_plot": [396, 399], "cgparam": 396, "usetex": 396, "Not": [396, 407], "nice": 396, "isol": 396, "9": 396, "write_model_to_h5": [396, 407], "cluster_": [396, 408], "example_clust": 396, "1_000_000": [396, 408], "And": 396, "last": 396, "major": [396, 407], "setup_ramses_": 396, "53": 396, "412": 396, "1000000": [396, 408], "413": 396, "755": 396, "51": 396, "721": 396, "merger_config": 396, "txt": 396, "local": [396, 404], "directori": [396, 404, 405], "still": 396, "readi": [396, 400, 406], "instruct": [396, 404], "hallmark": 398, "abil": [398, 404], "eas": [398, 405], "support": [398, 399, 404], "tip": 398, "hydrodynam": [398, 403, 404, 405], "frolri": 398, "chicago": 398, "purpos": [398, 400, 402, 404, 405], "adapt": 398, "mesh": 398, "refin": 398, "parabol": 398, "ppm": 398, "merger": [398, 403, 404, 406], "mode": 398, "rigidgrav": 398, "rigid": 398, "selfgrav": 398, "inclus": 398, "tangl": 398, "gpu": 398, "acceler": [398, 407], "sctsch": 398, "amr": [398, 403], "approach": [398, 400, 401, 405, 407], "tripl": 398, "makefil": 398, "simu_opt": 398, "dmodel": 398, "hydro": [398, 403, 407], "dgraviti": 398, "dparticl": 398, "dncomp_passive_us": 398, "merger_coll_numhalo": 398, "merger_coll_usemet": 398, "dmhd": 398, "deo": 398, "eos_gamma": 398, "dpar_natt_us": 398, "dgpu": 398, "dload_bal": 398, "hilbert": 398, "dopenmp": 398, "dsupport_hdf5": 398, "wesppa": 398, "smooth": 398, "max": 398, "planck": 398, "institut": 398, "astrophys": [398, 404, 405], "ideal": [398, 404, 407], "after": [398, 399, 408], "proper": 398, "background": [398, 404], "add_background_grid": 398, "config": 398, "configur": [398, 406], "enabl": 398, "sh": 398, "soon": 398, "multipurpos": 398, "romain": 398, "teyssier": 398, "invas": 398, "newtonian": [398, 402, 404, 405, 407], "capabl": 398, "mondian": [398, 402, 404, 405], "due": [398, 403, 408], "regard": [398, 407], "fryxel": 398, "olson": 398, "ricker": 398, "timm": 398, "zingal": 398, "lamb": 398, "q": 398, "tufo": 398, "2000": 398, "thermonuclear": 398, "journal": 398, "supplement": 398, "seri": 398, "131": 398, "273": 398, "schive": 398, "tsai": 398, "chiueh": 398, "2010": 398, "graphic": 398, "186": 398, "457": 398, "weinberg": 398, "springel": 398, "pakmor": 398, "2020": 398, "public": 398, "releas": 398, "248": 398, "32": 398, "easi": [399, 404, 405, 409], "end": [399, 400, 401, 405], "sometim": [399, 400, 404, 407], "constrain": [399, 403, 407], "observation": 399, "literatur": [399, 400, 402, 404, 405], "fortun": 399, "ever": 399, "cluster_collect": 399, "facil": 399, "vikhlinin06": 399, "briefli": 399, "abel": [399, 402, 404, 408], "133": [399, 402, 404], "__main__": 399, "protoclust": 399, "0x7f7d7e302890": 399, "a262": 399, "0x7f7d7e8fbdd0": 399, "a383": 399, "0x7f7d7dd17e10": 399, "a478": 399, "0x7f7d7dd4df90": 399, "a907": 399, "0x7f7d7dd49c10": 399, "a1413": 399, "0x7f7d7dd49dd0": 399, "a1795": 399, "0x7f7d7dd48590": 399, "a1991": 399, "0x7f7d7e33d410": 399, "a2029": 399, "0x7f7d7dba9810": 399, "a2390": 399, "0x7f7d7dbaa090": 399, "rxj": 399, "1159": 399, "5531": 399, "0x7f7d7dbaaa90": 399, "mkw": 399, "0x7f7d7dbab490": 399, "usg": 399, "cs152": 399, "0x7f7d7dbab750": 399, "notic": 399, "aren": 399, "quit": [399, 404], "thing": [399, 400], "special": [399, 403], "vik": 399, "11": 399, "08": 399, "59": 399, "37": 399, "344": 399, "492": 399, "39": 399, "067": 399, "0x7fab7769b390": 399, "unfortun": 399, "wspace": 399, "speak": 399, "studi": [399, 404, 405], "rang": 399, "r_0": [399, 407], "r_1": 399, "don": 399, "guarante": [399, 401], "again": [399, 409], "autom": [399, 405], "complex": [399, 401, 403], "difficult": [399, 407], "categor": [399, 400], "systemat": 399, "residu": 399, "occasion": 399, "persist": 399, "recomput": 399, "seen": 399, "rapid": 399, "put": 399, "perfectli": 400, "manifestli": 400, "explicitli": 400, "flaw": 400, "ask": 400, "icm": [400, 404], "intrins": 400, "connect": 400, "won": 400, "viabl": [400, 401], "regularli": 400, "constraint": [400, 403, 405, 407], "while": [400, 402, 404], "fine": 400, "problem": [400, 407], "choos": [400, 404, 407, 408], "mond": [400, 407], "sim": [400, 401, 407], "stabil": [400, 407], "clearli": [400, 407], "often": [400, 401, 404], "hard": 400, "predict": 400, "previou": [400, 407], "could": 400, "gear": 400, "toward": [400, 401, 404], "possibl": [400, 405, 407], "easier": 400, "scienc": 400, "contend": 400, "descend": 400, "categori": 400, "start": [400, 405], "aris": [400, 401], "commonli": [400, 407], "temperament": 400, "encourag": [400, 404], "k_b": [400, 407], "decreas": [400, 401], "criterion": 400, "express": [400, 407, 408], "nabla_r": 400, "fast": 400, "Of": 400, "k_bt_g": 400, "n_e": [400, 407], "immedi": 400, "meet": [400, 405], "criteria": 400, "long": [400, 408], "upcom": 400, "establish": 400, "discuss": [400, 402, 404, 407], "repar": 400, "deem": 400, "obviou": 400, "wherev": 400, "reconstruct": 400, "excis": 400, "isn": 400, "fixabl": [400, 401], "enough": 400, "warrant": 400, "reconsider": 400, "practic": [400, 404, 407], "visit": [400, 405], "depth": [400, 404], "explan": [400, 405, 409], "contributor": 400, "yourself": 400, "situat": 400, "novel": 400, "inherit": 400, "highest": 400, "level": [400, 405], "templat": [400, 409], "type__npr": 400, "insert": [400, 409], "descript": [400, 407], "grav": [400, 407], "_method": 400, "_messag": 400, "_scope": 400, "def": [400, 409], "__init__": 400, "_identifi": 400, "cl": 400, "TO": 400, "THE": 400, "_correct": 400, "new_model": 400, "never": 401, "fundament": 401, "clear": 401, "foundat": 401, "recal": [401, 407], "numalg": 401, "strictli": 401, "gamma_c": 401, "dip": 401, "significantli": 401, "naiv": 401, "steep": 401, "particularli": 401, "high": 401, "intract": 401, "2a": 401, "ti": 401, "complementari": 401, "assumpt": [401, 405, 407], "furthermor": [401, 405, 407], "stabl": 401, "treat": 401, "rk_b": 401, "gm_p": 401, "becom": [401, 407], "unstabl": 401, "doesn": 401, "pose": 401, "much": [401, 405, 408], "signific": 401, "repair": 401, "suitabl": 401, "accomplish": 401, "interpolatori": 401, "call": [401, 409], "Then": [401, 403], "xi_": 401, "erron": 401, "rebuild": 401, "correctli": 401, "mild": 401, "jump": 401, "wide": [402, 405, 407], "script": 402, "tag": [402, 408], "knowledg": 402, "journei": [402, 404], "pipelin": [402, 404], "wonderland": [402, 404], "pull": [402, 404], "ins": [402, 404], "pynbodi": 402, "pyxsim": [402, 404, 405], "sox": [402, 404, 405], "symmetri": [403, 408], "applic": [403, 404], "accord": 403, "magneto": [403, 404], "turbul": 403, "dimension": [403, 404], "fashion": 403, "uniform": [403, 408], "natur": 403, "question": 403, "bf": [403, 407, 408], "v_x": 403, "v_1": 403, "u_1": 403, "iN": 403, "u_2": 403, "v_y": 403, "v_2": 403, "u_3": 403, "u_4": 403, "v_z": 403, "v_3": 403, "u_5": 403, "u_6": 403, "handl": 403, "cdot": [403, 407], "least": 403, "space": [403, 408], "subtract": 403, "parallel": 403, "hat": 403, "machin": 403, "precis": 403, "linearli": 403, "stage": 403, "free": 403, "small": 403, "mhd": 403, "clean": 403, "substanti": 403, "concern": 403, "transport": 403, "evolv": 403, "transform": 403, "clusterfield": 403, "map_field_to_particl": 403, "vfield": 403, "write_to_h5": 403, "bfield": 403, "largest": 404, "gravitation": 404, "current": [404, 405, 407], "endpoint": 404, "cosmolog": 404, "hot": 404, "emit": 404, "intraclust": 404, "medium": 404, "constitu": 404, "especi": 404, "focus": [404, 407], "approxim": 404, "roughli": 404, "semi": 404, "bodi": [404, 405], "commun": 404, "few": 404, "127760": 404, "pypi": 404, "pardon": 404, "dust": 404, "128225": 404, "128013": 404, "conda": 404, "128195": 404, "surprisingli": 404, "navig": 404, "raw": 404, "git": 404, "command": 404, "www": 404, "github": [404, 405], "com": 404, "jzuhon": 404, "clone": 404, "compat": 404, "manipul": 404, "curv": 404, "h5py": 404, "interact": [404, 407], "tqdm": 404, "progress": 404, "bar": 404, "ruamel": 404, "dill": 404, "spinner": 404, "automat": [404, 407], "though": 404, "measur": 404, "photon": [404, 405], "analyz": 404, "spectra": 404, "instrument": [404, 405], "mock": [404, 405], "complement": 404, "familiar": 404, "feet": 404, "wet": 404, "somewhat": 404, "concret": 404, "help": 404, "overview": 404, "equilibria": 404, "handi": 404, "popular": 404, "throughout": [404, 407], "rm": [404, 408], "straighforwardli": 404, "attach": 404, "intern": 404, "cross": 405, "platform": 405, "reduc": 405, "headach": 405, "gc": 405, "goal": [405, 409], "promot": 405, "repositori": 405, "modularli": 405, "scientif": 405, "build": [405, 409], "scratch": 405, "doc": [405, 409], "encount": 405, "bug": 405, "submit": 405, "cored_hernquist_mass_profil": 405, "paper": 405, "capac": 405, "catalog": 405, "altern": [405, 408], "aqual": [405, 407], "qumond": [405, 407], "realist": 405, "labor": 405, "overhead": 405, "quickstart": 405, "offer": 405, "experi": 405, "copi": 405, "past": 405, "backbon": 405, "api": [405, 407], "deep": 405, "dive": 405, "contribut": [405, 409], "hint": 405, "might": [405, 407], "synthet": 405, "event": 405, "coupl": 405, "turn": 405, "count": 405, "xmm": 405, "newton": 405, "nustar": 405, "beginn": 405, "intermedi": 405, "advanc": 405, "search": 405, "spatial": 406, "hold": 407, "protocol": 407, "fluid": 407, "momentum": [407, 408], "obei": 407, "euler": 407, "viscos": 407, "partial": 407, "recogn": 407, "gasseou": 407, "remaind": 407, "infti": 407, "preced": 407, "window": 407, "poisson": 407, "flavor": 407, "a_0": 407, "implicit": 407, "nu": 407, "psi": [407, 408], "gm_": 407, "from_arrai": 407, "via": [407, 408], "incompress": 407, "bari": 407, "trivial": 407, "effici": 407, "invert": [407, 408], "int_": 407, "exactli": [407, 408], "accept": [407, 408], "formula": 407, "less": 407, "no_ga": 407, "syntact": 407, "vast": 407, "aim": 407, "success": 407, "check_hs": 407, "approx": 407, "equilibr": 407, "plai": 407, "role": 407, "ioniz": 407, "set_magnetic_field_from_beta": 407, "p_": 407, "whichev": 407, "expon": 407, "set_magnetic_field_from_dens": 407, "awar": 407, "num_el": 407, "worthwhil": 407, "summar": 407, "consult": 407, "write_model_to_ascii": 407, "write_model_to_binari": 407, "poor": 407, "tot": 408, "sinc": 408, "isotrop": 408, "tangenti": 408, "theta": 408, "particle_posit": 408, "particle_veloc": 408, "particle_mass": 408, "number_of_particl": 408, "latter": 408, "mention": 408, "thermal_energi": 408, "magnetic_field": 408, "hand": 408, "creation": 408, "n_ga": 408, "gas_particl": 408, "generate_gas_particl": 408, "phase": 408, "isotropi": 408, "dv": 408, "2dv": 408, "net": 408, "angular": 408, "cal": 408, "int_0": 408, "integrel": 408, "_0": 408, "speed": 408, "reject": 408, "probabl": 408, "idea": 408, "check_dm_viri": 408, "check_star_viri": 408, "accuraci": 408, "diff": 408, "figsiz": 408, "loglog": 408, "vir": 408, "markers": 408, "lw": 408, "legend": 408, "set_xlabel": 408, "set_ylabel": 408, "One": 408, "difficulti": 408, "infinit": 408, "generate_dm_particl": 408, "generate_star_particl": 408, "wish": 408, "n_dm": 408, "n_star": 408, "star_particl": 408, "generate_": 408, "_particl": 408, "all_particl": 408, "concaten": 408, "gas_part": 408, "gas_parts1": 408, "gas_parts2": 408, "drop_ptyp": 408, "translat": 408, "boost": 408, "add_offset": 408, "shift": 408, "movement": 408, "make_radial_cut": 408, "add_black_hol": 408, "simplest": 408, "mbh": 408, "0e9": 408, "300": 408, "keep": 408, "track": 408, "num_particles1": 408, "num_particles2": 408, "200_000": 408, "halo1": 408, "ones": 408, "halo2": 408, "cluster1": 408, "cluster2": 408, "pick": 408, "overwritten": 408, "ug": 408, "microgauss": 408, "magnetic_field_x": 408, "metal": 408, "zsun": 408, "obvious": 408, "write_particl": 408, "my_particl": 408, "from_fil": 408, "new_part": 408, "gas_onli": 408, "dm_star": 408, "write_to_gadget_fil": 408, "from_gadget_fil": 408, "custom": 409, "framework": 409, "click": 409, "top": 409, "expect": 409, "great": 409, "cutoff": 409, "add_cor": 409, "to_binari": 409, "from_binari": 409, "built_in": 409, "havi": 409, "priori": 409, "extrem": 409, "new_profil": 409, "prof": 409, "my": 409, "perman": 409, "request": 409, "your_function_her": 409, "desc": 409}, "objects": {"": [[1, 0, 0, "-", "cluster_collections"], [48, 0, 0, "-", "codes"], [59, 0, 0, "-", "correction"], [168, 0, 0, "-", "fields"], [211, 0, 0, "-", "ics"], [220, 0, 0, "-", "model"], [295, 0, 0, "-", "numalgs"], [302, 0, 0, "-", "particles"], [325, 0, 0, "-", "radial_profiles"], [370, 0, 0, "-", "relations"], [377, 0, 0, "-", "utils"], [389, 0, 0, "-", "virial"]], "cluster_collections": [[2, 1, 1, "", "Ascasibar07"], [12, 1, 1, "", "Collection"], [22, 1, 1, "", "ProtoCluster"], [28, 1, 1, "", "Sanderson10"], [38, 1, 1, "", "Vikhlinin06"]], "cluster_collections.Ascasibar07": [[3, 2, 1, "", "__init__"], [4, 3, 1, "", "authors"], [5, 3, 1, "", "citation"], [6, 2, 1, "", "items"], [7, 2, 1, "", "keys"], [8, 3, 1, "", "name"], [9, 3, 1, "", "profiles"], [10, 3, 1, "", "source_authors"], [11, 2, 1, "", "values"]], "cluster_collections.Collection": [[13, 2, 1, "", "__init__"], [14, 3, 1, "", "authors"], [15, 3, 1, "", "citation"], [16, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [18, 3, 1, "", "name"], [19, 3, 1, "", "profiles"], [20, 3, 1, "", "source_authors"], [21, 2, 1, "", "values"]], "cluster_collections.ProtoCluster": [[23, 2, 1, "", "__init__"], [24, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [26, 2, 1, "", "load"], [27, 2, 1, "", "value"]], "cluster_collections.Sanderson10": [[29, 2, 1, "", "__init__"], [30, 3, 1, "", "authors"], [31, 3, 1, "", "citation"], [32, 2, 1, "", "items"], [33, 2, 1, "", "keys"], [34, 3, 1, "", "name"], [35, 3, 1, "", "profiles"], [36, 3, 1, "", "source_authors"], [37, 2, 1, "", "values"]], "cluster_collections.Vikhlinin06": [[39, 2, 1, "", "__init__"], [40, 3, 1, "", "authors"], [41, 3, 1, "", "citation"], [42, 2, 1, "", "items"], [43, 2, 1, "", "keys"], [44, 3, 1, "", "name"], [45, 3, 1, "", "profiles"], [46, 3, 1, "", "source_authors"], [47, 2, 1, "", "values"]], "codes": [[49, 4, 1, "", "resample_arepo_ics"], [50, 4, 1, "", "setup_arepo_ics"], [51, 4, 1, "", "setup_art_ics"], [52, 4, 1, "", "setup_athena_ics"], [53, 4, 1, "", "setup_enzo_ics"], [54, 4, 1, "", "setup_flash_ics"], [55, 4, 1, "", "setup_gamer_ics"], [56, 4, 1, "", "setup_gizmo_ics"], [57, 4, 1, "", "setup_ramses_ics"], [58, 4, 1, "", "write_amr_particles"]], "correction": [[60, 1, 1, "", "NonPhysicalRegion"], [72, 1, 1, "", "Type0NPR"], [84, 1, 1, "", "Type0aNPR"], [96, 1, 1, "", "Type0bNPR"], [108, 1, 1, "", "Type0cNPR"], [120, 1, 1, "", "Type1NPR"], [132, 1, 1, "", "Type1aNPR"], [144, 1, 1, "", "Type2NPR"], [156, 1, 1, "", "Type2aNPR"]], "correction.NonPhysicalRegion": [[61, 2, 1, "", "__init__"], [62, 2, 1, "", "correct"], [63, 5, 1, "", "correctable"], [64, 2, 1, "", "identify"], [65, 2, 1, "", "is_close"], [66, 2, 1, "", "message"], [67, 5, 1, "", "obj"], [68, 5, 1, "", "rmax"], [69, 5, 1, "", "rmin"], [70, 2, 1, "", "size"], [71, 5, 1, "", "type"]], "correction.Type0NPR": [[73, 2, 1, "", "__init__"], [74, 2, 1, "", "correct"], [75, 5, 1, "", "correctable"], [76, 2, 1, "", "identify"], [77, 2, 1, "", "is_close"], [78, 2, 1, "", "message"], [79, 5, 1, "", "obj"], [80, 5, 1, "", "rmax"], [81, 5, 1, "", "rmin"], [82, 2, 1, "", "size"], [83, 5, 1, "", "type"]], "correction.Type0aNPR": [[85, 2, 1, "", "__init__"], [86, 2, 1, "", "correct"], [87, 5, 1, "", "correctable"], [88, 2, 1, "", "identify"], [89, 2, 1, "", "is_close"], [90, 2, 1, "", "message"], [91, 5, 1, "", "obj"], [92, 5, 1, "", "rmax"], [93, 5, 1, "", "rmin"], [94, 2, 1, "", "size"], [95, 5, 1, "", "type"]], "correction.Type0bNPR": [[97, 2, 1, "", "__init__"], [98, 2, 1, "", "correct"], [99, 5, 1, "", "correctable"], [100, 2, 1, "", "identify"], [101, 2, 1, "", "is_close"], [102, 2, 1, "", "message"], [103, 5, 1, "", "obj"], [104, 5, 1, "", "rmax"], [105, 5, 1, "", "rmin"], [106, 2, 1, "", "size"], [107, 5, 1, "", "type"]], "correction.Type0cNPR": [[109, 2, 1, "", "__init__"], [110, 2, 1, "", "correct"], [111, 5, 1, "", "correctable"], [112, 2, 1, "", "identify"], [113, 2, 1, "", "is_close"], [114, 2, 1, "", "message"], [115, 5, 1, "", "obj"], [116, 5, 1, "", "rmax"], [117, 5, 1, "", "rmin"], [118, 2, 1, "", "size"], [119, 5, 1, "", "type"]], "correction.Type1NPR": [[121, 2, 1, "", "__init__"], [122, 2, 1, "", "correct"], [123, 5, 1, "", "correctable"], [124, 2, 1, "", "identify"], [125, 2, 1, "", "is_close"], [126, 2, 1, "", "message"], [127, 5, 1, "", "obj"], [128, 5, 1, "", "rmax"], [129, 5, 1, "", "rmin"], [130, 2, 1, "", "size"], [131, 5, 1, "", "type"]], "correction.Type1aNPR": [[133, 2, 1, "", "__init__"], [134, 2, 1, "", "correct"], [135, 5, 1, "", "correctable"], [136, 2, 1, "", "identify"], [137, 2, 1, "", "is_close"], [138, 2, 1, "", "message"], [139, 5, 1, "", "obj"], [140, 5, 1, "", "rmax"], [141, 5, 1, "", "rmin"], [142, 2, 1, "", "size"], [143, 5, 1, "", "type"]], "correction.Type2NPR": [[145, 2, 1, "", "__init__"], [146, 2, 1, "", "correct"], [147, 5, 1, "", "correctable"], [148, 2, 1, "", "identify"], [149, 2, 1, "", "is_close"], [150, 2, 1, "", "message"], [151, 5, 1, "", "obj"], [152, 5, 1, "", "rmax"], [153, 5, 1, "", "rmin"], [154, 2, 1, "", "size"], [155, 5, 1, "", "type"]], "correction.Type2aNPR": [[157, 2, 1, "", "__init__"], [158, 2, 1, "", "correct"], [159, 5, 1, "", "correctable"], [160, 2, 1, "", "identify"], [161, 2, 1, "", "is_close"], [162, 2, 1, "", "message"], [163, 5, 1, "", "obj"], [164, 5, 1, "", "rmax"], [165, 5, 1, "", "rmin"], [166, 2, 1, "", "size"], [167, 5, 1, "", "type"]], "fields": [[169, 1, 1, "", "ClusterField"], [174, 1, 1, "", "GaussianRandomField"], [179, 1, 1, "", "RadialRandomMagneticField"], [184, 1, 1, "", "RadialRandomMagneticVectorPotential"], [189, 1, 1, "", "RadialRandomVelocityField"], [194, 1, 1, "", "RandomMagneticField"], [199, 1, 1, "", "RandomMagneticVectorPotential"], [204, 1, 1, "", "RandomVelocityField"], [209, 4, 1, "", "parse_value"], [210, 4, 1, "", "rot_3d"]], "fields.ClusterField": [[170, 2, 1, "", "__init__"], [171, 2, 1, "", "map_field_to_particles"], [172, 3, 1, "", "units"], [173, 2, 1, "", "write_file"]], "fields.GaussianRandomField": [[175, 2, 1, "", "__init__"], [176, 2, 1, "", "map_field_to_particles"], [177, 3, 1, "", "units"], [178, 2, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[180, 2, 1, "", "__init__"], [181, 2, 1, "", "map_field_to_particles"], [182, 3, 1, "", "units"], [183, 2, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[185, 2, 1, "", "__init__"], [186, 2, 1, "", "map_field_to_particles"], [187, 3, 1, "", "units"], [188, 2, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[190, 2, 1, "", "__init__"], [191, 2, 1, "", "map_field_to_particles"], [192, 3, 1, "", "units"], [193, 2, 1, "", "write_file"]], "fields.RandomMagneticField": [[195, 2, 1, "", "__init__"], [196, 2, 1, "", "map_field_to_particles"], [197, 3, 1, "", "units"], [198, 2, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[200, 2, 1, "", "__init__"], [201, 2, 1, "", "map_field_to_particles"], [202, 3, 1, "", "units"], [203, 2, 1, "", "write_file"]], "fields.RandomVelocityField": [[205, 2, 1, "", "__init__"], [206, 2, 1, "", "map_field_to_particles"], [207, 3, 1, "", "units"], [208, 2, 1, "", "write_file"]], "ics": [[212, 1, 1, "", "ClusterICs"], [219, 4, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[213, 2, 1, "", "__init__"], [214, 2, 1, "", "create_dataset"], [215, 2, 1, "", "from_file"], [216, 2, 1, "", "resample_particle_ics"], [217, 2, 1, "", "setup_particle_ics"], [218, 2, 1, "", "to_file"]], "model": [[221, 1, 1, "", "ClusterModel"], [258, 1, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[222, 2, 1, "", "__init__"], [223, 2, 1, "", "check_dm_virial"], [224, 2, 1, "", "check_hse"], [225, 2, 1, "", "check_star_virial"], [226, 2, 1, "", "create_dataset"], [227, 5, 1, "", "default_fields"], [228, 3, 1, "", "dm_virial"], [229, 5, 1, "", "fields"], [230, 2, 1, "", "find_field_at_radius"], [231, 2, 1, "", "find_radius_for_density"], [232, 2, 1, "", "from_arrays"], [233, 2, 1, "", "from_dens_and_entr"], [234, 2, 1, "", "from_dens_and_tden"], [235, 2, 1, "", "from_dens_and_temp"], [236, 2, 1, "", "from_h5_file"], [237, 2, 1, "", "generate_dm_particles"], [238, 2, 1, "", "generate_gas_particles"], [239, 2, 1, "", "generate_star_particles"], [240, 2, 1, "", "generate_tracer_particles"], [241, 2, 1, "", "items"], [242, 2, 1, "", "keys"], [243, 2, 1, "", "mass_in_radius"], [244, 2, 1, "", "no_gas"], [245, 5, 1, "", "num_elements"], [246, 2, 1, "", "panel_plot"], [247, 2, 1, "", "plot"], [248, 3, 1, "", "properties"], [249, 2, 1, "", "set_field"], [250, 2, 1, "", "set_magnetic_field_from_beta"], [251, 2, 1, "", "set_magnetic_field_from_density"], [252, 2, 1, "", "set_rmax"], [253, 3, 1, "", "star_virial"], [254, 2, 1, "", "values"], [255, 2, 1, "", "write_model_to_ascii"], [256, 2, 1, "", "write_model_to_binary"], [257, 2, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[259, 2, 1, "", "__init__"], [260, 2, 1, "", "check_dm_virial"], [261, 2, 1, "", "check_hse"], [262, 2, 1, "", "check_star_virial"], [263, 2, 1, "", "create_dataset"], [264, 5, 1, "", "default_fields"], [265, 3, 1, "", "dm_virial"], [266, 5, 1, "", "fields"], [267, 2, 1, "", "find_field_at_radius"], [268, 2, 1, "", "find_radius_for_density"], [269, 2, 1, "", "from_arrays"], [270, 2, 1, "", "from_dens_and_entr"], [271, 2, 1, "", "from_dens_and_tden"], [272, 2, 1, "", "from_dens_and_temp"], [273, 2, 1, "", "from_h5_file"], [274, 2, 1, "", "generate_dm_particles"], [275, 2, 1, "", "generate_gas_particles"], [276, 2, 1, "", "generate_star_particles"], [277, 2, 1, "", "generate_tracer_particles"], [278, 2, 1, "", "items"], [279, 2, 1, "", "keys"], [280, 2, 1, "", "mass_in_radius"], [281, 2, 1, "", "no_gas"], [282, 5, 1, "", "num_elements"], [283, 2, 1, "", "panel_plot"], [284, 2, 1, "", "plot"], [285, 3, 1, "", "properties"], [286, 2, 1, "", "set_field"], [287, 2, 1, "", "set_magnetic_field_from_beta"], [288, 2, 1, "", "set_magnetic_field_from_density"], [289, 2, 1, "", "set_rmax"], [290, 3, 1, "", "star_virial"], [291, 2, 1, "", "values"], [292, 2, 1, "", "write_model_to_ascii"], [293, 2, 1, "", "write_model_to_binary"], [294, 2, 1, "", "write_model_to_h5"]], "numalgs": [[296, 4, 1, "", "extrap_power_law"], [297, 4, 1, "", "find_holes"], [298, 4, 1, "", "identify_domain_borders"], [299, 4, 1, "", "monotone_interpolation"], [300, 4, 1, "", "positive_interpolation"], [301, 4, 1, "", "solve_temperature"]], "particles": [[303, 1, 1, "", "ClusterParticles"], [320, 4, 1, "", "combine_three_clusters"], [321, 4, 1, "", "combine_two_clusters"], [322, 4, 1, "", "resample_one_cluster"], [323, 4, 1, "", "resample_three_clusters"], [324, 4, 1, "", "resample_two_clusters"]], "particles.ClusterParticles": [[304, 2, 1, "", "__init__"], [305, 2, 1, "", "add_black_hole"], [306, 2, 1, "", "add_offsets"], [307, 2, 1, "", "drop_ptypes"], [308, 2, 1, "", "from_fields"], [309, 2, 1, "", "from_file"], [310, 2, 1, "", "from_gadget_file"], [311, 2, 1, "", "from_h5_file"], [312, 2, 1, "", "keys"], [313, 2, 1, "", "make_radial_cut"], [314, 3, 1, "", "num_passive_scalars"], [315, 2, 1, "", "set_field"], [316, 2, 1, "", "to_yt_dataset"], [317, 2, 1, "", "write_particles"], [318, 2, 1, "", "write_particles_to_h5"], [319, 2, 1, "", "write_to_gadget_file"]], "radial_profiles": [[326, 1, 1, "", "RadialProfile"], [337, 4, 1, "", "ad07_density_profile"], [338, 4, 1, "", "ad07_temperature_profile"], [339, 4, 1, "", "am06_density_profile"], [340, 4, 1, "", "am06_temperature_profile"], [341, 4, 1, "", "baseline_entropy_profile"], [342, 4, 1, "", "beta_model_profile"], [343, 4, 1, "", "broken_entropy_profile"], [344, 4, 1, "", "constant_profile"], [345, 4, 1, "", "convert_nfw_to_hernquist"], [346, 4, 1, "", "cored_hernquist_density_profile"], [347, 4, 1, "", "cored_snfw_density_profile"], [348, 4, 1, "", "cored_snfw_mass_profile"], [349, 4, 1, "", "cored_snfw_total_mass"], [350, 4, 1, "", "einasto_density_profile"], [351, 4, 1, "", "einasto_mass_profile"], [352, 4, 1, "", "find_overdensity_radius"], [353, 4, 1, "", "find_radius_mass"], [354, 4, 1, "", "hernquist_density_profile"], [355, 4, 1, "", "hernquist_mass_profile"], [356, 4, 1, "", "nfw_density_profile"], [357, 4, 1, "", "nfw_mass_profile"], [358, 4, 1, "", "nfw_scale_density"], [359, 4, 1, "", "power_law_profile"], [360, 4, 1, "", "rescale_profile_by_mass"], [361, 4, 1, "", "snfw_conc"], [362, 4, 1, "", "snfw_density_profile"], [363, 4, 1, "", "snfw_mass_profile"], [364, 4, 1, "", "snfw_total_mass"], [365, 4, 1, "", "tnfw_density_profile"], [366, 4, 1, "", "tnfw_mass_profile"], [367, 4, 1, "", "vikhlinin_density_profile"], [368, 4, 1, "", "vikhlinin_temperature_profile"], [369, 4, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[327, 2, 1, "", "__init__"], [328, 2, 1, "", "add_core"], [329, 2, 1, "", "built_in"], [330, 5, 1, "", "builtin"], [331, 2, 1, "", "cutoff"], [332, 2, 1, "", "from_array"], [333, 2, 1, "", "from_binary"], [334, 5, 1, "", "name"], [335, 2, 1, "", "plot"], [336, 2, 1, "", "to_binary"]], "relations": [[371, 4, 1, "", "convert_ne_to_density"], [372, 4, 1, "", "f_gas"], [373, 4, 1, "", "m_bcg"], [374, 4, 1, "", "m_sat"], [375, 4, 1, "", "r_bcg"], [376, 4, 1, "", "rho_scale_hern"]], "utils": [[378, 1, 1, "", "LogMute"], [380, 4, 1, "", "ensure_list"], [381, 4, 1, "", "ensure_ytarray"], [382, 4, 1, "", "ensure_ytquantity"], [383, 4, 1, "", "generate_particle_radii"], [384, 4, 1, "", "integrate"], [385, 4, 1, "", "integrate_mass"], [386, 4, 1, "", "integrate_toinf"], [387, 4, 1, "", "parse_prng"], [388, 4, 1, "", "time_limit"]], "utils.LogMute": [[379, 2, 1, "", "__init__"]], "virial": [[390, 1, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[391, 2, 1, "", "__init__"], [392, 2, 1, "", "check_virial"], [393, 3, 1, "", "ee"], [394, 3, 1, "", "ff"], [395, 2, 1, "", "generate_particles"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"user": [0, 407], "refer": [0, 398, 405], "guid": [0, 402, 404], "basic": 0, "compon": 0, "cg": [0, 396, 402], "In": [0, 409], "depth": 0, "articl": 0, "cluster_collect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "ascasibar07": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "__init__": [3, 13, 23, 29, 39, 61, 73, 85, 97, 109, 121, 133, 145, 157, 170, 175, 180, 185, 190, 195, 200, 205, 213, 222, 259, 304, 327, 379, 391], "author": [4, 14, 30, 40], "citat": [5, 15, 31, 41], "item": [6, 16, 24, 32, 42, 241, 278], "kei": [7, 17, 25, 33, 43, 242, 279, 312], "name": [8, 18, 34, 44, 334], "profil": [9, 19, 35, 45, 407, 409], "source_author": [10, 20, 36, 46], "valu": [11, 21, 27, 37, 47, 254, 291], "collect": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 399], "protoclust": [22, 23, 24, 25, 26, 27], "load": 26, "sanderson10": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "vikhlinin06": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "code": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 402], "resample_arepo_": 49, "setup_arepo_": 50, "setup_art_": 51, "setup_athena_": 52, "setup_enzo_": 53, "setup_flash_": 54, "setup_gamer_": 55, "setup_gizmo_": 56, "setup_ramses_": 57, "write_amr_particl": 58, "correct": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 400, 401], "nonphysicalregion": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "identifi": [64, 76, 88, 100, 112, 124, 136, 148, 160], "is_clos": [65, 77, 89, 101, 113, 125, 137, 149, 161], "messag": [66, 78, 90, 102, 114, 126, 138, 150, 162], "obj": [67, 79, 91, 103, 115, 127, 139, 151, 163], "rmax": [68, 80, 92, 104, 116, 128, 140, 152, 164], "rmin": [69, 81, 93, 105, 117, 129, 141, 153, 165], "size": [70, 82, 94, 106, 118, 130, 142, 154, 166], "type": [71, 83, 95, 107, 119, 131, 143, 155, 167, 400, 401, 408], "type0npr": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "type0anpr": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "type0bnpr": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "type0cnpr": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "type1npr": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "type1anpr": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "type2npr": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "type2anpr": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "field": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 229, 266, 403, 407, 408], "clusterfield": [169, 170, 171, 172, 173], "map_field_to_particl": [171, 176, 181, 186, 191, 196, 201, 206], "unit": [172, 177, 182, 187, 192, 197, 202, 207, 404], "write_fil": [173, 178, 183, 188, 193, 198, 203, 208], "gaussianrandomfield": [174, 175, 176, 177, 178], "radialrandommagneticfield": [179, 180, 181, 182, 183], "radialrandommagneticvectorpotenti": [184, 185, 186, 187, 188], "radialrandomvelocityfield": [189, 190, 191, 192, 193], "randommagneticfield": [194, 195, 196, 197, 198], "randommagneticvectorpotenti": [199, 200, 201, 202, 203], "randomvelocityfield": [204, 205, 206, 207, 208], "parse_valu": 209, "rot_3d": 210, "ic": [211, 212, 213, 214, 215, 216, 217, 218, 219], "cluster": [212, 213, 214, 215, 216, 217, 218, 396, 399, 403, 405, 406, 407], "create_dataset": [214, 226, 263], "from_fil": [215, 309], "resample_particle_": 216, "setup_particle_": 217, "to_fil": 218, "compute_centers_for_binari": 219, "model": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 396, 407], "clustermodel": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 407, 408], "check_dm_viri": [223, 260], "check_hs": [224, 261], "check_star_viri": [225, 262], "default_field": [227, 264], "dm_virial": [228, 265], "find_field_at_radiu": [230, 267], "find_radius_for_dens": [231, 268], "from_arrai": [232, 269, 332], "develop": [232, 269, 402], "note": [232, 269], "from_dens_and_entr": [233, 270], "from_dens_and_tden": [234, 271], "from_dens_and_temp": [235, 272], "from_h5_fil": [236, 273, 311], "generate_dm_particl": [237, 274], "generate_gas_particl": [238, 275], "generate_star_particl": [239, 276], "generate_tracer_particl": [240, 277], "mass_in_radiu": [243, 280], "no_ga": [244, 281], "num_el": [245, 282], "panel_plot": [246, 283], "plot": [247, 284, 335], "properti": [248, 285], "set_field": [249, 286, 315], "set_magnetic_field_from_beta": [250, 287], "set_magnetic_field_from_dens": [251, 288], "set_rmax": [252, 289], "star_viri": [253, 290], "write_model_to_ascii": [255, 292], "write_model_to_binari": [256, 293], "write_model_to_h5": [257, 294], "hydrostaticequilibrium": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "numalg": [295, 296, 297, 298, 299, 300, 301], "extrap_power_law": 296, "find_hol": 297, "identify_domain_bord": 298, "monotone_interpol": 299, "positive_interpol": 300, "solve_temperatur": 301, "particl": [302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 403, 408], "clusterparticl": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 408], "add_black_hol": 305, "add_offset": 306, "drop_ptyp": 307, "from_field": 308, "from_gadget_fil": 310, "make_radial_cut": 313, "num_passive_scalar": 314, "to_yt_dataset": 316, "write_particl": 317, "write_particles_to_h5": 318, "write_to_gadget_fil": 319, "combine_three_clust": 320, "combine_two_clust": 321, "resample_one_clust": 322, "resample_three_clust": 323, "resample_two_clust": 324, "radial_profil": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "radialprofil": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336], "add_cor": 328, "built_in": 329, "builtin": 330, "cutoff": 331, "from_binari": 333, "to_binari": 336, "ad07_density_profil": 337, "ad07_temperature_profil": 338, "am06_density_profil": 339, "am06_temperature_profil": 340, "baseline_entropy_profil": 341, "beta_model_profil": 342, "broken_entropy_profil": 343, "constant_profil": 344, "convert_nfw_to_hernquist": 345, "cored_hernquist_density_profil": 346, "cored_snfw_density_profil": 347, "cored_snfw_mass_profil": 348, "cored_snfw_total_mass": 349, "einasto_density_profil": 350, "einasto_mass_profil": 351, "find_overdensity_radiu": 352, "find_radius_mass": 353, "hernquist_density_profil": 354, "hernquist_mass_profil": 355, "nfw_density_profil": 356, "nfw_mass_profil": 357, "nfw_scale_dens": 358, "power_law_profil": 359, "rescale_profile_by_mass": 360, "snfw_conc": 361, "snfw_density_profil": 362, "snfw_mass_profil": 363, "snfw_total_mass": 364, "tnfw_density_profil": 365, "tnfw_mass_profil": 366, "vikhlinin_density_profil": 367, "vikhlinin_temperature_profil": 368, "walker_entropy_profil": 369, "relat": [370, 371, 372, 373, 374, 375, 376, 405], "convert_ne_to_dens": 371, "f_ga": 372, "m_bcg": 373, "m_sat": 374, "r_bcg": 375, "rho_scale_hern": 376, "util": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "logmut": [378, 379], "ensure_list": 380, "ensure_ytarrai": 381, "ensure_ytquant": 382, "generate_particle_radii": 383, "integr": 384, "integrate_mass": 385, "integrate_toinf": 386, "parse_prng": 387, "time_limit": 388, "virial": [389, 390, 391, 392, 393, 394, 395, 408], "virialequilibrium": [390, 391, 392, 393, 394, 395], "check_viri": 392, "ee": 393, "ff": 394, "generate_particl": 395, "your": 396, "first": 396, "journei": 396, "With": 396, "content": [396, 400, 404, 407, 409], "introduc": 396, "get": [396, 404], "start": [396, 404], "packag": [396, 402, 404], "set": [396, 407], "up": 396, "build": 396, "The": [396, 407, 408], "api": 397, "simul": 398, "softwar": 398, "flash": 398, "gamer": 398, "arepo": 398, "gizmo": 398, "enzo": 398, "rams": 398, "athena": 398, "what": 399, "i": [399, 408], "A": 399, "us": [399, 402, 407, 409], "sidebar": 399, "why": 399, "doe": 399, "look": 399, "so": 399, "bad": 399, "bumpi": 399, "non": [400, 401, 407], "physic": [400, 401, 407], "behavior": 400, "region": [400, 401], "0": [400, 401], "1": [400, 401], "2": [400, 401], "ad": [400, 407, 408], "new": [400, 408], "npr": [400, 401], "method": 401, "For": 401, "extrapolatori": 401, "power": 401, "law": 401, "replac": 401, "exampl": 402, "go": 402, "from": [402, 406, 407, 408], "To": 402, "scienc": 402, "beyond": 402, "extern": 402, "gener": [403, 405, 406, 407, 408], "3d": 403, "mathemat": [403, 407, 408], "overview": [403, 407, 408], "initi": [403, 406], "magnet": [403, 407], "random": 403, "vector": 403, "potenti": 403, "radial": [403, 407, 409], "veloc": [403, 408], "map": 403, "write": [403, 407], "out": 403, "disk": [403, 407], "quickstart": 404, "introduct": 404, "instal": 404, "Not": 404, "yet": 404, "implement": 404, "depend": 404, "featur": 405, "resourc": 405, "project": 405, "page": 405, "indic": 405, "tabl": 405, "addit": 405, "condit": 406, "script": 406, "paramet": 406, "file": 406, "reader": 407, "suggest": 407, "intraclust": 407, "medium": 407, "icm": 407, "graviti": 407, "check": [407, 408], "hydrostat": 407, "equilibrium": [407, 408], "strength": 407, "other": 407, "read": 407, "object": [407, 408], "advic": 407, "ga": 408, "dark": 408, "matter": 408, "star": 408, "equilibria": 408, "class": 408, "oper": 408, "drop": 408, "add": 408, "posit": 408, "offset": 408, "make": 408, "cut": 408, "radiu": 408, "black": 408, "hole": 408, "chang": 408, "o": 408, "gadget": 408, "like": 408, "built": 409, "creat": 409}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"User Reference Guide": [[0, "user-reference-guide"]], "Basic Components of CG": [[0, "basic-components-of-cg"]], "In Depth Articles": [[0, "in-depth-articles"]], "cluster_collections": [[1, "module-cluster_collections"]], "cluster_collections.Ascasibar07": [[2, "cluster-collections-ascasibar07"]], "cluster_collections.Ascasibar07.__init__": [[3, "cluster-collections-ascasibar07-init"]], "cluster_collections.Ascasibar07.authors": [[4, "cluster-collections-ascasibar07-authors"]], "cluster_collections.Ascasibar07.citation": [[5, "cluster-collections-ascasibar07-citation"]], "cluster_collections.Ascasibar07.items": [[6, "cluster-collections-ascasibar07-items"]], "cluster_collections.Ascasibar07.keys": [[7, "cluster-collections-ascasibar07-keys"]], "cluster_collections.Ascasibar07.name": [[8, "cluster-collections-ascasibar07-name"]], "cluster_collections.Ascasibar07.profiles": [[9, "cluster-collections-ascasibar07-profiles"]], "cluster_collections.Ascasibar07.source_authors": [[10, "cluster-collections-ascasibar07-source-authors"]], "cluster_collections.Ascasibar07.values": [[11, "cluster-collections-ascasibar07-values"]], "cluster_collections.Collection": [[12, "cluster-collections-collection"]], "cluster_collections.Collection.__init__": [[13, "cluster-collections-collection-init"]], "cluster_collections.Collection.authors": [[14, "cluster-collections-collection-authors"]], "cluster_collections.Collection.citation": [[15, "cluster-collections-collection-citation"]], "cluster_collections.Collection.items": [[16, "cluster-collections-collection-items"]], "cluster_collections.Collection.keys": [[17, "cluster-collections-collection-keys"]], "cluster_collections.Collection.name": [[18, "cluster-collections-collection-name"]], "cluster_collections.Collection.profiles": [[19, "cluster-collections-collection-profiles"]], "cluster_collections.Collection.source_authors": [[20, "cluster-collections-collection-source-authors"]], "cluster_collections.Collection.values": [[21, "cluster-collections-collection-values"]], "cluster_collections.ProtoCluster": [[22, "cluster-collections-protocluster"]], "cluster_collections.ProtoCluster.__init__": [[23, "cluster-collections-protocluster-init"]], "cluster_collections.ProtoCluster.items": [[24, "cluster-collections-protocluster-items"]], "cluster_collections.ProtoCluster.keys": [[25, "cluster-collections-protocluster-keys"]], "cluster_collections.ProtoCluster.load": [[26, "cluster-collections-protocluster-load"]], "cluster_collections.ProtoCluster.value": [[27, "cluster-collections-protocluster-value"]], "cluster_collections.Sanderson10": [[28, "cluster-collections-sanderson10"]], "cluster_collections.Sanderson10.__init__": [[29, "cluster-collections-sanderson10-init"]], "cluster_collections.Sanderson10.authors": [[30, "cluster-collections-sanderson10-authors"]], "cluster_collections.Sanderson10.citation": [[31, "cluster-collections-sanderson10-citation"]], "cluster_collections.Sanderson10.items": [[32, "cluster-collections-sanderson10-items"]], "cluster_collections.Sanderson10.keys": [[33, "cluster-collections-sanderson10-keys"]], "cluster_collections.Sanderson10.name": [[34, "cluster-collections-sanderson10-name"]], "cluster_collections.Sanderson10.profiles": [[35, "cluster-collections-sanderson10-profiles"]], "cluster_collections.Sanderson10.source_authors": [[36, "cluster-collections-sanderson10-source-authors"]], "cluster_collections.Sanderson10.values": [[37, "cluster-collections-sanderson10-values"]], "cluster_collections.Vikhlinin06": [[38, "cluster-collections-vikhlinin06"]], "cluster_collections.Vikhlinin06.__init__": [[39, "cluster-collections-vikhlinin06-init"]], "cluster_collections.Vikhlinin06.authors": [[40, "cluster-collections-vikhlinin06-authors"]], "cluster_collections.Vikhlinin06.citation": [[41, "cluster-collections-vikhlinin06-citation"]], "cluster_collections.Vikhlinin06.items": [[42, "cluster-collections-vikhlinin06-items"]], "cluster_collections.Vikhlinin06.keys": [[43, "cluster-collections-vikhlinin06-keys"]], "cluster_collections.Vikhlinin06.name": [[44, "cluster-collections-vikhlinin06-name"]], "cluster_collections.Vikhlinin06.profiles": [[45, "cluster-collections-vikhlinin06-profiles"]], "cluster_collections.Vikhlinin06.source_authors": [[46, "cluster-collections-vikhlinin06-source-authors"]], "cluster_collections.Vikhlinin06.values": [[47, "cluster-collections-vikhlinin06-values"]], "codes": [[48, "module-codes"]], "codes.resample_arepo_ics": [[49, "codes-resample-arepo-ics"]], "codes.setup_arepo_ics": [[50, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[51, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[52, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[53, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[54, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[55, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[56, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[57, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[58, "codes-write-amr-particles"]], "correction": [[59, "module-correction"]], "correction.NonPhysicalRegion": [[60, "correction-nonphysicalregion"]], "correction.NonPhysicalRegion.__init__": [[61, "correction-nonphysicalregion-init"]], "correction.NonPhysicalRegion.correct": [[62, "correction-nonphysicalregion-correct"]], "correction.NonPhysicalRegion.correctable": [[63, "correction-nonphysicalregion-correctable"]], "correction.NonPhysicalRegion.identify": [[64, "correction-nonphysicalregion-identify"]], "correction.NonPhysicalRegion.is_close": [[65, "correction-nonphysicalregion-is-close"]], "correction.NonPhysicalRegion.message": [[66, "correction-nonphysicalregion-message"]], "correction.NonPhysicalRegion.obj": [[67, "correction-nonphysicalregion-obj"]], "correction.NonPhysicalRegion.rmax": [[68, "correction-nonphysicalregion-rmax"]], "correction.NonPhysicalRegion.rmin": [[69, "correction-nonphysicalregion-rmin"]], "correction.NonPhysicalRegion.size": [[70, "correction-nonphysicalregion-size"]], "correction.NonPhysicalRegion.type": [[71, "correction-nonphysicalregion-type"]], "correction.Type0NPR": [[72, "correction-type0npr"]], "correction.Type0NPR.__init__": [[73, "correction-type0npr-init"]], "correction.Type0NPR.correct": [[74, "correction-type0npr-correct"]], "correction.Type0NPR.correctable": [[75, "correction-type0npr-correctable"]], "correction.Type0NPR.identify": [[76, "correction-type0npr-identify"]], "correction.Type0NPR.is_close": [[77, "correction-type0npr-is-close"]], "correction.Type0NPR.message": [[78, "correction-type0npr-message"]], "correction.Type0NPR.obj": [[79, "correction-type0npr-obj"]], "correction.Type0NPR.rmax": [[80, "correction-type0npr-rmax"]], "correction.Type0NPR.rmin": [[81, "correction-type0npr-rmin"]], "correction.Type0NPR.size": [[82, "correction-type0npr-size"]], "correction.Type0NPR.type": [[83, "correction-type0npr-type"]], "correction.Type0aNPR": [[84, "correction-type0anpr"]], "correction.Type0aNPR.__init__": [[85, "correction-type0anpr-init"]], "correction.Type0aNPR.correct": [[86, "correction-type0anpr-correct"]], "correction.Type0aNPR.correctable": [[87, "correction-type0anpr-correctable"]], "correction.Type0aNPR.identify": [[88, "correction-type0anpr-identify"]], "correction.Type0aNPR.is_close": [[89, "correction-type0anpr-is-close"]], "correction.Type0aNPR.message": [[90, "correction-type0anpr-message"]], "correction.Type0aNPR.obj": [[91, "correction-type0anpr-obj"]], "correction.Type0aNPR.rmax": [[92, "correction-type0anpr-rmax"]], "correction.Type0aNPR.rmin": [[93, "correction-type0anpr-rmin"]], "correction.Type0aNPR.size": [[94, "correction-type0anpr-size"]], "correction.Type0aNPR.type": [[95, "correction-type0anpr-type"]], "correction.Type0bNPR": [[96, "correction-type0bnpr"]], "correction.Type0bNPR.__init__": [[97, "correction-type0bnpr-init"]], "correction.Type0bNPR.correct": [[98, "correction-type0bnpr-correct"]], "correction.Type0bNPR.correctable": [[99, "correction-type0bnpr-correctable"]], "correction.Type0bNPR.identify": [[100, "correction-type0bnpr-identify"]], "correction.Type0bNPR.is_close": [[101, "correction-type0bnpr-is-close"]], "correction.Type0bNPR.message": [[102, "correction-type0bnpr-message"]], "correction.Type0bNPR.obj": [[103, "correction-type0bnpr-obj"]], "correction.Type0bNPR.rmax": [[104, "correction-type0bnpr-rmax"]], "correction.Type0bNPR.rmin": [[105, "correction-type0bnpr-rmin"]], "correction.Type0bNPR.size": [[106, "correction-type0bnpr-size"]], "correction.Type0bNPR.type": [[107, "correction-type0bnpr-type"]], "correction.Type0cNPR": [[108, "correction-type0cnpr"]], "correction.Type0cNPR.__init__": [[109, "correction-type0cnpr-init"]], "correction.Type0cNPR.correct": [[110, "correction-type0cnpr-correct"]], "correction.Type0cNPR.correctable": [[111, "correction-type0cnpr-correctable"]], "correction.Type0cNPR.identify": [[112, "correction-type0cnpr-identify"]], "correction.Type0cNPR.is_close": [[113, "correction-type0cnpr-is-close"]], "correction.Type0cNPR.message": [[114, "correction-type0cnpr-message"]], "correction.Type0cNPR.obj": [[115, "correction-type0cnpr-obj"]], "correction.Type0cNPR.rmax": [[116, "correction-type0cnpr-rmax"]], "correction.Type0cNPR.rmin": [[117, "correction-type0cnpr-rmin"]], "correction.Type0cNPR.size": [[118, "correction-type0cnpr-size"]], "correction.Type0cNPR.type": [[119, "correction-type0cnpr-type"]], "correction.Type1NPR": [[120, "correction-type1npr"]], "correction.Type1NPR.__init__": [[121, "correction-type1npr-init"]], "correction.Type1NPR.correct": [[122, "correction-type1npr-correct"]], "correction.Type1NPR.correctable": [[123, "correction-type1npr-correctable"]], "correction.Type1NPR.identify": [[124, "correction-type1npr-identify"]], "correction.Type1NPR.is_close": [[125, "correction-type1npr-is-close"]], "correction.Type1NPR.message": [[126, "correction-type1npr-message"]], "correction.Type1NPR.obj": [[127, "correction-type1npr-obj"]], "correction.Type1NPR.rmax": [[128, "correction-type1npr-rmax"]], "correction.Type1NPR.rmin": [[129, "correction-type1npr-rmin"]], "correction.Type1NPR.size": [[130, "correction-type1npr-size"]], "correction.Type1NPR.type": [[131, "correction-type1npr-type"]], "correction.Type1aNPR": [[132, "correction-type1anpr"]], "correction.Type1aNPR.__init__": [[133, "correction-type1anpr-init"]], "correction.Type1aNPR.correct": [[134, "correction-type1anpr-correct"]], "correction.Type1aNPR.correctable": [[135, "correction-type1anpr-correctable"]], "correction.Type1aNPR.identify": [[136, "correction-type1anpr-identify"]], "correction.Type1aNPR.is_close": [[137, "correction-type1anpr-is-close"]], "correction.Type1aNPR.message": [[138, "correction-type1anpr-message"]], "correction.Type1aNPR.obj": [[139, "correction-type1anpr-obj"]], "correction.Type1aNPR.rmax": [[140, "correction-type1anpr-rmax"]], "correction.Type1aNPR.rmin": [[141, "correction-type1anpr-rmin"]], "correction.Type1aNPR.size": [[142, "correction-type1anpr-size"]], "correction.Type1aNPR.type": [[143, "correction-type1anpr-type"]], "correction.Type2NPR": [[144, "correction-type2npr"]], "correction.Type2NPR.__init__": [[145, "correction-type2npr-init"]], "correction.Type2NPR.correct": [[146, "correction-type2npr-correct"]], "correction.Type2NPR.correctable": [[147, "correction-type2npr-correctable"]], "correction.Type2NPR.identify": [[148, "correction-type2npr-identify"]], "correction.Type2NPR.is_close": [[149, "correction-type2npr-is-close"]], "correction.Type2NPR.message": [[150, "correction-type2npr-message"]], "correction.Type2NPR.obj": [[151, "correction-type2npr-obj"]], "correction.Type2NPR.rmax": [[152, "correction-type2npr-rmax"]], "correction.Type2NPR.rmin": [[153, "correction-type2npr-rmin"]], "correction.Type2NPR.size": [[154, "correction-type2npr-size"]], "correction.Type2NPR.type": [[155, "correction-type2npr-type"]], "correction.Type2aNPR": [[156, "correction-type2anpr"]], "correction.Type2aNPR.__init__": [[157, "correction-type2anpr-init"]], "correction.Type2aNPR.correct": [[158, "correction-type2anpr-correct"]], "correction.Type2aNPR.correctable": [[159, "correction-type2anpr-correctable"]], "correction.Type2aNPR.identify": [[160, "correction-type2anpr-identify"]], "correction.Type2aNPR.is_close": [[161, "correction-type2anpr-is-close"]], "correction.Type2aNPR.message": [[162, "correction-type2anpr-message"]], "correction.Type2aNPR.obj": [[163, "correction-type2anpr-obj"]], "correction.Type2aNPR.rmax": [[164, "correction-type2anpr-rmax"]], "correction.Type2aNPR.rmin": [[165, "correction-type2anpr-rmin"]], "correction.Type2aNPR.size": [[166, "correction-type2anpr-size"]], "correction.Type2aNPR.type": [[167, "correction-type2anpr-type"]], "fields": [[168, "module-fields"]], "fields.ClusterField": [[169, "fields-clusterfield"]], "fields.ClusterField.__init__": [[170, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[171, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[172, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[173, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[174, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[175, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[176, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[177, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[178, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[179, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[180, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[181, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[182, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[183, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[184, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[185, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[186, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[187, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[188, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[189, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[190, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[191, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[192, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[193, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[194, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[195, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[196, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[197, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[198, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[199, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[200, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[201, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[202, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[203, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[204, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[205, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[206, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[207, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[208, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[209, "fields-parse-value"]], "fields.rot_3d": [[210, "fields-rot-3d"]], "ics": [[211, "module-ics"]], "ics.ClusterICs": [[212, "ics-clusterics"]], "ics.ClusterICs.__init__": [[213, "ics-clusterics-init"]], "ics.ClusterICs.create_dataset": [[214, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[215, "ics-clusterics-from-file"]], "ics.ClusterICs.resample_particle_ics": [[216, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[217, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[218, "ics-clusterics-to-file"]], "ics.compute_centers_for_binary": [[219, "ics-compute-centers-for-binary"]], "model": [[220, "module-model"]], "model.ClusterModel": [[221, "model-clustermodel"]], "model.ClusterModel.__init__": [[222, "model-clustermodel-init"]], "model.ClusterModel.check_dm_virial": [[223, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[224, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[225, "model-clustermodel-check-star-virial"]], "model.ClusterModel.create_dataset": [[226, "model-clustermodel-create-dataset"]], "model.ClusterModel.default_fields": [[227, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[228, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[229, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[230, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.find_radius_for_density": [[231, "model-clustermodel-find-radius-for-density"]], "model.ClusterModel.from_arrays": [[232, "model-clustermodel-from-arrays"]], "development note": [[232, null], [269, null]], "model.ClusterModel.from_dens_and_entr": [[233, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[234, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[235, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[236, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[237, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[238, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[239, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[240, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.items": [[241, "model-clustermodel-items"]], "model.ClusterModel.keys": [[242, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[243, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[244, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[245, "model-clustermodel-num-elements"]], "model.ClusterModel.panel_plot": [[246, "model-clustermodel-panel-plot"]], "model.ClusterModel.plot": [[247, "model-clustermodel-plot"]], "model.ClusterModel.properties": [[248, "model-clustermodel-properties"]], "model.ClusterModel.set_field": [[249, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[250, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[251, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[252, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[253, "model-clustermodel-star-virial"]], "model.ClusterModel.values": [[254, "model-clustermodel-values"]], "model.ClusterModel.write_model_to_ascii": [[255, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[256, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[257, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[258, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[259, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.check_dm_virial": [[260, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[261, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[262, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.create_dataset": [[263, "model-hydrostaticequilibrium-create-dataset"]], "model.HydrostaticEquilibrium.default_fields": [[264, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[265, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[266, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[267, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.find_radius_for_density": [[268, "model-hydrostaticequilibrium-find-radius-for-density"]], "model.HydrostaticEquilibrium.from_arrays": [[269, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[270, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[271, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[272, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[273, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[274, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[275, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[276, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[277, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.items": [[278, "model-hydrostaticequilibrium-items"]], "model.HydrostaticEquilibrium.keys": [[279, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[280, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[281, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[282, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.panel_plot": [[283, "model-hydrostaticequilibrium-panel-plot"]], "model.HydrostaticEquilibrium.plot": [[284, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.properties": [[285, "model-hydrostaticequilibrium-properties"]], "model.HydrostaticEquilibrium.set_field": [[286, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[287, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[288, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[289, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[290, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.values": [[291, "model-hydrostaticequilibrium-values"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[292, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[293, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[294, "model-hydrostaticequilibrium-write-model-to-h5"]], "numalgs": [[295, "module-numalgs"]], "numalgs.extrap_power_law": [[296, "numalgs-extrap-power-law"]], "numalgs.find_holes": [[297, "numalgs-find-holes"]], "numalgs.identify_domain_borders": [[298, "numalgs-identify-domain-borders"]], "numalgs.monotone_interpolation": [[299, "numalgs-monotone-interpolation"]], "numalgs.positive_interpolation": [[300, "numalgs-positive-interpolation"]], "numalgs.solve_temperature": [[301, "numalgs-solve-temperature"]], "particles": [[302, "module-particles"]], "particles.ClusterParticles": [[303, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[304, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[305, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[306, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[307, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.from_fields": [[308, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[309, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[310, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[311, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[312, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[313, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[314, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.set_field": [[315, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[316, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[317, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[318, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[319, "particles-clusterparticles-write-to-gadget-file"]], "particles.combine_three_clusters": [[320, "particles-combine-three-clusters"]], "particles.combine_two_clusters": [[321, "particles-combine-two-clusters"]], "particles.resample_one_cluster": [[322, "particles-resample-one-cluster"]], "particles.resample_three_clusters": [[323, "particles-resample-three-clusters"]], "particles.resample_two_clusters": [[324, "particles-resample-two-clusters"]], "radial_profiles": [[325, "module-radial_profiles"]], "radial_profiles.RadialProfile": [[326, "radial-profiles-radialprofile"]], "radial_profiles.RadialProfile.__init__": [[327, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[328, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[329, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[330, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[331, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[332, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[333, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.name": [[334, "radial-profiles-radialprofile-name"]], "radial_profiles.RadialProfile.plot": [[335, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[336, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[337, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[338, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[339, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[340, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[341, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[342, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[343, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[344, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[345, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[346, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[347, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[348, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[349, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[350, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[351, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[352, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[353, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[354, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[355, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[356, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[357, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[358, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[359, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[360, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[361, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[362, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[363, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[364, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[365, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[366, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[367, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[368, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[369, "radial-profiles-walker-entropy-profile"]], "relations": [[370, "module-relations"]], "relations.convert_ne_to_density": [[371, "relations-convert-ne-to-density"]], "relations.f_gas": [[372, "relations-f-gas"]], "relations.m_bcg": [[373, "relations-m-bcg"]], "relations.m_sat": [[374, "relations-m-sat"]], "relations.r_bcg": [[375, "relations-r-bcg"]], "relations.rho_scale_hern": [[376, "relations-rho-scale-hern"]], "utils": [[377, "module-utils"]], "utils.LogMute": [[378, "utils-logmute"]], "utils.LogMute.__init__": [[379, "utils-logmute-init"]], "utils.ensure_list": [[380, "utils-ensure-list"]], "utils.ensure_ytarray": [[381, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[382, "utils-ensure-ytquantity"]], "utils.generate_particle_radii": [[383, "utils-generate-particle-radii"]], "utils.integrate": [[384, "utils-integrate"]], "utils.integrate_mass": [[385, "utils-integrate-mass"]], "utils.integrate_toinf": [[386, "utils-integrate-toinf"]], "utils.parse_prng": [[387, "utils-parse-prng"]], "utils.time_limit": [[388, "utils-time-limit"]], "virial": [[389, "module-virial"]], "virial.VirialEquilibrium": [[390, "virial-virialequilibrium"]], "virial.VirialEquilibrium.__init__": [[391, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[392, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.ee": [[393, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[394, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[395, "virial-virialequilibrium-generate-particles"]], "Your First Journey With CG": [[396, "Your-First-Journey-With-CG"]], "Contents": [[396, "Contents"], [400, "contents"], [404, "contents"], [407, "contents"], [409, "contents"]], "Introducing CG": [[396, "Introducing-CG"]], "Getting Started With the Package": [[396, "Getting-Started-With-the-Package"]], "Setting Up Your First Cluster": [[396, "Setting-Up-Your-First-Cluster"]], "Building The Model": [[396, "Building-The-Model"]], "API": [[397, "api"]], "Simulation Software": [[398, "simulation-software"]], "FLASH": [[398, "flash"]], "GAMER": [[398, "gamer"]], "Arepo": [[398, "arepo"]], "GIZMO": [[398, "gizmo"]], "Enzo": [[398, "enzo"]], "RAMSES": [[398, "ramses"]], "Athena++": [[398, "athena"]], "References": [[398, "references"]], "Cluster Collections": [[399, "cluster-collections"]], "What is A Collection?": [[399, "what-is-a-collection"]], "Using Collections": [[399, "using-collections"]], "Sidebar: Why Does it Look So Bad!?": [[399, null]], "Sidebar: Why so Bumpy??": [[399, null]], "Correcting Non-Physical Behavior": [[400, "correcting-non-physical-behavior"], [400, "id1"]], "Non-Physical Regions": [[400, "non-physical-regions"]], "Type 0 Non-Physicalities": [[400, "type-0-non-physicalities"]], "Type 1 Non-Physicalities": [[400, "type-1-non-physicalities"], [400, null]], "Type 2 Non-Physicalities": [[400, "type-2-non-physicalities"]], "Adding a New NPR": [[400, "adding-a-new-npr"]], "Methods For Correcting Non-Physical Regions": [[401, "methods-for-correcting-non-physical-regions"]], "Type 0 NPRs": [[401, "type-0-nprs"]], "Type 1 NPRs": [[401, "type-1-nprs"]], "Type 2 NPRs": [[401, "type-2-nprs"]], "Extrapolatory Power Law Replacement": [[401, null]], "Examples": [[402, "examples"]], "Using CG": [[402, "using-cg"]], "Code Guides - Going From Code To Science": [[402, "code-guides-going-from-code-to-science"]], "Beyond CG - External Packages": [[402, "beyond-cg-external-packages"]], "Developing in CG": [[402, "developing-in-cg"]], "Generating 3D Cluster Fields": [[403, "generating-3d-cluster-fields"]], "Mathematical Overview": [[403, "mathematical-overview"]], "Initializing a Magnetic Field": [[403, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[403, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[403, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[403, "initializing-a-velocity-field"]], "Random Velocity Fields": [[403, "random-velocity-fields"]], "Radial Random Velocity Fields": [[403, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[403, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[403, "writing-a-field-out-to-disk"]], "Quickstart Guide": [[404, "quickstart-guide"]], "Introduction": [[404, "introduction"]], "Installing the Package": [[404, "installing-the-package"]], "Not Yet Implemented": [[404, null], [404, null], [404, null]], "Dependencies": [[404, "dependencies"]], "Getting Started": [[404, "id1"]], "Quickstart Guides": [[404, "quickstart-guides"]], "Units": [[404, "units"]], "Cluster Generator": [[405, "cluster-generator"]], "Features": [[405, "features"]], "Resources": [[405, "resources"]], "Related Projects": [[405, "related-projects"]], "Reference Pages": [[405, "reference-pages"]], "Indices and tables": [[405, "indices-and-tables"]], "Additional Pages": [[405, "additional-pages"]], "Initial Conditions Generation": [[406, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[406, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[406, "clusterics-parameter-files"]], "Cluster Models": [[407, "cluster-models"]], "Cluster Models: Mathematical Overview": [[407, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[407, null]], "The Intracluster Medium (ICM)": [[407, "the-intracluster-medium-icm"]], "Gravity": [[407, "gravity"]], "Generating a model.ClusterModel Using Radial Profiles": [[407, "generating-a-model-clustermodel-using-radial-profiles"]], "Checking the Hydrostatic Equilibrium": [[407, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[407, "setting-a-magnetic-field-strength-profile"]], "Adding Other Fields": [[407, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[407, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[407, null]], "Non-Physical Profiles": [[407, "non-physical-profiles"]], "Particles": [[408, "particles"]], "Generating Particles from ClusterModel Objects": [[408, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[408, "gas-particles"]], "Dark Matter and Star Particles": [[408, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[408, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[408, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[408, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[408, "the-clusterparticles-class"]], "ClusterParticles Operations": [[408, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[408, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[408, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[408, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[408, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[408, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[408, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[408, "clusterparticles-i-o"]], "Gadget-Like I/O": [[408, "gadget-like-i-o"]], "Radial Profiles": [[409, "radial-profiles"]], "Built-In Radial Profiles": [[409, "built-in-radial-profiles"]], "Using Radial Profiles": [[409, "using-radial-profiles"]], "Creating a Radial Profile": [[409, "creating-a-radial-profile"]]}, "indexentries": {"cluster_collections": [[1, "module-cluster_collections"]], "module": [[1, "module-cluster_collections"], [48, "module-codes"], [59, "module-correction"], [168, "module-fields"], [211, "module-ics"], [220, "module-model"], [295, "module-numalgs"], [302, "module-particles"], [325, "module-radial_profiles"], [370, "module-relations"], [377, "module-utils"], [389, "module-virial"]], "ascasibar07 (class in cluster_collections)": [[2, "cluster_collections.Ascasibar07"]], "__init__() (cluster_collections.ascasibar07 method)": [[3, "cluster_collections.Ascasibar07.__init__"]], "authors (cluster_collections.ascasibar07 property)": [[4, "cluster_collections.Ascasibar07.authors"]], "citation (cluster_collections.ascasibar07 property)": [[5, "cluster_collections.Ascasibar07.citation"]], "items() (cluster_collections.ascasibar07 method)": [[6, "cluster_collections.Ascasibar07.items"]], "keys() (cluster_collections.ascasibar07 method)": [[7, "cluster_collections.Ascasibar07.keys"]], "name (cluster_collections.ascasibar07 property)": [[8, "cluster_collections.Ascasibar07.name"]], "profiles (cluster_collections.ascasibar07 property)": [[9, "cluster_collections.Ascasibar07.profiles"]], "source_authors (cluster_collections.ascasibar07 property)": [[10, "cluster_collections.Ascasibar07.source_authors"]], "values() (cluster_collections.ascasibar07 method)": [[11, "cluster_collections.Ascasibar07.values"]], "collection (class in cluster_collections)": [[12, "cluster_collections.Collection"]], "__init__() (cluster_collections.collection method)": [[13, "cluster_collections.Collection.__init__"]], "authors (cluster_collections.collection property)": [[14, "cluster_collections.Collection.authors"]], "citation (cluster_collections.collection property)": [[15, "cluster_collections.Collection.citation"]], "items() (cluster_collections.collection method)": [[16, "cluster_collections.Collection.items"]], "keys() (cluster_collections.collection method)": [[17, "cluster_collections.Collection.keys"]], "name (cluster_collections.collection property)": [[18, "cluster_collections.Collection.name"]], "profiles (cluster_collections.collection property)": [[19, "cluster_collections.Collection.profiles"]], "source_authors (cluster_collections.collection property)": [[20, "cluster_collections.Collection.source_authors"]], "values() (cluster_collections.collection method)": [[21, "cluster_collections.Collection.values"]], "protocluster (class in cluster_collections)": [[22, "cluster_collections.ProtoCluster"]], "__init__() (cluster_collections.protocluster method)": [[23, "cluster_collections.ProtoCluster.__init__"]], "items() (cluster_collections.protocluster method)": [[24, "cluster_collections.ProtoCluster.items"]], "keys() (cluster_collections.protocluster method)": [[25, "cluster_collections.ProtoCluster.keys"]], "load() (cluster_collections.protocluster method)": [[26, "cluster_collections.ProtoCluster.load"]], "value() (cluster_collections.protocluster method)": [[27, "cluster_collections.ProtoCluster.value"]], "sanderson10 (class in cluster_collections)": [[28, "cluster_collections.Sanderson10"]], "__init__() (cluster_collections.sanderson10 method)": [[29, "cluster_collections.Sanderson10.__init__"]], "authors (cluster_collections.sanderson10 property)": [[30, "cluster_collections.Sanderson10.authors"]], "citation (cluster_collections.sanderson10 property)": [[31, "cluster_collections.Sanderson10.citation"]], "items() (cluster_collections.sanderson10 method)": [[32, "cluster_collections.Sanderson10.items"]], "keys() (cluster_collections.sanderson10 method)": [[33, "cluster_collections.Sanderson10.keys"]], "name (cluster_collections.sanderson10 property)": [[34, "cluster_collections.Sanderson10.name"]], "profiles (cluster_collections.sanderson10 property)": [[35, "cluster_collections.Sanderson10.profiles"]], "source_authors (cluster_collections.sanderson10 property)": [[36, "cluster_collections.Sanderson10.source_authors"]], "values() (cluster_collections.sanderson10 method)": [[37, "cluster_collections.Sanderson10.values"]], "vikhlinin06 (class in cluster_collections)": [[38, "cluster_collections.Vikhlinin06"]], "__init__() (cluster_collections.vikhlinin06 method)": [[39, "cluster_collections.Vikhlinin06.__init__"]], "authors (cluster_collections.vikhlinin06 property)": [[40, "cluster_collections.Vikhlinin06.authors"]], "citation (cluster_collections.vikhlinin06 property)": [[41, "cluster_collections.Vikhlinin06.citation"]], "items() (cluster_collections.vikhlinin06 method)": [[42, "cluster_collections.Vikhlinin06.items"]], "keys() (cluster_collections.vikhlinin06 method)": [[43, "cluster_collections.Vikhlinin06.keys"]], "name (cluster_collections.vikhlinin06 property)": [[44, "cluster_collections.Vikhlinin06.name"]], "profiles (cluster_collections.vikhlinin06 property)": [[45, "cluster_collections.Vikhlinin06.profiles"]], "source_authors (cluster_collections.vikhlinin06 property)": [[46, "cluster_collections.Vikhlinin06.source_authors"]], "values() (cluster_collections.vikhlinin06 method)": [[47, "cluster_collections.Vikhlinin06.values"]], "codes": [[48, "module-codes"]], "resample_arepo_ics() (in module codes)": [[49, "codes.resample_arepo_ics"]], "setup_arepo_ics() (in module codes)": [[50, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[51, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[52, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[53, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[54, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[55, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[56, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[57, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[58, "codes.write_amr_particles"]], "correction": [[59, "module-correction"]], "nonphysicalregion (class in correction)": [[60, "correction.NonPhysicalRegion"]], "__init__() (correction.nonphysicalregion method)": [[61, "correction.NonPhysicalRegion.__init__"]], "correct() (correction.nonphysicalregion class method)": [[62, "correction.NonPhysicalRegion.correct"]], "correctable (correction.nonphysicalregion attribute)": [[63, "correction.NonPhysicalRegion.correctable"]], "identify() (correction.nonphysicalregion class method)": [[64, "correction.NonPhysicalRegion.identify"]], "is_close() (correction.nonphysicalregion method)": [[65, "correction.NonPhysicalRegion.is_close"]], "message() (correction.nonphysicalregion method)": [[66, "correction.NonPhysicalRegion.message"]], "obj (correction.nonphysicalregion attribute)": [[67, "correction.NonPhysicalRegion.obj"]], "rmax (correction.nonphysicalregion attribute)": [[68, "correction.NonPhysicalRegion.rmax"]], "rmin (correction.nonphysicalregion attribute)": [[69, "correction.NonPhysicalRegion.rmin"]], "size() (correction.nonphysicalregion method)": [[70, "correction.NonPhysicalRegion.size"]], "type (correction.nonphysicalregion attribute)": [[71, "correction.NonPhysicalRegion.type"]], "type0npr (class in correction)": [[72, "correction.Type0NPR"]], "__init__() (correction.type0npr method)": [[73, "correction.Type0NPR.__init__"]], "correct() (correction.type0npr class method)": [[74, "correction.Type0NPR.correct"]], "correctable (correction.type0npr attribute)": [[75, "correction.Type0NPR.correctable"]], "identify() (correction.type0npr class method)": [[76, "correction.Type0NPR.identify"]], "is_close() (correction.type0npr method)": [[77, "correction.Type0NPR.is_close"]], "message() (correction.type0npr method)": [[78, "correction.Type0NPR.message"]], "obj (correction.type0npr attribute)": [[79, "correction.Type0NPR.obj"]], "rmax (correction.type0npr attribute)": [[80, "correction.Type0NPR.rmax"]], "rmin (correction.type0npr attribute)": [[81, "correction.Type0NPR.rmin"]], "size() (correction.type0npr method)": [[82, "correction.Type0NPR.size"]], "type (correction.type0npr attribute)": [[83, "correction.Type0NPR.type"]], "type0anpr (class in correction)": [[84, "correction.Type0aNPR"]], "__init__() (correction.type0anpr method)": [[85, "correction.Type0aNPR.__init__"]], "correct() (correction.type0anpr class method)": [[86, "correction.Type0aNPR.correct"]], "correctable (correction.type0anpr attribute)": [[87, "correction.Type0aNPR.correctable"]], "identify() (correction.type0anpr class method)": [[88, "correction.Type0aNPR.identify"]], "is_close() (correction.type0anpr method)": [[89, "correction.Type0aNPR.is_close"]], "message() (correction.type0anpr method)": [[90, "correction.Type0aNPR.message"]], "obj (correction.type0anpr attribute)": [[91, "correction.Type0aNPR.obj"]], "rmax (correction.type0anpr attribute)": [[92, "correction.Type0aNPR.rmax"]], "rmin (correction.type0anpr attribute)": [[93, "correction.Type0aNPR.rmin"]], "size() (correction.type0anpr method)": [[94, "correction.Type0aNPR.size"]], "type (correction.type0anpr attribute)": [[95, "correction.Type0aNPR.type"]], "type0bnpr (class in correction)": [[96, "correction.Type0bNPR"]], "__init__() (correction.type0bnpr method)": [[97, "correction.Type0bNPR.__init__"]], "correct() (correction.type0bnpr class method)": [[98, "correction.Type0bNPR.correct"]], "correctable (correction.type0bnpr attribute)": [[99, "correction.Type0bNPR.correctable"]], "identify() (correction.type0bnpr class method)": [[100, "correction.Type0bNPR.identify"]], "is_close() (correction.type0bnpr method)": [[101, "correction.Type0bNPR.is_close"]], "message() (correction.type0bnpr method)": [[102, "correction.Type0bNPR.message"]], "obj (correction.type0bnpr attribute)": [[103, "correction.Type0bNPR.obj"]], "rmax (correction.type0bnpr attribute)": [[104, "correction.Type0bNPR.rmax"]], "rmin (correction.type0bnpr attribute)": [[105, "correction.Type0bNPR.rmin"]], "size() (correction.type0bnpr method)": [[106, "correction.Type0bNPR.size"]], "type (correction.type0bnpr attribute)": [[107, "correction.Type0bNPR.type"]], "type0cnpr (class in correction)": [[108, "correction.Type0cNPR"]], "__init__() (correction.type0cnpr method)": [[109, "correction.Type0cNPR.__init__"]], "correct() (correction.type0cnpr class method)": [[110, "correction.Type0cNPR.correct"]], "correctable (correction.type0cnpr attribute)": [[111, "correction.Type0cNPR.correctable"]], "identify() (correction.type0cnpr class method)": [[112, "correction.Type0cNPR.identify"]], "is_close() (correction.type0cnpr method)": [[113, "correction.Type0cNPR.is_close"]], "message() (correction.type0cnpr method)": [[114, "correction.Type0cNPR.message"]], "obj (correction.type0cnpr attribute)": [[115, "correction.Type0cNPR.obj"]], "rmax (correction.type0cnpr attribute)": [[116, "correction.Type0cNPR.rmax"]], "rmin (correction.type0cnpr attribute)": [[117, "correction.Type0cNPR.rmin"]], "size() (correction.type0cnpr method)": [[118, "correction.Type0cNPR.size"]], "type (correction.type0cnpr attribute)": [[119, "correction.Type0cNPR.type"]], "type1npr (class in correction)": [[120, "correction.Type1NPR"]], "__init__() (correction.type1npr method)": [[121, "correction.Type1NPR.__init__"]], "correct() (correction.type1npr class method)": [[122, "correction.Type1NPR.correct"]], "correctable (correction.type1npr attribute)": [[123, "correction.Type1NPR.correctable"]], "identify() (correction.type1npr class method)": [[124, "correction.Type1NPR.identify"]], "is_close() (correction.type1npr method)": [[125, "correction.Type1NPR.is_close"]], "message() (correction.type1npr method)": [[126, "correction.Type1NPR.message"]], "obj (correction.type1npr attribute)": [[127, "correction.Type1NPR.obj"]], "rmax (correction.type1npr attribute)": [[128, "correction.Type1NPR.rmax"]], "rmin (correction.type1npr attribute)": [[129, "correction.Type1NPR.rmin"]], "size() (correction.type1npr method)": [[130, "correction.Type1NPR.size"]], "type (correction.type1npr attribute)": [[131, "correction.Type1NPR.type"]], "type1anpr (class in correction)": [[132, "correction.Type1aNPR"]], "__init__() (correction.type1anpr method)": [[133, "correction.Type1aNPR.__init__"]], "correct() (correction.type1anpr class method)": [[134, "correction.Type1aNPR.correct"]], "correctable (correction.type1anpr attribute)": [[135, "correction.Type1aNPR.correctable"]], "identify() (correction.type1anpr class method)": [[136, "correction.Type1aNPR.identify"]], "is_close() (correction.type1anpr method)": [[137, "correction.Type1aNPR.is_close"]], "message() (correction.type1anpr method)": [[138, "correction.Type1aNPR.message"]], "obj (correction.type1anpr attribute)": [[139, "correction.Type1aNPR.obj"]], "rmax (correction.type1anpr attribute)": [[140, "correction.Type1aNPR.rmax"]], "rmin (correction.type1anpr attribute)": [[141, "correction.Type1aNPR.rmin"]], "size() (correction.type1anpr method)": [[142, "correction.Type1aNPR.size"]], "type (correction.type1anpr attribute)": [[143, "correction.Type1aNPR.type"]], "type2npr (class in correction)": [[144, "correction.Type2NPR"]], "__init__() (correction.type2npr method)": [[145, "correction.Type2NPR.__init__"]], "correct() (correction.type2npr class method)": [[146, "correction.Type2NPR.correct"]], "correctable (correction.type2npr attribute)": [[147, "correction.Type2NPR.correctable"]], "identify() (correction.type2npr class method)": [[148, "correction.Type2NPR.identify"]], "is_close() (correction.type2npr method)": [[149, "correction.Type2NPR.is_close"]], "message() (correction.type2npr method)": [[150, "correction.Type2NPR.message"]], "obj (correction.type2npr attribute)": [[151, "correction.Type2NPR.obj"]], "rmax (correction.type2npr attribute)": [[152, "correction.Type2NPR.rmax"]], "rmin (correction.type2npr attribute)": [[153, "correction.Type2NPR.rmin"]], "size() (correction.type2npr method)": [[154, "correction.Type2NPR.size"]], "type (correction.type2npr attribute)": [[155, "correction.Type2NPR.type"]], "type2anpr (class in correction)": [[156, "correction.Type2aNPR"]], "__init__() (correction.type2anpr method)": [[157, "correction.Type2aNPR.__init__"]], "correct() (correction.type2anpr class method)": [[158, "correction.Type2aNPR.correct"]], "correctable (correction.type2anpr attribute)": [[159, "correction.Type2aNPR.correctable"]], "identify() (correction.type2anpr class method)": [[160, "correction.Type2aNPR.identify"]], "is_close() (correction.type2anpr method)": [[161, "correction.Type2aNPR.is_close"]], "message() (correction.type2anpr method)": [[162, "correction.Type2aNPR.message"]], "obj (correction.type2anpr attribute)": [[163, "correction.Type2aNPR.obj"]], "rmax (correction.type2anpr attribute)": [[164, "correction.Type2aNPR.rmax"]], "rmin (correction.type2anpr attribute)": [[165, "correction.Type2aNPR.rmin"]], "size() (correction.type2anpr method)": [[166, "correction.Type2aNPR.size"]], "type (correction.type2anpr attribute)": [[167, "correction.Type2aNPR.type"]], "fields": [[168, "module-fields"]], "clusterfield (class in fields)": [[169, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[170, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[171, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[172, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[173, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[174, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[175, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[176, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[177, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[178, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[179, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[180, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[181, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[182, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[183, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[184, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[185, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[186, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[187, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[188, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[189, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[190, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[191, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[192, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[193, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[194, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[195, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[196, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[197, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[198, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[199, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[200, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[201, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[202, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[203, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[204, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[205, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[206, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[207, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[208, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[209, "fields.parse_value"]], "rot_3d() (in module fields)": [[210, "fields.rot_3d"]], "ics": [[211, "module-ics"]], "clusterics (class in ics)": [[212, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[213, "ics.ClusterICs.__init__"]], "create_dataset() (ics.clusterics method)": [[214, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[215, "ics.ClusterICs.from_file"]], "resample_particle_ics() (ics.clusterics method)": [[216, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[217, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[218, "ics.ClusterICs.to_file"]], "compute_centers_for_binary() (in module ics)": [[219, "ics.compute_centers_for_binary"]], "model": [[220, "module-model"]], "clustermodel (class in model)": [[221, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[222, "model.ClusterModel.__init__"]], "check_dm_virial() (model.clustermodel method)": [[223, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[224, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[225, "model.ClusterModel.check_star_virial"]], "create_dataset() (model.clustermodel method)": [[226, "model.ClusterModel.create_dataset"]], "default_fields (model.clustermodel attribute)": [[227, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[228, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[229, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[230, "model.ClusterModel.find_field_at_radius"]], "find_radius_for_density() (model.clustermodel method)": [[231, "model.ClusterModel.find_radius_for_density"]], "from_arrays() (model.clustermodel class method)": [[232, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[233, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[234, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[235, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[236, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[237, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[238, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[239, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[240, "model.ClusterModel.generate_tracer_particles"]], "items() (model.clustermodel method)": [[241, "model.ClusterModel.items"]], "keys() (model.clustermodel method)": [[242, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[243, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[244, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[245, "model.ClusterModel.num_elements"]], "panel_plot() (model.clustermodel method)": [[246, "model.ClusterModel.panel_plot"]], "plot() (model.clustermodel method)": [[247, "model.ClusterModel.plot"]], "properties (model.clustermodel property)": [[248, "model.ClusterModel.properties"]], "set_field() (model.clustermodel method)": [[249, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[250, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[251, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[252, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[253, "model.ClusterModel.star_virial"]], "values() (model.clustermodel method)": [[254, "model.ClusterModel.values"]], "write_model_to_ascii() (model.clustermodel method)": [[255, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[256, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[257, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[258, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[259, "model.HydrostaticEquilibrium.__init__"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[260, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[261, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[262, "model.HydrostaticEquilibrium.check_star_virial"]], "create_dataset() (model.hydrostaticequilibrium method)": [[263, "model.HydrostaticEquilibrium.create_dataset"]], "default_fields (model.hydrostaticequilibrium attribute)": [[264, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[265, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[266, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[267, "model.HydrostaticEquilibrium.find_field_at_radius"]], "find_radius_for_density() (model.hydrostaticequilibrium method)": [[268, "model.HydrostaticEquilibrium.find_radius_for_density"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[269, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[270, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[271, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[272, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[273, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[274, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[275, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[276, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[277, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "items() (model.hydrostaticequilibrium method)": [[278, "model.HydrostaticEquilibrium.items"]], "keys() (model.hydrostaticequilibrium method)": [[279, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[280, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[281, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[282, "model.HydrostaticEquilibrium.num_elements"]], "panel_plot() (model.hydrostaticequilibrium method)": [[283, "model.HydrostaticEquilibrium.panel_plot"]], "plot() (model.hydrostaticequilibrium method)": [[284, "model.HydrostaticEquilibrium.plot"]], "properties (model.hydrostaticequilibrium property)": [[285, "model.HydrostaticEquilibrium.properties"]], "set_field() (model.hydrostaticequilibrium method)": [[286, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[287, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[288, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[289, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[290, "model.HydrostaticEquilibrium.star_virial"]], "values() (model.hydrostaticequilibrium method)": [[291, "model.HydrostaticEquilibrium.values"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[292, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[293, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[294, "model.HydrostaticEquilibrium.write_model_to_h5"]], "numalgs": [[295, "module-numalgs"]], "extrap_power_law() (in module numalgs)": [[296, "numalgs.extrap_power_law"]], "find_holes() (in module numalgs)": [[297, "numalgs.find_holes"]], "identify_domain_borders() (in module numalgs)": [[298, "numalgs.identify_domain_borders"]], "monotone_interpolation() (in module numalgs)": [[299, "numalgs.monotone_interpolation"]], "positive_interpolation() (in module numalgs)": [[300, "numalgs.positive_interpolation"]], "solve_temperature() (in module numalgs)": [[301, "numalgs.solve_temperature"]], "particles": [[302, "module-particles"]], "clusterparticles (class in particles)": [[303, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[304, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[305, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[306, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[307, "particles.ClusterParticles.drop_ptypes"]], "from_fields() (particles.clusterparticles class method)": [[308, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[309, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[310, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[311, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[312, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[313, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[314, "particles.ClusterParticles.num_passive_scalars"]], "set_field() (particles.clusterparticles method)": [[315, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[316, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[317, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[318, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[319, "particles.ClusterParticles.write_to_gadget_file"]], "combine_three_clusters() (in module particles)": [[320, "particles.combine_three_clusters"]], "combine_two_clusters() (in module particles)": [[321, "particles.combine_two_clusters"]], "resample_one_cluster() (in module particles)": [[322, "particles.resample_one_cluster"]], "resample_three_clusters() (in module particles)": [[323, "particles.resample_three_clusters"]], "resample_two_clusters() (in module particles)": [[324, "particles.resample_two_clusters"]], "radial_profiles": [[325, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[326, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[327, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[328, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[329, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[330, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[331, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[332, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[333, "radial_profiles.RadialProfile.from_binary"]], "name (radial_profiles.radialprofile attribute)": [[334, "radial_profiles.RadialProfile.name"]], "plot() (radial_profiles.radialprofile method)": [[335, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[336, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[337, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[338, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[339, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[340, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[341, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[342, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[343, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[344, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[345, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[346, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[347, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[348, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[349, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[350, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[351, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[352, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[353, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[354, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[355, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[356, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[357, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[358, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[359, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[360, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[361, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[362, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[363, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[364, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[365, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[366, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[367, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[368, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[369, "radial_profiles.walker_entropy_profile"]], "relations": [[370, "module-relations"]], "convert_ne_to_density() (in module relations)": [[371, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[372, "relations.f_gas"]], "m_bcg() (in module relations)": [[373, "relations.m_bcg"]], "m_sat() (in module relations)": [[374, "relations.m_sat"]], "r_bcg() (in module relations)": [[375, "relations.r_bcg"]], "rho_scale_hern() (in module relations)": [[376, "relations.rho_scale_hern"]], "utils": [[377, "module-utils"]], "logmute (class in utils)": [[378, "utils.LogMute"]], "__init__() (utils.logmute method)": [[379, "utils.LogMute.__init__"]], "ensure_list() (in module utils)": [[380, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[381, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[382, "utils.ensure_ytquantity"]], "generate_particle_radii() (in module utils)": [[383, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[384, "utils.integrate"]], "integrate_mass() (in module utils)": [[385, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[386, "utils.integrate_toinf"]], "parse_prng() (in module utils)": [[387, "utils.parse_prng"]], "time_limit() (in module utils)": [[388, "utils.time_limit"]], "virial": [[389, "module-virial"]], "virialequilibrium (class in virial)": [[390, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[391, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[392, "virial.VirialEquilibrium.check_virial"]], "ee (virial.virialequilibrium property)": [[393, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[394, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[395, "virial.VirialEquilibrium.generate_particles"]]}})