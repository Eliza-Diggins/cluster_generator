Search.setIndex({"docnames": ["Articles", "_as_gen/cluster_collections", "_as_gen/cluster_collections.Ascasibar07", "_as_gen/cluster_collections.Ascasibar07.__init__", "_as_gen/cluster_collections.Ascasibar07.authors", "_as_gen/cluster_collections.Ascasibar07.citation", "_as_gen/cluster_collections.Ascasibar07.items", "_as_gen/cluster_collections.Ascasibar07.keys", "_as_gen/cluster_collections.Ascasibar07.name", "_as_gen/cluster_collections.Ascasibar07.profiles", "_as_gen/cluster_collections.Ascasibar07.source_authors", "_as_gen/cluster_collections.Ascasibar07.values", "_as_gen/cluster_collections.Collection", "_as_gen/cluster_collections.Collection.__init__", "_as_gen/cluster_collections.Collection.authors", "_as_gen/cluster_collections.Collection.citation", "_as_gen/cluster_collections.Collection.items", "_as_gen/cluster_collections.Collection.keys", "_as_gen/cluster_collections.Collection.name", "_as_gen/cluster_collections.Collection.profiles", "_as_gen/cluster_collections.Collection.source_authors", "_as_gen/cluster_collections.Collection.values", "_as_gen/cluster_collections.ProtoCluster", "_as_gen/cluster_collections.ProtoCluster.__init__", "_as_gen/cluster_collections.ProtoCluster.items", "_as_gen/cluster_collections.ProtoCluster.keys", "_as_gen/cluster_collections.ProtoCluster.load", "_as_gen/cluster_collections.ProtoCluster.value", "_as_gen/cluster_collections.Sanderson10", "_as_gen/cluster_collections.Sanderson10.__init__", "_as_gen/cluster_collections.Sanderson10.authors", "_as_gen/cluster_collections.Sanderson10.citation", "_as_gen/cluster_collections.Sanderson10.items", "_as_gen/cluster_collections.Sanderson10.keys", "_as_gen/cluster_collections.Sanderson10.name", "_as_gen/cluster_collections.Sanderson10.profiles", "_as_gen/cluster_collections.Sanderson10.source_authors", "_as_gen/cluster_collections.Sanderson10.values", "_as_gen/cluster_collections.Vikhlinin06", "_as_gen/cluster_collections.Vikhlinin06.__init__", "_as_gen/cluster_collections.Vikhlinin06.authors", "_as_gen/cluster_collections.Vikhlinin06.citation", "_as_gen/cluster_collections.Vikhlinin06.items", "_as_gen/cluster_collections.Vikhlinin06.keys", "_as_gen/cluster_collections.Vikhlinin06.name", "_as_gen/cluster_collections.Vikhlinin06.profiles", "_as_gen/cluster_collections.Vikhlinin06.source_authors", "_as_gen/cluster_collections.Vikhlinin06.values", "_as_gen/codes", "_as_gen/codes.resample_arepo_ics", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.correct", "_as_gen/model.ClusterModel.create_dataset", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.find_radius_for_density", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.is_physical", "_as_gen/model.ClusterModel.items", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.panel_plot", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.properties", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.values", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.correct", "_as_gen/model.HydrostaticEquilibrium.create_dataset", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.is_physical", "_as_gen/model.HydrostaticEquilibrium.items", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.panel_plot", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.properties", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.values", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/numalgs", "_as_gen/numalgs.extrap_power_law", "_as_gen/numalgs.find_holes", "_as_gen/numalgs.identify_domain_borders", "_as_gen/numalgs.monotone_interpolation", "_as_gen/numalgs.positive_interpolation", "_as_gen/numalgs.solve_temperature", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.combine_three_clusters", "_as_gen/particles.combine_two_clusters", "_as_gen/particles.resample_one_cluster", "_as_gen/particles.resample_three_clusters", "_as_gen/particles.resample_two_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.name", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/relations.rho_scale_hern", "_as_gen/utils", "_as_gen/utils.LogMute", "_as_gen/utils.LogMute.__init__", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.parse_prng", "_as_gen/utils.time_limit", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_notebooks/examples/FirstJourney", "api", "codes", "collections", "correction", "examples", "fields", "getting_started", "index", "initial_conditions", "models", "particles", "radial_profiles"], "filenames": ["Articles.rst", "_as_gen/cluster_collections.rst", "_as_gen/cluster_collections.Ascasibar07.rst", "_as_gen/cluster_collections.Ascasibar07.__init__.rst", "_as_gen/cluster_collections.Ascasibar07.authors.rst", "_as_gen/cluster_collections.Ascasibar07.citation.rst", "_as_gen/cluster_collections.Ascasibar07.items.rst", "_as_gen/cluster_collections.Ascasibar07.keys.rst", "_as_gen/cluster_collections.Ascasibar07.name.rst", "_as_gen/cluster_collections.Ascasibar07.profiles.rst", "_as_gen/cluster_collections.Ascasibar07.source_authors.rst", "_as_gen/cluster_collections.Ascasibar07.values.rst", "_as_gen/cluster_collections.Collection.rst", "_as_gen/cluster_collections.Collection.__init__.rst", "_as_gen/cluster_collections.Collection.authors.rst", "_as_gen/cluster_collections.Collection.citation.rst", "_as_gen/cluster_collections.Collection.items.rst", "_as_gen/cluster_collections.Collection.keys.rst", "_as_gen/cluster_collections.Collection.name.rst", "_as_gen/cluster_collections.Collection.profiles.rst", "_as_gen/cluster_collections.Collection.source_authors.rst", "_as_gen/cluster_collections.Collection.values.rst", "_as_gen/cluster_collections.ProtoCluster.rst", "_as_gen/cluster_collections.ProtoCluster.__init__.rst", "_as_gen/cluster_collections.ProtoCluster.items.rst", "_as_gen/cluster_collections.ProtoCluster.keys.rst", "_as_gen/cluster_collections.ProtoCluster.load.rst", "_as_gen/cluster_collections.ProtoCluster.value.rst", "_as_gen/cluster_collections.Sanderson10.rst", "_as_gen/cluster_collections.Sanderson10.__init__.rst", "_as_gen/cluster_collections.Sanderson10.authors.rst", "_as_gen/cluster_collections.Sanderson10.citation.rst", "_as_gen/cluster_collections.Sanderson10.items.rst", "_as_gen/cluster_collections.Sanderson10.keys.rst", "_as_gen/cluster_collections.Sanderson10.name.rst", "_as_gen/cluster_collections.Sanderson10.profiles.rst", "_as_gen/cluster_collections.Sanderson10.source_authors.rst", "_as_gen/cluster_collections.Sanderson10.values.rst", "_as_gen/cluster_collections.Vikhlinin06.rst", "_as_gen/cluster_collections.Vikhlinin06.__init__.rst", "_as_gen/cluster_collections.Vikhlinin06.authors.rst", "_as_gen/cluster_collections.Vikhlinin06.citation.rst", "_as_gen/cluster_collections.Vikhlinin06.items.rst", "_as_gen/cluster_collections.Vikhlinin06.keys.rst", "_as_gen/cluster_collections.Vikhlinin06.name.rst", "_as_gen/cluster_collections.Vikhlinin06.profiles.rst", "_as_gen/cluster_collections.Vikhlinin06.source_authors.rst", "_as_gen/cluster_collections.Vikhlinin06.values.rst", "_as_gen/codes.rst", "_as_gen/codes.resample_arepo_ics.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.correct.rst", "_as_gen/model.ClusterModel.create_dataset.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.find_radius_for_density.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.is_physical.rst", "_as_gen/model.ClusterModel.items.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.panel_plot.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.properties.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.values.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.correct.rst", "_as_gen/model.HydrostaticEquilibrium.create_dataset.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.is_physical.rst", "_as_gen/model.HydrostaticEquilibrium.items.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.panel_plot.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.properties.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.values.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/numalgs.rst", "_as_gen/numalgs.extrap_power_law.rst", "_as_gen/numalgs.find_holes.rst", "_as_gen/numalgs.identify_domain_borders.rst", "_as_gen/numalgs.monotone_interpolation.rst", "_as_gen/numalgs.positive_interpolation.rst", "_as_gen/numalgs.solve_temperature.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.combine_three_clusters.rst", "_as_gen/particles.combine_two_clusters.rst", "_as_gen/particles.resample_one_cluster.rst", "_as_gen/particles.resample_three_clusters.rst", "_as_gen/particles.resample_two_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.name.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/relations.rho_scale_hern.rst", "_as_gen/utils.rst", "_as_gen/utils.LogMute.rst", "_as_gen/utils.LogMute.__init__.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.time_limit.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_notebooks/examples/FirstJourney.ipynb", "api.rst", "codes.rst", "collections.rst", "correction.rst", "examples.rst", "fields.rst", "getting_started.rst", "index.rst", "initial_conditions.rst", "models.rst", "particles.rst", "radial_profiles.rst"], "titles": ["User Reference Guide", "cluster_collections", "cluster_collections.Ascasibar07", "cluster_collections.Ascasibar07.__init__", "cluster_collections.Ascasibar07.authors", "cluster_collections.Ascasibar07.citation", "cluster_collections.Ascasibar07.items", "cluster_collections.Ascasibar07.keys", "cluster_collections.Ascasibar07.name", "cluster_collections.Ascasibar07.profiles", "cluster_collections.Ascasibar07.source_authors", "cluster_collections.Ascasibar07.values", "cluster_collections.Collection", "cluster_collections.Collection.__init__", "cluster_collections.Collection.authors", "cluster_collections.Collection.citation", "cluster_collections.Collection.items", "cluster_collections.Collection.keys", "cluster_collections.Collection.name", "cluster_collections.Collection.profiles", "cluster_collections.Collection.source_authors", "cluster_collections.Collection.values", "cluster_collections.ProtoCluster", "cluster_collections.ProtoCluster.__init__", "cluster_collections.ProtoCluster.items", "cluster_collections.ProtoCluster.keys", "cluster_collections.ProtoCluster.load", "cluster_collections.ProtoCluster.value", "cluster_collections.Sanderson10", "cluster_collections.Sanderson10.__init__", "cluster_collections.Sanderson10.authors", "cluster_collections.Sanderson10.citation", "cluster_collections.Sanderson10.items", "cluster_collections.Sanderson10.keys", "cluster_collections.Sanderson10.name", "cluster_collections.Sanderson10.profiles", "cluster_collections.Sanderson10.source_authors", "cluster_collections.Sanderson10.values", "cluster_collections.Vikhlinin06", "cluster_collections.Vikhlinin06.__init__", "cluster_collections.Vikhlinin06.authors", "cluster_collections.Vikhlinin06.citation", "cluster_collections.Vikhlinin06.items", "cluster_collections.Vikhlinin06.keys", "cluster_collections.Vikhlinin06.name", "cluster_collections.Vikhlinin06.profiles", "cluster_collections.Vikhlinin06.source_authors", "cluster_collections.Vikhlinin06.values", "codes", "codes.resample_arepo_ics", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.correct", "model.ClusterModel.create_dataset", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.find_radius_for_density", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.is_physical", "model.ClusterModel.items", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.panel_plot", "model.ClusterModel.plot", "model.ClusterModel.properties", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.values", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.correct", "model.HydrostaticEquilibrium.create_dataset", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.find_radius_for_density", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.is_physical", "model.HydrostaticEquilibrium.items", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.panel_plot", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.properties", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.values", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "numalgs", "numalgs.extrap_power_law", "numalgs.find_holes", "numalgs.identify_domain_borders", "numalgs.monotone_interpolation", "numalgs.positive_interpolation", "numalgs.solve_temperature", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.combine_three_clusters", "particles.combine_two_clusters", "particles.resample_one_cluster", "particles.resample_three_clusters", "particles.resample_two_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.name", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "relations.rho_scale_hern", "utils", "utils.LogMute", "utils.LogMute.__init__", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.parse_prng", "utils.time_limit", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "Your First Journey With CG", "API", "Simulation Software", "Cluster Collections", "Correcting Non-Physical Behavior", "Examples", "Generating 3D Cluster Fields", "Quickstart Guide", "Cluster Generator", "Initial Conditions Generation", "Cluster Models", "Particles", "Radial Profiles"], "terms": {"welcom": [0, 296], "cluster": [0, 2, 3, 6, 7, 11, 12, 13, 16, 17, 21, 22, 23, 28, 29, 32, 33, 37, 38, 39, 42, 43, 47, 52, 53, 54, 55, 56, 57, 110, 111, 112, 118, 157, 200, 201, 204, 215, 216, 217, 218, 219, 232, 233, 234, 235, 236, 262, 263, 267, 286, 293, 295, 296, 298, 302, 303], "gener": [0, 12, 26, 52, 53, 54, 55, 56, 57, 60, 104, 108, 112, 124, 129, 130, 131, 132, 139, 140, 163, 168, 169, 170, 171, 178, 179, 192, 204, 226, 227, 238, 264, 278, 286, 290, 291, 293, 294, 295, 298], "On": [0, 293, 296, 303], "thi": [0, 12, 23, 26, 54, 55, 57, 62, 67, 72, 77, 82, 87, 92, 97, 104, 108, 118, 129, 130, 131, 132, 133, 139, 140, 149, 157, 168, 169, 170, 171, 172, 178, 179, 188, 191, 192, 200, 201, 223, 227, 231, 256, 262, 283, 286, 287, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303], "page": [0, 291, 293, 296, 298, 301, 303], "you": [0, 129, 130, 131, 132, 149, 168, 169, 170, 171, 188, 290, 291, 293, 295, 296, 298, 299, 302, 303], "ll": [0, 291, 296, 303], "find": [0, 122, 161, 192, 244, 247, 248, 259, 291, 296, 299, 301, 302, 303], "link": [0, 295], "varieti": [0, 291, 293, 295, 296, 298, 299, 301], "differ": [0, 64, 69, 74, 79, 84, 89, 94, 99, 139, 178, 192, 221, 287, 291, 295, 299, 301, 302], "which": [0, 3, 13, 29, 39, 55, 58, 62, 67, 72, 77, 82, 87, 92, 97, 100, 101, 104, 105, 107, 110, 118, 123, 124, 125, 129, 130, 131, 132, 137, 139, 140, 142, 144, 145, 157, 162, 163, 164, 168, 169, 170, 171, 176, 178, 179, 181, 183, 184, 191, 192, 193, 194, 195, 200, 201, 214, 223, 226, 253, 254, 286, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303], "provid": [0, 1, 3, 13, 29, 39, 191, 192, 230, 239, 291, 293, 294, 295, 298, 299, 301, 302, 303], "an": [0, 23, 58, 64, 69, 74, 79, 84, 89, 94, 99, 100, 101, 104, 105, 115, 118, 142, 148, 150, 154, 157, 181, 187, 189, 191, 194, 195, 204, 210, 211, 212, 214, 227, 230, 240, 247, 248, 251, 252, 253, 256, 268, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303], "indepth": 0, "look": [0, 291, 296, 298, 299, 303], "under": [0, 283, 303], "hood": [0, 303], "radial": [0, 1, 126, 127, 137, 143, 144, 165, 166, 176, 182, 183, 191, 208, 217, 221, 227, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 287, 291, 298, 299, 300, 302], "profil": [0, 1, 2, 3, 13, 22, 23, 26, 28, 29, 38, 39, 55, 103, 104, 107, 108, 122, 125, 126, 127, 137, 143, 144, 161, 164, 165, 166, 176, 182, 183, 191, 192, 194, 195, 196, 217, 220, 221, 222, 223, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 279, 280, 281, 286, 287, 291, 294, 295, 296, 298, 299, 300, 302], "ar": [0, 22, 23, 54, 57, 64, 69, 74, 79, 84, 89, 94, 99, 100, 101, 105, 110, 112, 117, 126, 127, 137, 139, 141, 148, 156, 165, 166, 176, 178, 180, 187, 191, 194, 200, 201, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303], "basi": 0, "all": [0, 12, 55, 105, 118, 133, 139, 141, 149, 157, 172, 178, 180, 188, 201, 202, 205, 208, 211, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303], "model": [0, 1, 22, 23, 26, 104, 108, 204, 237, 244, 259, 262, 285, 286, 293, 294, 295, 296, 297, 298, 299, 302], "built": [0, 23, 225, 291, 299, 301], "read": [0, 55, 58, 106, 128, 167, 204, 205, 293, 294, 298, 302, 303], "time": [0, 129, 130, 131, 132, 168, 169, 170, 171, 240, 283, 290, 291, 294, 296, 297, 298, 301], "10": [0, 191, 194, 195, 291, 302, 303], "minut": 0, "learn": [0, 296, 298, 299, 301], "more": [0, 108, 201, 291, 295, 297, 298, 299, 300, 301, 302, 303], "about": [0, 55, 101, 291, 294, 296, 298, 301, 303], "central": [0, 110, 144, 183, 192, 236, 295], "clustermodel": [0, 22, 23, 26, 104, 111, 151, 152, 156, 163, 164, 167, 172, 176, 180, 184, 286, 291, 294], "class": [0, 1, 2, 12, 22, 23, 28, 38, 59, 60, 65, 70, 75, 80, 85, 90, 95, 102, 103, 111, 112, 124, 151, 163, 197, 198, 220, 221, 272, 273, 284, 285, 291, 294, 300, 301, 303], "can": [0, 112, 118, 119, 143, 144, 149, 157, 158, 182, 183, 188, 195, 201, 214, 254, 286, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303], "your": [0, 118, 157, 192, 294, 296, 297, 298, 299, 303], "workflow": 0, "30": 0, "code": [0, 26, 104, 108, 191, 214, 291, 293, 294, 297, 298, 299, 302, 303], "avail": [0, 12, 23, 112, 129, 130, 131, 132, 139, 168, 169, 170, 171, 178, 290, 291, 294, 296, 298, 299, 301], "simul": [0, 102, 104, 214, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "ic": [0, 49, 50, 51, 52, 53, 54, 55, 56, 57, 291, 293, 298, 302], "collect": [0, 2, 3, 4, 6, 7, 8, 11, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 47, 296, 298, 299], "pre": [0, 1, 23, 104, 139, 178, 191, 223, 298, 299, 301], "packag": [0, 272, 294, 299, 301], "particl": [0, 54, 55, 57, 58, 62, 67, 72, 77, 82, 87, 92, 97, 104, 107, 108, 129, 130, 131, 132, 168, 169, 170, 171, 278, 286, 287, 290, 291, 293, 298, 299, 300, 301], "initi": [0, 3, 13, 23, 26, 29, 39, 59, 102, 104, 106, 107, 108, 109, 112, 113, 124, 128, 137, 152, 163, 167, 176, 197, 198, 214, 224, 291, 293, 294, 295, 296, 298, 299, 301, 302], "condit": [0, 102, 104, 106, 107, 108, 109, 112, 197, 198, 214, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302], "interest": [0, 293, 294], "how": [0, 55, 293, 295, 296, 298, 299, 301, 302, 303], "oper": [0, 298], "here": [0, 191, 245, 246, 298, 299, 301, 303], "": [0, 12, 38, 140, 148, 179, 187, 201, 217, 236, 240, 267, 291, 294, 296, 297, 298, 299, 301, 303], "correct": [0, 23, 100, 133, 172, 191, 195, 271, 294, 296, 298, 299, 301], "non": [0, 133, 139, 172, 178, 192, 293, 294, 296, 298, 299], "physic": [0, 111, 133, 139, 172, 178, 221, 293, 294, 296, 298, 299, 303], "region": [0, 133, 172, 263, 294], "what": [0, 141, 180, 291, 293, 296, 298], "goe": [0, 291, 295], "behind": [0, 141, 180, 291, 295], "when": [0, 105, 112, 141, 180, 230, 247, 248, 253, 295, 299, 301], "us": [0, 2, 22, 28, 38, 54, 55, 57, 62, 67, 72, 77, 82, 87, 92, 97, 104, 105, 107, 108, 112, 117, 118, 126, 127, 133, 139, 140, 148, 149, 156, 157, 165, 166, 172, 178, 179, 187, 188, 190, 191, 192, 193, 200, 201, 210, 214, 227, 230, 247, 248, 253, 254, 267, 286, 287, 291, 293, 295, 297, 298, 299, 300, 302], "modul": [0, 1, 23, 111, 197, 272, 284, 294, 296, 298, 299, 303], "npr": [0, 294], "numer": [0, 190, 294, 298, 301, 302], "analysi": [0, 2, 298], "go": [0, 2, 28, 38, 223, 226, 291, 294], "algorithm": [0, 117, 133, 156, 172, 190, 191, 192, 294, 295, 299, 301], "underli": [0, 26, 299, 302], "mathemat": [0, 298, 303], "field": [0, 55, 104, 107, 112, 113, 118, 119, 122, 124, 134, 135, 138, 139, 140, 142, 143, 144, 147, 149, 151, 152, 157, 158, 161, 163, 173, 174, 177, 178, 179, 181, 182, 183, 186, 188, 198, 199, 203, 210, 214, 291, 293, 298, 299], "magnet": [0, 55, 59, 104, 143, 144, 182, 183, 293, 298], "The": [1, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 22, 23, 26, 29, 30, 31, 34, 35, 36, 39, 40, 41, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 87, 88, 89, 92, 93, 94, 97, 98, 99, 100, 101, 104, 105, 109, 110, 112, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 204, 205, 208, 210, 211, 212, 214, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 283, 286, 287, 290, 293, 294, 296, 297, 298, 299, 300, 303], "user": [1, 12, 22, 23, 26, 102, 141, 149, 180, 188, 191, 293, 294, 295, 298, 299, 302, 303], "access": [1, 119, 158, 299, 303], "exist": [1, 58, 64, 69, 74, 79, 84, 89, 94, 99, 139, 148, 149, 150, 178, 187, 188, 189, 210, 212, 214, 223, 296, 297, 302], "known": [1, 294, 298, 301], "system": [1, 104, 129, 130, 131, 132, 133, 168, 169, 170, 171, 172, 208, 245, 290, 294, 295, 298, 299, 301, 302], "sourc": [2, 3, 4, 5, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 70, 71, 75, 80, 81, 85, 86, 90, 95, 96, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 298, 299, 302], "13": [2, 38, 291], "low": [2, 28, 38, 223], "redshift": [2, 28, 38, 247, 248, 253], "galaxi": [2, 28, 38, 111, 234, 235, 236, 262, 263, 291, 294, 295, 296, 298, 299, 301], "chandra": [2, 28, 38, 299], "detail": [2, 28, 38, 112, 291, 295, 298, 299, 302, 303], "type": [2, 23, 28, 38, 58, 62, 67, 72, 77, 82, 87, 92, 97, 100, 107, 115, 117, 124, 125, 129, 131, 133, 137, 140, 145, 149, 154, 156, 163, 164, 168, 170, 172, 176, 179, 184, 188, 191, 193, 196, 197, 201, 202, 204, 205, 208, 210, 211, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 286, 290, 293, 297, 298, 299, 301], "x": [2, 28, 38, 101, 110, 140, 179, 191, 192, 193, 194, 195, 275, 277, 293, 298, 299, 302, 303], "rai": [2, 28, 38, 298, 299], "observ": [2, 28, 38, 294, 295, 298, 299], "secondari": [2, 28], "observatori": [2, 28, 38, 299], "rho_g": [2, 28, 38, 294, 295, 301], "t_g": [2, 28, 38, 295, 301], "author": [2, 10, 20, 28, 36, 38, 46], "y": [2, 101, 110, 191, 192, 194, 195, 234, 293], "ascasibar": [2, 232, 234, 299], "j": [2, 28, 257], "m": [2, 38, 194, 195, 234, 236, 240, 242, 243, 245, 246, 247, 257, 258, 260, 271, 278, 291, 293, 302], "diego": [2, 232], "recommend": [2, 23, 28, 38, 293, 298, 299, 302], "citat": [2, 28, 38, 303], "To": [2, 28, 38, 192, 291, 295, 298, 299, 301, 302], "method": [2, 12, 22, 23, 28, 38, 60, 65, 70, 75, 80, 85, 90, 95, 103, 111, 112, 118, 128, 133, 151, 157, 167, 172, 192, 194, 198, 221, 273, 278, 285, 287, 291, 293, 294, 295, 296, 297, 298, 301, 302], "attribut": [2, 12, 28, 38, 60, 65, 70, 75, 80, 85, 90, 95, 112, 124, 128, 141, 149, 151, 163, 167, 180, 188, 198, 221, 285, 293, 301], "instanc": [3, 13, 23, 26, 29, 39, 58, 104, 112, 113, 117, 120, 128, 133, 137, 139, 141, 145, 146, 152, 156, 159, 167, 172, 176, 178, 180, 184, 185, 221, 228, 230, 231, 291, 294, 301, 302, 303], "paramet": [3, 13, 22, 23, 26, 29, 39, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 100, 101, 104, 105, 107, 108, 109, 110, 112, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 140, 141, 143, 144, 145, 148, 149, 150, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 179, 180, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 200, 201, 204, 205, 208, 210, 211, 212, 214, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 283, 286, 290, 294, 302, 303], "data": [3, 5, 12, 13, 15, 29, 31, 39, 41, 104, 191, 205, 291, 294, 301], "str": [3, 13, 23, 29, 39, 64, 69, 74, 79, 84, 89, 94, 99, 100, 104, 112, 117, 124, 128, 139, 141, 148, 149, 150, 156, 163, 167, 178, 180, 187, 188, 189, 228, 231], "pathlib": [3, 13, 29, 39], "path": [3, 13, 29, 39, 104, 149, 188], "panda": [3, 13, 29, 39, 298], "datafram": [3, 13, 29, 39], "If": [3, 13, 23, 26, 29, 39, 54, 55, 57, 60, 100, 108, 109, 117, 118, 128, 129, 130, 131, 132, 139, 141, 149, 156, 157, 167, 168, 169, 170, 171, 178, 180, 188, 191, 192, 195, 200, 201, 205, 208, 210, 211, 214, 247, 248, 253, 262, 286, 290, 291, 295, 297, 298, 299, 301, 302, 303], "object": [3, 13, 29, 39, 52, 53, 54, 55, 56, 57, 62, 67, 72, 77, 82, 87, 92, 97, 121, 129, 130, 131, 132, 141, 160, 168, 169, 170, 171, 180, 220, 221, 225, 226, 228, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 286, 290, 294, 297, 298, 303], "result": [3, 13, 29, 39, 110, 133, 137, 172, 176, 191, 266, 291, 295, 297, 302], "should": [3, 12, 13, 23, 26, 29, 39, 55, 104, 139, 140, 141, 149, 178, 179, 180, 188, 194, 195, 201, 226, 228, 231, 253, 291, 293, 295, 296, 301, 302, 303], "point": [3, 13, 29, 39, 125, 126, 127, 137, 164, 165, 166, 176, 191, 192, 230, 295, 301], "csv": [3, 13, 29, 39], "file": [3, 13, 29, 39, 54, 55, 57, 58, 64, 69, 74, 79, 84, 89, 94, 99, 104, 107, 109, 128, 148, 149, 150, 167, 187, 188, 189, 204, 205, 212, 214, 228, 231, 291, 293, 294, 298, 302, 303], "contain": [3, 13, 23, 26, 29, 39, 104, 111, 115, 124, 140, 154, 163, 179, 192, 193, 198, 223, 294, 299, 301, 302], "relev": [3, 13, 29, 39, 194, 195, 295], "i": [3, 12, 13, 22, 23, 29, 39, 54, 55, 57, 60, 100, 108, 110, 112, 117, 118, 129, 130, 131, 132, 133, 137, 139, 140, 141, 142, 144, 156, 157, 168, 169, 170, 171, 172, 176, 178, 179, 180, 181, 183, 191, 192, 193, 194, 195, 200, 210, 221, 223, 226, 231, 232, 245, 246, 253, 254, 266, 276, 290, 291, 293, 295, 296, 297, 298, 299, 301, 303], "tabl": [3, 13, 29, 39, 301], "each": [3, 13, 23, 29, 39, 60, 104, 105, 129, 130, 131, 138, 139, 168, 169, 170, 177, 178, 191, 192, 290, 291, 293, 294, 296, 297, 299, 301, 302, 303], "column": [3, 13, 29, 39, 295], "name": [3, 13, 22, 23, 29, 39, 55, 58, 64, 69, 74, 79, 84, 89, 94, 99, 104, 109, 128, 139, 141, 142, 148, 149, 150, 167, 178, 180, 181, 187, 188, 189, 204, 205, 210, 212, 214, 221, 222, 224, 295, 301, 302, 303], "float": [3, 13, 23, 26, 29, 39, 101, 104, 105, 110, 118, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 140, 143, 144, 145, 149, 150, 157, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 179, 182, 183, 184, 188, 189, 191, 192, 194, 195, 200, 208, 211, 214, 223, 226, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 283, 290, 303], "valu": [3, 13, 23, 29, 39, 100, 104, 117, 122, 139, 141, 142, 156, 161, 178, 180, 181, 191, 192, 193, 194, 195, 200, 210, 227, 232, 233, 239, 247, 254, 268, 269, 270, 291, 294, 295, 297, 301, 302, 303], "subsequ": [3, 13, 29, 39], "correspond": [3, 12, 13, 23, 26, 29, 39, 104, 139, 141, 178, 180, 191, 194, 195, 226, 227, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 294, 297, 301, 302], "IN": [3, 13, 29, 39], "order": [3, 13, 29, 39, 118, 157, 295], "argument": [3, 13, 23, 26, 29, 39, 139, 178, 200, 283, 297], "function": [3, 13, 23, 26, 29, 39, 48, 59, 102, 115, 154, 190, 191, 192, 195, 197, 220, 221, 227, 265, 272, 283, 286, 287, 291, 294, 295, 297, 298, 301, 302, 303], "schema": [3, 9, 12, 13, 19, 29, 35, 39, 45], "dict": [3, 13, 23, 26, 29, 39, 104, 112, 124, 139, 140, 141, 163, 178, 179, 180], "properti": [4, 5, 8, 9, 10, 14, 15, 18, 19, 20, 30, 31, 34, 35, 36, 40, 41, 44, 45, 46, 63, 68, 73, 78, 83, 88, 93, 98, 112, 113, 120, 124, 128, 133, 137, 146, 149, 151, 152, 159, 163, 167, 172, 176, 185, 188, 209, 288, 289, 291, 294, 298, 302], "origin": [4, 10, 14, 20, 30, 36, 40, 46, 295, 302], "bibtex": [5, 15, 31, 41], "return": [6, 7, 11, 16, 17, 21, 32, 33, 37, 42, 43, 47, 58, 100, 101, 115, 117, 124, 125, 129, 131, 133, 137, 139, 140, 145, 149, 154, 156, 163, 164, 168, 170, 172, 176, 178, 179, 184, 188, 191, 192, 193, 194, 195, 196, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 287, 290, 294, 298, 302, 303], "equival": [6, 7, 11, 16, 17, 21, 32, 33, 37, 42, 43, 47, 114, 116, 134, 135, 147, 151, 153, 155, 173, 174, 186, 191, 295, 301], "self": [6, 7, 11, 16, 17, 21, 32, 33, 37, 42, 43, 47, 111, 112, 114, 116, 124, 134, 135, 147, 149, 153, 155, 163, 173, 174, 186, 188, 294, 295, 303], "from": [9, 19, 26, 35, 45, 52, 53, 54, 55, 56, 57, 100, 104, 105, 106, 107, 108, 110, 115, 124, 125, 128, 139, 140, 143, 149, 154, 163, 164, 167, 178, 179, 182, 188, 191, 193, 195, 196, 204, 205, 208, 224, 228, 232, 233, 247, 248, 253, 256, 262, 263, 267, 286, 287, 291, 293, 294, 295, 298, 299, 303], "base": [12, 59, 129, 130, 131, 132, 139, 168, 169, 170, 171, 178, 192, 194, 195, 290, 293, 294, 298, 299, 301, 302], "rst": 12, "cgp": [12, 23], "instanti": 12, "rather": [12, 302], "specif": [12, 23, 48, 140, 179, 214, 228, 293, 298, 299, 301, 302], "sub": [12, 129, 130, 131, 132, 168, 169, 170, 171, 290, 293], "desir": [12, 126, 127, 137, 141, 165, 166, 176, 180, 294, 302], "databas": 12, "load_method": [22, 23], "precursor": 22, "fulli": [22, 294, 295, 298], "realiz": [22, 133, 172, 294, 295], "py": [22, 272, 303], "These": [22, 23, 112, 139, 141, 178, 180, 294, 298, 299, 301, 302, 303], "minim": [22, 117, 156, 293], "memori": [22, 105, 118, 157, 211, 298], "intens": [22, 118, 157], "placehold": 22, "allow": [22, 26, 117, 129, 130, 131, 132, 156, 168, 169, 170, 171, 195, 290, 295, 298, 301, 302, 303], "easili": [22, 299, 301, 302], "load": [22, 23, 140, 179, 204, 228, 294, 301, 303], "full": [22, 23, 293, 297], "callabl": [23, 125, 164, 191, 192, 221, 227, 283, 303], "A": [23, 28, 38, 126, 127, 129, 130, 131, 132, 137, 139, 140, 145, 165, 166, 168, 169, 170, 171, 176, 178, 179, 184, 191, 194, 195, 201, 204, 230, 237, 241, 242, 243, 245, 246, 249, 250, 254, 257, 258, 260, 261, 262, 263, 264, 267, 290, 295, 297, 302], "dictionari": [23, 104, 139, 140, 141, 149, 178, 179, 180, 188], "definit": [23, 124, 163], "There": [23, 112, 139, 178, 295, 298, 301], "two": [23, 108, 110, 293, 298, 301, 302], "option": [23, 26, 54, 55, 57, 58, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 101, 104, 105, 109, 110, 112, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 137, 139, 141, 143, 144, 148, 150, 156, 157, 163, 165, 166, 167, 168, 169, 170, 171, 176, 178, 180, 182, 183, 187, 189, 191, 192, 193, 194, 195, 200, 201, 205, 208, 210, 211, 212, 214, 225, 230, 232, 247, 248, 253, 267, 283, 286, 290, 293, 297, 298, 301, 302], "format": [23, 58, 64, 69, 74, 79, 84, 89, 94, 99, 106, 139, 140, 178, 179, 214, 247, 248, 253, 298, 299, 301, 302], "element": [23, 124, 138, 163, 177, 201, 280], "assum": [23, 100, 143, 144, 182, 183, 200, 201, 297, 298, 301, 302], "defin": [23, 191, 192, 208, 220, 253, 291, 295, 301, 302, 303], "alreadi": [23, 54, 55, 57, 210, 291, 297, 298, 301, 302], "cluster_gener": [23, 48, 58, 128, 167, 191, 204, 205, 272, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303], "radial_profil": [23, 124, 163, 191, 291, 301, 303], "cannot": [23, 112, 128, 167, 301], "found": [23, 112, 128, 141, 167, 180, 195], "error": 23, "rais": [23, 191], "ani": [23, 104, 139, 140, 149, 178, 179, 188, 223, 294, 295, 298, 299, 302, 303], "kind": [23, 302], "either": [23, 108, 191, 205, 214, 286, 297, 302], "explicit": 23, "lambda": [23, 221, 303], "It": [23, 141, 180, 291, 295, 301, 302], "wrap": [23, 303], "radialprofil": [23, 124, 126, 127, 137, 163, 165, 166, 176, 191, 220, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 291, 301, 303], "dure": [23, 191, 195, 294], "list": [23, 104, 139, 141, 149, 178, 180, 188, 193, 201, 204, 205, 208, 211, 275, 293, 298, 299, 301], "For": [23, 118, 157, 191, 231, 291, 298, 299, 301, 302, 303], "kei": [23, 26, 104, 112, 124, 139, 140, 141, 163, 178, 179, 180, 295], "pair": [23, 302], "necessari": [23, 112, 291, 295, 297, 299, 301, 303], "being": [23, 54, 57, 112, 118, 157, 301, 302], "int": [23, 101, 104, 105, 118, 125, 139, 157, 164, 178, 191, 192, 194, 195, 226, 232, 302], "follow": [23, 104, 192, 291, 293, 294, 295, 298, 299, 301, 303], "unit": [23, 55, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 100, 140, 143, 144, 148, 150, 179, 182, 183, 187, 189, 200, 201, 208, 210, 214, 227, 267, 276, 277, 291, 293, 297, 302], "convent": [23, 298], "doubt": 23, "we": [23, 118, 157, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303], "pass": [23, 26, 112, 124, 137, 139, 141, 163, 176, 178, 180, 191, 192, 283, 298], "unyt": [23, 104, 112, 124, 163, 266, 268, 269, 298, 302], "arrai": [23, 60, 100, 104, 110, 112, 115, 118, 124, 138, 142, 154, 157, 163, 177, 181, 191, 192, 193, 194, 195, 200, 201, 208, 210, 227, 266, 268, 269, 276, 287, 296, 298, 302, 303], "unyt_quant": [23, 266, 268, 269], "instead": [23, 112, 192, 193, 223, 301, 303], "process": [23, 107, 120, 146, 159, 185, 192, 283, 293, 295, 298, 299, 303], "befor": [23, 148, 150, 187, 189, 293, 298], "proceed": 23, "analog": 23, "typic": [23, 129, 130, 131, 132, 168, 169, 170, 171, 290, 300, 301], "someth": [23, 291, 298], "like": [23, 60, 100, 107, 110, 191, 194, 195, 200, 201, 208, 227, 291, 293, 294, 295, 298, 299, 303], "from_dens_and_temp": [23, 124, 163, 301], "from_dens_and_tden": [23, 124, 163, 291, 301], "rmin": [26, 125, 126, 127, 137, 164, 165, 166, 176, 230], "rmax": [26, 125, 126, 127, 137, 164, 165, 166, 176, 230], "additional_arg": 26, "none": [26, 50, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 103, 104, 105, 107, 108, 112, 113, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 140, 149, 150, 151, 152, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 179, 188, 189, 191, 192, 193, 200, 201, 204, 205, 206, 208, 210, 211, 214, 218, 219, 221, 222, 230, 231, 247, 248, 253, 262, 278, 285, 286, 290, 301], "kwarg": [26, 105, 117, 118, 124, 125, 126, 127, 137, 139, 140, 156, 157, 163, 164, 165, 166, 176, 178, 179, 230, 283], "minimum": [26, 105, 117, 118, 125, 126, 127, 128, 137, 139, 140, 149, 150, 156, 157, 164, 165, 166, 167, 176, 178, 179, 188, 189, 192, 195, 200, 230, 263, 302], "radiu": [26, 104, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 145, 149, 150, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 178, 179, 184, 188, 189, 196, 208, 223, 226, 230, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 270, 271, 290, 291, 295, 303], "regim": [26, 191, 294], "kpc": [26, 60, 64, 69, 74, 79, 84, 89, 94, 99, 105, 110, 118, 126, 127, 129, 130, 131, 132, 137, 139, 140, 157, 165, 166, 168, 169, 170, 171, 176, 178, 179, 200, 201, 208, 211, 214, 223, 226, 227, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 290, 291, 298, 302], "maximum": [26, 125, 126, 127, 129, 130, 131, 132, 137, 139, 140, 149, 150, 164, 165, 166, 168, 169, 170, 171, 176, 178, 179, 188, 189, 192, 195, 208, 230, 283, 290, 302], "addit": [26, 60, 112, 124, 137, 139, 141, 163, 176, 178, 180, 214, 298, 301, 302, 303], "reason": [26, 129, 130, 131, 132, 168, 169, 170, 171, 290, 295, 301], "specifi": [26, 101, 118, 123, 129, 130, 131, 132, 139, 141, 145, 149, 157, 162, 168, 169, 170, 171, 178, 180, 184, 188, 191, 193, 214, 224, 290, 298, 301, 302], "unless": [26, 298], "some": [26, 107, 144, 183, 191, 255, 270, 291, 293, 294, 295, 297, 298, 299, 300, 301], "alter": [26, 141, 180, 191, 223, 302], "ha": [26, 107, 142, 181, 191, 210, 253, 254, 277, 291, 293, 294, 295, 297, 301, 302], "been": [26, 54, 55, 57, 107, 294, 295, 301], "made": [26, 100, 294, 295, 298], "word": 26, "along": [26, 64, 69, 74, 79, 84, 89, 94, 99, 110, 244, 259, 295], "stellar_dens": [26, 119, 124, 125, 126, 127, 137, 158, 163, 164, 165, 166, 176], "overridden": 26, "also": [26, 55, 64, 69, 74, 79, 84, 89, 94, 99, 191, 291, 293, 295, 298, 299, 301, 302, 303], "stellar": [26, 112, 124, 125, 126, 127, 137, 146, 163, 164, 165, 166, 176, 185, 245, 286, 301, 302], "densiti": [26, 105, 107, 108, 117, 119, 123, 124, 125, 126, 127, 130, 132, 133, 137, 144, 156, 158, 162, 163, 164, 165, 166, 169, 171, 172, 176, 183, 196, 232, 233, 234, 237, 240, 241, 242, 245, 247, 248, 249, 251, 252, 253, 254, 255, 257, 260, 261, 262, 266, 271, 287, 291, 294, 295, 298, 302], "20": 28, "r": [28, 118, 122, 157, 161, 191, 194, 195, 196, 223, 226, 227, 237, 254, 271, 278, 291, 293, 294, 295, 297, 301, 302], "sanderson": 28, "t": [28, 191, 232, 233, 236, 291, 293, 294, 295, 301], "ponman": 28, "vikhlinin": [38, 263, 267, 295, 299], "kravtsov": [38, 263], "w": [38, 263], "forman": [38, 263], "c": [38, 191, 234, 235, 263, 293, 294, 295], "jone": 38, "markevitch": [38, 234, 299], "murrai": 38, "l": [38, 236, 249, 257], "van": 38, "speybroeck": 38, "util": [48, 265, 291, 293, 298, 299], "librari": [48, 294, 296, 298, 299], "infil": 49, "outfil": 49, "overwrit": [49, 50, 58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 139, 148, 149, 150, 178, 187, 188, 189, 212, 213, 214, 291, 302], "fals": [49, 50, 54, 55, 57, 58, 60, 61, 64, 65, 66, 69, 74, 79, 80, 81, 84, 89, 94, 95, 96, 99, 108, 109, 129, 130, 131, 133, 148, 149, 150, 168, 169, 170, 172, 187, 188, 189, 193, 200, 210, 212, 213, 214, 290], "resampl": [49, 107, 217, 218, 219], "arepo": [49, 50, 107, 205, 299, 302], "boxsiz": 50, "nx": 50, "ic_fil": 50, "regenerate_particl": [50, 54, 55, 57, 108], "prng": [50, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96, 108, 129, 130, 131, 132, 168, 169, 170, 171, 278, 282, 290], "setup": [50, 51, 54, 55, 291, 293, 295], "art": 51, "athena": [52, 296, 297, 299], "enzo": [53, 299], "use_particl": 54, "true": [54, 55, 57, 58, 60, 108, 109, 129, 130, 131, 133, 143, 144, 149, 168, 169, 170, 172, 182, 183, 188, 192, 200, 210, 266, 290, 291, 294, 302], "flash": [54, 58, 296, 297, 299], "par": 54, "line": [54, 55], "need": [54, 55, 254, 293, 295, 297, 298, 299, 301, 302, 303], "galaxyclustermerg": [54, 293], "dark": [54, 55, 112, 120, 129, 159, 168, 200, 232, 290, 293, 298], "matter": [54, 55, 112, 120, 129, 159, 168, 200, 232, 290, 293, 298], "potenti": [54, 55, 60, 64, 69, 74, 79, 84, 89, 94, 99, 121, 129, 130, 131, 140, 160, 168, 169, 170, 179, 196, 200, 283, 290, 291, 293, 294, 295, 298, 301, 302], "star": [54, 55, 104, 131, 170, 290, 293, 298, 301], "have": [54, 55, 57, 62, 67, 72, 77, 82, 87, 92, 97, 108, 129, 130, 131, 132, 139, 168, 169, 170, 171, 178, 231, 290, 291, 294, 295, 297, 298, 299, 301, 302, 303], "creat": [54, 55, 57, 62, 67, 72, 77, 82, 87, 92, 97, 105, 118, 157, 211, 230, 293, 294, 295, 298, 300, 302], "yet": [54, 55, 294, 301], "thei": [54, 55, 62, 67, 72, 77, 82, 87, 92, 97, 139, 141, 178, 180, 201, 291, 294, 295, 301, 302], "step": [54, 55, 194, 195, 291, 293, 294, 296, 298], "gamer": [54, 55, 58, 297, 299], "boolean": [54, 55, 57, 58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 129, 130, 131, 143, 144, 168, 169, 170, 182, 183, 200, 210, 212, 214, 290, 302], "set": [54, 55, 57, 62, 67, 72, 77, 82, 87, 92, 97, 104, 108, 112, 129, 130, 131, 132, 139, 142, 143, 144, 168, 169, 170, 171, 178, 181, 182, 183, 200, 208, 210, 211, 290, 293, 295, 297, 298, 300, 302], "up": [54, 108, 139, 178, 293, 295, 298, 300, 302, 303], "distribut": [54, 132, 171, 201, 217, 232, 233, 286, 287, 291, 293, 298, 299, 300, 301, 302], "default": [54, 55, 57, 58, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 100, 105, 109, 110, 112, 118, 119, 129, 130, 131, 132, 140, 141, 143, 144, 148, 150, 157, 158, 168, 169, 170, 171, 179, 180, 182, 183, 187, 189, 191, 192, 194, 195, 200, 201, 208, 210, 212, 214, 230, 232, 247, 248, 253, 262, 267, 286, 290, 291, 294, 297, 302], "flag": [54, 55, 57], "re": [54, 55, 57, 291, 295, 298, 299], "use_trac": 55, "input_testprob": 55, "clustermerg": [55, 293], "new": [55, 62, 67, 72, 77, 82, 87, 92, 97, 145, 184, 191, 201, 296, 297, 299], "cg": [55, 111, 148, 149, 150, 187, 188, 189, 190, 197, 284, 292, 293, 295, 298, 299, 301, 302, 303], "present": [55, 294], "note": [55, 112, 128, 133, 141, 167, 172, 180, 191, 192, 194, 195, 223, 226, 227, 295, 298, 301], "given": [55, 107, 110, 136, 175, 200, 201, 224, 240, 245, 246, 247, 248, 253, 256, 266, 268, 270, 295, 297, 298, 301, 302], "add": [55, 60, 62, 67, 72, 77, 82, 87, 92, 97, 200, 201, 210, 223, 293, 295, 301, 303], "tracer": [55, 104, 132, 171], "gizmo": [56, 205, 296, 299, 302], "func": 56, "rams": [57, 58, 296, 298, 299], "output_filenam": [58, 148, 149, 150, 187, 188, 189, 212, 213], "ptype": [58, 62, 67, 72, 77, 82, 87, 92, 97, 201, 202, 204, 205, 206, 208, 210, 211, 285, 286, 297, 302], "ptype_num": 58, "in_cg": [58, 148, 149, 150, 187, 188, 189], "hdf5": [58, 64, 69, 74, 79, 84, 89, 94, 99, 107, 128, 150, 167, 189, 204, 212, 214, 293, 301, 302], "write": [58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 148, 149, 150, 187, 188, 189, 212, 214, 302], "clusterparticl": [58, 62, 67, 72, 77, 82, 87, 92, 97, 129, 131, 168, 170, 290, 297], "written": [58, 64, 69, 74, 79, 84, 89, 94, 99, 214, 297, 301, 302], "string": [58, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 109, 140, 141, 179, 180, 201, 204, 205, 208, 210, 211, 212, 214, 286, 303], "same": [58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 129, 130, 131, 132, 148, 149, 150, 168, 169, 170, 171, 187, 188, 189, 210, 212, 290, 291, 295, 298, 302], "todo": [58, 70, 75, 80, 85, 90, 95, 103, 107, 217, 269, 285], "3d": [59, 62, 64, 67, 69, 72, 74, 77, 79, 82, 84, 87, 89, 92, 94, 97, 99, 105, 118, 157, 298, 302], "other": [59, 112, 141, 180, 293, 295, 298, 300, 303], "task": [59, 298, 299, 300], "left_edg": [60, 61, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96, 105, 118, 157], "right_edg": [60, 61, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96], "ddim": [60, 61, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96], "pad": [60, 61, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96], "0": [60, 61, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96, 103, 104, 105, 110, 118, 144, 157, 183, 191, 192, 194, 195, 200, 208, 223, 232, 238, 247, 248, 253, 267, 291, 293, 294, 295, 297, 301, 302], "1": [60, 61, 65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96, 101, 129, 130, 131, 132, 139, 140, 168, 169, 170, 171, 178, 179, 191, 192, 193, 194, 195, 223, 226, 264, 266, 290, 291, 293, 294, 295, 301, 302], "vector_potenti": [60, 61, 65, 66], "divergence_clean": [60, 61, 65, 66, 80, 81, 95, 96], "lower": 60, "edg": [60, 105, 118, 157, 193], "box": [60, 105, 118, 157, 214, 302], "dimens": [60, 105, 118, 157, 298], "upper": 60, "number": [60, 104, 105, 108, 112, 118, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 157, 163, 164, 165, 166, 168, 169, 170, 171, 176, 177, 192, 195, 210, 230, 290, 294, 295, 298, 299, 302], "grid": [60, 105, 118, 139, 157, 178, 293, 297, 298], "ax": [60, 64, 69, 74, 79, 84, 89, 94, 99, 139, 140, 178, 179, 191, 230, 291, 302], "amount": [60, 302], "boundari": [60, 193], "bool": [60, 108, 133, 148, 149, 150, 172, 187, 188, 189], "vector": [60, 101, 301, 302], "diverg": [60, 297, 302], "remov": [60, 208, 297], "cluster_particl": [62, 67, 72, 77, 82, 87, 92, 97], "ga": [62, 67, 72, 77, 82, 87, 92, 97, 104, 107, 108, 125, 126, 127, 130, 132, 164, 165, 166, 169, 171, 196, 205, 232, 233, 291, 295, 297, 298], "map": [62, 67, 72, 77, 82, 87, 92, 97, 191, 302], "tri": [62, 67, 72, 77, 82, 87, 92, 97], "linear": [62, 67, 72, 77, 82, 87, 92, 97, 297], "interpol": [62, 67, 72, 77, 82, 87, 92, 97, 117, 156, 194, 195, 227, 297, 298], "ad": [62, 67, 72, 77, 82, 87, 92, 97, 105, 108, 201, 210, 223, 296, 299], "almost": [62, 67, 72, 77, 82, 87, 92, 97], "alwai": [62, 67, 72, 77, 82, 87, 92, 97], "case": [62, 67, 72, 77, 82, 87, 92, 97, 104, 107, 140, 149, 179, 188, 191, 200, 294, 295, 296, 299, 301, 302], "chang": [62, 67, 72, 77, 82, 87, 92, 97, 294], "impli": [62, 67, 72, 77, 82, 87, 92, 97, 191, 301], "remain": [62, 67, 72, 77, 82, 87, 92, 97], "galact": [62, 67, 72, 77, 82, 87, 92, 97], "associ": [63, 68, 73, 78, 83, 88, 93, 98, 120, 121, 141, 146, 159, 160, 180, 185, 220], "filenam": [64, 69, 74, 79, 84, 89, 94, 99, 106, 109, 128, 149, 167, 188, 204, 205, 206, 228, 231], "length_unit": [64, 69, 74, 79, 84, 89, 94, 99], "field_unit": [64, 69, 74, 79, 84, 89, 94, 99], "coordin": [64, 69, 74, 79, 84, 89, 94, 99, 105, 118, 157, 201, 208], "cell": [64, 69, 74, 79, 84, 89, 94, 99, 105, 107, 118, 157, 293, 297], "length": [64, 69, 74, 79, 84, 89, 94, 99, 139, 178, 232, 233, 271, 291, 298, 301], "affect": [64, 69, 74, 79, 84, 89, 94, 99], "output": [64, 69, 74, 79, 84, 89, 94, 99, 104, 107, 149, 188, 191, 273, 291, 295, 298, 303], "l_min": [65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96], "l_max": [65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96], "alpha": [65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96, 191, 223, 232, 233, 234, 236, 238, 254, 262, 264, 301], "3": [65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96, 101, 105, 118, 139, 144, 157, 178, 183, 191, 192, 201, 215, 218, 234, 237, 251, 252, 260, 261, 262, 291, 293, 295, 298, 301, 302], "6666666666666665": [65, 66, 70, 71, 75, 76, 80, 81, 85, 86, 90, 91, 95, 96], "g_rm": [65, 66], "ctr1": [65, 66, 70, 71, 75, 76, 80, 81], "ctr2": [65, 66, 70, 71, 75, 76, 80, 81], "ctr3": [65, 66, 70, 71, 75, 76, 80, 81], "r1": [65, 66], "r2": [65, 66], "r3": [65, 66], "g1": [65, 66], "g2": [65, 66], "g3": [65, 66], "r_max": [65, 66, 70, 71, 75, 76, 80, 81, 103, 104, 128, 129, 130, 131, 132, 139, 140, 145, 149, 150, 167, 168, 169, 170, 171, 178, 179, 184, 188, 189, 208, 278, 290, 302], "manag": [65, 197, 273, 285, 291, 294], "gaussian": [65, 143, 144, 182, 183], "random": [65, 108, 129, 130, 131, 132, 168, 169, 170, 171, 282, 290, 302, 303], "profile1": [70, 71, 75, 76, 80, 81], "profile2": [70, 71, 75, 76, 80, 81], "profile3": [70, 71, 75, 76, 80, 81], "docstr": [70, 75, 80, 85, 90, 95, 103, 217, 298], "b_rm": [85, 86, 90, 91], "v_rm": [95, 96], "default_unit": [100, 277], "pars": 100, "tupl": [100, 105, 118, 140, 157, 179, 193], "convert": [100, 148, 150, 187, 189, 210, 266, 294, 298, 299, 301], "unyt_arrai": [100, 104, 112, 118, 124, 125, 142, 157, 163, 164, 181, 196, 201, 210, 266, 286, 301], "simpli": [100, 192, 302], "form": [100, 140, 179, 226, 245, 246, 294, 301], "v_arrai": 100, "v_unit": 100, "convers": [100, 266], "final": [100, 291, 295, 298, 302, 303], "quantiti": [100, 104, 105, 277, 295, 298, 301, 302], "axi": [101, 140, 179], "gx": 101, "gy": 101, "gz": 101, "ang": 101, "rotat": 101, "angl": 101, "around": [101, 192, 291, 303], "2": [101, 110, 143, 144, 182, 183, 191, 192, 193, 194, 195, 216, 219, 236, 245, 246, 291, 293, 298, 301, 302], "compon": [101, 124, 163, 291, 295, 297, 299, 301, 302], "z": [101, 110, 247, 248, 253], "over": [101, 140, 179, 192, 194, 195, 279, 280, 287, 295, 302], "face": 102, "structur": [102, 141, 180, 291, 297, 298, 301, 303], "interfac": [102, 298, 299], "softwar": [102, 291, 295, 298, 299, 302], "basenam": [103, 104], "num_halo": [103, 104], "center": [103, 104, 110, 195, 201, 208, 217, 302, 303], "veloc": [103, 104, 105, 107, 108, 118, 129, 131, 157, 168, 170, 200, 201, 217, 290, 291, 298, 300, 301], "num_particl": [103, 104, 129, 130, 131, 132, 168, 169, 170, 171, 278, 290, 291, 302], "mag_fil": [103, 104], "particle_fil": [103, 104], "20000": [103, 104, 302], "r_max_trac": [103, 104], "refer": [104, 118, 157, 232, 234, 236, 237, 240, 244, 245, 249, 257, 259, 260, 263, 291, 292, 301, 303], "halo": [104, 240, 247, 248, 253, 293, 298, 301, 302], "includ": [104, 119, 139, 148, 158, 178, 187, 293, 294, 297, 299, 301], "part": [104, 107, 297, 299, 302], "speci": [104, 137, 176, 295], "dm": [104, 205, 291, 298, 301, 302], "run": [104, 283, 291, 293, 296, 298, 300], "sph": [104, 108], "maxim": [104, 128, 145, 167, 184, 283, 298, 301], "truncat": [104, 145, 184, 226, 260, 261, 303], "entir": [104, 191, 294, 295, 301], "domain": [104, 105, 118, 157, 191, 192, 193, 194, 195, 211, 295], "domain_dimens": [105, 118, 157], "box_siz": [105, 118, 157, 211, 214, 302], "uniformli": [105, 118, 139, 157, 178], "dataset": [105, 118, 157, 211, 294, 298, 299], "yt": [105, 118, 157, 211, 214, 247, 248, 253, 296, 298], "place": [105, 118, 139, 157, 178, 298, 299, 302, 303], "multipl": [105, 302], "per": 105, "volum": [105, 280], "pressur": [105, 119, 143, 158, 182, 291, 298, 301], "wherea": 105, "mass": [105, 108, 126, 127, 136, 137, 165, 166, 175, 176, 200, 232, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 257, 258, 259, 261, 266, 268, 269, 271, 291, 295, 298, 301, 302], "temperatur": [105, 119, 127, 158, 166, 196, 232, 233, 234, 235, 254, 263, 291, 294, 295, 298], "weight": [105, 108], "side": [105, 118, 157, 192, 211, 295], "size": [105, 118, 142, 157, 181, 192, 210, 295], "array_lik": [105, 118, 157, 192], "three": [105, 108, 118, 157, 293, 297, 298, 302], "mean": [105, 118, 129, 130, 131, 132, 157, 168, 169, 170, 171, 201, 232, 266, 290, 291, 294, 298, 301], "left": [105, 118, 140, 157, 179, 191, 192, 223, 226, 295, 301, 302], "classmethod": [106, 124, 125, 126, 127, 128, 137, 163, 164, 165, 166, 167, 176, 203, 204, 205, 206, 224, 227, 228], "inform": [106, 109, 214, 291, 299, 301, 302, 303], "yaml": [106, 298], "passive_scalar": [107, 210, 218, 219, 302], "gadget": [107, 205, 214, 293, 296], "relax": 107, "make": [107, 140, 142, 179, 181, 208, 210, 230, 291, 295], "glass": 107, "meshrelax": 107, "thermal": [107, 108, 143, 182, 301], "energi": [107, 108, 130, 132, 169, 171, 298, 302], "onto": [107, 139, 178, 217, 297], "hydrostat": [107, 115, 126, 127, 130, 154, 165, 166, 169, 295, 298, 302], "rel": [108, 115, 118, 154, 157, 194, 195, 287, 294, 295, 299, 301, 302], "posit": [108, 110, 129, 130, 131, 132, 168, 169, 170, 171, 191, 193, 195, 200, 201, 290, 291, 297, 298], "routin": 108, "singl": [108, 201, 205, 217, 293, 295, 297, 298, 300, 301, 302], "combin": [108, 215, 216, 291, 302], "togeth": [108, 295, 302], "than": [108, 194, 195, 223, 295], "one": [108, 129, 130, 131, 132, 139, 140, 168, 169, 170, 171, 178, 179, 191, 201, 223, 230, 247, 248, 253, 254, 287, 290, 291, 293, 294, 295, 297, 298, 300, 301, 302], "overlap": 108, "them": [108, 291, 293, 301, 302, 303], "regener": 108, "d": [110, 223, 240, 293, 301, 302], "b": [110, 143, 144, 182, 183, 241, 263, 264, 293, 294, 295, 297, 303], "common": [110, 301], "distanc": 110, "calcul": [110, 256, 287, 295, 298, 302], "first": [110, 293, 294, 296, 298, 301, 302], "separ": 110, "direct": [110, 299, 302], "determin": [110, 115, 117, 123, 133, 136, 139, 154, 156, 162, 172, 175, 178, 191, 195, 200, 294, 301, 302], "sep_x": 110, "sqrt": [110, 302], "where": [110, 149, 188, 191, 192, 245, 246, 295, 301, 302], "between": [110, 230, 265, 267, 287, 298, 299, 301, 302], "impact": 110, "so": [110, 112, 148, 187, 214, 254, 291, 297, 299, 301, 302, 303], "center1": [110, 215, 216, 218, 219], "5": [110, 191, 226, 245, 291, 294, 302], "center2": [110, 215, 216, 218, 219], "core": [111, 223, 232, 233, 234, 235, 237, 241, 242, 243, 244, 262, 294, 295, 298, 299, 301, 303], "relat": [111, 295, 301], "repres": [111, 221, 232, 233, 291, 293, 294, 295, 303], "consist": [111, 117, 124, 156, 163, 231, 294, 295, 302, 303], "dm_virial": [112, 113, 114, 151, 152, 153], "star_viri": [112, 113, 116, 151, 152, 155], "comprehens": [112, 295, 299, 301, 303], "represent": 112, "accur": 112, "predic": 112, "fix": [112, 301], "sampl": [112, 125, 129, 130, 131, 132, 164, 168, 169, 170, 171, 278, 290], "radii": [112, 129, 130, 131, 132, 168, 169, 170, 171, 191, 218, 219, 227, 278, 279, 290, 291, 295, 296, 298, 301, 302], "see": [112, 133, 172, 291, 293, 294, 296, 298, 299, 301, 302], "section": [112, 245, 246, 295, 298, 301], "virialequilibrium": [112, 120, 146, 159, 185], "virial": [112, 120, 129, 131, 146, 159, 168, 170, 185, 236, 296, 298, 299, 301], "By": [112, 302], "__getitem__": 112, "__contains__": 112, "alias": 112, "down": 112, "__setitem__": 112, "index": [112, 191, 223, 232, 245, 246, 254, 299], "assign": [112, 291, 297, 302], "done": [112, 191, 291, 293, 294, 297, 298, 301], "set_field": [112, 301, 302], "check_viri": [114, 116, 153, 155], "deviat": [115, 154, 301], "equilibrium": [115, 126, 127, 129, 130, 131, 148, 150, 154, 165, 166, 168, 169, 170, 187, 189, 286, 290, 295, 298], "chk": [115, 154, 287], "numpi": [115, 154, 191, 192, 193, 194, 195, 201, 287, 298, 302], "mode": [117, 156, 293], "mai": [117, 141, 156, 180, 191, 227, 254, 291, 294, 295, 297, 298, 301, 302], "precis": [117, 156, 297], "complet": [117, 156, 217, 291, 298, 299, 303], "smooth": [117, 156, 293], "dynam": [117, 133, 156, 172, 245, 295, 299, 301, 302], "replac": [117, 156, 295], "lack": [117, 156], "monoton": [117, 156, 192, 194, 195, 295], "scheme": [117, 156, 192, 194, 195], "suggest": [118, 157, 234, 235, 299], "conserv": [118, 157, 295, 301], "choic": [118, 157, 291, 301], "begin": [118, 157, 295, 298, 301], "avoid": [118, 157], "oom": [118, 157], "issu": [118, 128, 139, 157, 167, 178, 294, 295, 296, 298, 299, 301], "500": [118, 157, 268, 269, 291, 302], "take": [118, 157, 191, 192, 223, 291, 294, 296, 297, 298, 301], "appox": [118, 157], "3gb": [118, 157], "frame": [118, 157, 296, 302], "must": [118, 124, 140, 157, 163, 179, 191, 194, 195, 221, 295, 301, 302], "1x3": [118, 157], "total_dens": [119, 126, 137, 158, 165, 176, 291], "gravitational_potenti": [119, 158, 291], "gravitational_field": [119, 158, 291], "total_mass": [119, 158, 291], "gas_mass": [119, 158, 291], "dark_matter_mass": [119, 158, 291], "dark_matter_dens": [119, 158, 291, 302], "stellar_mass": [119, 158], "reach": [123, 162], "alon": [124, 163], "its": [124, 128, 163, 167, 191, 223, 293, 294, 296, 297, 298, 303], "assess": [124, 163], "through": [124, 163, 191, 291, 293, 294, 298], "from_dens_and_entr": [124, 163, 301], "from_h5_fil": [124, 163, 301], "entropi": [125, 164, 236, 238, 254, 264, 291, 298, 299], "num_point": [125, 126, 127, 137, 164, 165, 166, 176, 230], "1000": [125, 126, 127, 137, 164, 165, 166, 176, 230, 302], "construct": [125, 126, 127, 164, 165, 166, 286, 294, 295, 299, 301], "comput": [125, 129, 130, 131, 164, 168, 169, 170, 196, 247, 248, 253, 268, 270, 287, 290, 291, 294, 297, 301, 302], "total": [126, 137, 165, 176, 241, 242, 243, 244, 245, 246, 249, 250, 255, 257, 258, 259, 268, 269, 271, 291, 295, 302], "describ": [126, 127, 137, 141, 165, 166, 176, 180, 295, 301, 302], "integ": [126, 127, 129, 130, 131, 132, 137, 165, 166, 168, 169, 170, 171, 176, 194, 195, 230, 234, 290], "evalu": [126, 127, 137, 165, 166, 176], "r_min": [128, 139, 140, 149, 150, 167, 178, 179, 188, 189], "seek": [128, 167], "both": [128, 167, 232, 233, 291, 302], "later": [128, 167, 297, 302], "lose": [128, 149, 167, 188], "warn": [128, 167, 294, 302], "exampl": [128, 167, 191, 204, 205, 291, 294, 295, 298, 299, 301, 302, 303], "import": [128, 167, 191, 204, 205, 291, 294, 301, 302, 303], "hse_model": [128, 167], "h5": [128, 167, 204, 205, 291, 297, 298, 302], "sub_sampl": [129, 130, 131, 132, 168, 169, 170, 171, 290], "compute_potenti": [129, 130, 131, 168, 169, 170, 290, 302], "within": [129, 130, 131, 132, 136, 168, 169, 170, 171, 175, 214, 255, 267, 290, 302], "suppli": [129, 130, 131, 132, 141, 168, 169, 170, 171, 180, 247, 248, 253, 286, 290, 298, 301, 302], "out": [129, 130, 131, 132, 168, 169, 170, 171, 195, 290, 291, 296, 298, 302, 303], "uniqu": [129, 130, 131, 132, 168, 169, 170, 171, 290, 302], "repeat": [129, 130, 131, 132, 168, 169, 170, 171, 290], "fill": [129, 130, 131, 132, 168, 169, 170, 171, 195, 290], "requir": [129, 130, 131, 132, 168, 169, 170, 171, 191, 231, 290, 293, 294, 295, 297, 298, 301, 302], "gravit": [129, 130, 131, 140, 141, 168, 169, 170, 179, 180, 200, 290, 291, 294, 295, 296, 298, 299, 301, 302], "randomst": [129, 130, 131, 132, 168, 169, 170, 171, 290], "pseudo": [129, 130, 131, 132, 168, 169, 170, 171, 232, 233, 290], "onli": [129, 130, 131, 132, 137, 149, 168, 169, 170, 171, 176, 188, 290, 293, 295, 299, 302, 303], "test": [129, 130, 131, 132, 168, 169, 170, 171, 290], "seed": [129, 130, 131, 132, 168, 169, 170, 171, 290], "otherwis": [133, 139, 143, 144, 172, 178, 182, 183, 191, 298, 302], "document": [133, 141, 172, 180, 298, 299, 301], "fact": [133, 172, 269], "manifest": [133, 172, 295], "therefor": [133, 172, 295, 301], "check": [133, 139, 142, 172, 178, 181, 210, 269, 291, 298], "sign": [133, 172, 191], "compos": [137, 176], "collisionless": [137, 176, 287, 295, 302], "keyword": [137, 139, 176, 178, 283], "fig": [139, 140, 178, 179, 191, 230, 291, 302], "aspect_ratio": [139, 178, 291], "base_length": [139, 178, 291], "gs_kwarg": [139, 178, 294], "plot": [139, 178, 291, 298, 302], "select": [139, 178, 253, 291], "get": [139, 178, 299, 300, 301, 302, 303], "impress": [139, 178], "figur": [139, 140, 178, 179, 230, 291], "fresh": [139, 178], "cover": [139, 178, 302], "those": [139, 149, 178, 188, 291, 294, 295, 298, 302], "drawn": [139, 178], "organ": [139, 178], "belong": [139, 178, 214], "subdivid": [139, 178], "facilit": [139, 178, 299], "draw": [139, 178, 302], "aspect": [139, 178, 294, 298, 299], "ratio": [139, 143, 178, 182, 232], "individu": [139, 178, 298, 303], "subplot": [139, 178, 191, 302], "rest": [139, 178, 291], "geometri": [139, 178], "matplotlib": [139, 140, 178, 179, 191, 230, 291, 294, 302], "gridspec": [139, 178], "directli": [139, 178, 294, 296, 298, 303], "pyplot": [139, 178, 191, 291, 294, 302], "sever": [139, 178, 302], "behavior": [139, 141, 178, 180, 191, 226, 227, 296, 298, 299, 301, 303], "depend": [139, 178, 191, 291, 297], "miss": [139, 178], "appli": [139, 178, 301], "across": [139, 178], "v": [140, 179, 291, 293, 297, 301, 302], "unset": [140, 179], "label": [140, 179, 302], "scale": [140, 179, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 271, 291, 298], "revis": [140, 179], "charact": [140, 179], "valid": [140, 179, 191, 228], "input": [140, 179, 244, 255, 259, 287, 293, 295, 297, 298, 302], "set_yscal": [140, 179], "normal": [140, 179, 201, 302], "flip": [140, 179], "below": [141, 180, 191, 192, 195, 293, 295, 298, 301], "therein": [141, 180], "graviti": [141, 149, 180, 188, 293, 295, 296, 299], "theori": [141, 180, 295, 296, 298, 299, 301], "taken": [141, 180, 294], "standard": [141, 180, 221, 266, 298, 303], "anoth": [141, 180, 221, 295, 301], "prefer": [141, 180, 231], "further": [141, 180, 302], "In": [141, 180, 191, 192, 291, 293, 294, 295, 296, 297, 298, 301, 302], "meth": [141, 180], "scene": [141, 180, 291, 295], "dictat": [141, 180, 191], "certain": [141, 180, 208, 254, 296, 298, 302, 303], "backend": [141, 180, 190, 294], "ill": [141, 180], "advis": [141, 180], "without": [141, 180, 298, 299], "thorough": [141, 180], "understand": [141, 180, 295], "do": [141, 180, 291, 293, 294, 295, 297, 298, 299, 302, 303], "sure": [142, 181, 210, 291], "appropri": [142, 181, 210, 227, 298, 303], "beta": [143, 182, 234, 237, 262], "plasma": [143, 182], "p_th": [143, 182], "p_b": [143, 144, 182, 183], "lorentz": [143, 144, 182, 183], "heavisid": [143, 144, 182, 183], "dimensionless": [143, 144, 182, 183, 232, 233, 291], "8": [143, 144, 182, 183, 291, 298, 302], "pi": [143, 144, 182, 183, 291, 302], "b0": [144, 183, 302], "eta": [144, 183, 301], "6666666666666666": [144, 183], "proport": [144, 183, 301], "power": [144, 183, 191, 223, 245, 246, 254, 301], "usual": [144, 183, 298, 303], "strength": [144, 183], "gauss": [144, 183], "ascii": [148, 187, 301], "text": [148, 187, 291, 298, 299], "astropi": [148, 187], "qtabl": [148, 187], "whether": [148, 150, 187, 189, 214, 294, 298], "fields_to_writ": [149, 188], "unformat": [149, 188], "fortran": [149, 188], "binari": [149, 188, 231, 293, 301, 303], "But": [149, 188], "why": [149, 188, 295], "would": [149, 188, 294, 298, 303], "want": [149, 188, 291, 297, 298, 299, 301, 302, 303], "procedur": [149, 188, 291, 297, 301], "metadata": [149, 188], "attr": [149, 188], "As": [149, 188, 301], "manual": [149, 188, 301], "upon": [149, 188], "reopen": [149, 188], "too": [150, 189, 191, 294], "x0": 191, "x1": 191, "f": [191, 194, 195, 223, 228, 231, 232, 240, 291, 293, 295, 302], "df": [191, 285, 286], "extrapol": 191, "give": [191, 301, 303], "particular": [191, 293, 295, 299], "asymptot": [191, 295, 301], "law": [191, 245, 246, 254, 301], "maintain": 191, "mathbb": 191, "x_0": 191, "bound": [191, 298], "abov": [191, 294, 297, 298, 301, 302], "y1": 191, "deriv": [191, 192, 294, 297, 298, 299, 301, 302], "piecewis": [191, 194, 195, 293, 295], "transit": [191, 262, 263], "vertex": 191, "g": [191, 236, 248, 295, 297, 298, 301], "y_1": 191, "x_1": 191, "suffici": 191, "larg": [191, 295, 301, 302], "match": [191, 301], "adjust": 191, "ndarrai": [191, 192, 193, 194, 195, 301], "valueerror": 191, "omega": 191, "le": 191, "design": [191, 293, 294, 298, 299], "presum": 191, "undesir": 191, "beyond": [191, 226, 227, 302], "tild": [191, 297], "xi": [191, 301], "e_": 191, "pm": 191, "frac": [191, 223, 226, 291, 301, 302], "right": [191, 192, 223, 226, 291, 295, 301, 302], "mp": 191, "gamma": [191, 262, 301], "becaus": [191, 293, 294, 295, 301], "y_0": 191, "yield": [191, 301], "x_0y_0": 191, "well": [191, 298], "suit": 191, "vikhlinin_temperature_profil": [191, 225, 299], "a133": [191, 294, 295, 296, 298], "fall": [191, 192, 295], "off": [191, 291, 294, 297], "far": [191, 291], "quickli": 191, "wa": [191, 194, 195, 291, 294, 295, 301, 302], "fit": [191, 294, 295, 296, 298], "thu": [191, 295, 297, 302], "np": [191, 301, 302], "plt": [191, 291, 294, 302], "61": 191, "12": 191, "00": 191, "1420": 191, "9747": 191, "57": 191, "88": 191, "geomspac": 191, "5000": [191, 291, 302], "semilogx": 191, "k": [191, 226, 291, 293, 295, 297], "xn": 191, "yn": 191, "700": 191, "800": 191, "show": [191, 291, 293, 294, 295, 296, 298], "png": 191, "hire": 191, "pdf": 191, "rtol": [192, 194, 195], "001": [192, 194, 195], "dy": 192, "locat": 192, "hole": [192, 194, 195, 200], "identif": [192, 194, 195], "nearli": 192, "increas": 192, "e": [192, 194, 195, 221, 223, 245, 248, 257, 260, 297, 298, 302], "fail": 192, "wrong": 192, "wai": [192, 194, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302], "toler": [192, 194, 195], "1e": 192, "secant": 192, "slope": [192, 195, 236, 245, 246, 262, 263, 294], "n": [192, 194, 195, 232, 234, 245, 246, 257, 293, 295, 297, 298, 299], "identifi": [192, 193, 214, 294, 295], "h": [192, 293, 294], "hx": 192, "respect": [192, 301, 302, 303], "hy": 192, "everi": [192, 291, 299], "hi": 192, "indic": [192, 193, 201, 210, 295, 301], "cumul": 192, "compar": 192, "1d": [193, 297], "truth": [193, 294], "obtain": [193, 294, 298, 301], "consider": [193, 295], "mark": 193, "buffer": [194, 195], "cubic": [194, 195, 214, 302], "spline": 194, "patch": [194, 293], "continu": [194, 227, 295], "differenti": [194, 301, 302], "howev": [194, 231, 291, 294, 295, 297, 298, 301], "2x": 194, "occur": [194, 195, 295, 299], "forc": [194, 195, 275, 295], "forward": 194, "larger": [194, 195], "enforc": [194, 195, 301], "newli": [194, 195], "solut": [194, 195, 295], "methodologi": [194, 195], "develop": [194, 195, 293, 299], "eliza": [194, 195], "diggin": [194, 195, 295], "univers": [194, 195, 240, 293, 298], "utah": [194, 195], "work": [194, 195, 220, 234, 235, 291, 294, 295, 297, 298, 303], "frisch": [194, 195], "carlson": [194, 195], "1980sjna": [194, 195], "17": [194, 195], "238f": [194, 195], "steffen": [194, 195], "1990a": [194, 195], "239": [194, 195], "443": [194, 195], "correction_paramet": 195, "maxit": 195, "drop": [195, 202, 234, 235], "zero": [195, 226, 297, 301, 302], "degre": [195, 232, 233], "insist": 195, "carri": [195, 302, 303], "iter": 195, "interv": 195, "potential_gradi": 196, "solv": [196, 297, 301, 302], "equat": [196, 256, 291, 301, 302], "gradient": [196, 295], "particle_typ": [198, 199], "bh_mass": 200, "po": [200, 302], "vel": [200, 302], "use_pot_min": [200, 302], "black": 200, "solar": 200, "ignor": [200, 301], "myr": [200, 201, 291, 298, 302], "r_ctr": [201, 302], "v_ctr": [201, 302], "offset": 201, "bulk": [201, 302], "circumst": 201, "dm_particl": [204, 302], "etc": [205, 298, 301, 302], "snapshot": [205, 302], "snapshot_060": 205, "cut": [208, 226], "outsid": [208, 294], "perform": [208, 291, 293, 295, 298, 300, 302], "export": [208, 211, 293], "updat": [210, 298], "itself": [210, 295], "shape": [210, 295, 302], "preserv": [210, 297], "passiv": [210, 302], "scalar": [210, 298, 302], "width": [211, 214, 262, 263, 302], "ic_filenam": 214, "dtype": 214, "float32": 214, "datatyp": 214, "float64": 214, "frontend": 214, "particles1": [215, 216], "particles2": [215, 216], "particles3": 215, "hse1": [215, 216, 218, 219], "hse2": [215, 216, 218, 219], "hse3": [215, 218], "center3": [215, 218], "velocity1": [215, 216, 218, 219], "velocity2": [215, 216, 218, 219], "velocity3": [215, 218], "hse": [217, 295, 301], "tool": [220, 295, 296, 298, 299], "analyt": [220, 294, 296, 298, 302], "act": 221, "wrapper": [221, 291], "variabl": [221, 301, 303], "r_core": 223, "insid": 223, "exponenti": 223, "implement": [223, 295, 297, 299, 301], "exp": [223, 226], "r_": [223, 226, 238, 240, 245, 246, 251, 252, 254, 260, 261, 262, 291], "caus": [223, 226, 301], "cuspi": 223, "dr": [223, 301], "_": [223, 291, 302], "grow": [223, 294], "faster": [223, 226], "term": [223, 301], "limit": [223, 283, 302], "arg": [224, 283, 303], "constant_profil": [225, 299, 303], "power_law_profil": [225, 299], "beta_model_profil": [225, 299], "hernquist_density_profil": [225, 291, 299], "cored_hernquist_density_profil": [225, 299], "hernquist_mass_profil": [225, 299], "nfw_density_profil": [225, 299], "nfw_mass_profil": [225, 299], "tnfw_density_profil": [225, 299], "tnfw_mass_profil": [225, 299], "snfw_density_profil": [225, 299], "snfw_mass_profil": [225, 299], "cored_snfw_density_profil": [225, 299], "cored_snfw_mass_profil": [225, 299], "cored_snfw_total_mass": 225, "einasto_density_profil": [225, 299], "einasto_mass_profil": [225, 299], "am06_density_profil": [225, 235, 299], "vikhlinin_density_profil": [225, 299], "ad07_density_profil": 225, "ad07_temperature_profil": 225, "am06_temperature_profil": [225, 234, 299], "baseline_entropy_profil": [225, 299], "broken_entropy_profil": [225, 299], "walker_entropy_profil": [225, 299], "r_cut": 226, "domin": 226, "rate": 226, "higher": 226, "achiev": 226, "multipli": 226, "factor": [226, 301], "2k": 226, "f_r": 227, "scipi": [227, 298], "univariatesplin": 227, "spectrum": 227, "lead": [227, 295], "problemat": [227, 283], "intend": [227, 299], "serial": [228, 231, 298, 303], "version": [228, 298], "save": [228, 291, 303], "disk": [228, 291, 302, 303], "open": 228, "rp": [228, 231], "quick": [230, 302], "logspac": 230, "send": 231, "extens": [231, 301], "t0": [232, 233], "4": [232, 291, 294, 302], "mu": [232, 301], "6": [232, 266, 291, 301, 303], "omega_b": 232, "048": 232, "omega_dm": 232, "262": 232, "polytrop": [232, 233], "asdi08": [232, 233], "kev": [232, 233, 235, 236, 263, 291, 298], "cool": [232, 233, 234, 235, 263], "a_c": [232, 233, 234, 235], "fraction": 232, "molecular": [232, 266, 301], "cosmic": 232, "baryon": [232, 301], "2008mnra": 232, "383": 232, "369a": 232, "rho_0": [234, 262], "asma06": [234, 235], "best": [234, 235, 297, 298, 299], "concert": [234, 235], "msun": [234, 237, 240, 241, 242, 243, 244, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 267, 291, 302], "2006": [234, 263, 295, 299], "apj": [234, 249, 263, 267], "650": 234, "102": 234, "t_0": [235, 263], "k_0": [236, 238], "k_200": 236, "r_200": [236, 240, 264], "baselin": 236, "vokb05": 236, "floor": 236, "cm": [236, 291, 298], "logarithm": [236, 245, 246, 262, 263], "voit": 236, "kai": 236, "bryan": 236, "2005": 236, "mnra": [236, 257], "364": 236, "909": 236, "rho_c": 237, "r_c": [237, 242, 243, 244, 262], "cafu76": 237, "cavalier": 237, "fusco": 237, "femiano": 237, "1976": 237, "49": 237, "137": 237, "k_scale": [238, 264], "broken": 238, "const": 239, "constant": [239, 302], "m_200": 240, "conc": [240, 253], "m200": [240, 248], "r200": [240, 248, 270], "concentr": [240, 253, 256], "nfw": [240, 242, 243, 244, 251, 252, 253, 256, 257, 258, 259, 260, 261, 299], "nafrw90": [240, 251, 252, 253, 260], "hernquist": [240, 241, 249, 250, 291, 299], "hern90": [240, 241, 249, 250], "overdens": [240, 247, 248, 253], "200": [240, 253, 291, 302], "critic": [240, 247, 248, 253, 295], "navarro": 240, "julio": 240, "frenk": 240, "carlo": 240, "white": 240, "simon": 240, "1997apj": 240, "490": 240, "493n": 240, "m_0": [241, 249, 250], "super": [242, 243, 244, 257, 258, 259], "liwys18": [242, 243, 244, 256, 257, 258, 259], "sai": [244, 259, 294], "m200c": [244, 259], "r200c": [244, 256, 259], "eina65": [245, 246], "rvgb12": [245, 246], "invers": [245, 246, 278], "einasto": [245, 299], "1965": 245, "kinemat": 245, "trudi": 245, "inst": 245, "astrofiz": 245, "alma": 245, "ata": 245, "87": 245, "retana": 245, "montenegro": 245, "et": [245, 263, 267, 295, 299], "al": [245, 263, 267, 295, 299], "2012a": 245, "540a": 245, "70r": 245, "delta": [247, 248, 253], "cosmo": [247, 248, 253], "enclos": 247, "cosmologi": [247, 248, 253], "m_r": 248, "1990": 249, "356": 249, "359": 249, "rho_": [251, 252, 260, 261, 291, 295, 301], "whatev": [254, 294], "els": 254, "rescal": 255, "conc_nfw": 256, "snfw": 256, "come": [256, 293], "31": 256, "lillei": 257, "wyn": 257, "evan": 257, "sander": 257, "2018": 257, "r_t": [260, 261, 263], "tnfw": [260, 261], "bamao09": [260, 261], "baltz": 260, "marshal": 260, "p": [260, 293, 301, 302, 303], "oguri": 260, "2009": [260, 267], "jcap": 260, "015": 260, "epsilon": 262, "modifi": [262, 293], "vikrf06": [262, 263], "inner": [262, 263], "middl": 262, "outer": [262, 263], "control": 262, "t_min": 263, "r_cool": 263, "a_cool": 263, "640": 263, "691": 263, "walker": 264, "basic": [265, 272, 291, 295, 296, 298, 299, 301], "relationship": [265, 267, 301], "variou": [265, 293, 298, 299, 301, 302], "ne": 266, "electron": 266, "m500": [267, 268, 269], "hubbl": 267, "7": [267, 291], "mga": 267, "mtot": 267, "r500": 267, "692": 267, "1033": 267, "http": [267, 298], "ui": 267, "adsab": 267, "harvard": 267, "edu": 267, "ab": 267, "2009apj": 267, "1033v": 267, "100": [267, 302], "km": [267, 297], "mpc": 267, "bcg": [268, 270], "m_": [268, 269, 291, 298, 301, 302], "satellit": 269, "except": [272, 294], "logger": [273, 274], "context": [273, 295, 301], "mute": 273, "log": 273, "arr": 276, "ensur": [276, 277], "rr": [279, 280, 281], "integr": [280, 281, 287, 291, 294, 295, 302], "spheric": [280, 297, 298, 302], "infin": 281, "grab": 282, "state": 282, "max_execution_tim": 283, "assert": 283, "unbound": 283, "execut": [283, 299], "launch": 283, "daemon": 283, "runtim": 283, "second": [283, 302], "dark_matt": [285, 286, 291], "rho": [287, 291, 301, 302], "introduct": 291, "ve": [291, 293, 295, 298, 301], "successfulli": [291, 294, 301], "download": 291, "instal": [291, 299], "python": [291, 298, 299, 303], "congratul": 291, "now": [291, 294, 302], "guid": [291, 293, 299], "walk": 291, "finish": [291, 298], "rope": 291, "onc": [291, 298, 301, 302, 303], "got": 291, "hang": 291, "mani": [291, 295, 298, 301], "explor": [291, 299], "featur": [291, 298], "let": [291, 294, 301], "properli": 291, "termin": 291, "try": [291, 294], "pip": [291, 298], "everyth": 291, "plan": 291, "messag": 291, "tell": 291, "brief": 291, "project": [291, 298], "appear": 291, "id": 291, "abl": [291, 296], "lot": [291, 294, 295], "slow": [291, 301], "simpl": [291, 295, 299], "mathrm": [291, 295, 301, 302], "dyn": [291, 295, 301], "ahead": [291, 294], "leg": 291, "produc": [291, 295, 296, 298, 301, 303], "beauti": 291, "veri": [291, 298, 302], "15": 291, "odot": [291, 298, 302], "total_density_profil": 291, "2e15": 291, "That": 291, "pretti": 291, "wasn": 291, "14": 291, "littl": [291, 298], "shorter": 291, "gas_density_profil": 291, "2e14": 291, "add_subplot": 291, "111": 291, "color": 291, "red": [291, 295], "blue": [291, 295], "excel": 291, "our": [291, 298, 299, 302], "acquaint": 291, "most": [291, 294, 295, 297, 298, 301, 303], "were": [291, 294], "essenti": 291, "next": [291, 302], "chosen": [291, 295, 301], "actual": [291, 294, 296, 298], "advantag": [291, 295], "math": 291, "u": [291, 302], "galaxy_cluster_model": 291, "10000": [291, 294, 302], "info": [291, 294], "2023": [291, 294], "27": 291, "09": 291, "50": [291, 302], "43": 291, "933": 291, "939": 291, "994": 291, "45": 291, "651": 291, "just": [291, 295, 303], "happen": [291, 294, 295], "000": 291, "worth": [291, 301], "rememb": 291, "own": [291, 294, 297, 303], "piec": 291, "item": [291, 294], "print": [291, 294, 303], "gas_fract": 291, "electron_number_dens": 291, "discret": 291, "close": 291, "even": [291, 295, 302], "realli": 291, "good": [291, 302], "summari": 291, "panel_plot": [291, 294], "cgparam": 291, "usetex": 291, "Not": [291, 301], "nice": 291, "isol": 291, "9": 291, "write_model_to_h5": [291, 301], "cluster_": [291, 302], "example_clust": 291, "1_000_000": [291, 302], "And": 291, "last": 291, "major": [291, 301], "setup_ramses_": 291, "53": 291, "412": 291, "1000000": [291, 302], "413": 291, "755": 291, "51": 291, "721": 291, "merger_config": 291, "txt": 291, "local": [291, 298], "directori": [291, 298, 299], "still": 291, "readi": [291, 300], "instruct": [291, 298], "hallmark": 293, "abil": [293, 298], "eas": [293, 299], "support": [293, 294, 298], "tip": 293, "hydrodynam": [293, 297, 298, 299], "frolri": 293, "chicago": 293, "purpos": [293, 295, 296, 298, 299], "reli": [293, 303], "adapt": 293, "mesh": 293, "refin": 293, "parabol": 293, "ppm": 293, "merger": [293, 297, 298, 300], "rigidgrav": 293, "rigid": 293, "selfgrav": 293, "inclus": 293, "tangl": 293, "gpu": 293, "acceler": [293, 301], "sctsch": 293, "amr": [293, 297], "approach": [293, 295, 299, 301], "tripl": 293, "makefil": 293, "simu_opt": 293, "dmodel": 293, "hydro": [293, 297, 301], "dgraviti": 293, "dparticl": 293, "dncomp_passive_us": 293, "merger_coll_numhalo": 293, "merger_coll_usemet": 293, "dmhd": 293, "deo": 293, "eos_gamma": 293, "dpar_natt_us": 293, "dgpu": 293, "dload_bal": 293, "hilbert": 293, "dopenmp": 293, "dsupport_hdf5": 293, "wesppa": 293, "max": 293, "planck": 293, "institut": 293, "astrophys": [293, 298, 299], "ideal": [293, 298, 301], "after": [293, 294, 302], "proper": 293, "background": [293, 298], "add_background_grid": 293, "config": 293, "configur": [293, 295, 300], "enabl": 293, "sh": 293, "soon": 293, "multipurpos": 293, "romain": 293, "teyssier": 293, "invas": 293, "newtonian": [293, 296, 298, 299, 301], "capabl": 293, "mondian": [293, 296, 298, 299], "due": [293, 297, 302], "regard": [293, 301], "breakdown": 293, "fryxel": 293, "olson": 293, "ricker": 293, "timm": 293, "zingal": 293, "lamb": 293, "q": 293, "tufo": 293, "2000": 293, "thermonuclear": 293, "journal": 293, "supplement": 293, "seri": 293, "131": 293, "273": 293, "schive": 293, "tsai": 293, "chiueh": 293, "2010": 293, "graphic": 293, "186": 293, "457": 293, "weinberg": 293, "springel": 293, "pakmor": 293, "2020": 293, "public": 293, "releas": 293, "248": 293, "32": 293, "easi": [294, 295, 298, 299, 303], "end": [294, 295, 299], "sometim": [294, 295, 298, 301], "constrain": [294, 297, 301], "observation": 294, "literatur": [294, 295, 296, 298, 299], "fortun": 294, "ever": 294, "cluster_collect": 294, "driven": 294, "facil": 294, "vikhlinin06": 294, "briefli": 294, "abel": [294, 296, 298, 302], "133": [294, 296, 298], "__main__": 294, "protoclust": 294, "0x7f7d7e302890": 294, "a262": 294, "0x7f7d7e8fbdd0": 294, "a383": 294, "0x7f7d7dd17e10": 294, "a478": 294, "0x7f7d7dd4df90": 294, "a907": 294, "0x7f7d7dd49c10": 294, "a1413": 294, "0x7f7d7dd49dd0": 294, "a1795": 294, "0x7f7d7dd48590": 294, "a1991": 294, "0x7f7d7e33d410": 294, "a2029": 294, "0x7f7d7dba9810": 294, "a2390": 294, "0x7f7d7dbaa090": 294, "rxj": 294, "1159": 294, "5531": 294, "0x7f7d7dbaaa90": 294, "mkw": 294, "0x7f7d7dbab490": 294, "usg": 294, "cs152": 294, "0x7f7d7dbab750": 294, "notic": 294, "aren": 294, "quit": [294, 298], "thing": [294, 295], "special": [294, 297], "vik": 294, "11": 294, "01": 294, "08": 294, "59": 294, "37": 294, "344": 294, "492": 294, "39": 294, "067": 294, "detect": 294, "0x7fab7769b390": 294, "unfortun": 294, "wspace": 294, "speak": 294, "studi": [294, 298, 299], "consid": [294, 296, 298, 301], "rang": 294, "r_0": [294, 301], "r_1": 294, "don": 294, "guarante": [294, 295], "again": [294, 303], "nonphysicalregion": 294, "recurs": 294, "autom": [294, 299], "complex": [294, 295, 297], "difficult": [294, 301], "categor": 294, "systemat": 294, "residu": 294, "occasion": 294, "persist": 294, "recomput": 294, "seen": 294, "rapid": 294, "put": 294, "perfectli": 295, "manifestli": 295, "explicitli": 295, "flaw": 295, "ask": 295, "neg": 295, "icm": [295, 298], "intrins": 295, "connect": 295, "won": 295, "viabl": 295, "regularli": 295, "independ": [295, 301], "constraint": [295, 297, 299, 301], "impos": 295, "while": [295, 296, 298], "fine": 295, "inconsist": 295, "problem": [295, 301], "choos": [295, 298, 301, 302], "mond": [295, 301], "sim": [295, 301], "stabil": [295, 301], "clearli": [295, 301], "often": [295, 298], "hard": 295, "predict": 295, "previou": [295, 301], "could": 295, "aim": [295, 301], "possibl": [295, 299, 301], "semi": [295, 298], "automat": [295, 298, 301], "mechan": 295, "least": [295, 297], "appar": 295, "inher": 295, "compat": [295, 298], "better": 295, "sum": 295, "thermodynam": 295, "isomorph": 295, "call": [295, 303], "proxi": 295, "With": 295, "diagram": 295, "pathwai": 295, "doe": [295, 302], "reduc": [295, 299], "aris": 295, "question": [295, 297], "descript": [295, 301], "build": [295, 299, 303], "reveal": 295, "necessarili": 295, "idea": [295, 302], "hand": [295, 302], "bracket": 295, "discuss": [295, 296, 298, 301], "game": 295, "becom": [295, 301], "obei": [295, 301], "sum_": 295, "contribut": [295, 299, 303], "threshold": 295, "immedi": 295, "ramif": 295, "naiv": 295, "sens": 295, "easiest": 295, "equal": [295, 302], "greater": 295, "sum_i": 295, "rho_i": 295, "transform": [295, 297], "ge": 295, "rebuild": 295, "mcm": 295, "disadvantag": 295, "discontinu": 295, "finit": 295, "unnatur": 295, "involv": 295, "improv": 295, "scm": 295, "principl": 295, "decreas": 295, "disrupt": 295, "smoother": 295, "uncorrect": 295, "wide": [296, 299, 301], "script": 296, "tag": [296, 302], "knowledg": 296, "journei": [296, 298], "pipelin": [296, 298], "wonderland": [296, 298], "pull": [296, 298], "ins": [296, 298], "pynbodi": 296, "pyxsim": [296, 298, 299], "sox": [296, 298, 299], "symmetri": [297, 302], "applic": [297, 298], "accord": 297, "magneto": [297, 298], "turbul": 297, "dimension": [297, 298], "fashion": 297, "uniform": [297, 302], "Then": 297, "natur": 297, "bf": [297, 301, 302], "v_x": 297, "v_1": 297, "u_1": 297, "iN": 297, "u_2": 297, "v_y": 297, "v_2": 297, "u_3": 297, "u_4": 297, "v_z": 297, "v_3": 297, "u_5": 297, "u_6": 297, "handl": 297, "nabla": [297, 301], "cdot": [297, 301], "space": [297, 302], "subtract": 297, "parallel": 297, "hat": 297, "machin": 297, "linearli": 297, "stage": 297, "free": 297, "small": 297, "mhd": 297, "clean": 297, "substanti": 297, "concern": 297, "transport": 297, "evolv": 297, "clusterfield": 297, "map_field_to_particl": 297, "vfield": 297, "write_to_h5": 297, "bfield": 297, "largest": 298, "gravitation": 298, "current": [298, 299, 301], "endpoint": 298, "cosmolog": 298, "hot": 298, "emit": 298, "intraclust": 298, "medium": 298, "constitu": 298, "especi": 298, "focus": [298, 301], "approxim": 298, "roughli": 298, "symmetr": [298, 302], "bodi": [298, 299], "commun": 298, "toward": 298, "few": 298, "encourag": 298, "127760": 298, "pypi": 298, "pardon": 298, "dust": 298, "128225": 298, "128013": 298, "conda": 298, "128195": 298, "surprisingli": 298, "navig": 298, "raw": 298, "git": 298, "command": 298, "www": 298, "github": [298, 299], "com": 298, "jzuhon": 298, "clone": 298, "manipul": 298, "curv": 298, "h5py": 298, "interact": [298, 301], "tqdm": 298, "progress": 298, "bar": 298, "ruamel": 298, "dill": 298, "spinner": 298, "though": 298, "measur": 298, "photon": [298, 299], "analyz": 298, "spectra": 298, "instrument": [298, 299], "mock": [298, 299], "complement": 298, "familiar": 298, "feet": 298, "wet": 298, "somewhat": 298, "depth": 298, "concret": 298, "help": 298, "overview": 298, "equilibria": 298, "handi": 298, "popular": 298, "throughout": [298, 301], "rm": [298, 302], "straighforwardli": 298, "practic": [298, 301], "attach": 298, "intern": 298, "cross": 299, "platform": 299, "assumpt": [299, 301], "furthermor": [299, 301], "headach": 299, "gc": 299, "goal": [299, 303], "promot": 299, "repositori": 299, "modularli": 299, "meet": 299, "scientif": 299, "start": 299, "scratch": 299, "doc": [299, 303], "encount": 299, "bug": 299, "failur": 299, "submit": 299, "visit": 299, "cored_hernquist_mass_profil": 299, "paper": 299, "capac": 299, "catalog": 299, "altern": [299, 302], "aqual": [299, 301], "qumond": [299, 301], "realist": 299, "labor": 299, "overhead": 299, "quickstart": 299, "offer": 299, "experi": 299, "copi": 299, "past": 299, "explan": [299, 303], "backbon": 299, "api": [299, 301], "deep": 299, "dive": 299, "hint": 299, "might": [299, 301], "synthet": 299, "event": 299, "much": [299, 302], "coupl": 299, "turn": 299, "count": 299, "xmm": 299, "newton": 299, "nustar": 299, "level": 299, "beginn": 299, "intermedi": 299, "advanc": 299, "search": 299, "spatial": 300, "hold": 301, "protocol": 301, "fluid": 301, "momentum": [301, 302], "euler": 301, "viscos": 301, "partial": 301, "phi": [301, 302], "k_b": 301, "m_p": 301, "ln": 301, "recogn": 301, "gasseou": 301, "remaind": 301, "infti": 301, "preced": 301, "express": [301, 302], "window": 301, "archetyp": 301, "poisson": 301, "flavor": 301, "a_0": 301, "implicit": 301, "nu": 301, "psi": [301, 302], "gm_": 301, "from_arrai": 301, "grav": 301, "via": [301, 302], "incompress": 301, "bari": 301, "trivial": 301, "effici": 301, "recal": 301, "invert": [301, 302], "int_": 301, "exactli": [301, 302], "accept": [301, 302], "formula": 301, "n_e": 301, "less": 301, "no_ga": 301, "syntact": 301, "vast": 301, "success": 301, "check_hs": 301, "approx": 301, "equilibr": 301, "plai": 301, "role": 301, "ioniz": 301, "set_magnetic_field_from_beta": 301, "p_": 301, "commonli": 301, "whichev": 301, "expon": 301, "set_magnetic_field_from_dens": 301, "awar": 301, "num_el": 301, "worthwhil": 301, "summar": 301, "consult": 301, "write_model_to_ascii": 301, "write_model_to_binari": 301, "poor": 301, "tot": 302, "sinc": 302, "isotrop": 302, "tangenti": 302, "theta": 302, "particle_posit": 302, "particle_veloc": 302, "particle_mass": 302, "number_of_particl": 302, "latter": 302, "mention": 302, "thermal_energi": 302, "magnetic_field": 302, "creation": 302, "n_ga": 302, "gas_particl": 302, "generate_gas_particl": 302, "phase": 302, "isotropi": 302, "dv": 302, "2dv": 302, "net": 302, "angular": 302, "cal": 302, "int_0": 302, "integrel": 302, "_0": 302, "speed": 302, "reject": 302, "probabl": 302, "check_dm_viri": 302, "check_star_viri": 302, "accuraci": 302, "diff": 302, "figsiz": 302, "loglog": 302, "vir": 302, "markers": 302, "lw": 302, "legend": 302, "set_xlabel": 302, "set_ylabel": 302, "One": 302, "difficulti": 302, "infinit": 302, "long": 302, "generate_dm_particl": 302, "generate_star_particl": 302, "wish": 302, "n_dm": 302, "n_star": 302, "star_particl": 302, "generate_": 302, "_particl": 302, "all_particl": 302, "concaten": 302, "gas_part": 302, "gas_parts1": 302, "gas_parts2": 302, "drop_ptyp": 302, "translat": 302, "boost": 302, "add_offset": 302, "shift": 302, "movement": 302, "make_radial_cut": 302, "add_black_hol": 302, "simplest": 302, "mbh": 302, "0e9": 302, "300": 302, "keep": 302, "track": 302, "num_particles1": 302, "num_particles2": 302, "200_000": 302, "halo1": 302, "ones": 302, "halo2": 302, "cluster1": 302, "cluster2": 302, "pick": 302, "overwritten": 302, "ug": 302, "microgauss": 302, "magnetic_field_x": 302, "metal": 302, "zsun": 302, "obvious": 302, "write_particl": 302, "my_particl": 302, "from_fil": 302, "new_part": 302, "gas_onli": 302, "dm_star": 302, "write_to_gadget_fil": 302, "from_gadget_fil": 302, "custom": 303, "framework": 303, "click": 303, "top": 303, "expect": 303, "great": 303, "cutoff": 303, "add_cor": 303, "to_binari": 303, "from_binari": 303, "built_in": 303, "havi": 303, "priori": 303, "extrem": 303, "new_profil": 303, "prof": 303, "my": 303, "perman": 303, "request": 303, "templat": 303, "def": 303, "your_function_her": 303, "insert": 303, "desc": 303}, "objects": {"": [[1, 0, 0, "-", "cluster_collections"], [48, 0, 0, "-", "codes"], [59, 0, 0, "-", "fields"], [102, 0, 0, "-", "ics"], [111, 0, 0, "-", "model"], [190, 0, 0, "-", "numalgs"], [197, 0, 0, "-", "particles"], [220, 0, 0, "-", "radial_profiles"], [265, 0, 0, "-", "relations"], [272, 0, 0, "-", "utils"], [284, 0, 0, "-", "virial"]], "cluster_collections": [[2, 1, 1, "", "Ascasibar07"], [12, 1, 1, "", "Collection"], [22, 1, 1, "", "ProtoCluster"], [28, 1, 1, "", "Sanderson10"], [38, 1, 1, "", "Vikhlinin06"]], "cluster_collections.Ascasibar07": [[3, 2, 1, "", "__init__"], [4, 3, 1, "", "authors"], [5, 3, 1, "", "citation"], [6, 2, 1, "", "items"], [7, 2, 1, "", "keys"], [8, 3, 1, "", "name"], [9, 3, 1, "", "profiles"], [10, 3, 1, "", "source_authors"], [11, 2, 1, "", "values"]], "cluster_collections.Collection": [[13, 2, 1, "", "__init__"], [14, 3, 1, "", "authors"], [15, 3, 1, "", "citation"], [16, 2, 1, "", "items"], [17, 2, 1, "", "keys"], [18, 3, 1, "", "name"], [19, 3, 1, "", "profiles"], [20, 3, 1, "", "source_authors"], [21, 2, 1, "", "values"]], "cluster_collections.ProtoCluster": [[23, 2, 1, "", "__init__"], [24, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [26, 2, 1, "", "load"], [27, 2, 1, "", "value"]], "cluster_collections.Sanderson10": [[29, 2, 1, "", "__init__"], [30, 3, 1, "", "authors"], [31, 3, 1, "", "citation"], [32, 2, 1, "", "items"], [33, 2, 1, "", "keys"], [34, 3, 1, "", "name"], [35, 3, 1, "", "profiles"], [36, 3, 1, "", "source_authors"], [37, 2, 1, "", "values"]], "cluster_collections.Vikhlinin06": [[39, 2, 1, "", "__init__"], [40, 3, 1, "", "authors"], [41, 3, 1, "", "citation"], [42, 2, 1, "", "items"], [43, 2, 1, "", "keys"], [44, 3, 1, "", "name"], [45, 3, 1, "", "profiles"], [46, 3, 1, "", "source_authors"], [47, 2, 1, "", "values"]], "codes": [[49, 4, 1, "", "resample_arepo_ics"], [50, 4, 1, "", "setup_arepo_ics"], [51, 4, 1, "", "setup_art_ics"], [52, 4, 1, "", "setup_athena_ics"], [53, 4, 1, "", "setup_enzo_ics"], [54, 4, 1, "", "setup_flash_ics"], [55, 4, 1, "", "setup_gamer_ics"], [56, 4, 1, "", "setup_gizmo_ics"], [57, 4, 1, "", "setup_ramses_ics"], [58, 4, 1, "", "write_amr_particles"]], "fields": [[60, 1, 1, "", "ClusterField"], [65, 1, 1, "", "GaussianRandomField"], [70, 1, 1, "", "RadialRandomMagneticField"], [75, 1, 1, "", "RadialRandomMagneticVectorPotential"], [80, 1, 1, "", "RadialRandomVelocityField"], [85, 1, 1, "", "RandomMagneticField"], [90, 1, 1, "", "RandomMagneticVectorPotential"], [95, 1, 1, "", "RandomVelocityField"], [100, 4, 1, "", "parse_value"], [101, 4, 1, "", "rot_3d"]], "fields.ClusterField": [[61, 2, 1, "", "__init__"], [62, 2, 1, "", "map_field_to_particles"], [63, 3, 1, "", "units"], [64, 2, 1, "", "write_file"]], "fields.GaussianRandomField": [[66, 2, 1, "", "__init__"], [67, 2, 1, "", "map_field_to_particles"], [68, 3, 1, "", "units"], [69, 2, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[71, 2, 1, "", "__init__"], [72, 2, 1, "", "map_field_to_particles"], [73, 3, 1, "", "units"], [74, 2, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[76, 2, 1, "", "__init__"], [77, 2, 1, "", "map_field_to_particles"], [78, 3, 1, "", "units"], [79, 2, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[81, 2, 1, "", "__init__"], [82, 2, 1, "", "map_field_to_particles"], [83, 3, 1, "", "units"], [84, 2, 1, "", "write_file"]], "fields.RandomMagneticField": [[86, 2, 1, "", "__init__"], [87, 2, 1, "", "map_field_to_particles"], [88, 3, 1, "", "units"], [89, 2, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[91, 2, 1, "", "__init__"], [92, 2, 1, "", "map_field_to_particles"], [93, 3, 1, "", "units"], [94, 2, 1, "", "write_file"]], "fields.RandomVelocityField": [[96, 2, 1, "", "__init__"], [97, 2, 1, "", "map_field_to_particles"], [98, 3, 1, "", "units"], [99, 2, 1, "", "write_file"]], "ics": [[103, 1, 1, "", "ClusterICs"], [110, 4, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[104, 2, 1, "", "__init__"], [105, 2, 1, "", "create_dataset"], [106, 2, 1, "", "from_file"], [107, 2, 1, "", "resample_particle_ics"], [108, 2, 1, "", "setup_particle_ics"], [109, 2, 1, "", "to_file"]], "model": [[112, 1, 1, "", "ClusterModel"], [151, 1, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[113, 2, 1, "", "__init__"], [114, 2, 1, "", "check_dm_virial"], [115, 2, 1, "", "check_hse"], [116, 2, 1, "", "check_star_virial"], [117, 2, 1, "", "correct"], [118, 2, 1, "", "create_dataset"], [119, 5, 1, "", "default_fields"], [120, 3, 1, "", "dm_virial"], [121, 5, 1, "", "fields"], [122, 2, 1, "", "find_field_at_radius"], [123, 2, 1, "", "find_radius_for_density"], [124, 2, 1, "", "from_arrays"], [125, 2, 1, "", "from_dens_and_entr"], [126, 2, 1, "", "from_dens_and_tden"], [127, 2, 1, "", "from_dens_and_temp"], [128, 2, 1, "", "from_h5_file"], [129, 2, 1, "", "generate_dm_particles"], [130, 2, 1, "", "generate_gas_particles"], [131, 2, 1, "", "generate_star_particles"], [132, 2, 1, "", "generate_tracer_particles"], [133, 3, 1, "", "is_physical"], [134, 2, 1, "", "items"], [135, 2, 1, "", "keys"], [136, 2, 1, "", "mass_in_radius"], [137, 2, 1, "", "no_gas"], [138, 5, 1, "", "num_elements"], [139, 2, 1, "", "panel_plot"], [140, 2, 1, "", "plot"], [141, 3, 1, "", "properties"], [142, 2, 1, "", "set_field"], [143, 2, 1, "", "set_magnetic_field_from_beta"], [144, 2, 1, "", "set_magnetic_field_from_density"], [145, 2, 1, "", "set_rmax"], [146, 3, 1, "", "star_virial"], [147, 2, 1, "", "values"], [148, 2, 1, "", "write_model_to_ascii"], [149, 2, 1, "", "write_model_to_binary"], [150, 2, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[152, 2, 1, "", "__init__"], [153, 2, 1, "", "check_dm_virial"], [154, 2, 1, "", "check_hse"], [155, 2, 1, "", "check_star_virial"], [156, 2, 1, "", "correct"], [157, 2, 1, "", "create_dataset"], [158, 5, 1, "", "default_fields"], [159, 3, 1, "", "dm_virial"], [160, 5, 1, "", "fields"], [161, 2, 1, "", "find_field_at_radius"], [162, 2, 1, "", "find_radius_for_density"], [163, 2, 1, "", "from_arrays"], [164, 2, 1, "", "from_dens_and_entr"], [165, 2, 1, "", "from_dens_and_tden"], [166, 2, 1, "", "from_dens_and_temp"], [167, 2, 1, "", "from_h5_file"], [168, 2, 1, "", "generate_dm_particles"], [169, 2, 1, "", "generate_gas_particles"], [170, 2, 1, "", "generate_star_particles"], [171, 2, 1, "", "generate_tracer_particles"], [172, 3, 1, "", "is_physical"], [173, 2, 1, "", "items"], [174, 2, 1, "", "keys"], [175, 2, 1, "", "mass_in_radius"], [176, 2, 1, "", "no_gas"], [177, 5, 1, "", "num_elements"], [178, 2, 1, "", "panel_plot"], [179, 2, 1, "", "plot"], [180, 3, 1, "", "properties"], [181, 2, 1, "", "set_field"], [182, 2, 1, "", "set_magnetic_field_from_beta"], [183, 2, 1, "", "set_magnetic_field_from_density"], [184, 2, 1, "", "set_rmax"], [185, 3, 1, "", "star_virial"], [186, 2, 1, "", "values"], [187, 2, 1, "", "write_model_to_ascii"], [188, 2, 1, "", "write_model_to_binary"], [189, 2, 1, "", "write_model_to_h5"]], "numalgs": [[191, 4, 1, "", "extrap_power_law"], [192, 4, 1, "", "find_holes"], [193, 4, 1, "", "identify_domain_borders"], [194, 4, 1, "", "monotone_interpolation"], [195, 4, 1, "", "positive_interpolation"], [196, 4, 1, "", "solve_temperature"]], "particles": [[198, 1, 1, "", "ClusterParticles"], [215, 4, 1, "", "combine_three_clusters"], [216, 4, 1, "", "combine_two_clusters"], [217, 4, 1, "", "resample_one_cluster"], [218, 4, 1, "", "resample_three_clusters"], [219, 4, 1, "", "resample_two_clusters"]], "particles.ClusterParticles": [[199, 2, 1, "", "__init__"], [200, 2, 1, "", "add_black_hole"], [201, 2, 1, "", "add_offsets"], [202, 2, 1, "", "drop_ptypes"], [203, 2, 1, "", "from_fields"], [204, 2, 1, "", "from_file"], [205, 2, 1, "", "from_gadget_file"], [206, 2, 1, "", "from_h5_file"], [207, 2, 1, "", "keys"], [208, 2, 1, "", "make_radial_cut"], [209, 3, 1, "", "num_passive_scalars"], [210, 2, 1, "", "set_field"], [211, 2, 1, "", "to_yt_dataset"], [212, 2, 1, "", "write_particles"], [213, 2, 1, "", "write_particles_to_h5"], [214, 2, 1, "", "write_to_gadget_file"]], "radial_profiles": [[221, 1, 1, "", "RadialProfile"], [232, 4, 1, "", "ad07_density_profile"], [233, 4, 1, "", "ad07_temperature_profile"], [234, 4, 1, "", "am06_density_profile"], [235, 4, 1, "", "am06_temperature_profile"], [236, 4, 1, "", "baseline_entropy_profile"], [237, 4, 1, "", "beta_model_profile"], [238, 4, 1, "", "broken_entropy_profile"], [239, 4, 1, "", "constant_profile"], [240, 4, 1, "", "convert_nfw_to_hernquist"], [241, 4, 1, "", "cored_hernquist_density_profile"], [242, 4, 1, "", "cored_snfw_density_profile"], [243, 4, 1, "", "cored_snfw_mass_profile"], [244, 4, 1, "", "cored_snfw_total_mass"], [245, 4, 1, "", "einasto_density_profile"], [246, 4, 1, "", "einasto_mass_profile"], [247, 4, 1, "", "find_overdensity_radius"], [248, 4, 1, "", "find_radius_mass"], [249, 4, 1, "", "hernquist_density_profile"], [250, 4, 1, "", "hernquist_mass_profile"], [251, 4, 1, "", "nfw_density_profile"], [252, 4, 1, "", "nfw_mass_profile"], [253, 4, 1, "", "nfw_scale_density"], [254, 4, 1, "", "power_law_profile"], [255, 4, 1, "", "rescale_profile_by_mass"], [256, 4, 1, "", "snfw_conc"], [257, 4, 1, "", "snfw_density_profile"], [258, 4, 1, "", "snfw_mass_profile"], [259, 4, 1, "", "snfw_total_mass"], [260, 4, 1, "", "tnfw_density_profile"], [261, 4, 1, "", "tnfw_mass_profile"], [262, 4, 1, "", "vikhlinin_density_profile"], [263, 4, 1, "", "vikhlinin_temperature_profile"], [264, 4, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[222, 2, 1, "", "__init__"], [223, 2, 1, "", "add_core"], [224, 2, 1, "", "built_in"], [225, 5, 1, "", "builtin"], [226, 2, 1, "", "cutoff"], [227, 2, 1, "", "from_array"], [228, 2, 1, "", "from_binary"], [229, 5, 1, "", "name"], [230, 2, 1, "", "plot"], [231, 2, 1, "", "to_binary"]], "relations": [[266, 4, 1, "", "convert_ne_to_density"], [267, 4, 1, "", "f_gas"], [268, 4, 1, "", "m_bcg"], [269, 4, 1, "", "m_sat"], [270, 4, 1, "", "r_bcg"], [271, 4, 1, "", "rho_scale_hern"]], "utils": [[273, 1, 1, "", "LogMute"], [275, 4, 1, "", "ensure_list"], [276, 4, 1, "", "ensure_ytarray"], [277, 4, 1, "", "ensure_ytquantity"], [278, 4, 1, "", "generate_particle_radii"], [279, 4, 1, "", "integrate"], [280, 4, 1, "", "integrate_mass"], [281, 4, 1, "", "integrate_toinf"], [282, 4, 1, "", "parse_prng"], [283, 4, 1, "", "time_limit"]], "utils.LogMute": [[274, 2, 1, "", "__init__"]], "virial": [[285, 1, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[286, 2, 1, "", "__init__"], [287, 2, 1, "", "check_virial"], [288, 3, 1, "", "ee"], [289, 3, 1, "", "ff"], [290, 2, 1, "", "generate_particles"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"user": [0, 301], "refer": [0, 293, 299], "guid": [0, 296, 298], "basic": 0, "compon": 0, "cg": [0, 291, 296], "In": [0, 303], "depth": 0, "articl": 0, "cluster_collect": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "ascasibar07": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "__init__": [3, 13, 23, 29, 39, 61, 66, 71, 76, 81, 86, 91, 96, 104, 113, 152, 199, 222, 274, 286], "author": [4, 14, 30, 40], "citat": [5, 15, 31, 41], "item": [6, 16, 24, 32, 42, 134, 173], "kei": [7, 17, 25, 33, 43, 135, 174, 207], "name": [8, 18, 34, 44, 229], "profil": [9, 19, 35, 45, 301, 303], "source_author": [10, 20, 36, 46], "valu": [11, 21, 27, 37, 47, 147, 186], "collect": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 294], "protoclust": [22, 23, 24, 25, 26, 27], "load": 26, "sanderson10": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "vikhlinin06": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "code": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 296], "resample_arepo_": 49, "setup_arepo_": 50, "setup_art_": 51, "setup_athena_": 52, "setup_enzo_": 53, "setup_flash_": 54, "setup_gamer_": 55, "setup_gizmo_": 56, "setup_ramses_": 57, "write_amr_particl": 58, "field": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 160, 297, 301, 302], "clusterfield": [60, 61, 62, 63, 64], "map_field_to_particl": [62, 67, 72, 77, 82, 87, 92, 97], "unit": [63, 68, 73, 78, 83, 88, 93, 98, 298], "write_fil": [64, 69, 74, 79, 84, 89, 94, 99], "gaussianrandomfield": [65, 66, 67, 68, 69], "radialrandommagneticfield": [70, 71, 72, 73, 74], "radialrandommagneticvectorpotenti": [75, 76, 77, 78, 79], "radialrandomvelocityfield": [80, 81, 82, 83, 84], "randommagneticfield": [85, 86, 87, 88, 89], "randommagneticvectorpotenti": [90, 91, 92, 93, 94], "randomvelocityfield": [95, 96, 97, 98, 99], "parse_valu": 100, "rot_3d": 101, "ic": [102, 103, 104, 105, 106, 107, 108, 109, 110], "cluster": [103, 104, 105, 106, 107, 108, 109, 291, 294, 297, 299, 300, 301], "create_dataset": [105, 118, 157], "from_fil": [106, 204], "resample_particle_": 107, "setup_particle_": 108, "to_fil": 109, "compute_centers_for_binari": 110, "model": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 291, 301], "clustermodel": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 301, 302], "check_dm_viri": [114, 153], "check_hs": [115, 154], "check_star_viri": [116, 155], "correct": [117, 156, 295], "default_field": [119, 158], "dm_virial": [120, 159], "find_field_at_radiu": [122, 161], "find_radius_for_dens": [123, 162], "from_arrai": [124, 163, 227], "develop": [124, 163, 296], "note": [124, 163], "from_dens_and_entr": [125, 164], "from_dens_and_tden": [126, 165], "from_dens_and_temp": [127, 166], "from_h5_fil": [128, 167, 206], "generate_dm_particl": [129, 168], "generate_gas_particl": [130, 169], "generate_star_particl": [131, 170], "generate_tracer_particl": [132, 171], "is_phys": [133, 172], "mass_in_radiu": [136, 175], "no_ga": [137, 176], "num_el": [138, 177], "panel_plot": [139, 178], "plot": [140, 179, 230], "properti": [141, 180], "set_field": [142, 181, 210], "set_magnetic_field_from_beta": [143, 182], "set_magnetic_field_from_dens": [144, 183], "set_rmax": [145, 184], "star_viri": [146, 185], "write_model_to_ascii": [148, 187], "write_model_to_binari": [149, 188], "write_model_to_h5": [150, 189], "hydrostaticequilibrium": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "numalg": [190, 191, 192, 193, 194, 195, 196], "extrap_power_law": 191, "find_hol": 192, "identify_domain_bord": 193, "monotone_interpol": 194, "positive_interpol": 195, "solve_temperatur": 196, "particl": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 297, 302], "clusterparticl": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 302], "add_black_hol": 200, "add_offset": 201, "drop_ptyp": 202, "from_field": 203, "from_gadget_fil": 205, "make_radial_cut": 208, "num_passive_scalar": 209, "to_yt_dataset": 211, "write_particl": 212, "write_particles_to_h5": 213, "write_to_gadget_fil": 214, "combine_three_clust": 215, "combine_two_clust": 216, "resample_one_clust": 217, "resample_three_clust": 218, "resample_two_clust": 219, "radial_profil": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "radialprofil": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "add_cor": 223, "built_in": 224, "builtin": 225, "cutoff": 226, "from_binari": 228, "to_binari": 231, "ad07_density_profil": 232, "ad07_temperature_profil": 233, "am06_density_profil": 234, "am06_temperature_profil": 235, "baseline_entropy_profil": 236, "beta_model_profil": 237, "broken_entropy_profil": 238, "constant_profil": 239, "convert_nfw_to_hernquist": 240, "cored_hernquist_density_profil": 241, "cored_snfw_density_profil": 242, "cored_snfw_mass_profil": 243, "cored_snfw_total_mass": 244, "einasto_density_profil": 245, "einasto_mass_profil": 246, "find_overdensity_radiu": 247, "find_radius_mass": 248, "hernquist_density_profil": 249, "hernquist_mass_profil": 250, "nfw_density_profil": 251, "nfw_mass_profil": 252, "nfw_scale_dens": 253, "power_law_profil": 254, "rescale_profile_by_mass": 255, "snfw_conc": 256, "snfw_density_profil": 257, "snfw_mass_profil": 258, "snfw_total_mass": 259, "tnfw_density_profil": 260, "tnfw_mass_profil": 261, "vikhlinin_density_profil": 262, "vikhlinin_temperature_profil": 263, "walker_entropy_profil": 264, "relat": [265, 266, 267, 268, 269, 270, 271, 299], "convert_ne_to_dens": 266, "f_ga": 267, "m_bcg": 268, "m_sat": 269, "r_bcg": 270, "rho_scale_hern": 271, "util": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "logmut": [273, 274], "ensure_list": 275, "ensure_ytarrai": 276, "ensure_ytquant": 277, "generate_particle_radii": 278, "integr": 279, "integrate_mass": 280, "integrate_toinf": 281, "parse_prng": 282, "time_limit": 283, "virial": [284, 285, 286, 287, 288, 289, 290, 302], "virialequilibrium": [285, 286, 287, 288, 289, 290], "check_viri": 287, "ee": 288, "ff": 289, "generate_particl": 290, "your": 291, "first": 291, "journei": 291, "With": 291, "content": [291, 295, 298, 301, 303], "introduc": 291, "get": [291, 298], "start": [291, 298], "packag": [291, 296, 298], "set": [291, 301], "up": 291, "build": 291, "The": [291, 295, 301, 302], "api": 292, "simul": 293, "softwar": 293, "flash": 293, "gamer": 293, "arepo": 293, "gizmo": 293, "enzo": 293, "rams": 293, "athena": 293, "what": [294, 295], "i": [294, 302], "A": 294, "us": [294, 296, 301, 303], "sidebar": 294, "why": 294, "doe": 294, "look": 294, "so": 294, "bad": 294, "bumpi": 294, "non": [295, 301], "physic": [295, 301], "behavior": 295, "caus": 295, "region": 295, "minim": 295, "smooth": 295, "exampl": 296, "go": 296, "from": [296, 300, 301, 302], "To": 296, "scienc": 296, "beyond": 296, "extern": 296, "gener": [297, 299, 300, 301, 302], "3d": 297, "mathemat": [297, 301, 302], "overview": [297, 301, 302], "initi": [297, 300], "magnet": [297, 301], "random": 297, "vector": 297, "potenti": 297, "radial": [297, 301, 303], "veloc": [297, 302], "map": 297, "write": [297, 301], "out": 297, "disk": [297, 301], "quickstart": 298, "introduct": 298, "instal": 298, "Not": 298, "yet": 298, "implement": 298, "depend": 298, "featur": 299, "resourc": 299, "project": 299, "page": 299, "indic": 299, "tabl": 299, "addit": 299, "condit": 300, "script": 300, "paramet": 300, "file": 300, "reader": 301, "suggest": 301, "intraclust": 301, "medium": 301, "icm": 301, "graviti": 301, "ga": [301, 302], "densiti": 301, "temperatur": 301, "total": 301, "entropi": 301, "without": 301, "check": [301, 302], "hydrostat": 301, "equilibrium": [301, 302], "strength": 301, "beta": 301, "plasma": 301, "ad": [301, 302], "other": 301, "read": 301, "object": [301, 302], "advic": 301, "dark": 302, "matter": 302, "star": 302, "equilibria": 302, "class": 302, "oper": 302, "drop": 302, "type": 302, "add": 302, "posit": 302, "offset": 302, "make": 302, "cut": 302, "radiu": 302, "black": 302, "hole": 302, "new": 302, "chang": 302, "o": 302, "gadget": 302, "like": 302, "built": 303, "creat": 303}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"User Reference Guide": [[0, "user-reference-guide"]], "Basic Components of CG": [[0, "basic-components-of-cg"]], "In Depth Articles": [[0, "in-depth-articles"]], "cluster_collections": [[1, "module-cluster_collections"]], "cluster_collections.Ascasibar07": [[2, "cluster-collections-ascasibar07"]], "cluster_collections.Ascasibar07.__init__": [[3, "cluster-collections-ascasibar07-init"]], "cluster_collections.Ascasibar07.authors": [[4, "cluster-collections-ascasibar07-authors"]], "cluster_collections.Ascasibar07.citation": [[5, "cluster-collections-ascasibar07-citation"]], "cluster_collections.Ascasibar07.items": [[6, "cluster-collections-ascasibar07-items"]], "cluster_collections.Ascasibar07.keys": [[7, "cluster-collections-ascasibar07-keys"]], "cluster_collections.Ascasibar07.name": [[8, "cluster-collections-ascasibar07-name"]], "cluster_collections.Ascasibar07.profiles": [[9, "cluster-collections-ascasibar07-profiles"]], "cluster_collections.Ascasibar07.source_authors": [[10, "cluster-collections-ascasibar07-source-authors"]], "cluster_collections.Ascasibar07.values": [[11, "cluster-collections-ascasibar07-values"]], "cluster_collections.Collection": [[12, "cluster-collections-collection"]], "cluster_collections.Collection.__init__": [[13, "cluster-collections-collection-init"]], "cluster_collections.Collection.authors": [[14, "cluster-collections-collection-authors"]], "cluster_collections.Collection.citation": [[15, "cluster-collections-collection-citation"]], "cluster_collections.Collection.items": [[16, "cluster-collections-collection-items"]], "cluster_collections.Collection.keys": [[17, "cluster-collections-collection-keys"]], "cluster_collections.Collection.name": [[18, "cluster-collections-collection-name"]], "cluster_collections.Collection.profiles": [[19, "cluster-collections-collection-profiles"]], "cluster_collections.Collection.source_authors": [[20, "cluster-collections-collection-source-authors"]], "cluster_collections.Collection.values": [[21, "cluster-collections-collection-values"]], "cluster_collections.ProtoCluster": [[22, "cluster-collections-protocluster"]], "cluster_collections.ProtoCluster.__init__": [[23, "cluster-collections-protocluster-init"]], "cluster_collections.ProtoCluster.items": [[24, "cluster-collections-protocluster-items"]], "cluster_collections.ProtoCluster.keys": [[25, "cluster-collections-protocluster-keys"]], "cluster_collections.ProtoCluster.load": [[26, "cluster-collections-protocluster-load"]], "cluster_collections.ProtoCluster.value": [[27, "cluster-collections-protocluster-value"]], "cluster_collections.Sanderson10": [[28, "cluster-collections-sanderson10"]], "cluster_collections.Sanderson10.__init__": [[29, "cluster-collections-sanderson10-init"]], "cluster_collections.Sanderson10.authors": [[30, "cluster-collections-sanderson10-authors"]], "cluster_collections.Sanderson10.citation": [[31, "cluster-collections-sanderson10-citation"]], "cluster_collections.Sanderson10.items": [[32, "cluster-collections-sanderson10-items"]], "cluster_collections.Sanderson10.keys": [[33, "cluster-collections-sanderson10-keys"]], "cluster_collections.Sanderson10.name": [[34, "cluster-collections-sanderson10-name"]], "cluster_collections.Sanderson10.profiles": [[35, "cluster-collections-sanderson10-profiles"]], "cluster_collections.Sanderson10.source_authors": [[36, "cluster-collections-sanderson10-source-authors"]], "cluster_collections.Sanderson10.values": [[37, "cluster-collections-sanderson10-values"]], "cluster_collections.Vikhlinin06": [[38, "cluster-collections-vikhlinin06"]], "cluster_collections.Vikhlinin06.__init__": [[39, "cluster-collections-vikhlinin06-init"]], "cluster_collections.Vikhlinin06.authors": [[40, "cluster-collections-vikhlinin06-authors"]], "cluster_collections.Vikhlinin06.citation": [[41, "cluster-collections-vikhlinin06-citation"]], "cluster_collections.Vikhlinin06.items": [[42, "cluster-collections-vikhlinin06-items"]], "cluster_collections.Vikhlinin06.keys": [[43, "cluster-collections-vikhlinin06-keys"]], "cluster_collections.Vikhlinin06.name": [[44, "cluster-collections-vikhlinin06-name"]], "cluster_collections.Vikhlinin06.profiles": [[45, "cluster-collections-vikhlinin06-profiles"]], "cluster_collections.Vikhlinin06.source_authors": [[46, "cluster-collections-vikhlinin06-source-authors"]], "cluster_collections.Vikhlinin06.values": [[47, "cluster-collections-vikhlinin06-values"]], "codes": [[48, "module-codes"]], "codes.resample_arepo_ics": [[49, "codes-resample-arepo-ics"]], "codes.setup_arepo_ics": [[50, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[51, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[52, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[53, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[54, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[55, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[56, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[57, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[58, "codes-write-amr-particles"]], "fields": [[59, "module-fields"]], "fields.ClusterField": [[60, "fields-clusterfield"]], "fields.ClusterField.__init__": [[61, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[62, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[63, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[64, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[65, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[66, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[67, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[68, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[69, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[70, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[71, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[72, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[73, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[74, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[75, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[76, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[77, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[78, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[79, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[80, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[81, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[82, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[83, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[84, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[85, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[86, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[87, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[88, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[89, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[90, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[91, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[92, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[93, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[94, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[95, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[96, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[97, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[98, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[99, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[100, "fields-parse-value"]], "fields.rot_3d": [[101, "fields-rot-3d"]], "ics": [[102, "module-ics"]], "ics.ClusterICs": [[103, "ics-clusterics"]], "ics.ClusterICs.__init__": [[104, "ics-clusterics-init"]], "ics.ClusterICs.create_dataset": [[105, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[106, "ics-clusterics-from-file"]], "ics.ClusterICs.resample_particle_ics": [[107, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[108, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[109, "ics-clusterics-to-file"]], "ics.compute_centers_for_binary": [[110, "ics-compute-centers-for-binary"]], "model": [[111, "module-model"]], "model.ClusterModel": [[112, "model-clustermodel"]], "model.ClusterModel.__init__": [[113, "model-clustermodel-init"]], "model.ClusterModel.check_dm_virial": [[114, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[115, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[116, "model-clustermodel-check-star-virial"]], "model.ClusterModel.correct": [[117, "model-clustermodel-correct"]], "model.ClusterModel.create_dataset": [[118, "model-clustermodel-create-dataset"]], "model.ClusterModel.default_fields": [[119, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[120, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[121, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[122, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.find_radius_for_density": [[123, "model-clustermodel-find-radius-for-density"]], "model.ClusterModel.from_arrays": [[124, "model-clustermodel-from-arrays"]], "development note": [[124, null], [163, null]], "model.ClusterModel.from_dens_and_entr": [[125, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[126, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[127, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[128, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[129, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[130, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[131, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[132, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.is_physical": [[133, "model-clustermodel-is-physical"]], "model.ClusterModel.items": [[134, "model-clustermodel-items"]], "model.ClusterModel.keys": [[135, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[136, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[137, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[138, "model-clustermodel-num-elements"]], "model.ClusterModel.panel_plot": [[139, "model-clustermodel-panel-plot"]], "model.ClusterModel.plot": [[140, "model-clustermodel-plot"]], "model.ClusterModel.properties": [[141, "model-clustermodel-properties"]], "model.ClusterModel.set_field": [[142, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[143, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[144, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[145, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[146, "model-clustermodel-star-virial"]], "model.ClusterModel.values": [[147, "model-clustermodel-values"]], "model.ClusterModel.write_model_to_ascii": [[148, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[149, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[150, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[151, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[152, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.check_dm_virial": [[153, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[154, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[155, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.correct": [[156, "model-hydrostaticequilibrium-correct"]], "model.HydrostaticEquilibrium.create_dataset": [[157, "model-hydrostaticequilibrium-create-dataset"]], "model.HydrostaticEquilibrium.default_fields": [[158, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[159, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[160, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[161, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.find_radius_for_density": [[162, "model-hydrostaticequilibrium-find-radius-for-density"]], "model.HydrostaticEquilibrium.from_arrays": [[163, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[164, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[165, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[166, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[167, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[168, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[169, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[170, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[171, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.is_physical": [[172, "model-hydrostaticequilibrium-is-physical"]], "model.HydrostaticEquilibrium.items": [[173, "model-hydrostaticequilibrium-items"]], "model.HydrostaticEquilibrium.keys": [[174, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[175, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[176, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[177, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.panel_plot": [[178, "model-hydrostaticequilibrium-panel-plot"]], "model.HydrostaticEquilibrium.plot": [[179, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.properties": [[180, "model-hydrostaticequilibrium-properties"]], "model.HydrostaticEquilibrium.set_field": [[181, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[182, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[183, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[184, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[185, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.values": [[186, "model-hydrostaticequilibrium-values"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[187, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[188, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[189, "model-hydrostaticequilibrium-write-model-to-h5"]], "numalgs": [[190, "module-numalgs"]], "numalgs.extrap_power_law": [[191, "numalgs-extrap-power-law"]], "numalgs.find_holes": [[192, "numalgs-find-holes"]], "numalgs.identify_domain_borders": [[193, "numalgs-identify-domain-borders"]], "numalgs.monotone_interpolation": [[194, "numalgs-monotone-interpolation"]], "numalgs.positive_interpolation": [[195, "numalgs-positive-interpolation"]], "numalgs.solve_temperature": [[196, "numalgs-solve-temperature"]], "particles": [[197, "module-particles"]], "particles.ClusterParticles": [[198, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[199, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[200, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[201, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[202, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.from_fields": [[203, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[204, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[205, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[206, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[207, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[208, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[209, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.set_field": [[210, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[211, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[212, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[213, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[214, "particles-clusterparticles-write-to-gadget-file"]], "particles.combine_three_clusters": [[215, "particles-combine-three-clusters"]], "particles.combine_two_clusters": [[216, "particles-combine-two-clusters"]], "particles.resample_one_cluster": [[217, "particles-resample-one-cluster"]], "particles.resample_three_clusters": [[218, "particles-resample-three-clusters"]], "particles.resample_two_clusters": [[219, "particles-resample-two-clusters"]], "radial_profiles": [[220, "module-radial_profiles"]], "radial_profiles.RadialProfile": [[221, "radial-profiles-radialprofile"]], "radial_profiles.RadialProfile.__init__": [[222, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[223, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[224, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[225, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[226, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[227, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[228, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.name": [[229, "radial-profiles-radialprofile-name"]], "radial_profiles.RadialProfile.plot": [[230, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[231, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[232, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[233, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[234, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[235, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[236, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[237, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[238, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[239, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[240, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[241, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[242, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[243, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[244, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[245, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[246, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[247, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[248, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[249, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[250, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[251, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[252, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[253, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[254, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[255, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[256, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[257, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[258, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[259, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[260, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[261, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[262, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[263, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[264, "radial-profiles-walker-entropy-profile"]], "relations": [[265, "module-relations"]], "relations.convert_ne_to_density": [[266, "relations-convert-ne-to-density"]], "relations.f_gas": [[267, "relations-f-gas"]], "relations.m_bcg": [[268, "relations-m-bcg"]], "relations.m_sat": [[269, "relations-m-sat"]], "relations.r_bcg": [[270, "relations-r-bcg"]], "relations.rho_scale_hern": [[271, "relations-rho-scale-hern"]], "utils": [[272, "module-utils"]], "utils.LogMute": [[273, "utils-logmute"]], "utils.LogMute.__init__": [[274, "utils-logmute-init"]], "utils.ensure_list": [[275, "utils-ensure-list"]], "utils.ensure_ytarray": [[276, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[277, "utils-ensure-ytquantity"]], "utils.generate_particle_radii": [[278, "utils-generate-particle-radii"]], "utils.integrate": [[279, "utils-integrate"]], "utils.integrate_mass": [[280, "utils-integrate-mass"]], "utils.integrate_toinf": [[281, "utils-integrate-toinf"]], "utils.parse_prng": [[282, "utils-parse-prng"]], "utils.time_limit": [[283, "utils-time-limit"]], "virial": [[284, "module-virial"]], "virial.VirialEquilibrium": [[285, "virial-virialequilibrium"]], "virial.VirialEquilibrium.__init__": [[286, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[287, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.ee": [[288, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[289, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[290, "virial-virialequilibrium-generate-particles"]], "Your First Journey With CG": [[291, "Your-First-Journey-With-CG"]], "Contents": [[291, "Contents"], [295, "contents"], [298, "contents"], [301, "contents"], [303, "contents"]], "Introducing CG": [[291, "Introducing-CG"]], "Getting Started With the Package": [[291, "Getting-Started-With-the-Package"]], "Setting Up Your First Cluster": [[291, "Setting-Up-Your-First-Cluster"]], "Building The Model": [[291, "Building-The-Model"]], "API": [[292, "api"]], "Simulation Software": [[293, "simulation-software"]], "FLASH": [[293, "flash"]], "GAMER": [[293, "gamer"]], "Arepo": [[293, "arepo"]], "GIZMO": [[293, "gizmo"]], "Enzo": [[293, "enzo"]], "RAMSES": [[293, "ramses"]], "Athena++": [[293, "athena"]], "References": [[293, "references"]], "Cluster Collections": [[294, "cluster-collections"]], "What is A Collection?": [[294, "what-is-a-collection"]], "Using Collections": [[294, "using-collections"]], "Sidebar: Why Does it Look So Bad!?": [[294, null]], "Sidebar: Why so Bumpy??": [[294, null]], "Correcting Non-Physical Behavior": [[295, "correcting-non-physical-behavior"]], "What Causes Non-Physical Regions?": [[295, "what-causes-non-physical-regions"]], "Correcting Non-Physical Regions": [[295, "correcting-non-physical-regions"]], "The Minimal Correction": [[295, "the-minimal-correction"]], "The Smooth Correction": [[295, "the-smooth-correction"]], "Examples": [[296, "examples"]], "Using CG": [[296, "using-cg"]], "Code Guides - Going From Code To Science": [[296, "code-guides-going-from-code-to-science"]], "Beyond CG - External Packages": [[296, "beyond-cg-external-packages"]], "Developing in CG": [[296, "developing-in-cg"]], "Generating 3D Cluster Fields": [[297, "generating-3d-cluster-fields"]], "Mathematical Overview": [[297, "mathematical-overview"]], "Initializing a Magnetic Field": [[297, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[297, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[297, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[297, "initializing-a-velocity-field"]], "Random Velocity Fields": [[297, "random-velocity-fields"]], "Radial Random Velocity Fields": [[297, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[297, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[297, "writing-a-field-out-to-disk"]], "Quickstart Guide": [[298, "quickstart-guide"]], "Introduction": [[298, "introduction"]], "Installing the Package": [[298, "installing-the-package"]], "Not Yet Implemented": [[298, null], [298, null], [298, null]], "Dependencies": [[298, "dependencies"]], "Getting Started": [[298, "id1"]], "Quickstart Guides": [[298, "quickstart-guides"]], "Units": [[298, "units"]], "Cluster Generator": [[299, "cluster-generator"]], "Features": [[299, "features"]], "Resources": [[299, "resources"]], "Related Projects": [[299, "related-projects"]], "Reference Pages": [[299, "reference-pages"]], "Indices and tables": [[299, "indices-and-tables"]], "Additional Pages": [[299, "additional-pages"]], "Initial Conditions Generation": [[300, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[300, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[300, "clusterics-parameter-files"]], "Cluster Models": [[301, "cluster-models"]], "Cluster Models: Mathematical Overview": [[301, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[301, null]], "The Intracluster Medium (ICM)": [[301, "the-intracluster-medium-icm"]], "Gravity": [[301, "gravity"]], "Generating a model.ClusterModel Using Radial Profiles": [[301, "generating-a-model-clustermodel-using-radial-profiles"]], "ClusterModel from Gas Density and Gas Temperature Profiles": [[301, "clustermodel-from-gas-density-and-gas-temperature-profiles"]], "ClusterModel from Gas Density and Total Density Profiles": [[301, "clustermodel-from-gas-density-and-total-density-profiles"]], "ClusterModel from Gas Density and Gas Entropy Profiles": [[301, "clustermodel-from-gas-density-and-gas-entropy-profiles"]], "ClusterModel Without Gas": [[301, "clustermodel-without-gas"]], "Checking the Hydrostatic Equilibrium": [[301, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[301, "setting-a-magnetic-field-strength-profile"]], "Setting a Magnetic Field from \\beta": [[301, "setting-a-magnetic-field-from-beta"]], "Setting a Magnetic Field from plasma density": [[301, "setting-a-magnetic-field-from-plasma-density"]], "Adding Other Fields": [[301, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[301, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[301, null]], "Non-Physical Profiles": [[301, "non-physical-profiles"]], "Particles": [[302, "particles"]], "Generating Particles from ClusterModel Objects": [[302, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[302, "gas-particles"]], "Dark Matter and Star Particles": [[302, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[302, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[302, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[302, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[302, "the-clusterparticles-class"]], "ClusterParticles Operations": [[302, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[302, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[302, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[302, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[302, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[302, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[302, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[302, "clusterparticles-i-o"]], "Gadget-Like I/O": [[302, "gadget-like-i-o"]], "Radial Profiles": [[303, "radial-profiles"]], "Built-In Radial Profiles": [[303, "built-in-radial-profiles"]], "Using Radial Profiles": [[303, "using-radial-profiles"]], "Creating a Radial Profile": [[303, "creating-a-radial-profile"]]}, "indexentries": {"cluster_collections": [[1, "module-cluster_collections"]], "module": [[1, "module-cluster_collections"], [48, "module-codes"], [59, "module-fields"], [102, "module-ics"], [111, "module-model"], [190, "module-numalgs"], [197, "module-particles"], [220, "module-radial_profiles"], [265, "module-relations"], [272, "module-utils"], [284, "module-virial"]], "ascasibar07 (class in cluster_collections)": [[2, "cluster_collections.Ascasibar07"]], "__init__() (cluster_collections.ascasibar07 method)": [[3, "cluster_collections.Ascasibar07.__init__"]], "authors (cluster_collections.ascasibar07 property)": [[4, "cluster_collections.Ascasibar07.authors"]], "citation (cluster_collections.ascasibar07 property)": [[5, "cluster_collections.Ascasibar07.citation"]], "items() (cluster_collections.ascasibar07 method)": [[6, "cluster_collections.Ascasibar07.items"]], "keys() (cluster_collections.ascasibar07 method)": [[7, "cluster_collections.Ascasibar07.keys"]], "name (cluster_collections.ascasibar07 property)": [[8, "cluster_collections.Ascasibar07.name"]], "profiles (cluster_collections.ascasibar07 property)": [[9, "cluster_collections.Ascasibar07.profiles"]], "source_authors (cluster_collections.ascasibar07 property)": [[10, "cluster_collections.Ascasibar07.source_authors"]], "values() (cluster_collections.ascasibar07 method)": [[11, "cluster_collections.Ascasibar07.values"]], "collection (class in cluster_collections)": [[12, "cluster_collections.Collection"]], "__init__() (cluster_collections.collection method)": [[13, "cluster_collections.Collection.__init__"]], "authors (cluster_collections.collection property)": [[14, "cluster_collections.Collection.authors"]], "citation (cluster_collections.collection property)": [[15, "cluster_collections.Collection.citation"]], "items() (cluster_collections.collection method)": [[16, "cluster_collections.Collection.items"]], "keys() (cluster_collections.collection method)": [[17, "cluster_collections.Collection.keys"]], "name (cluster_collections.collection property)": [[18, "cluster_collections.Collection.name"]], "profiles (cluster_collections.collection property)": [[19, "cluster_collections.Collection.profiles"]], "source_authors (cluster_collections.collection property)": [[20, "cluster_collections.Collection.source_authors"]], "values() (cluster_collections.collection method)": [[21, "cluster_collections.Collection.values"]], "protocluster (class in cluster_collections)": [[22, "cluster_collections.ProtoCluster"]], "__init__() (cluster_collections.protocluster method)": [[23, "cluster_collections.ProtoCluster.__init__"]], "items() (cluster_collections.protocluster method)": [[24, "cluster_collections.ProtoCluster.items"]], "keys() (cluster_collections.protocluster method)": [[25, "cluster_collections.ProtoCluster.keys"]], "load() (cluster_collections.protocluster method)": [[26, "cluster_collections.ProtoCluster.load"]], "value() (cluster_collections.protocluster method)": [[27, "cluster_collections.ProtoCluster.value"]], "sanderson10 (class in cluster_collections)": [[28, "cluster_collections.Sanderson10"]], "__init__() (cluster_collections.sanderson10 method)": [[29, "cluster_collections.Sanderson10.__init__"]], "authors (cluster_collections.sanderson10 property)": [[30, "cluster_collections.Sanderson10.authors"]], "citation (cluster_collections.sanderson10 property)": [[31, "cluster_collections.Sanderson10.citation"]], "items() (cluster_collections.sanderson10 method)": [[32, "cluster_collections.Sanderson10.items"]], "keys() (cluster_collections.sanderson10 method)": [[33, "cluster_collections.Sanderson10.keys"]], "name (cluster_collections.sanderson10 property)": [[34, "cluster_collections.Sanderson10.name"]], "profiles (cluster_collections.sanderson10 property)": [[35, "cluster_collections.Sanderson10.profiles"]], "source_authors (cluster_collections.sanderson10 property)": [[36, "cluster_collections.Sanderson10.source_authors"]], "values() (cluster_collections.sanderson10 method)": [[37, "cluster_collections.Sanderson10.values"]], "vikhlinin06 (class in cluster_collections)": [[38, "cluster_collections.Vikhlinin06"]], "__init__() (cluster_collections.vikhlinin06 method)": [[39, "cluster_collections.Vikhlinin06.__init__"]], "authors (cluster_collections.vikhlinin06 property)": [[40, "cluster_collections.Vikhlinin06.authors"]], "citation (cluster_collections.vikhlinin06 property)": [[41, "cluster_collections.Vikhlinin06.citation"]], "items() (cluster_collections.vikhlinin06 method)": [[42, "cluster_collections.Vikhlinin06.items"]], "keys() (cluster_collections.vikhlinin06 method)": [[43, "cluster_collections.Vikhlinin06.keys"]], "name (cluster_collections.vikhlinin06 property)": [[44, "cluster_collections.Vikhlinin06.name"]], "profiles (cluster_collections.vikhlinin06 property)": [[45, "cluster_collections.Vikhlinin06.profiles"]], "source_authors (cluster_collections.vikhlinin06 property)": [[46, "cluster_collections.Vikhlinin06.source_authors"]], "values() (cluster_collections.vikhlinin06 method)": [[47, "cluster_collections.Vikhlinin06.values"]], "codes": [[48, "module-codes"]], "resample_arepo_ics() (in module codes)": [[49, "codes.resample_arepo_ics"]], "setup_arepo_ics() (in module codes)": [[50, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[51, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[52, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[53, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[54, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[55, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[56, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[57, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[58, "codes.write_amr_particles"]], "fields": [[59, "module-fields"]], "clusterfield (class in fields)": [[60, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[61, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[62, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[63, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[64, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[65, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[66, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[67, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[68, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[69, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[70, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[71, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[72, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[73, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[74, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[75, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[76, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[77, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[78, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[79, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[80, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[81, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[82, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[83, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[84, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[85, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[86, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[87, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[88, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[89, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[90, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[91, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[92, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[93, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[94, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[95, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[96, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[97, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[98, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[99, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[100, "fields.parse_value"]], "rot_3d() (in module fields)": [[101, "fields.rot_3d"]], "ics": [[102, "module-ics"]], "clusterics (class in ics)": [[103, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[104, "ics.ClusterICs.__init__"]], "create_dataset() (ics.clusterics method)": [[105, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[106, "ics.ClusterICs.from_file"]], "resample_particle_ics() (ics.clusterics method)": [[107, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[108, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[109, "ics.ClusterICs.to_file"]], "compute_centers_for_binary() (in module ics)": [[110, "ics.compute_centers_for_binary"]], "model": [[111, "module-model"]], "clustermodel (class in model)": [[112, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[113, "model.ClusterModel.__init__"]], "check_dm_virial() (model.clustermodel method)": [[114, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[115, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[116, "model.ClusterModel.check_star_virial"]], "correct() (model.clustermodel method)": [[117, "model.ClusterModel.correct"]], "create_dataset() (model.clustermodel method)": [[118, "model.ClusterModel.create_dataset"]], "default_fields (model.clustermodel attribute)": [[119, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[120, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[121, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[122, "model.ClusterModel.find_field_at_radius"]], "find_radius_for_density() (model.clustermodel method)": [[123, "model.ClusterModel.find_radius_for_density"]], "from_arrays() (model.clustermodel class method)": [[124, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[125, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[126, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[127, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[128, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[129, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[130, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[131, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[132, "model.ClusterModel.generate_tracer_particles"]], "is_physical (model.clustermodel property)": [[133, "model.ClusterModel.is_physical"]], "items() (model.clustermodel method)": [[134, "model.ClusterModel.items"]], "keys() (model.clustermodel method)": [[135, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[136, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[137, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[138, "model.ClusterModel.num_elements"]], "panel_plot() (model.clustermodel method)": [[139, "model.ClusterModel.panel_plot"]], "plot() (model.clustermodel method)": [[140, "model.ClusterModel.plot"]], "properties (model.clustermodel property)": [[141, "model.ClusterModel.properties"]], "set_field() (model.clustermodel method)": [[142, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[143, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[144, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[145, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[146, "model.ClusterModel.star_virial"]], "values() (model.clustermodel method)": [[147, "model.ClusterModel.values"]], "write_model_to_ascii() (model.clustermodel method)": [[148, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[149, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[150, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[151, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[152, "model.HydrostaticEquilibrium.__init__"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[153, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[154, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[155, "model.HydrostaticEquilibrium.check_star_virial"]], "correct() (model.hydrostaticequilibrium method)": [[156, "model.HydrostaticEquilibrium.correct"]], "create_dataset() (model.hydrostaticequilibrium method)": [[157, "model.HydrostaticEquilibrium.create_dataset"]], "default_fields (model.hydrostaticequilibrium attribute)": [[158, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[159, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[160, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[161, "model.HydrostaticEquilibrium.find_field_at_radius"]], "find_radius_for_density() (model.hydrostaticequilibrium method)": [[162, "model.HydrostaticEquilibrium.find_radius_for_density"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[163, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[164, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[165, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[166, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[167, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[168, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[169, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[170, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[171, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "is_physical (model.hydrostaticequilibrium property)": [[172, "model.HydrostaticEquilibrium.is_physical"]], "items() (model.hydrostaticequilibrium method)": [[173, "model.HydrostaticEquilibrium.items"]], "keys() (model.hydrostaticequilibrium method)": [[174, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[175, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[176, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[177, "model.HydrostaticEquilibrium.num_elements"]], "panel_plot() (model.hydrostaticequilibrium method)": [[178, "model.HydrostaticEquilibrium.panel_plot"]], "plot() (model.hydrostaticequilibrium method)": [[179, "model.HydrostaticEquilibrium.plot"]], "properties (model.hydrostaticequilibrium property)": [[180, "model.HydrostaticEquilibrium.properties"]], "set_field() (model.hydrostaticequilibrium method)": [[181, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[182, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[183, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[184, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[185, "model.HydrostaticEquilibrium.star_virial"]], "values() (model.hydrostaticequilibrium method)": [[186, "model.HydrostaticEquilibrium.values"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[187, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[188, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[189, "model.HydrostaticEquilibrium.write_model_to_h5"]], "numalgs": [[190, "module-numalgs"]], "extrap_power_law() (in module numalgs)": [[191, "numalgs.extrap_power_law"]], "find_holes() (in module numalgs)": [[192, "numalgs.find_holes"]], "identify_domain_borders() (in module numalgs)": [[193, "numalgs.identify_domain_borders"]], "monotone_interpolation() (in module numalgs)": [[194, "numalgs.monotone_interpolation"]], "positive_interpolation() (in module numalgs)": [[195, "numalgs.positive_interpolation"]], "solve_temperature() (in module numalgs)": [[196, "numalgs.solve_temperature"]], "particles": [[197, "module-particles"]], "clusterparticles (class in particles)": [[198, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[199, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[200, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[201, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[202, "particles.ClusterParticles.drop_ptypes"]], "from_fields() (particles.clusterparticles class method)": [[203, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[204, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[205, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[206, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[207, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[208, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[209, "particles.ClusterParticles.num_passive_scalars"]], "set_field() (particles.clusterparticles method)": [[210, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[211, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[212, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[213, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[214, "particles.ClusterParticles.write_to_gadget_file"]], "combine_three_clusters() (in module particles)": [[215, "particles.combine_three_clusters"]], "combine_two_clusters() (in module particles)": [[216, "particles.combine_two_clusters"]], "resample_one_cluster() (in module particles)": [[217, "particles.resample_one_cluster"]], "resample_three_clusters() (in module particles)": [[218, "particles.resample_three_clusters"]], "resample_two_clusters() (in module particles)": [[219, "particles.resample_two_clusters"]], "radial_profiles": [[220, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[221, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[222, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[223, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[224, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[225, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[226, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[227, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[228, "radial_profiles.RadialProfile.from_binary"]], "name (radial_profiles.radialprofile attribute)": [[229, "radial_profiles.RadialProfile.name"]], "plot() (radial_profiles.radialprofile method)": [[230, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[231, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[232, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[233, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[234, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[235, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[236, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[237, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[238, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[239, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[240, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[241, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[242, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[243, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[244, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[245, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[246, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[247, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[248, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[249, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[250, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[251, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[252, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[253, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[254, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[255, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[256, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[257, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[258, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[259, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[260, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[261, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[262, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[263, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[264, "radial_profiles.walker_entropy_profile"]], "relations": [[265, "module-relations"]], "convert_ne_to_density() (in module relations)": [[266, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[267, "relations.f_gas"]], "m_bcg() (in module relations)": [[268, "relations.m_bcg"]], "m_sat() (in module relations)": [[269, "relations.m_sat"]], "r_bcg() (in module relations)": [[270, "relations.r_bcg"]], "rho_scale_hern() (in module relations)": [[271, "relations.rho_scale_hern"]], "utils": [[272, "module-utils"]], "logmute (class in utils)": [[273, "utils.LogMute"]], "__init__() (utils.logmute method)": [[274, "utils.LogMute.__init__"]], "ensure_list() (in module utils)": [[275, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[276, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[277, "utils.ensure_ytquantity"]], "generate_particle_radii() (in module utils)": [[278, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[279, "utils.integrate"]], "integrate_mass() (in module utils)": [[280, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[281, "utils.integrate_toinf"]], "parse_prng() (in module utils)": [[282, "utils.parse_prng"]], "time_limit() (in module utils)": [[283, "utils.time_limit"]], "virial": [[284, "module-virial"]], "virialequilibrium (class in virial)": [[285, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[286, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[287, "virial.VirialEquilibrium.check_virial"]], "ee (virial.virialequilibrium property)": [[288, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[289, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[290, "virial.VirialEquilibrium.generate_particles"]]}})