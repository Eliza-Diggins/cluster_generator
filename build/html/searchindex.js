Search.setIndex({"docnames": ["Getting_Started", "_as_gen/codes", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/collection", "_as_gen/collection.Ascasibar07", "_as_gen/collection.Ascasibar07.__init__", "_as_gen/collection.Ascasibar07.description", "_as_gen/collection.Ascasibar07.load", "_as_gen/collection.Ascasibar07.load_method", "_as_gen/collection.Ascasibar07.load_model", "_as_gen/collection.Ascasibar07.name", "_as_gen/collection.Ascasibar07.names", "_as_gen/collection.Ascasibar07.parameters", "_as_gen/collection.Ascasibar07.path", "_as_gen/collection.Ascasibar07.plot_summary", "_as_gen/collection.Ascasibar07.profiles", "_as_gen/collection.ClusterCollection", "_as_gen/collection.ClusterCollection.__init__", "_as_gen/collection.ClusterCollection.description", "_as_gen/collection.ClusterCollection.load_method", "_as_gen/collection.ClusterCollection.load_model", "_as_gen/collection.ClusterCollection.name", "_as_gen/collection.ClusterCollection.names", "_as_gen/collection.ClusterCollection.parameters", "_as_gen/collection.ClusterCollection.path", "_as_gen/collection.ClusterCollection.plot_summary", "_as_gen/collection.ClusterCollection.profiles", "_as_gen/collection.Sanderson10", "_as_gen/collection.Sanderson10.__init__", "_as_gen/collection.Sanderson10.description", "_as_gen/collection.Sanderson10.load", "_as_gen/collection.Sanderson10.load_method", "_as_gen/collection.Sanderson10.load_model", "_as_gen/collection.Sanderson10.name", "_as_gen/collection.Sanderson10.names", "_as_gen/collection.Sanderson10.parameters", "_as_gen/collection.Sanderson10.path", "_as_gen/collection.Sanderson10.plot_summary", "_as_gen/collection.Sanderson10.profiles", "_as_gen/collection.Vikhlinin06", "_as_gen/collection.Vikhlinin06.__init__", "_as_gen/collection.Vikhlinin06.description", "_as_gen/collection.Vikhlinin06.load", "_as_gen/collection.Vikhlinin06.load_method", "_as_gen/collection.Vikhlinin06.load_model", "_as_gen/collection.Vikhlinin06.name", "_as_gen/collection.Vikhlinin06.names", "_as_gen/collection.Vikhlinin06.parameters", "_as_gen/collection.Vikhlinin06.path", "_as_gen/collection.Vikhlinin06.plot_summary", "_as_gen/collection.Vikhlinin06.profiles", "_as_gen/collection.get_collections", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/gravity", "_as_gen/gravity.AQUALGravity", "_as_gen/gravity.AQUALGravity.__init__", "_as_gen/gravity.AQUALGravity.attrs", "_as_gen/gravity.AQUALGravity.compute_mass", "_as_gen/gravity.AQUALGravity.compute_potential", "_as_gen/gravity.AQUALGravity.is_calculated", "_as_gen/gravity.AQUALGravity.model", "_as_gen/gravity.AQUALGravity.potential", "_as_gen/gravity.AQUALGravity.reset", "_as_gen/gravity.EMONDGravity", "_as_gen/gravity.EMONDGravity.__init__", "_as_gen/gravity.EMONDGravity.attrs", "_as_gen/gravity.EMONDGravity.compute_mass", "_as_gen/gravity.EMONDGravity.compute_potential", "_as_gen/gravity.EMONDGravity.is_calculated", "_as_gen/gravity.EMONDGravity.model", "_as_gen/gravity.EMONDGravity.potential", "_as_gen/gravity.EMONDGravity.reset", "_as_gen/gravity.Gravity", "_as_gen/gravity.Gravity.__init__", "_as_gen/gravity.Gravity.attrs", "_as_gen/gravity.Gravity.is_calculated", "_as_gen/gravity.Gravity.model", "_as_gen/gravity.Gravity.reset", "_as_gen/gravity.NewtonianGravity", "_as_gen/gravity.NewtonianGravity.__init__", "_as_gen/gravity.NewtonianGravity.attrs", "_as_gen/gravity.NewtonianGravity.compute_mass", "_as_gen/gravity.NewtonianGravity.compute_potential", "_as_gen/gravity.NewtonianGravity.is_calculated", "_as_gen/gravity.NewtonianGravity.model", "_as_gen/gravity.NewtonianGravity.potential", "_as_gen/gravity.NewtonianGravity.reset", "_as_gen/gravity.QUMONDGravity", "_as_gen/gravity.QUMONDGravity.__init__", "_as_gen/gravity.QUMONDGravity.attrs", "_as_gen/gravity.QUMONDGravity.compute_mass", "_as_gen/gravity.QUMONDGravity.compute_potential", "_as_gen/gravity.QUMONDGravity.is_calculated", "_as_gen/gravity.QUMONDGravity.model", "_as_gen/gravity.QUMONDGravity.potential", "_as_gen/gravity.QUMONDGravity.reset", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.basename", "_as_gen/ics.ClusterICs.center", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.mag_file", "_as_gen/ics.ClusterICs.num_halos", "_as_gen/ics.ClusterICs.profiles", "_as_gen/ics.ClusterICs.r_max", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.ClusterICs.tot_np", "_as_gen/ics.ClusterICs.velocity", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.attrs", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.is_physical", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.pot", "_as_gen/model.ClusterModel.rebuild_physical", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.virialization_method", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.attrs", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.is_physical", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.pot", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.virialization_method", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.fields", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.particle_types", "_as_gen/particles.ClusterParticles.passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.concat_clusters", "_as_gen/particles.resample_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/utils", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.eprint", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.log_string", "_as_gen/utils.moving_average", "_as_gen/utils.parse_prng", "_as_gen/utils.truncate_spline", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.df", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_as_gen/virial.VirialEquilibrium.model", "_as_gen/virial.VirialEquilibrium.num_elements", "_as_gen/virial.VirialEquilibrium.ptype", "_as_gen/virial.VirialEquilibrium.sigma", "_as_gen/virial.VirialEquilibrium.type", "api", "codes", "collections", "examples", "fields", "gravity", "index", "initial_conditions", "models", "notebooks/api_guides/1", "notebooks/api_guides/2", "notebooks/api_guides/3", "notebooks/api_guides/4", "notebooks/quick_notebooks/quickbook", "notebooks/quick_notebooks/quickbook2", "notebooks/quick_notebooks/quickbook3", "notebooks/quick_notebooks/quickbook4", "particles", "radial_profiles"], "filenames": ["Getting_Started.rst", "_as_gen/codes.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/collection.rst", "_as_gen/collection.Ascasibar07.rst", "_as_gen/collection.Ascasibar07.__init__.rst", "_as_gen/collection.Ascasibar07.description.rst", "_as_gen/collection.Ascasibar07.load.rst", "_as_gen/collection.Ascasibar07.load_method.rst", "_as_gen/collection.Ascasibar07.load_model.rst", "_as_gen/collection.Ascasibar07.name.rst", "_as_gen/collection.Ascasibar07.names.rst", "_as_gen/collection.Ascasibar07.parameters.rst", "_as_gen/collection.Ascasibar07.path.rst", "_as_gen/collection.Ascasibar07.plot_summary.rst", "_as_gen/collection.Ascasibar07.profiles.rst", "_as_gen/collection.ClusterCollection.rst", "_as_gen/collection.ClusterCollection.__init__.rst", "_as_gen/collection.ClusterCollection.description.rst", "_as_gen/collection.ClusterCollection.load_method.rst", "_as_gen/collection.ClusterCollection.load_model.rst", "_as_gen/collection.ClusterCollection.name.rst", "_as_gen/collection.ClusterCollection.names.rst", "_as_gen/collection.ClusterCollection.parameters.rst", "_as_gen/collection.ClusterCollection.path.rst", "_as_gen/collection.ClusterCollection.plot_summary.rst", "_as_gen/collection.ClusterCollection.profiles.rst", "_as_gen/collection.Sanderson10.rst", "_as_gen/collection.Sanderson10.__init__.rst", "_as_gen/collection.Sanderson10.description.rst", "_as_gen/collection.Sanderson10.load.rst", "_as_gen/collection.Sanderson10.load_method.rst", "_as_gen/collection.Sanderson10.load_model.rst", "_as_gen/collection.Sanderson10.name.rst", "_as_gen/collection.Sanderson10.names.rst", "_as_gen/collection.Sanderson10.parameters.rst", "_as_gen/collection.Sanderson10.path.rst", "_as_gen/collection.Sanderson10.plot_summary.rst", "_as_gen/collection.Sanderson10.profiles.rst", "_as_gen/collection.Vikhlinin06.rst", "_as_gen/collection.Vikhlinin06.__init__.rst", "_as_gen/collection.Vikhlinin06.description.rst", "_as_gen/collection.Vikhlinin06.load.rst", "_as_gen/collection.Vikhlinin06.load_method.rst", "_as_gen/collection.Vikhlinin06.load_model.rst", "_as_gen/collection.Vikhlinin06.name.rst", "_as_gen/collection.Vikhlinin06.names.rst", "_as_gen/collection.Vikhlinin06.parameters.rst", "_as_gen/collection.Vikhlinin06.path.rst", "_as_gen/collection.Vikhlinin06.plot_summary.rst", "_as_gen/collection.Vikhlinin06.profiles.rst", "_as_gen/collection.get_collections.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/gravity.rst", "_as_gen/gravity.AQUALGravity.rst", "_as_gen/gravity.AQUALGravity.__init__.rst", "_as_gen/gravity.AQUALGravity.attrs.rst", "_as_gen/gravity.AQUALGravity.compute_mass.rst", "_as_gen/gravity.AQUALGravity.compute_potential.rst", "_as_gen/gravity.AQUALGravity.is_calculated.rst", "_as_gen/gravity.AQUALGravity.model.rst", "_as_gen/gravity.AQUALGravity.potential.rst", "_as_gen/gravity.AQUALGravity.reset.rst", "_as_gen/gravity.EMONDGravity.rst", "_as_gen/gravity.EMONDGravity.__init__.rst", "_as_gen/gravity.EMONDGravity.attrs.rst", "_as_gen/gravity.EMONDGravity.compute_mass.rst", "_as_gen/gravity.EMONDGravity.compute_potential.rst", "_as_gen/gravity.EMONDGravity.is_calculated.rst", "_as_gen/gravity.EMONDGravity.model.rst", "_as_gen/gravity.EMONDGravity.potential.rst", "_as_gen/gravity.EMONDGravity.reset.rst", "_as_gen/gravity.Gravity.rst", "_as_gen/gravity.Gravity.__init__.rst", "_as_gen/gravity.Gravity.attrs.rst", "_as_gen/gravity.Gravity.is_calculated.rst", "_as_gen/gravity.Gravity.model.rst", "_as_gen/gravity.Gravity.reset.rst", "_as_gen/gravity.NewtonianGravity.rst", "_as_gen/gravity.NewtonianGravity.__init__.rst", "_as_gen/gravity.NewtonianGravity.attrs.rst", "_as_gen/gravity.NewtonianGravity.compute_mass.rst", "_as_gen/gravity.NewtonianGravity.compute_potential.rst", "_as_gen/gravity.NewtonianGravity.is_calculated.rst", "_as_gen/gravity.NewtonianGravity.model.rst", "_as_gen/gravity.NewtonianGravity.potential.rst", "_as_gen/gravity.NewtonianGravity.reset.rst", "_as_gen/gravity.QUMONDGravity.rst", "_as_gen/gravity.QUMONDGravity.__init__.rst", "_as_gen/gravity.QUMONDGravity.attrs.rst", "_as_gen/gravity.QUMONDGravity.compute_mass.rst", "_as_gen/gravity.QUMONDGravity.compute_potential.rst", "_as_gen/gravity.QUMONDGravity.is_calculated.rst", "_as_gen/gravity.QUMONDGravity.model.rst", "_as_gen/gravity.QUMONDGravity.potential.rst", "_as_gen/gravity.QUMONDGravity.reset.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.basename.rst", "_as_gen/ics.ClusterICs.center.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.mag_file.rst", "_as_gen/ics.ClusterICs.num_halos.rst", "_as_gen/ics.ClusterICs.profiles.rst", "_as_gen/ics.ClusterICs.r_max.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.ClusterICs.tot_np.rst", "_as_gen/ics.ClusterICs.velocity.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.attrs.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.is_physical.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.pot.rst", "_as_gen/model.ClusterModel.rebuild_physical.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.virialization_method.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.attrs.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.is_physical.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.pot.rst", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.virialization_method.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.fields.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.particle_types.rst", "_as_gen/particles.ClusterParticles.passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.concat_clusters.rst", "_as_gen/particles.resample_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/utils.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.eprint.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.log_string.rst", "_as_gen/utils.moving_average.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.truncate_spline.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.df.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_as_gen/virial.VirialEquilibrium.model.rst", "_as_gen/virial.VirialEquilibrium.num_elements.rst", "_as_gen/virial.VirialEquilibrium.ptype.rst", "_as_gen/virial.VirialEquilibrium.sigma.rst", "_as_gen/virial.VirialEquilibrium.type.rst", "api.rst", "codes.rst", "collections.rst", "examples.rst", "fields.rst", "gravity.rst", "index.rst", "initial_conditions.rst", "models.rst", "notebooks/api_guides/1.ipynb", "notebooks/api_guides/2.ipynb", "notebooks/api_guides/3.ipynb", "notebooks/api_guides/4.ipynb", "notebooks/quick_notebooks/quickbook.ipynb", "notebooks/quick_notebooks/quickbook2.ipynb", "notebooks/quick_notebooks/quickbook3.ipynb", "notebooks/quick_notebooks/quickbook4.ipynb", "particles.rst", "radial_profiles.rst"], "titles": ["Quickstart Guide", "codes", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "collection", "collection.Ascasibar07", "collection.Ascasibar07.__init__", "collection.Ascasibar07.description", "collection.Ascasibar07.load", "collection.Ascasibar07.load_method", "collection.Ascasibar07.load_model", "collection.Ascasibar07.name", "collection.Ascasibar07.names", "collection.Ascasibar07.parameters", "collection.Ascasibar07.path", "collection.Ascasibar07.plot_summary", "collection.Ascasibar07.profiles", "collection.ClusterCollection", "collection.ClusterCollection.__init__", "collection.ClusterCollection.description", "collection.ClusterCollection.load_method", "collection.ClusterCollection.load_model", "collection.ClusterCollection.name", "collection.ClusterCollection.names", "collection.ClusterCollection.parameters", "collection.ClusterCollection.path", "collection.ClusterCollection.plot_summary", "collection.ClusterCollection.profiles", "collection.Sanderson10", "collection.Sanderson10.__init__", "collection.Sanderson10.description", "collection.Sanderson10.load", "collection.Sanderson10.load_method", "collection.Sanderson10.load_model", "collection.Sanderson10.name", "collection.Sanderson10.names", "collection.Sanderson10.parameters", "collection.Sanderson10.path", "collection.Sanderson10.plot_summary", "collection.Sanderson10.profiles", "collection.Vikhlinin06", "collection.Vikhlinin06.__init__", "collection.Vikhlinin06.description", "collection.Vikhlinin06.load", "collection.Vikhlinin06.load_method", "collection.Vikhlinin06.load_model", "collection.Vikhlinin06.name", "collection.Vikhlinin06.names", "collection.Vikhlinin06.parameters", "collection.Vikhlinin06.path", "collection.Vikhlinin06.plot_summary", "collection.Vikhlinin06.profiles", "collection.get_collections", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "gravity", "gravity.AQUALGravity", "gravity.AQUALGravity.__init__", "gravity.AQUALGravity.attrs", "gravity.AQUALGravity.compute_mass", "gravity.AQUALGravity.compute_potential", "gravity.AQUALGravity.is_calculated", "gravity.AQUALGravity.model", "gravity.AQUALGravity.potential", "gravity.AQUALGravity.reset", "gravity.EMONDGravity", "gravity.EMONDGravity.__init__", "gravity.EMONDGravity.attrs", "gravity.EMONDGravity.compute_mass", "gravity.EMONDGravity.compute_potential", "gravity.EMONDGravity.is_calculated", "gravity.EMONDGravity.model", "gravity.EMONDGravity.potential", "gravity.EMONDGravity.reset", "gravity.Gravity", "gravity.Gravity.__init__", "gravity.Gravity.attrs", "gravity.Gravity.is_calculated", "gravity.Gravity.model", "gravity.Gravity.reset", "gravity.NewtonianGravity", "gravity.NewtonianGravity.__init__", "gravity.NewtonianGravity.attrs", "gravity.NewtonianGravity.compute_mass", "gravity.NewtonianGravity.compute_potential", "gravity.NewtonianGravity.is_calculated", "gravity.NewtonianGravity.model", "gravity.NewtonianGravity.potential", "gravity.NewtonianGravity.reset", "gravity.QUMONDGravity", "gravity.QUMONDGravity.__init__", "gravity.QUMONDGravity.attrs", "gravity.QUMONDGravity.compute_mass", "gravity.QUMONDGravity.compute_potential", "gravity.QUMONDGravity.is_calculated", "gravity.QUMONDGravity.model", "gravity.QUMONDGravity.potential", "gravity.QUMONDGravity.reset", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.basename", "ics.ClusterICs.center", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.mag_file", "ics.ClusterICs.num_halos", "ics.ClusterICs.profiles", "ics.ClusterICs.r_max", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.ClusterICs.tot_np", "ics.ClusterICs.velocity", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.attrs", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.is_physical", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.plot", "model.ClusterModel.pot", "model.ClusterModel.rebuild_physical", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.virialization_method", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.attrs", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.is_physical", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.pot", "model.HydrostaticEquilibrium.rebuild_physical", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.virialization_method", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.fields", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.particle_types", "particles.ClusterParticles.passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.concat_clusters", "particles.resample_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "utils", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.eprint", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.log_string", "utils.moving_average", "utils.parse_prng", "utils.truncate_spline", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.df", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "virial.VirialEquilibrium.model", "virial.VirialEquilibrium.num_elements", "virial.VirialEquilibrium.ptype", "virial.VirialEquilibrium.sigma", "virial.VirialEquilibrium.type", "API", "Setting Up Idealized Cluster Problems in Various Codes", "Collections", "Examples", "Generating 3D Cluster Fields", "Gravity Theories", "cluster_generator", "Initial Conditions Generation", "Cluster Models", "Data Structures in cluster_generator", "Virialization", "Advanced Use Cases", "Feature Guide: Using Builtin Collections", "Quickstart Guide: The Basics", "Quickstart Guide: Your First Simulation", "Quickstart Guide: Getting The Most Out of Cluster Generator", "Getting Funky: MONDian Gravity", "Particles", "Radial Profiles"], "terms": {"galaxi": [0, 28, 40, 259, 272, 273, 274, 300, 301, 323, 337, 340, 341, 343, 344, 345, 347, 348, 353], "cluster": [0, 4, 5, 6, 7, 8, 9, 11, 16, 17, 19, 24, 27, 28, 30, 39, 40, 42, 51, 52, 54, 162, 164, 186, 222, 237, 239, 240, 244, 257, 259, 270, 271, 272, 273, 274, 300, 301, 305, 322, 323, 325, 337, 340, 341, 345, 347, 348, 352, 353], "ar": [0, 6, 9, 23, 25, 34, 46, 58, 65, 70, 75, 80, 85, 90, 95, 100, 101, 102, 122, 129, 131, 151, 162, 164, 176, 186, 197, 212, 222, 233, 237, 239, 240, 251, 259, 323, 325, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 351, 352, 353], "largest": 0, "gravitation": 0, "bound": 0, "object": [0, 4, 5, 6, 7, 8, 9, 59, 63, 68, 73, 78, 83, 88, 93, 98, 107, 108, 109, 111, 116, 117, 118, 120, 125, 129, 132, 133, 135, 140, 141, 142, 147, 163, 164, 166, 172, 177, 179, 180, 181, 189, 202, 208, 213, 215, 216, 217, 225, 241, 257, 259, 260, 264, 265, 267, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 323, 329, 330, 337, 339, 344, 345, 347, 348, 353], "univers": [0, 278, 323, 325, 340, 345], "current": [0, 151, 336, 343, 345, 347], "endpoint": 0, "process": [0, 129, 157, 237, 323, 336, 337, 344, 345, 347], "cosmolog": [0, 336], "structur": [0, 25, 259, 338, 339, 343, 348], "format": [0, 10, 25, 65, 70, 75, 80, 85, 90, 95, 100, 152, 256, 285, 286, 291, 337, 343, 348, 352], "made": [0, 101, 340, 344, 348, 353], "dark": [0, 6, 7, 179, 215, 239, 270, 329, 336, 343, 344], "matter": [0, 6, 7, 179, 215, 239, 270, 329, 336, 343, 344], "dm": [0, 147, 237, 343, 344, 347, 348, 352, 353], "hot": 0, "magnet": [0, 7, 60, 147, 153, 192, 193, 228, 229, 336, 344], "x": [0, 147, 162, 310, 312, 321, 323, 337, 340, 343, 344, 345, 347, 352, 353], "rai": [0, 337, 353], "emit": 0, "ga": [0, 7, 63, 68, 73, 78, 83, 88, 93, 98, 147, 157, 158, 175, 176, 177, 180, 186, 211, 212, 213, 216, 222, 237, 270, 271, 337, 339, 344, 347, 348, 353], "known": [0, 337, 343, 347], "intraclust": [0, 343], "medium": [0, 343], "icm": [0, 343, 347], "constitu": [0, 17, 22, 33, 45, 52, 57, 323], "For": [0, 269, 337, 344, 345, 347, 348, 352], "mani": [0, 340, 343, 345, 348], "applic": [0, 339, 345], "especi": 0, "those": [0, 198, 234, 338, 345, 347, 352], "focus": [0, 344, 348], "properti": [0, 19, 20, 23, 30, 31, 34, 42, 43, 46, 54, 55, 58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 118, 125, 133, 142, 171, 189, 195, 196, 198, 207, 225, 231, 232, 234, 249, 326, 327, 328, 333, 344, 345, 347, 352, 353], "can": [0, 147, 163, 164, 170, 190, 192, 193, 198, 206, 226, 228, 229, 234, 240, 256, 292, 323, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 352, 353], "approxim": [0, 323, 340, 344], "roughli": 0, "spheric": [0, 132, 323, 339, 340, 345, 352, 353], "symmetr": [0, 340, 345, 352], "thi": [0, 6, 7, 9, 14, 18, 23, 26, 29, 34, 37, 41, 46, 49, 53, 58, 63, 68, 73, 78, 83, 88, 93, 98, 108, 111, 117, 120, 122, 128, 129, 131, 132, 135, 141, 144, 147, 151, 158, 164, 174, 179, 180, 181, 188, 190, 198, 210, 215, 216, 217, 224, 226, 234, 237, 239, 240, 250, 262, 266, 269, 294, 300, 303, 314, 315, 316, 317, 321, 323, 325, 327, 329, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353], "i": [0, 6, 7, 9, 14, 18, 25, 26, 29, 37, 41, 49, 53, 101, 108, 111, 117, 120, 122, 128, 129, 131, 132, 135, 141, 144, 147, 151, 158, 162, 163, 164, 168, 179, 180, 181, 183, 190, 191, 193, 204, 215, 216, 217, 219, 226, 227, 229, 237, 239, 252, 260, 262, 265, 267, 269, 270, 283, 284, 291, 292, 304, 314, 315, 316, 317, 323, 325, 327, 329, 336, 337, 339, 340, 341, 343, 345, 348, 349, 350, 351, 353], "often": [0, 345, 347, 353], "done": [0, 164, 267, 336, 337, 339, 343, 344, 345, 347, 348, 349, 350, 351], "us": [0, 6, 7, 9, 16, 17, 27, 28, 39, 40, 51, 52, 63, 68, 73, 78, 83, 88, 93, 98, 107, 116, 131, 140, 151, 157, 158, 164, 175, 176, 177, 186, 188, 190, 197, 198, 211, 212, 213, 222, 224, 226, 233, 234, 237, 239, 240, 252, 256, 259, 266, 267, 268, 285, 286, 291, 292, 323, 325, 334, 336, 337, 338, 339, 340, 341, 342, 345, 348, 352, 353], "standard": [0, 259, 340, 344, 345, 348, 353], "radial": [0, 176, 186, 192, 193, 212, 222, 228, 229, 248, 260, 266, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 315, 316, 317, 325, 341, 342, 347, 348, 352], "profil": [0, 7, 20, 22, 28, 31, 33, 40, 43, 45, 55, 57, 147, 148, 157, 158, 173, 175, 176, 177, 186, 190, 192, 193, 209, 211, 212, 213, 222, 226, 228, 229, 260, 261, 262, 265, 266, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 314, 315, 316, 317, 323, 325, 337, 341, 342, 345, 347, 348, 352], "variou": [0, 147, 337, 341, 343, 344, 347, 352, 353], "physic": [0, 183, 190, 219, 226, 337, 344, 347, 348, 353], "well": [0, 190, 226, 337, 344, 347, 348, 353], "assum": [0, 101, 192, 193, 228, 229, 239, 240, 323, 339, 340, 343, 345, 347, 348, 352], "hydrostat": [0, 157, 168, 176, 180, 204, 212, 216, 344, 348, 352, 353], "virial": [0, 163, 179, 181, 196, 215, 217, 232, 274, 337, 338, 343, 344, 347, 348, 353], "equilibrium": [0, 168, 176, 179, 180, 181, 197, 199, 204, 212, 215, 216, 217, 233, 235, 323, 329, 334, 344, 348, 353], "These": [0, 108, 117, 122, 129, 132, 141, 163, 164, 177, 213, 237, 257, 325, 337, 338, 343, 344, 352, 353], "model": [0, 11, 17, 28, 40, 52, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 132, 133, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 158, 244, 257, 275, 282, 297, 300, 323, 324, 331, 337, 339, 340, 341, 344, 345, 347, 348, 352, 353], "semi": 0, "analyt": [0, 323, 343, 345, 352], "studi": [0, 343, 344, 347], "ideal": [0, 323, 343, 345, 352], "n": [0, 270, 272, 280, 281, 283, 284, 294, 295, 296, 313, 319, 336, 339, 341, 344, 345, 347, 353], "bodi": [0, 336, 341, 345], "magneto": [0, 339], "hydrodynam": [0, 336, 339, 341], "simul": [0, 147, 237, 256, 323, 339, 342, 343, 344, 345, 347, 348], "whether": [0, 197, 199, 233, 235, 256], "singl": [0, 158, 240, 245, 336, 337, 339, 342, 343, 347, 352], "merger": [0, 336, 339, 342, 348], "between": [0, 162, 268, 303, 305, 325, 337, 340, 343, 344, 352], "two": [0, 158, 162, 336, 337, 340, 343, 344, 348, 352], "more": [0, 147, 158, 175, 176, 186, 211, 212, 222, 240, 321, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 352, 353], "purpos": [0, 129, 337, 344, 345], "cluster_gener": [0, 1, 10, 103, 122, 163, 168, 197, 198, 199, 204, 233, 234, 235, 260, 309, 323, 336, 337, 338, 339, 340, 342, 343, 347, 348, 352, 353], "which": [0, 7, 10, 17, 28, 40, 52, 63, 68, 73, 78, 83, 88, 93, 98, 101, 102, 108, 117, 129, 132, 141, 144, 147, 151, 157, 162, 164, 174, 175, 177, 179, 180, 181, 183, 188, 191, 193, 210, 211, 213, 215, 216, 217, 219, 224, 227, 229, 237, 239, 240, 256, 259, 262, 265, 291, 292, 314, 315, 316, 317, 321, 323, 325, 329, 336, 337, 339, 340, 343, 344, 345, 347, 348, 352, 353], "gener": [0, 4, 5, 6, 7, 8, 9, 22, 28, 33, 40, 45, 57, 158, 163, 164, 168, 174, 179, 180, 181, 186, 188, 190, 197, 198, 199, 204, 210, 215, 216, 217, 222, 224, 226, 233, 234, 235, 237, 244, 265, 266, 314, 322, 329, 337, 338, 340, 341, 345, 347, 348], "input": [0, 282, 293, 297, 325, 336, 337, 339, 352], "produc": [0, 168, 204, 343, 347, 348], "distribut": [0, 6, 132, 237, 240, 270, 271, 314, 323, 325, 336, 342, 343, 352, 353], "star": [0, 6, 7, 147, 181, 217, 237, 329, 336, 343, 344], "particl": [0, 6, 7, 9, 10, 63, 68, 73, 78, 83, 88, 93, 98, 147, 157, 158, 160, 163, 179, 180, 181, 215, 216, 217, 314, 323, 325, 329, 332, 336, 342, 343, 345, 347, 348], "There": [0, 164, 337, 340, 343, 344, 348, 353], "also": [0, 7, 65, 70, 75, 80, 85, 90, 95, 100, 323, 336, 340, 341, 343, 344, 345, 347, 348, 352], "abil": 0, "creat": [0, 6, 7, 9, 63, 68, 73, 78, 83, 88, 93, 98, 151, 253, 268, 336, 342, 343, 348, 352, 353], "veloc": [0, 147, 148, 151, 157, 158, 179, 181, 215, 217, 239, 240, 257, 258, 323, 329, 342, 343, 344, 345, 347, 348], "field": [0, 7, 17, 23, 34, 46, 52, 58, 107, 108, 109, 111, 112, 116, 117, 118, 120, 121, 125, 127, 131, 132, 133, 135, 136, 140, 141, 142, 144, 145, 147, 153, 157, 163, 164, 165, 170, 173, 174, 187, 188, 190, 191, 192, 193, 198, 200, 201, 206, 209, 210, 223, 224, 226, 227, 228, 229, 234, 237, 238, 243, 252, 256, 331, 336, 337, 340, 344, 345, 348], "three": [0, 151, 158, 336, 339, 352], "dimens": [0, 62, 67, 72, 77, 82, 87, 92, 97, 151], "base": [0, 24, 60, 122, 147, 163, 179, 180, 181, 215, 216, 217, 257, 329, 336, 341, 343, 344, 348, 352], "": [0, 108, 109, 112, 117, 118, 121, 125, 127, 132, 133, 136, 141, 142, 145, 163, 197, 233, 237, 240, 274, 289, 290, 305, 323, 325, 331, 336, 337, 339, 340, 343, 344, 347, 348, 353], "final": [0, 101, 129, 314, 343, 344, 352, 353], "set": [0, 6, 7, 9, 59, 63, 68, 73, 78, 83, 88, 93, 98, 158, 179, 180, 181, 191, 192, 193, 215, 216, 217, 227, 228, 229, 239, 248, 250, 252, 253, 329, 337, 339, 340, 342, 344, 347, 348, 352, 353], "up": [0, 6, 147, 158, 337, 342, 344, 349, 350, 351, 352, 353], "initi": [0, 7, 13, 25, 36, 48, 60, 129, 147, 149, 152, 157, 158, 159, 164, 174, 178, 190, 210, 214, 226, 236, 256, 263, 323, 336, 337, 338, 340, 341, 343, 344, 345, 347, 348, 352], "condit": [0, 7, 147, 149, 152, 157, 158, 159, 164, 236, 256, 323, 336, 338, 339, 340, 341, 343, 344, 345, 347, 348, 352], "number": [0, 17, 22, 28, 33, 40, 45, 52, 57, 62, 67, 72, 77, 82, 87, 92, 97, 147, 151, 154, 160, 164, 174, 175, 176, 177, 179, 180, 181, 186, 187, 210, 211, 212, 213, 215, 216, 217, 222, 223, 237, 249, 252, 268, 304, 314, 329, 331, 336, 338, 344, 347, 348, 352], "code": [0, 158, 163, 339, 341, 344, 345, 347, 348, 352], "astrophys": [0, 353], "commmun": 0, "The": [0, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 108, 110, 116, 117, 119, 122, 126, 129, 132, 134, 140, 141, 143, 144, 147, 149, 151, 153, 156, 157, 159, 161, 162, 164, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 239, 241, 242, 244, 245, 248, 249, 250, 252, 253, 254, 256, 257, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 314, 315, 316, 317, 321, 323, 325, 327, 329, 330, 331, 334, 336, 337, 339, 340, 341, 342, 343, 344, 347, 353], "obtain": [0, 14, 16, 18, 26, 27, 29, 37, 39, 41, 49, 51, 53, 323, 340, 343, 345, 347], "python": [0, 337], "version": [0, 190, 226, 267, 353], "3": [0, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 102, 147, 151, 168, 193, 204, 229, 240, 257, 272, 275, 289, 290, 298, 299, 300, 323, 325, 337, 340, 343, 344, 345, 347, 348, 352, 353], "8": [0, 192, 193, 228, 229, 323, 340, 344, 345, 347, 348, 352, 353], "instal": [0, 348], "instruct": 0, "provid": [0, 107, 108, 116, 117, 131, 132, 140, 141, 237, 259, 268, 303, 323, 337, 340, 341, 343, 344, 345, 347, 348, 352, 353], "below": [0, 336, 340, 343, 344], "To": [0, 168, 190, 204, 226, 323, 337, 340, 341, 343, 344, 345, 347, 348, 352, 353], "librari": [0, 1, 267, 337, 340, 341, 344, 345, 347, 348], "directli": [0, 108, 111, 117, 120, 122, 132, 135, 141, 337, 343, 344, 347, 348], "option": [0, 6, 7, 9, 10, 17, 22, 28, 33, 40, 45, 52, 57, 59, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 102, 129, 151, 159, 162, 164, 176, 178, 179, 180, 181, 186, 192, 193, 197, 199, 212, 214, 215, 216, 217, 222, 228, 229, 233, 235, 237, 239, 240, 245, 248, 252, 253, 254, 256, 264, 268, 270, 285, 286, 291, 305, 314, 323, 329, 336, 339, 341, 343, 344, 347, 348, 352], "If": [0, 6, 7, 9, 101, 111, 120, 129, 135, 144, 158, 159, 178, 179, 180, 181, 198, 214, 215, 216, 217, 234, 239, 240, 245, 248, 252, 253, 260, 285, 286, 291, 300, 323, 325, 329, 337, 338, 339, 341, 343, 344, 345, 349, 350, 351, 352, 353], "you": [0, 108, 111, 117, 120, 129, 132, 135, 141, 179, 180, 181, 198, 215, 216, 217, 234, 329, 336, 337, 338, 341, 344, 345, 347, 348, 349, 350, 351, 352, 353], "have": [0, 6, 7, 9, 63, 68, 73, 78, 83, 88, 93, 98, 108, 111, 117, 120, 129, 132, 135, 141, 158, 163, 179, 180, 181, 215, 216, 217, 269, 329, 336, 337, 339, 340, 341, 343, 344, 345, 347, 348, 352, 353], "github": 0, "url": 0, "follow": [0, 325, 336, 337, 341, 343, 344, 345, 347, 348], "your": [0, 129, 337, 339, 341, 343, 344, 345, 347, 348], "prefer": [0, 269], "environ": 0, "venv": 0, "local": [0, 323, 344], "etc": [0, 190, 226, 245, 337, 343, 344, 348, 352], "call": [0, 108, 117, 122, 132, 141, 190, 226, 337, 340, 343, 344, 345, 348], "git": 0, "http": [0, 305], "www": 0, "com": [0, 344], "eliza": 0, "diggin": 0, "repositori": 0, "without": [0, 129, 186, 222, 347], "clone": 0, "re": [0, 6, 7, 9, 190, 226, 325, 337, 341, 344, 345, 348], "interest": [0, 344, 345, 347, 348, 353], "instead": [0, 122, 164, 168, 204, 262, 315, 316, 317, 340, 343, 344, 345, 353], "do": [0, 129, 163, 190, 226, 336, 337, 339, 340, 341, 343, 344, 345, 348, 352], "first": [0, 162, 314, 336, 340, 343, 344, 345, 347, 348, 352, 353], "make": [0, 157, 190, 191, 226, 227, 248, 252, 268, 337, 344, 345, 347, 348], "sure": [0, 191, 227, 252, 344, 348], "navig": 0, "directori": [0, 344], "where": [0, 147, 162, 198, 234, 283, 284, 325, 337, 340, 343, 344, 345, 352, 353], "want": [0, 198, 234, 337, 338, 339, 341, 343, 344, 347, 348, 352, 353], "appear": [0, 347, 348], "onc": [0, 343, 344, 347, 348, 352], "ha": [0, 109, 118, 125, 133, 142, 144, 157, 191, 227, 252, 259, 260, 291, 292, 336, 337, 339, 340, 343, 344, 345, 347, 348, 352, 353], "been": [0, 6, 7, 9, 157, 340, 343, 344], "chang": [0, 63, 68, 73, 78, 83, 88, 93, 98, 344, 347], "so": [0, 162, 164, 190, 197, 226, 233, 257, 260, 292, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 352], "insid": [0, 262], "same": [0, 10, 15, 38, 50, 65, 70, 75, 80, 85, 90, 95, 100, 159, 179, 180, 181, 197, 198, 199, 215, 216, 217, 233, 234, 235, 237, 252, 254, 257, 260, 329, 340, 343, 347, 352], "setup": [0, 6, 7, 336, 344, 348], "py": [0, 309, 343, 344, 345, 347], "script": [0, 345], "Then": [0, 323, 325, 339, 340, 345], "run": [0, 315, 316, 317, 342, 344, 348], "command": 0, "site": [0, 345], "place": [0, 151, 337, 341, 344, 352], "e": [0, 237, 260, 262, 280, 281, 286, 294, 295, 296, 298, 299, 304, 323, 325, 339, 344, 345, 348, 352, 353], "develop": [0, 338, 341], "mode": [0, 336], "edit": 0, "import": [0, 168, 197, 198, 199, 204, 233, 234, 235, 343, 344, 345, 347, 348, 352, 353], "test": [0, 168, 179, 180, 181, 197, 198, 199, 204, 215, 216, 217, 233, 234, 235, 329, 348], "ve": [0, 337, 344, 345, 347, 348], "project": [0, 344, 345, 348], "simpli": [0, 101, 131, 337, 343, 344, 345, 348, 352], "show": [0, 338, 344, 345, 347, 348], "compat": 0, "requir": [0, 131, 179, 180, 181, 215, 216, 217, 269, 325, 329, 336, 339, 340, 343, 344, 345, 348, 352], "unyt": [0, 352], "quantiti": [0, 101, 151, 168, 190, 204, 226, 325, 344, 348, 352, 353], "manipul": [0, 323, 345], "numpi": [0, 168, 204, 240, 314, 325, 328, 344, 347, 352], "numer": [0, 325, 340, 343, 352], "oper": 0, "scipi": [0, 266], "interpol": [0, 63, 68, 73, 78, 83, 88, 93, 98, 266, 339, 340], "curv": 0, "fit": [0, 23, 34, 46, 58, 323, 337, 341, 347], "h5py": 0, "h5": [0, 147, 197, 198, 199, 233, 234, 235, 339, 344, 345, 347, 348, 352], "file": [0, 6, 7, 9, 10, 14, 16, 18, 21, 25, 26, 27, 29, 32, 37, 39, 41, 44, 49, 51, 53, 56, 65, 70, 75, 80, 85, 90, 95, 100, 147, 153, 155, 157, 159, 178, 197, 198, 199, 214, 233, 234, 235, 244, 245, 254, 256, 267, 269, 336, 337, 344, 345, 347, 348, 352], "interact": [0, 337, 343, 344, 345, 347, 348], "tqdm": 0, "progress": [0, 323], "bar": [0, 323], "ruamel": 0, "yaml": [0, 21, 25, 32, 44, 56, 152, 337, 344], "support": [0, 336, 341], "dill": 0, "serial": [0, 267, 269, 344], "halo": [0, 147, 154, 278, 285, 286, 291, 323, 336, 337, 343, 344, 347, 348, 352, 353], "spinner": [0, 108, 117, 132, 141, 348], "panda": 0, "dataset": [0, 12, 14, 17, 18, 19, 20, 23, 26, 28, 29, 30, 31, 34, 35, 37, 40, 41, 42, 43, 46, 47, 49, 52, 53, 54, 55, 58, 151, 253, 341, 344, 347, 348], "automat": [0, 343, 344, 345], "detail": [0, 175, 176, 186, 211, 212, 222, 341, 344, 347, 348, 352], "though": [0, 344], "mai": [0, 131, 163, 292, 315, 316, 317, 323, 325, 339, 340, 343, 344, 345, 347, 348, 352, 353], "yt": [0, 151, 253, 285, 286, 291, 344, 345, 347, 348], "creation": [0, 352], "memori": [0, 151, 253], "analysi": 0, "begin": [0, 337, 343, 345], "section": [0, 283, 284, 336, 343, 344, 348], "look": [0, 325, 337, 341, 344, 345, 347, 348], "note": [0, 7, 131, 132, 164, 168, 178, 190, 204, 214, 226, 237, 262, 265, 266, 267, 314, 315, 316, 317, 323, 325, 343, 344, 345, 347, 348], "convent": [0, 348], "here": [0, 190, 226, 283, 284, 327, 337, 340, 343, 344, 348], "familiar": [0, 338], "we": [0, 151, 168, 190, 204, 226, 314, 323, 325, 337, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 352], "recommend": [0, 336, 352], "page": [0, 340, 341, 343, 344, 348], "read": [0, 7, 10, 152, 178, 214, 244, 245, 337, 344, 352], "through": [0, 17, 22, 28, 33, 40, 45, 52, 57, 129, 164, 177, 213, 259, 336, 344, 345, 347], "our": [0, 341, 344, 345, 347, 348, 349, 350, 351, 352], "feet": 0, "wet": 0, "length": [0, 65, 70, 75, 80, 85, 90, 95, 100, 237, 257, 270, 271, 343], "10": [0, 344, 347, 348, 352], "minut": 0, "basic": [0, 309, 337, 341, 344, 345], "understand": [0, 344, 345], "its": [0, 174, 178, 210, 214, 262, 314, 337, 339, 344, 345, 347, 348, 353], "capabl": [0, 336], "suitabl": 0, "time": [0, 179, 180, 181, 215, 216, 217, 278, 323, 329, 339, 340, 343, 345], "user": [0, 147, 198, 234, 237, 336, 337, 338, 340, 341, 344, 347, 348, 352], "20": [0, 325, 337, 344, 345], "know": [0, 345, 347, 348], "actual": [0, 25, 337, 344, 345, 347, 348], "scienc": [0, 337], "refer": [0, 275, 282, 287, 297, 325, 341, 343, 347], "entir": [0, 323, 343, 344, 345, 347], "rams": [0, 1, 9, 10, 341, 348], "an": [0, 10, 25, 65, 70, 75, 80, 85, 90, 95, 100, 101, 102, 108, 117, 132, 141, 147, 151, 168, 183, 191, 197, 199, 204, 219, 227, 233, 235, 237, 244, 252, 253, 254, 256, 257, 266, 268, 278, 285, 286, 289, 290, 291, 294, 304, 314, 323, 325, 336, 337, 339, 340, 343, 344, 345, 347, 348, 352, 353], "exampl": [0, 168, 174, 197, 198, 199, 204, 210, 233, 234, 235, 337, 341, 343, 344, 345, 347, 348, 352, 353], "40": [0, 337, 344, 347], "most": [0, 337, 339, 340, 343, 344, 345, 347, 348], "out": [0, 179, 180, 181, 215, 216, 217, 325, 329, 336, 344, 345, 347, 352], "cgp": 0, "feel": [0, 349, 350, 351], "like": [0, 62, 67, 72, 77, 82, 87, 92, 97, 157, 162, 237, 239, 240, 248, 266, 314, 315, 316, 317, 336, 344, 345, 348], "rope": [0, 348], "give": [0, 337, 343, 344, 349, 350, 351], "some": [0, 157, 193, 229, 237, 293, 337, 339, 340, 341, 342, 344, 345, 347, 348, 353], "deeper": [0, 345], "insight": 0, "function": [0, 1, 11, 22, 23, 33, 34, 45, 46, 57, 58, 60, 131, 146, 151, 168, 204, 236, 237, 259, 260, 266, 303, 309, 314, 315, 316, 317, 321, 323, 325, 337, 339, 340, 343, 344, 347, 348, 352, 353], "teach": 0, "advanc": [0, 338, 347], "resourc": 0, "altern": [0, 341, 352], "method": [0, 12, 15, 16, 24, 27, 35, 38, 39, 47, 50, 51, 61, 66, 71, 76, 81, 86, 91, 96, 104, 108, 111, 113, 117, 120, 122, 128, 129, 132, 135, 137, 141, 147, 164, 174, 178, 196, 200, 210, 214, 232, 237, 259, 260, 323, 325, 337, 339, 340, 343, 344, 345, 347, 348, 352], "save": [0, 59, 267, 344, 347, 348], "access": [0, 170, 206, 341, 345], "collect": [0, 338, 341], "funki": 0, "mondian": [0, 341], "graviti": [0, 17, 28, 40, 52, 163, 164, 165, 168, 174, 175, 176, 177, 186, 197, 198, 199, 200, 201, 204, 210, 211, 212, 213, 222, 233, 234, 235, 323, 336, 337, 341, 345, 347, 348], "readi": [0, 337, 342, 344, 345, 348], "jump": 0, "down": [0, 164, 345], "rabbit": 0, "hole": [0, 239], "how": [0, 7, 338, 341, 343, 344, 345, 348, 352], "theori": [0, 17, 28, 40, 52, 103, 122, 164, 176, 186, 212, 222, 323, 341, 343, 344, 345], "built": [0, 264, 341, 343, 344, 347, 348], "alreadi": [0, 6, 7, 9, 109, 111, 118, 120, 125, 133, 135, 142, 144, 252, 338, 339, 343, 344, 345, 347, 352], "somewhat": [0, 338], "someth": [0, 343, 344, 345], "littl": [0, 344, 349, 350, 351], "depth": [0, 344], "concret": [0, 344], "core": [0, 259, 262, 270, 271, 272, 273, 275, 279, 280, 281, 282, 300, 340, 343, 344, 348, 353], "aspect": [0, 341], "best": [0, 272, 273, 339, 341, 344, 345, 347, 348], "see": [0, 175, 176, 186, 190, 211, 212, 222, 226, 325, 336, 337, 338, 340, 341, 343, 344, 345, 347, 348, 352, 353], "discuss": [0, 325, 343, 344, 345, 347], "help": [0, 337], "mathemat": [0, 344, 345], "background": [0, 336, 345], "overview": 0, "all": [0, 7, 22, 33, 45, 57, 59, 151, 160, 183, 190, 198, 219, 226, 234, 240, 241, 245, 248, 253, 257, 260, 337, 340, 341, 343, 344, 345, 347, 348, 352, 353], "need": [0, 6, 7, 292, 336, 337, 339, 340, 341, 343, 344, 345, 347, 348, 352, 353], "howev": [0, 163, 269, 323, 339, 340, 343, 345, 348], "other": [0, 60, 259, 336, 342, 344, 348], "check": [0, 163, 168, 183, 191, 204, 219, 227, 252, 325, 337, 344, 345, 347, 348], "equilibria": 0, "dimension": [0, 323, 339], "3d": [0, 60, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 151, 352], "one": [0, 28, 40, 122, 158, 179, 180, 181, 188, 215, 216, 217, 224, 240, 260, 262, 268, 285, 286, 291, 292, 323, 325, 329, 336, 337, 339, 340, 342, 343, 344, 345, 347, 348, 352, 353], "step": [0, 6, 7, 336, 344, 345], "individu": [0, 315, 316, 317, 344, 347], "handi": 0, "tool": [0, 322, 341, 345], "document": [0, 175, 176, 186, 211, 212, 222, 337, 343, 344, 348, 349, 350, 351], "popular": 0, "problem": [0, 330, 347, 352], "given": [0, 7, 147, 157, 162, 239, 240, 263, 278, 283, 284, 285, 286, 291, 294, 339, 340, 343, 344, 345, 352, 353], "throughout": [0, 340, 343], "text": [0, 190, 197, 226, 233, 325, 340, 341, 344, 348], "fulli": [0, 108, 117, 122, 132, 141, 163, 337, 344, 348], "work": [0, 151, 272, 273, 323, 339, 345, 347, 349, 350, 351], "finish": [0, 17, 28, 40, 52, 257, 344], "system": [0, 17, 28, 40, 52, 108, 117, 132, 141, 179, 180, 181, 190, 215, 216, 217, 226, 248, 257, 322, 323, 325, 329, 338, 340, 341, 344, 345, 348, 352, 353], "design": [0, 353], "appropri": [0, 191, 227, 252, 266], "scale": [0, 168, 204, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 321, 353], "rm": [0, 352, 353], "kpc": [0, 62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 151, 162, 176, 179, 180, 181, 186, 188, 212, 215, 216, 217, 222, 224, 239, 240, 248, 253, 256, 262, 265, 266, 268, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 325, 329, 337, 344, 347, 348, 352, 353], "myr": [0, 239, 240, 344, 348, 352], "mass": [0, 107, 116, 131, 132, 140, 151, 158, 176, 186, 212, 222, 239, 259, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 299, 304, 314, 315, 316, 317, 337, 340, 343, 344, 347, 348, 352], "m_": [0, 131, 314, 343, 347, 348, 352, 353], "odot": [0, 347, 348, 352, 353], "densiti": [0, 132, 151, 157, 158, 170, 175, 176, 177, 180, 186, 190, 193, 206, 211, 212, 213, 216, 222, 226, 229, 237, 259, 270, 271, 272, 275, 278, 279, 280, 283, 285, 286, 287, 289, 290, 291, 292, 293, 295, 298, 299, 300, 304, 316, 325, 337, 344, 345, 347, 348, 352], "pressur": [0, 151, 170, 192, 206, 228, 337, 343, 344, 347, 348], "specif": [0, 1, 237, 267, 338, 341, 343, 347, 348, 352], "energi": [0, 157, 158, 180, 216, 323, 325, 344, 345, 347, 352], "gravit": [0, 103, 108, 111, 117, 120, 132, 135, 141, 179, 180, 181, 190, 215, 216, 217, 226, 239, 329, 337, 340, 341, 343, 344, 345, 347, 348, 352], "potenti": [0, 6, 7, 65, 70, 75, 80, 85, 90, 95, 100, 108, 109, 117, 118, 125, 132, 133, 141, 142, 163, 172, 179, 180, 181, 189, 208, 215, 216, 217, 225, 239, 323, 325, 327, 329, 336, 337, 340, 343, 344, 345, 347, 348, 352], "straighforwardli": 0, "deriv": [0, 166, 202, 325, 339, 340, 343, 345, 348, 352, 353], "arrai": [0, 62, 67, 72, 77, 82, 87, 92, 97, 101, 144, 147, 162, 168, 183, 187, 191, 204, 219, 223, 227, 237, 239, 240, 248, 252, 266, 314, 315, 316, 317, 319, 325, 328, 344, 348, 352], "scalar": [0, 249, 251, 252, 340, 352], "unless": [0, 343, 348], "otherwis": [0, 109, 118, 125, 133, 142, 183, 192, 193, 219, 228, 229, 352], "specifi": [0, 28, 40, 102, 179, 180, 181, 198, 215, 216, 217, 234, 237, 263, 329, 343, 344, 347, 352], "docstr": 0, "what": [0, 340, 343, 344, 345, 348], "mean": [0, 151, 179, 180, 181, 215, 216, 217, 240, 270, 304, 329, 337, 343, 345, 348], "practic": [0, 343, 347], "suppli": [0, 179, 180, 181, 215, 216, 217, 285, 286, 291, 323, 329, 343, 344, 348, 352], "abov": [0, 323, 325, 337, 339, 343, 345, 347, 348, 352], "type": [0, 17, 22, 28, 33, 40, 45, 52, 57, 59, 63, 68, 73, 78, 83, 88, 93, 98, 101, 107, 108, 111, 112, 116, 117, 120, 121, 127, 131, 132, 135, 136, 140, 141, 144, 145, 147, 157, 168, 174, 175, 177, 179, 181, 186, 188, 190, 198, 204, 210, 211, 213, 215, 217, 222, 224, 226, 234, 237, 240, 241, 245, 248, 250, 252, 253, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 305, 314, 315, 316, 317, 323, 324, 325, 329, 332, 336, 339, 340, 341, 343, 344, 345, 348], "g": [0, 131, 132, 274, 286, 323, 339, 340, 343, 344, 345], "posit": [0, 158, 162, 179, 180, 181, 215, 216, 217, 239, 240, 314, 329, 339, 340, 344, 345, 347, 348], "attach": [0, 106, 110, 115, 119, 122, 124, 126, 129, 130, 134, 139, 143, 144, 259, 344, 347], "convert": [0, 101, 190, 197, 199, 226, 233, 235, 252, 304, 343, 344, 348], "intern": [0, 344], "befor": [0, 197, 199, 233, 235, 336, 345, 348], "perform": [0, 248, 336, 342, 352], "ani": [0, 131, 174, 190, 198, 210, 226, 234, 251, 262, 325, 336, 338, 343, 344, 345, 347, 348, 352, 353], "calcul": [0, 109, 118, 125, 133, 142, 162, 294, 325, 337, 344, 352], "return": [0, 17, 22, 28, 33, 40, 45, 52, 57, 59, 101, 102, 107, 108, 109, 111, 112, 116, 117, 118, 120, 121, 125, 127, 131, 132, 133, 135, 136, 140, 141, 142, 144, 145, 168, 174, 175, 177, 179, 181, 183, 186, 188, 190, 198, 204, 210, 211, 213, 215, 217, 219, 222, 224, 226, 234, 241, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 305, 314, 315, 316, 317, 321, 325, 329, 343, 344, 345, 347, 352], "output": [0, 157, 198, 234], "usual": [0, 193, 229, 344], "sometim": 0, "cm": [0, 274], "temperatur": [0, 151, 170, 177, 190, 206, 213, 226, 259, 270, 271, 272, 273, 292, 301, 337, 344, 347, 348], "kev": [0, 177, 213, 270, 271, 273, 274, 301, 337, 347, 348], "entropi": [0, 175, 190, 211, 226, 259, 274, 292, 341, 344, 348], "2": [0, 102, 131, 132, 162, 192, 193, 228, 229, 268, 274, 283, 284, 323, 325, 336, 337, 340, 343, 344, 345, 347, 348, 352, 353], "util": [1, 168, 197, 198, 199, 204, 233, 234, 235, 340, 344, 347, 348], "implement": [1, 11, 103, 104, 113, 122, 128, 131, 137, 262, 339, 341, 343, 344, 345, 347], "statu": [1, 183, 219], "inform": [1, 152, 159, 341, 343, 344, 345, 352, 353], "full": [1, 108, 117, 132, 141, 339, 344], "ic": [2, 3, 4, 5, 6, 7, 8, 9, 344, 347, 348, 352], "boxsiz": [2, 237], "nx": 2, "ic_fil": 2, "overwrit": [2, 10, 65, 70, 75, 80, 85, 90, 95, 100, 159, 197, 198, 199, 233, 234, 235, 254, 255, 256, 344, 347, 348, 352], "fals": [2, 6, 7, 9, 10, 61, 62, 65, 66, 67, 70, 75, 80, 81, 82, 85, 90, 95, 96, 97, 100, 108, 109, 111, 117, 118, 120, 125, 132, 133, 135, 141, 142, 144, 158, 159, 179, 180, 181, 197, 198, 199, 215, 216, 217, 233, 234, 235, 239, 252, 254, 255, 256, 325, 329, 337, 344, 348], "regenerate_particl": [2, 6, 7, 9, 158], "prng": [2, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 158, 179, 180, 181, 182, 215, 216, 217, 218, 314, 320, 329], "none": [2, 17, 22, 33, 45, 52, 57, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 107, 108, 111, 112, 116, 117, 120, 121, 127, 131, 132, 135, 136, 140, 141, 145, 147, 148, 151, 157, 158, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 190, 198, 199, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 226, 234, 235, 239, 240, 241, 244, 245, 246, 248, 252, 253, 258, 260, 261, 268, 269, 285, 286, 291, 300, 313, 314, 315, 323, 324, 329, 343, 344, 345, 347], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 24, 25, 28, 33, 35, 36, 38, 47, 48, 50, 52, 59, 61, 62, 63, 65, 66, 67, 71, 72, 76, 81, 82, 86, 87, 91, 96, 97, 101, 102, 104, 105, 107, 108, 111, 113, 114, 116, 117, 120, 122, 123, 127, 128, 129, 131, 132, 135, 137, 138, 140, 141, 144, 147, 148, 151, 152, 157, 158, 159, 162, 164, 165, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 329, 340, 341, 352], "paramet": [4, 5, 6, 7, 8, 9, 10, 17, 25, 28, 40, 52, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 108, 111, 116, 117, 120, 122, 129, 131, 132, 135, 140, 141, 144, 147, 151, 157, 159, 162, 164, 174, 175, 176, 177, 178, 179, 180, 181, 186, 188, 192, 193, 197, 198, 199, 210, 211, 212, 213, 214, 215, 216, 217, 222, 224, 228, 229, 233, 234, 235, 237, 239, 240, 241, 244, 245, 248, 252, 253, 254, 256, 257, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 314, 321, 323, 325, 329, 337, 343, 344, 345, 347, 348, 352, 353], "athena": [4, 339, 341], "from": [4, 5, 6, 7, 8, 9, 12, 14, 16, 18, 20, 26, 27, 29, 31, 35, 37, 39, 41, 43, 47, 49, 51, 53, 55, 101, 107, 108, 116, 117, 122, 132, 140, 141, 151, 152, 157, 158, 162, 163, 166, 168, 174, 175, 177, 178, 188, 192, 197, 198, 199, 202, 204, 210, 211, 213, 214, 224, 228, 233, 234, 235, 237, 241, 244, 245, 248, 257, 263, 267, 270, 271, 285, 286, 291, 294, 300, 301, 305, 314, 323, 325, 336, 337, 340, 341, 344, 345, 347, 348, 353], "enzo": [5, 341], "use_particl": 6, "true": [6, 7, 9, 10, 108, 109, 111, 117, 118, 120, 125, 132, 133, 135, 141, 142, 144, 159, 179, 180, 181, 183, 192, 193, 197, 198, 199, 215, 216, 217, 219, 228, 229, 233, 234, 235, 239, 252, 313, 325, 329, 337, 343, 344, 347, 348, 352], "flash": [6, 10, 339, 341], "par": 6, "line": [6, 7, 345], "galaxyclustermerg": [6, 336], "yet": [6, 7, 343, 344, 349, 350, 351], "thei": [6, 7, 63, 68, 73, 78, 83, 88, 93, 98, 240, 257, 337, 343, 344, 345, 347, 348, 352], "gamer": [6, 7, 10, 339, 341], "boolean": [6, 7, 9, 10, 65, 70, 75, 80, 85, 90, 95, 100, 159, 179, 180, 181, 192, 193, 197, 199, 215, 216, 217, 228, 229, 233, 235, 239, 252, 254, 256, 329, 352], "default": [6, 7, 9, 10, 17, 52, 59, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 101, 128, 151, 159, 162, 170, 179, 180, 181, 188, 192, 193, 197, 199, 206, 215, 216, 217, 224, 228, 229, 233, 235, 239, 240, 248, 252, 254, 256, 268, 270, 285, 286, 291, 300, 305, 323, 329, 337, 339, 344, 347, 348, 352], "being": [6, 9, 107, 116, 140, 164, 337, 340, 343, 344, 347, 348, 352], "flag": [6, 7, 9], "use_trac": 7, "input_testprob": 7, "clustermerg": [7, 336], "new": [7, 63, 68, 73, 78, 83, 88, 93, 98, 144, 190, 226, 240, 260, 321, 339, 341, 343, 344], "cg": [7, 197, 198, 199, 233, 234, 235, 344, 345, 347, 348, 352, 353], "unit": [7, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 101, 177, 192, 193, 197, 199, 213, 228, 229, 233, 235, 239, 240, 248, 252, 256, 266, 305, 311, 312, 337, 339, 348, 352, 353], "present": [7, 344, 347], "about": [7, 102, 321, 343, 344, 348], "should": [7, 108, 117, 122, 129, 132, 141, 147, 174, 198, 210, 234, 237, 240, 257, 265, 267, 269, 291, 337, 343, 344, 345, 347, 348, 352], "name": [7, 10, 17, 23, 28, 34, 40, 46, 52, 58, 65, 70, 75, 80, 85, 90, 95, 100, 147, 149, 157, 159, 178, 191, 197, 198, 199, 214, 227, 233, 234, 235, 237, 244, 245, 252, 254, 256, 260, 261, 263, 337, 343, 344, 347, 352], "interpret": 7, "tracer": 7, "add": [7, 62, 63, 67, 68, 72, 73, 77, 78, 82, 83, 87, 88, 92, 93, 97, 98, 239, 240, 252, 259, 262, 336, 343, 344], "gizmo": [8, 245, 341, 352], "func": 8, "output_filenam": [10, 197, 198, 199, 233, 234, 235, 254, 255], "ptype": [10, 63, 68, 73, 78, 83, 88, 93, 98, 237, 240, 241, 244, 245, 246, 248, 252, 253, 323, 324, 339, 344, 345, 352], "ptype_num": 10, "in_cg": [10, 197, 198, 199, 233, 234, 235], "hdf5": [10, 65, 70, 75, 80, 85, 90, 95, 100, 157, 178, 199, 214, 235, 244, 254, 256, 336, 343, 352], "write": [10, 65, 70, 75, 80, 85, 90, 95, 100, 159, 197, 198, 199, 233, 234, 235, 254, 256, 325, 344, 349, 350, 351, 352], "clusterparticl": [10, 63, 68, 73, 78, 83, 88, 93, 98, 179, 181, 215, 217, 257, 329, 339], "instanc": [10, 12, 13, 23, 25, 28, 34, 35, 36, 40, 46, 47, 48, 58, 106, 108, 110, 112, 115, 117, 119, 121, 122, 124, 126, 127, 129, 130, 132, 134, 135, 136, 139, 141, 143, 144, 145, 178, 183, 190, 214, 219, 226, 257, 260, 267, 268, 269, 337, 343, 344, 345, 347, 348, 352], "written": [10, 65, 70, 75, 80, 85, 90, 95, 100, 337, 339, 340, 343, 344, 349, 350, 351, 352], "string": [10, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 147, 157, 159, 178, 188, 197, 199, 214, 224, 233, 235, 240, 244, 245, 248, 252, 253, 254, 256, 323, 337], "exist": [10, 65, 70, 75, 80, 85, 90, 95, 100, 108, 111, 117, 120, 132, 135, 141, 197, 198, 199, 233, 234, 235, 252, 254, 256, 262, 339, 352], "class": [11, 12, 24, 35, 47, 60, 61, 66, 71, 76, 81, 86, 91, 96, 103, 104, 108, 111, 113, 117, 120, 122, 128, 129, 132, 135, 137, 141, 146, 147, 163, 164, 174, 200, 210, 236, 237, 259, 260, 322, 323, 337, 340, 342, 343, 344, 347, 348, 353], "except": [11, 353], "clustercollect": [12, 20, 35, 43, 47, 55, 59, 337], "repres": [12, 35, 47, 270, 271, 314, 336, 345, 348, 353], "ascasibar": [12, 270, 271, 272, 273, 337, 341], "diego": [12, 270, 271, 337], "2008mnra": [12, 270, 271, 337], "383": [12, 270, 271, 337], "369a": [12, 270, 271, 337], "attribut": [12, 24, 35, 47, 61, 66, 71, 76, 81, 86, 91, 96, 104, 106, 107, 108, 113, 115, 116, 117, 122, 124, 128, 130, 131, 132, 137, 139, 140, 141, 147, 164, 166, 174, 175, 176, 178, 186, 198, 200, 202, 210, 211, 212, 214, 222, 234, 237, 260, 323, 336, 337, 343, 344, 345, 347], "data": [14, 16, 18, 25, 26, 27, 29, 37, 39, 41, 49, 51, 53, 131, 147, 242, 245, 257, 337, 338, 343, 345, 347, 348], "static": [15, 38, 50, 129, 345], "__init__": [15, 38, 50, 344, 345], "load": [16, 17, 27, 28, 39, 40, 51, 52, 267, 337, 343, 344, 345, 347, 348], "model_nam": [17, 28, 40, 52], "r_min": [17, 28, 40, 52, 178, 188, 198, 199, 214, 224, 234, 235, 347], "r_max": [17, 28, 40, 52, 66, 67, 71, 72, 76, 77, 81, 82, 147, 148, 178, 179, 180, 181, 182, 188, 194, 198, 199, 214, 215, 216, 217, 218, 224, 230, 234, 235, 248, 314, 329, 344, 347, 352], "num_point": [17, 28, 40, 52, 175, 176, 177, 186, 211, 212, 213, 222, 268, 344], "1000": [17, 28, 40, 52, 176, 177, 186, 212, 213, 222, 268, 325, 344, 345, 347, 348, 352, 353], "newtonian": [17, 28, 40, 52, 128, 164, 165, 168, 175, 176, 177, 186, 197, 198, 199, 200, 201, 204, 211, 212, 213, 222, 233, 234, 235, 323, 337, 340, 341, 344, 345, 347, 348], "kwarg": [17, 22, 28, 33, 40, 45, 52, 57, 104, 105, 113, 114, 122, 123, 128, 129, 137, 138, 151, 164, 165, 166, 174, 175, 176, 177, 186, 188, 200, 201, 202, 210, 211, 212, 213, 222, 224, 266, 268, 313, 344, 345, 347], "str": [17, 25, 28, 40, 52, 101, 147, 164, 174, 175, 176, 177, 186, 198, 210, 211, 212, 213, 222, 234, 237, 267, 269, 323], "float": [17, 22, 28, 33, 40, 45, 52, 57, 102, 147, 151, 162, 175, 176, 177, 178, 179, 180, 181, 186, 188, 192, 193, 198, 211, 212, 213, 214, 215, 216, 217, 222, 224, 228, 229, 234, 237, 239, 248, 253, 256, 262, 265, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 314, 321, 325, 329], "minimum": [17, 22, 28, 33, 40, 45, 52, 57, 151, 175, 176, 177, 178, 186, 188, 198, 211, 212, 213, 214, 222, 224, 234, 239, 268, 301, 352], "radiu": [17, 22, 28, 33, 40, 45, 52, 57, 131, 132, 147, 156, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 188, 198, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 224, 234, 248, 262, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 314, 321, 325, 329, 344, 347, 348, 353], "rmin": [17, 22, 33, 45, 52, 57, 175, 176, 177, 186, 188, 211, 212, 213, 222, 224, 268, 343, 344], "maximum": [17, 22, 28, 33, 40, 45, 52, 57, 175, 176, 177, 179, 180, 181, 186, 188, 198, 211, 212, 213, 215, 216, 217, 222, 224, 234, 248, 268, 314, 329, 344, 348, 352], "r_det": [17, 52, 325, 347], "int": [17, 22, 28, 33, 40, 45, 52, 57, 102, 147, 151, 164, 175, 177, 211, 213, 237, 265, 270, 314, 323, 325, 345, 352], "point": [17, 22, 25, 28, 33, 40, 45, 52, 57, 175, 176, 177, 186, 211, 212, 213, 222, 268, 338, 340, 343, 344, 345, 347], "addit": [17, 22, 28, 33, 40, 45, 52, 57, 62, 67, 72, 77, 82, 87, 92, 97, 106, 107, 108, 115, 116, 117, 122, 124, 129, 130, 131, 132, 139, 140, 141, 147, 164, 166, 174, 175, 176, 177, 186, 202, 210, 211, 212, 213, 222, 259, 337, 340, 343, 344, 348, 352], "pass": [17, 22, 28, 33, 40, 45, 52, 57, 108, 111, 117, 120, 122, 129, 131, 132, 135, 141, 164, 174, 175, 176, 177, 186, 210, 211, 212, 213, 222, 260, 337, 344], "clustermodel": [17, 28, 40, 52, 109, 112, 118, 121, 122, 125, 127, 129, 133, 135, 136, 142, 145, 163, 210, 211, 212, 213, 214, 219, 222, 225, 226, 257, 323, 337, 345, 347, 348], "avail": [19, 30, 42, 54, 59, 179, 180, 181, 215, 216, 217, 242, 329, 336, 341, 343, 344, 345, 347, 348, 353], "dictionari": [20, 23, 31, 34, 43, 46, 55, 58, 160, 164, 177, 198, 213, 234, 337, 344, 347], "underli": [20, 21, 25, 31, 32, 43, 44, 55, 56, 257, 341, 343, 344, 345, 352], "each": [20, 31, 43, 55, 62, 67, 72, 77, 82, 87, 92, 97, 132, 147, 151, 179, 180, 181, 187, 215, 216, 217, 223, 237, 257, 259, 314, 315, 316, 317, 329, 337, 339, 341, 343, 344, 345, 347, 348, 352], "0": [22, 33, 45, 57, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 147, 148, 151, 162, 168, 190, 193, 204, 226, 229, 239, 248, 262, 270, 276, 285, 286, 291, 305, 323, 325, 327, 337, 339, 340, 343, 344, 345, 347, 348, 352, 353], "1": [22, 33, 45, 57, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 102, 132, 179, 180, 181, 182, 215, 216, 217, 218, 262, 265, 275, 287, 302, 323, 325, 329, 337, 340, 343, 344, 345, 347, 348, 352, 353], "rmax": [22, 33, 45, 57, 117, 175, 176, 177, 186, 188, 211, 212, 213, 222, 224, 268, 315, 343, 344, 347], "5000": [22, 33, 45, 57, 344, 345, 347, 352], "npoint": [22, 33, 45, 57], "plot": [22, 33, 45, 57, 344, 345, 347, 348, 352], "galleri": [22, 33, 45, 57, 338], "param": [22, 33, 45, 57, 101, 315, 316, 317, 337], "includ": [22, 33, 45, 57, 131, 147, 154, 164, 170, 174, 197, 206, 210, 233, 237, 251, 314, 336, 337, 339, 340, 341, 344, 347], "kei": [22, 23, 33, 34, 45, 46, 57, 58, 131, 147, 164, 174, 210, 237, 337, 344, 345], "word": [22, 33, 45, 57], "argument": [22, 33, 45, 57, 129, 239, 337, 339, 344, 345], "dict": [22, 33, 45, 57, 107, 108, 116, 117, 129, 131, 132, 140, 141, 147, 164, 174, 175, 176, 186, 210, 211, 212, 222, 237, 344], "radial_profil": [23, 34, 46, 58, 343, 344, 348, 353], "radialprofil": [23, 34, 46, 58, 176, 186, 212, 222, 259, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 343, 348, 353], "correspond": [23, 34, 46, 58, 265, 266, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 330, 337, 339, 340, 343, 345, 347, 352], "relev": [23, 34, 46, 58, 144, 340, 344], "path": [24, 25, 147, 197, 198, 199, 233, 234, 235, 337, 344], "represent": [24, 28, 40, 164, 344], "contain": [25, 147, 160, 163, 168, 174, 204, 210, 260, 262, 337, 338, 340, 341, 343, 344, 347, 348, 352, 353], "rais": 25, "yamlerror": 25, "occur": [25, 144, 183, 219, 340, 344, 347], "error": [25, 325, 347], "filenotfounderror": 25, "fail": [25, 323, 325, 344], "real": [25, 337, 347], "collectionserror": 25, "miss": [25, 337, 347, 348], "part": [25, 157, 339, 341, 344, 345, 347, 348, 352], "sampl": [28, 40, 164, 175, 177, 179, 180, 181, 211, 213, 215, 216, 217, 257, 314, 329, 331, 337, 343, 344, 345, 353], "A": [35, 47, 176, 179, 180, 181, 186, 212, 215, 216, 217, 222, 240, 268, 275, 277, 279, 280, 281, 283, 284, 287, 288, 292, 295, 296, 298, 299, 300, 301, 302, 305, 329, 337, 339, 340, 344, 348, 352, 353], "j": [35, 280, 281, 289, 290, 294, 295, 296, 325, 337, 340, 345, 353], "r": [35, 131, 132, 173, 209, 262, 265, 266, 275, 292, 314, 321, 323, 325, 327, 337, 339, 340, 343, 344, 345, 347, 348, 352, 353], "sanderson": [35, 337], "t": [35, 270, 271, 274, 337, 343, 344, 345, 348, 353], "ponman": [35, 337], "2010mnra": [35, 340], "402": 35, "65": 35, "vikhlinin10": 38, "vikhlinin": [47, 300, 301, 305, 337, 341, 347], "et": [47, 283, 284, 300, 301, 305, 337, 341, 347], "al": [47, 283, 284, 300, 301, 305, 337, 341, 344, 347], "2006apj": [47, 337, 347], "640": [47, 300, 301, 337, 347, 353], "691v": [47, 337, 347], "list": [59, 147, 155, 198, 234, 237, 240, 241, 245, 248, 253, 257, 337, 343, 344, 348], "task": [60, 259, 338, 341, 342, 345], "left_edg": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 151], "right_edg": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "ddim": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "pad": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "vector_potenti": [61, 62, 66, 67, 72, 77, 82, 87, 92, 97], "divergence_clean": [61, 62, 66, 67, 72, 77, 81, 82, 87, 92, 96, 97], "lower": [62, 67, 72, 77, 82, 87, 92, 97], "edg": [62, 67, 72, 77, 82, 87, 92, 97, 151, 340], "box": [62, 67, 72, 77, 82, 87, 92, 97, 151, 256, 340, 352], "upper": [62, 67, 72, 77, 82, 87, 92, 97], "grid": [62, 67, 72, 77, 82, 87, 92, 97, 151, 336, 339, 348], "ax": [62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 188, 224, 268, 344, 347, 348, 352], "amount": [62, 67, 72, 77, 82, 87, 92, 97, 352], "boundari": [62, 67, 72, 77, 82, 87, 92, 97], "cluster_particl": [63, 68, 73, 78, 83, 88, 93, 98], "map": [63, 68, 73, 78, 83, 88, 93, 98, 352], "tri": [63, 68, 73, 78, 83, 88, 93, 98, 347], "linear": [63, 68, 73, 78, 83, 88, 93, 98, 339, 340, 347, 348], "ad": [63, 68, 73, 78, 83, 88, 93, 98, 151, 158, 240, 252, 262, 341, 344, 348, 353], "almost": [63, 68, 73, 78, 83, 88, 93, 98, 108, 117, 132, 141, 347], "alwai": [63, 68, 73, 78, 83, 88, 93, 98, 108, 117, 132, 141, 344, 348, 349, 350, 351], "case": [63, 68, 73, 78, 83, 88, 93, 98, 108, 117, 132, 141, 157, 188, 198, 224, 234, 239, 303, 323, 327, 338, 340, 341, 343, 344, 345, 347, 348, 352], "impli": [63, 68, 73, 78, 83, 88, 93, 98, 340, 343], "remain": [63, 68, 73, 78, 83, 88, 93, 98, 323, 340], "galact": [63, 68, 73, 78, 83, 88, 93, 98, 325], "filenam": [65, 70, 75, 80, 85, 90, 95, 100, 152, 157, 159, 178, 198, 214, 234, 244, 245, 246, 267, 269], "length_unit": [65, 70, 75, 80, 85, 90, 95, 100], "field_unit": [65, 70, 75, 80, 85, 90, 95, 100], "coordin": [65, 70, 75, 80, 85, 90, 95, 100, 151, 240, 248, 323, 345], "cell": [65, 70, 75, 80, 85, 90, 95, 100, 151, 157, 336, 339, 345], "along": [65, 70, 75, 80, 85, 90, 95, 100, 162, 282, 297], "differ": [65, 70, 75, 80, 85, 90, 95, 100, 122, 325, 337, 338, 341, 343, 344, 348, 352], "affect": [65, 70, 75, 80, 85, 90, 95, 100], "l_min": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "l_max": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "alpha": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 168, 204, 262, 270, 271, 274, 276, 292, 300, 302, 337, 340, 343, 347, 353], "6666666666666665": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "g_rm": [66, 67], "ctr1": [66, 67, 71, 72, 76, 77, 81, 82], "ctr2": [66, 67, 71, 72, 76, 77, 81, 82], "ctr3": [66, 67, 71, 72, 76, 77, 81, 82], "r1": [66, 67], "r2": [66, 67], "r3": [66, 67], "g1": [66, 67], "g2": [66, 67], "g3": [66, 67], "profile1": [71, 72, 76, 77, 81, 82, 344], "profile2": [71, 72, 76, 77, 81, 82, 344], "profile3": [71, 72, 76, 77, 81, 82], "b_rm": [86, 87, 91, 92], "v_rm": [96, 97], "valu": [101, 173, 174, 191, 209, 210, 227, 237, 239, 252, 266, 270, 271, 277, 285, 292, 321, 337, 339, 343, 344, 345, 352, 353], "default_unit": 101, "pars": 101, "correct": [101, 190, 226, 237, 337, 343, 345], "unyt_arrai": [101, 108, 117, 131, 132, 141, 147, 164, 174, 175, 177, 183, 191, 210, 211, 213, 219, 227, 240, 252, 257, 323, 343, 344], "tupl": [101, 151, 188, 224, 237, 257], "form": [101, 177, 213, 257, 265, 283, 284, 323, 340, 343, 345], "v_arrai": 101, "v_unit": 101, "convers": [101, 344, 345], "axi": 102, "gx": 102, "gy": 102, "gz": 102, "ang": 102, "rotat": 102, "vector": [102, 168, 204, 340, 343, 352], "angl": 102, "around": [102, 340, 344, 348], "over": [102, 315, 316, 317, 340, 343, 345, 347, 348, 352], "aqual": [104, 164, 341, 345], "aquadrat": [104, 340], "lagrangian": [104, 340, 345], "formul": [104, 113, 340], "mond": [104, 113, 336, 340, 345], "newtoniangrav": [104, 113, 122, 137, 340, 344], "qumondgrav": [104, 113, 122, 128, 340], "emondgrav": [104, 122, 128, 137], "classmethod": [107, 108, 116, 117, 131, 132, 140, 141, 152, 174, 175, 176, 177, 178, 186, 210, 211, 212, 213, 214, 222, 243, 244, 245, 246, 263, 266, 267, 344], "attr": [107, 108, 116, 117, 122, 129, 131, 132, 140, 141, 164, 175, 176, 177, 186, 198, 211, 212, 213, 222, 234, 344, 347], "comput": [107, 108, 111, 116, 117, 120, 131, 132, 135, 140, 141, 144, 175, 177, 179, 180, 181, 211, 213, 215, 216, 217, 285, 286, 291, 315, 316, 317, 325, 329, 337, 339, 343, 344, 345, 347, 348, 352], "dynam": [107, 116, 131, 140, 323, 325, 340, 343, 344, 347, 348, 352, 353], "associ": [107, 109, 116, 118, 125, 131, 133, 140, 142, 166, 172, 202, 208, 250, 344], "result": [107, 116, 131, 140, 162, 315, 316, 317, 325, 339, 340, 343, 344, 345, 347, 352], "np": [107, 116, 140, 144, 168, 204, 343, 344, 347, 352], "ndarrai": [107, 116, 140, 144, 343, 344], "It": [108, 117, 132, 141, 336, 337, 343, 344, 345, 347, 348, 352, 353], "ill": [108, 117, 132, 141, 343], "advis": [108, 117, 132, 141], "activ": [108, 117, 132, 141], "self": [108, 117, 132, 141, 164, 174, 177, 198, 210, 213, 234, 237, 257, 328, 340, 343, 344, 347, 348], "reserv": [108, 117, 132, 141], "when": [108, 117, 132, 141, 151, 190, 226, 268, 285, 286, 291, 323, 325, 344, 345, 348, 353], "undesir": [108, 117, 132, 141], "construct": [108, 117, 122, 132, 141, 175, 176, 211, 212, 323, 334, 337, 341, 343, 344, 345, 347, 348], "would": [108, 117, 132, 141, 198, 234, 340, 344], "match": [108, 117, 132, 141, 337, 343, 344, 347], "were": [108, 117, 132, 141, 344, 347, 353], "realiz": [108, 117, 132, 141, 163, 337, 343, 344, 348], "bool": [108, 109, 111, 117, 118, 120, 125, 132, 133, 135, 141, 142, 144, 183, 198, 219, 234, 325, 344], "disabl": [108, 117, 132, 141], "determin": [109, 118, 125, 133, 142, 162, 168, 204, 237, 239, 314, 323, 337, 343, 344, 345, 348, 352, 353], "had": [109, 118, 125, 133, 142], "gravitational_potenti": [109, 118, 125, 133, 142, 170, 206, 344, 348], "popul": [109, 118, 125, 133, 142, 344], "rtype": [109, 118, 125, 133, 142], "forc": [111, 120, 135, 144, 344, 345, 347], "compute_potenti": [111, 120, 135, 179, 180, 181, 215, 216, 217, 329, 340, 352], "onli": [111, 120, 135, 179, 180, 181, 198, 215, 216, 217, 234, 323, 325, 329, 340, 341, 344, 345, 347, 348, 352], "better": [111, 120, 135, 344, 347], "approach": [111, 120, 135, 190, 226, 323, 325, 340, 343, 344, 345], "recomput": [111, 120, 135, 190, 226, 343, 344], "even": [111, 120, 135, 144, 323, 343, 344, 345, 352], "gravitation_potenti": [112, 121, 127, 136, 145], "extend": 113, "aqualgrav": [113, 117, 122, 128, 137, 340], "typic": [122, 179, 180, 181, 215, 216, 217, 323, 325, 329, 340, 342, 343, 345, 348, 353], "select": [122, 291, 348], "modul": [122, 236, 303, 309, 341, 344, 347], "store": [122, 337, 344], "probabl": [129, 314, 345, 352], "serv": 129, "keyword": [129, 345], "transfer": 129, "gravitational_field": [131, 170, 206, 344, 348], "mathrm": [131, 132, 314, 340, 343, 345, 347, 348, 352, 353], "dyn": [131, 340, 343, 344, 347], "frac": [131, 132, 168, 204, 262, 265, 314, 323, 325, 340, 343, 345, 352, 353], "nabla": [131, 132, 168, 204, 323, 339, 340, 343, 345], "phi": [131, 132, 168, 204, 323, 325, 327, 340, 343, 345, 352], "exploit": 132, "symmetri": [132, 323, 339, 340, 345, 352], "shell": 132, "consid": [132, 323, 340, 343, 345], "rho": [132, 190, 226, 323, 325, 340, 343, 344, 345, 352], "behavior": [132, 265, 337, 340, 343, 344, 347, 348], "within": [132, 179, 180, 181, 215, 216, 217, 256, 293, 305, 314, 325, 329, 338, 347, 352, 353], "phi_": 132, "4": [132, 270, 323, 325, 337, 340, 343, 344, 345, 347, 348, 352, 353], "pi": [132, 192, 193, 228, 229, 323, 325, 340, 344, 345, 352, 353], "int_0": [132, 323, 325, 345, 352], "xi": [132, 343], "d": [132, 162, 168, 204, 262, 289, 290, 323, 325, 340, 343, 344, 345, 347, 352, 353], "At": [132, 340, 343, 344, 345], "outward": 132, "acceler": [132, 340, 343], "gm": 132, "dr": [132, 262, 323, 343, 345], "thu": [132, 168, 204, 323, 339, 340, 343, 345, 352, 353], "left": [132, 151, 262, 265, 321, 323, 340, 343, 344, 345, 352, 353], "int_r": [132, 323, 345], "infti": [132, 323, 340, 343, 345, 353], "right": [132, 262, 265, 323, 340, 343, 344, 345, 348, 352, 353], "connect": 135, "compute_mass": [135, 344], "qumond": [137, 164, 341, 345], "solut": [144, 340, 343, 344, 345, 347, 353], "poisson": [144, 340, 343, 344, 345], "equat": [144, 294, 323, 325, 340, 343, 344, 352], "basenam": [147, 148, 344], "num_halo": [147, 148, 344], "center": [147, 148, 162, 240, 248, 257, 258, 344, 347, 352], "num_particl": [147, 148, 179, 180, 181, 182, 215, 216, 217, 218, 314, 329, 344, 347, 352], "mag_fil": [147, 148, 344], "particle_fil": [147, 148, 344], "20000": [147, 148, 352], "side": [147, 151, 253, 340, 344], "complet": [147, 325, 337, 340, 341, 344, 348], "less": [147, 343], "arbitrari": [147, 340, 344, 348], "m": [147, 272, 273, 274, 280, 281, 283, 284, 285, 289, 290, 295, 296, 298, 299, 314, 337, 340, 343, 344, 352, 353], "maxim": [147, 156, 178, 214, 343, 344, 347, 353], "permit": 147, "domain_dimens": [151, 344, 345, 347], "box_siz": [151, 237, 253, 256, 344, 352], "non": [151, 183, 190, 219, 226, 323, 337, 340, 341, 345, 347, 348], "fix": [151, 164, 190, 226, 343, 347], "issu": [151, 178, 214, 325, 338], "uniformli": [151, 314], "multipl": [151, 352], "per": 151, "volum": 151, "wherea": 151, "quantit": 151, "weight": [151, 158, 345], "domain": [151, 183, 219, 253, 343, 345, 347, 348], "size": [151, 174, 191, 210, 227, 252, 347], "array_lik": 151, "allow": [156, 179, 180, 181, 215, 216, 217, 323, 329, 337, 340, 343, 344, 345, 347, 348, 352], "passive_scalar": [157, 252, 258, 352], "gadget": [157, 237, 245, 256, 336], "relax": [157, 337, 353], "glass": 157, "meshrelax": 157, "arepo": [157, 245, 341, 352], "resampl": 157, "thermal": [157, 158, 192, 228, 343, 344, 347], "onto": [157, 339, 344, 347], "rel": [158, 168, 204, 323, 325, 327, 341, 343, 344, 345, 347, 348, 352], "sph": 158, "routin": 158, "either": [158, 245, 256, 323, 337, 339, 344, 352], "combin": [158, 257, 337, 345, 352, 353], "togeth": [158, 257, 348, 352], "than": [158, 262], "overlap": 158, "them": [158, 163, 344, 348, 352], "total": [160, 176, 186, 212, 222, 279, 280, 281, 282, 283, 284, 287, 288, 293, 295, 296, 297, 337, 344, 348, 352, 353], "b": [162, 192, 193, 228, 229, 279, 301, 302, 337, 339, 347, 353], "common": [162, 337, 343, 348], "distanc": [162, 325], "central": [162, 193, 229, 274, 353], "separ": 162, "direct": [162, 328, 344, 345, 352], "sep_x": 162, "sqrt": [162, 323, 325, 340, 345, 352], "impact": [162, 347, 353], "y": [162, 272, 273, 337, 340, 344, 353], "z": [162, 285, 286, 291, 340, 343, 344, 347, 348, 353], "center1": [162, 344], "5": [162, 265, 337, 343, 344, 345, 347, 348, 352, 353], "center2": [162, 344], "similar": [163, 343, 348, 353], "just": [163, 325, 337, 344, 345, 348], "hse": [163, 168, 204, 257, 258, 343, 344, 348], "comprehens": [164, 340, 341, 344, 348], "accur": [164, 344], "predic": [164, 348], "radii": [164, 179, 180, 181, 183, 215, 216, 217, 219, 258, 266, 314, 315, 316, 317, 325, 329, 343, 347, 352, 353], "num_el": [164, 343], "element": [164, 174, 187, 210, 223, 240, 257, 331, 347], "equival": [164, 174, 210, 246, 321, 343, 345], "appli": [164, 323, 343, 345], "becom": [164, 177, 213, 321, 323, 343, 344, 345, 347, 353], "incorpor": [164, 177, 213, 336], "__getitem__": [164, 237], "__contains__": 164, "alias": 164, "__setitem__": [164, 237], "index": [164, 237, 262, 270, 283, 284, 292, 341, 344, 353], "assign": [164, 339, 344, 345, 347, 348, 352], "cannot": [164, 178, 214, 347], "set_field": [164, 343, 344, 352], "deviat": [168, 204, 343, 344, 348], "chk": [168, 204, 325, 344], "recal": [168, 204, 343, 345], "gamma": [168, 204, 300, 337, 340, 343, 347, 353], "defin": [168, 204, 248, 249, 291, 314, 337, 343, 348, 352], "p": [168, 204, 298, 299, 337, 343, 344, 345, 347, 352, 353], "rho_g": [168, 204, 337, 343], "invari": [168, 204], "report": [168, 204], "generate_model": [168, 197, 198, 199, 204, 233, 234, 235], "assert_almost_equ": [168, 204], "mdl": [168, 197, 198, 199, 204, 233, 234, 235], "amax": [168, 204, 347], "decim": [168, 204], "total_dens": [170, 176, 186, 206, 212, 222, 344, 347, 348], "total_mass": [170, 206, 344, 348], "gas_mass": [170, 206, 344, 348], "dark_matter_mass": [170, 206, 344, 348], "dark_matter_dens": [170, 206, 344, 348, 352], "stellar_dens": [170, 175, 176, 177, 186, 206, 211, 212, 213, 222, 343, 344, 348], "stellar_mass": [170, 206, 344], "find": [173, 209, 282, 285, 286, 297, 323, 341, 343, 344, 345, 348, 352], "alon": [174, 210], "must": [174, 177, 190, 210, 213, 226, 237, 260, 337, 343, 344, 345, 352], "consist": [174, 210, 257, 269, 340, 343, 344, 345, 347, 348, 352], "definit": [174, 210, 325], "assess": [174, 210], "from_dens_and_tden": [174, 210, 343, 344, 348], "from_dens_and_temp": [174, 210, 337, 343, 344, 347], "from_dens_and_entr": [174, 210, 343], "from_h5_fil": [174, 210, 343, 345], "callabl": [175, 177, 211, 213, 260, 266, 315, 316, 317, 321, 344, 348], "stellar": [175, 176, 177, 186, 211, 212, 213, 222, 323, 332, 343, 352, 353], "describ": [176, 186, 212, 222, 344, 345, 347, 352, 353], "desir": [176, 186, 212, 222, 237, 257, 314, 344, 352], "integ": [176, 179, 180, 181, 186, 212, 215, 216, 217, 222, 268, 329], "evalu": [176, 186, 212, 222], "seek": [178, 214], "both": [178, 214, 270, 271, 323, 345, 352], "pkl": [178, 214], "later": [178, 214, 339, 348, 352], "found": [178, 214, 343, 344, 348], "lose": [178, 198, 214, 234], "warn": [178, 214, 337, 344, 347, 352], "sub_sampl": [179, 180, 181, 182, 215, 216, 217, 218, 329], "sub": [179, 180, 181, 215, 216, 217, 329], "uniqu": [179, 180, 181, 215, 216, 217, 329, 352], "repeat": [179, 180, 181, 215, 216, 217, 329], "fill": [179, 180, 181, 215, 216, 217, 329], "randomst": [179, 180, 181, 215, 216, 217, 314, 329], "pseudo": [179, 180, 181, 215, 216, 217, 270, 271, 314, 329], "random": [179, 180, 181, 215, 216, 217, 314, 329, 352], "reason": [179, 180, 181, 215, 216, 217, 329, 340, 343, 344], "seed": [179, 180, 181, 215, 216, 217, 329], "viabl": [183, 219, 323, 343, 345], "fig": [188, 224, 268, 344, 347, 348, 352], "v": [188, 224, 323, 325, 339, 340, 343, 345, 347, 352, 353], "matplotlib": [188, 224, 268, 344, 347, 348, 352], "figur": [188, 224, 268, 347], "constrain": [190, 226, 339], "itself": [190, 226, 252, 344, 345], "procedur": [190, 226, 337, 339, 343, 344], "accomplish": [190, 226, 338], "rho_i": [190, 226], "therefor": [190, 226, 323, 325, 343, 348], "substitut": [190, 226], "_i": [190, 226], "depend": [190, 226, 323, 339, 343, 344, 345], "after": [190, 226, 336, 343, 344, 345, 352], "stage": [190, 226, 339, 345], "manual": [190, 198, 226, 234, 343, 344, 347], "beta": [192, 228, 275, 300, 337, 347, 353], "gaussian": [192, 193, 228, 229, 323, 343, 345], "plasma": [192, 228], "p_th": [192, 228], "p_b": [192, 193, 228, 229], "lorentz": [192, 193, 228, 229], "heavisid": [192, 193, 228, 229], "dimensionless": [192, 193, 228, 229, 270, 271], "ratio": [192, 228, 270], "b0": [193, 229, 352], "eta": [193, 229, 343], "6666666666666666": [193, 229], "proport": [193, 229, 343], "power": [193, 229, 262, 283, 284, 292, 321, 343, 347], "strength": [193, 229], "gauss": [193, 229], "ascii": [197, 233, 343], "astropi": [197, 233], "qtabl": [197, 233], "tempfil": [197, 198, 199, 233, 234, 235], "temporarydirectori": [197, 198, 199, 233, 234, 235], "temp_dir": [197, 198, 199, 233, 234, 235], "o": [197, 198, 199, 233, 234, 235, 347, 348], "join": [197, 198, 199, 233, 234, 235, 348], "fields_to_writ": [198, 234], "unformat": [198, 234], "fortran": [198, 234], "binari": [198, 234, 269, 336, 343, 348], "But": [198, 234, 344], "why": [198, 234, 340, 344, 345, 348], "fortan": [198, 234], "proceedur": [198, 234], "metadata": [198, 234], "As": [198, 234, 340, 343, 344, 347, 353], "upon": [198, 234, 340], "reopen": [198, 234], "manag": [236, 337, 344], "particle_typ": [237, 238], "interfac": [237, 344], "dure": [237, 343, 344], "black_hol": 237, "1d": [237, 339, 348], "particle_mass": [237, 344, 345, 347, 352], "implicitli": 237, "similarli": [237, 340, 343], "alia": 237, "bh_mass": 239, "po": [239, 352], "vel": [239, 352], "use_pot_min": [239, 352], "black": 239, "solar": [239, 348], "ignor": [239, 343, 345], "r_ctr": [240, 352], "v_ctr": [240, 352], "offset": [240, 344], "bulk": [240, 352], "indic": [240, 252, 343, 344, 345], "normal": [240, 352, 353], "circumst": 240, "drop": [241, 272, 273], "remov": [241, 248, 339, 343], "relat": [242, 340, 343, 348, 353], "snapshot": [245, 352], "cl": [246, 344], "from_fil": [246, 352], "cut": [248, 265, 344, 347], "outsid": [248, 343, 347], "certain": [248, 292, 352], "export": [248, 253], "passiv": [249, 251, 252, 352], "updat": 252, "shape": [252, 352], "preserv": [252, 321, 339], "width": [253, 256, 300, 301, 352], "ic_filenam": 256, "dtype": [256, 344], "float32": 256, "cubic": [256, 352], "datatyp": [256, 344], "float64": [256, 344], "concaten": [257, 344, 347, 352], "joint": 257, "group": [257, 347], "instanti": [259, 344, 353], "wrapper": [259, 337, 344, 347, 348, 353], "lambda": [259, 260, 337, 344, 348], "cumul": [259, 314, 315, 316, 317], "alter": [259, 262, 340, 347, 352], "truncat": [259, 265, 298, 299, 321, 344, 347, 348], "varieti": [259, 303, 338, 340, 341, 343, 344, 348], "anoth": [260, 343, 344, 353], "previou": [260, 343], "r_core": 262, "pre": [262, 341, 343], "low": [262, 337, 340], "exponenti": 262, "take": [262, 321, 337, 339, 340, 343, 344, 345, 347, 348], "f": [262, 267, 269, 270, 289, 290, 321, 323, 325, 340, 344, 345, 347, 348, 352, 353], "exp": [262, 265, 323, 344, 345, 353], "r_": [262, 265, 276, 278, 283, 284, 289, 290, 292, 298, 299, 300, 337, 347, 353], "caus": [262, 265, 321, 353], "cuspi": [262, 353], "_": [262, 325, 344, 345, 347, 348, 352], "grow": 262, "faster": [262, 265, 344, 353], "term": [262, 353], "go": [262, 265, 337, 340, 344, 345, 347, 348], "limit": [262, 347, 352], "arg": [263, 345], "constant_profil": [264, 341, 344, 353], "power_law_profil": [264, 341, 344, 353], "beta_model_profil": [264, 341, 344], "hernquist_density_profil": [264, 341, 344, 348], "cored_hernquist_density_profil": [264, 341, 344], "hernquist_mass_profil": [264, 341, 344], "nfw_density_profil": [264, 341, 344, 353], "nfw_mass_profil": [264, 341, 344, 353], "tnfw_density_profil": [264, 341, 344, 348], "tnfw_mass_profil": [264, 341, 344, 348], "snfw_density_profil": [264, 341, 343, 344, 353], "snfw_mass_profil": [264, 341, 343, 344, 353], "cored_snfw_density_profil": [264, 341, 344], "cored_snfw_mass_profil": [264, 341, 344], "cored_snfw_total_mass": [264, 344], "einasto_density_profil": [264, 341, 344], "einasto_mass_profil": [264, 341, 344], "am06_density_profil": [264, 273, 341, 344], "vikhlinin_density_profil": [264, 341, 343, 344, 348], "vikhlinin_temperature_profil": [264, 341, 343, 344], "am06_temperature_profil": [264, 272, 341, 344], "baseline_entropy_profil": [264, 341, 344], "broken_entropy_profil": [264, 341, 344], "walker_entropy_profil": [264, 341, 344], "rescale_profile_by_mass": [264, 343, 344, 348], "r_cut": 265, "k": [265, 339, 344, 347, 353], "beyond": [265, 347, 352, 353], "domin": 265, "rate": [265, 321], "higher": [265, 321], "zero": [265, 339, 340, 343, 344, 347, 352], "achiev": [265, 347], "multipli": 265, "factor": [265, 343, 353], "2k": 265, "f_r": 266, "univariatesplin": 266, "continu": [266, 321, 344], "spectrum": 266, "disk": [267, 344, 352], "open": [267, 344], "valid": [267, 323, 345], "rp": [267, 269], "pickl": 267, "lw": [268, 352], "quick": [268, 345, 348, 352], "logspac": 268, "send": 269, "extens": [269, 343], "t0": [270, 271, 337, 347], "mu": [270, 340, 343], "6": [270, 323, 343, 344, 345, 347, 348, 353], "omega_b": 270, "048": 270, "omega_dm": 270, "262": 270, "polytrop": [270, 271], "degre": [270, 271, 345], "cool": [270, 271, 272, 273, 301, 336, 353], "a_c": [270, 271, 272, 273, 353], "fraction": [270, 314, 348, 353], "molecular": [270, 304, 343], "cosmic": 270, "baryon": [270, 343], "rho_0": [272, 300, 347, 353], "c": [272, 273, 289, 290, 301, 337, 347, 348, 353], "suggest": [272, 273], "markevitch": [272, 273, 341], "2006": [272, 273, 300, 301, 337, 341, 347], "apj": [272, 273, 279, 287, 288, 289, 290, 300, 301, 305, 353], "650": [272, 273, 353], "102": [272, 273, 348, 353], "concert": [272, 273], "msun": [272, 275, 278, 279, 280, 281, 282, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 300, 305, 337, 344, 352, 353], "t_0": [273, 301, 353], "k_0": [274, 276, 353], "k_200": 274, "r_200": [274, 278, 302], "baselin": 274, "voit": 274, "kai": 274, "bryan": 274, "l": [274, 279, 280, 281, 287, 288, 294, 295, 296, 325, 340, 344, 345, 353], "2005": 274, "mnra": [274, 280, 281, 294, 295, 296, 353], "364": 274, "909": 274, "floor": 274, "logarithm": [274, 283, 284, 300, 301, 353], "slope": [274, 283, 284, 300, 301, 321, 347, 353], "rho_c": 275, "r_c": [275, 280, 281, 282, 300, 337, 347, 353], "cavalier": [275, 353], "fusco": [275, 353], "femiano": [275, 353], "1976": 275, "49": 275, "137": 275, "k_scale": [276, 302], "const": 277, "constant": [277, 323, 343, 345, 352], "m_200": 278, "conc": [278, 291, 343, 344, 348, 353], "m200": [278, 286, 343, 344, 348], "r200": [278, 286, 308, 343, 344, 348], "concentr": [278, 291, 294, 348, 353], "nfw": [278, 280, 281, 282, 289, 290, 291, 294, 295, 296, 297, 298, 299, 341], "hernquist": [278, 279, 287, 288, 337, 341, 348], "overdens": [278, 285, 286, 291], "200": [278, 291, 343, 344, 348, 352, 353], "critic": [278, 285, 286, 291], "m_0": [279, 287, 288], "1990": [279, 287, 288], "356": [279, 287, 288, 353], "359": [279, 287, 288, 353], "super": [280, 281, 282, 295, 296, 297, 344], "lillei": [280, 281, 294, 295, 296, 353], "wyn": [280, 281, 294, 295, 296, 353], "evan": [280, 281, 294, 295, 296, 353], "sander": [280, 281, 294, 295, 296, 353], "2018": [280, 281, 294, 295, 296, 353], "sai": [282, 297, 343], "m200c": [282, 297], "r200c": [282, 294, 297], "law": [283, 284, 292, 321, 343, 347], "retana": [283, 284], "montenegro": [283, 284], "2012": [283, 284], "540": [283, 284, 344], "a70": [283, 284], "invers": [283, 284, 314, 340, 345], "delta": [285, 286, 291, 343, 344, 348, 353], "cosmo": [285, 286, 291, 348], "enclos": 285, "redshift": [285, 286, 291, 337, 348], "cosmologi": [285, 286, 291, 348], "m_r": 286, "rho_": [289, 290, 298, 299, 340, 343, 353], "navarro": [289, 290, 353], "frenk": [289, 290, 353], "white": [289, 290, 353], "1996": [289, 290, 353], "462": [289, 290, 353], "563": [289, 290, 353], "whatev": [292, 344], "els": [292, 344, 345], "rescal": [293, 348], "conc_nfw": 294, "snfw": [294, 353], "come": [294, 336, 344, 345], "31": [294, 344, 347, 348], "r_t": [298, 299, 301, 321, 337, 353], "tnfw": [298, 299, 353], "baltz": [298, 299], "marshal": [298, 299], "oguri": [298, 299], "2009": [298, 299, 305], "jcap": [298, 299], "015": [298, 299], "epsilon": [300, 337, 347, 353], "modifi": [300, 340, 343, 345, 353], "kravtsov": [300, 301, 353], "forman": [300, 301, 353], "w": [300, 301, 353], "691": [300, 301, 353], "inner": [300, 301, 347], "middl": 300, "outer": [300, 301], "control": 300, "transit": [300, 301, 321, 340, 347], "t_min": [301, 337], "r_cool": [301, 337, 347], "a_cool": [301, 337, 347], "region": [301, 340, 343], "empir": 303, "variabl": [303, 343], "ne": 304, "electron": 304, "n_e": [304, 343], "math": [304, 325, 345], "ho_": 304, "mu_e": 304, "m500": [305, 306, 307, 343, 344], "hubbl": 305, "7": [305, 337, 344, 345, 347, 348, 353], "relationship": [305, 340, 343], "mga": 305, "mtot": 305, "r500": [305, 343, 344], "692": 305, "1033": 305, "ui": 305, "adsab": 305, "harvard": 305, "edu": 305, "ab": 305, "2009apj": 305, "1033v": 305, "100": [305, 343, 344, 348, 352, 353], "km": [305, 339], "mpc": 305, "packag": [309, 343, 344, 345, 348], "arr": 311, "messag": [313, 318], "locat": 313, "frmt": 313, "subject": [314, 345], "len": [314, 344], "Will": 314, "own": [314, 337, 339, 344, 345, 347, 348], "reli": [314, 343], "p_r": 314, "max": 314, "u": [314, 337, 344, 345, 348, 349, 350, 351, 352], "rr": [315, 316, 317, 344], "costli": [315, 316, 317], "larg": [315, 316, 317, 321, 325, 337, 343, 344, 347, 352, 353], "becaus": [315, 316, 317, 323, 325, 340, 343, 344, 345, 347, 348], "increment": [315, 316, 317], "integr": [316, 317, 323, 325, 340, 344, 345, 347, 348, 352], "inf": 317, "rac": 321, "ight": 321, "df": [321, 323, 324, 328, 345], "dx": 321, "yield": [321, 323, 340, 343, 345], "monoton": 321, "interpolatedunivariatesplin": [321, 344], "quickli": 321, "dark_matt": [323, 324, 332, 344, 345, 347, 348], "sigma2": [323, 324], "eddington": [323, 324, 325, 337, 344, 347, 348], "necessari": [323, 339, 340, 343, 344, 345, 353], "facilit": [323, 337, 344], "edington": 323, "formula": [323, 325, 343, 344, 353], "lma": [323, 344, 345], "thought": [323, 343], "occupi": 323, "textbf": [323, 325, 340, 345], "dot": [323, 345], "regardless": [323, 343, 345], "liouvil": [323, 345], "theorem": [323, 325], "collisionless": [323, 352], "boltzmann": 323, "jean": [323, 325], "question": [323, 339, 344], "wai": [323, 336, 337, 339, 340, 343, 344, 347, 348, 352], "steadi": [323, 345], "state": [323, 345], "integrand": 323, "invert": [323, 343, 345, 352], "abel": [323, 337, 345, 352], "happen": [323, 345, 348], "rh": [323, 345], "expand": [323, 345], "trivial": [323, 343, 345], "differenti": [323, 343, 345, 352], "In": [323, 327, 339, 340, 343, 344, 345, 347, 348, 352], "stipul": [323, 345], "angular": [323, 345, 352], "momentum": [323, 343, 345, 352], "irrot": [323, 345], "simplifi": [323, 340, 345], "notat": [323, 345], "denot": [323, 340, 345], "psi": [323, 325, 327, 340, 343, 345, 352], "phi_0": [323, 325, 327], "mathcal": [323, 325, 340, 344, 345], "blinnei": [323, 345], "tremain": [323, 325, 345], "maxwellian": [323, 344], "while": [323, 345, 348, 349, 350, 351], "badli": [323, 345], "behav": [323, 345, 347], "estim": [323, 345], "nonetheless": [323, 343, 344, 345, 347], "partial": [323, 343, 345], "sigma_r": [323, 344, 345], "sigma": [323, 345], "2_": [323, 345], "theta": [323, 345, 352], "stress": [323, 345], "tensor": [323, 325, 345], "isotrop": [323, 325, 345, 352], "dispers": [323, 325, 345], "rho_h": [323, 345, 353], "abl": [323, 345], "speed": [323, 345, 352], "v_r": 323, "rtol": 325, "01": [325, 344, 345, 347], "under": [325, 344, 345, 353], "toler": [325, 347], "exce": 325, "stop": [325, 344], "enforc": [325, 340, 343], "basi": [325, 344], "let": [325, 337, 340, 343, 344, 345, 347, 348], "invok": 325, "acknowledg": 325, "furthermor": [325, 340, 343, 345], "due": [325, 339, 345, 352], "assumpt": [325, 341, 343], "binnei": [325, 345], "2011": [325, 345], "vol": [325, 345], "princeton": [325, 345], "press": [325, 345], "order": [327, 340, 344, 347, 348], "decreas": 327, "revers": 328, "inherit": [331, 337, 344], "rigidgrav": 336, "rigid": 336, "selfgrav": 336, "inclus": 336, "tangl": 336, "john": 336, "zuhon": 336, "request": [336, 347], "who": [336, 338], "licens": 336, "copi": [336, 341], "tripl": 336, "makefil": 336, "simu_opt": 336, "dmodel": 336, "hydro": [336, 339, 343], "dgraviti": 336, "dparticl": 336, "dncomp_passive_us": 336, "merger_coll_numhalo": 336, "merger_coll_usemet": 336, "dmhd": 336, "deo": 336, "eos_gamma": 336, "dpar_natt_us": 336, "dgpu": 336, "dload_bal": 336, "hilbert": 336, "dopenmp": 336, "dsupport_hdf5": 336, "proper": 336, "add_background_grid": 336, "config": 336, "enabl": 336, "sh": 336, "soon": [336, 347], "adapt": 336, "mesh": [336, 344, 347], "refin": 336, "amr": [336, 339, 344], "radi": 336, "agn": 336, "feedback": 336, "host": 336, "featur": [336, 338, 344, 348], "raymond": 336, "patch": 336, "guid": [336, 340, 341, 344, 345, 351], "ins": [336, 347], "product": 337, "observ": [337, 340, 347, 353], "methodologi": 337, "chandra": [337, 347, 353], "vikhlinin06": [337, 347], "phenomenolog": 337, "public": 337, "ascasibar07": 337, "13": [337, 344, 347], "9": [337, 344, 347, 348], "sanderson10": 337, "easiest": 337, "sever": [337, 340, 344, 352], "seen": [337, 344, 347, 348], "print": [337, 344, 345, 347, 348], "a133": [337, 347], "a262": [337, 347], "a383": [337, 347], "a478": [337, 347], "a907": [337, 347], "a1413": [337, 347], "a1795": [337, 347], "a1991": [337, 347], "a2029": [337, 347], "a2390": [337, 347], "rx": [337, 347], "j1159": [337, 347], "5531": [337, 347], "mkw": [337, 347], "usgc": [337, 347], "s152": [337, 347], "load_model": [337, 347], "info": [337, 344, 345, 347, 348], "2023": [337, 344, 345, 347, 348], "09": [337, 344, 345, 348], "11": [337, 344, 347, 348], "08": [337, 344, 347], "53": [337, 347], "510": 337, "519": [337, 347], "mon": 337, "sep": [337, 348], "917": 337, "from_scratch": [337, 348], "compon": [337, 339, 341, 343, 344, 347, 348, 352], "923": 337, "55": 337, "And": [337, 348], "got": [337, 344, 345, 347], "bit": [337, 344, 347], "intric": 337, "still": [337, 344], "everi": [337, 341, 344, 348], "hous": 337, "bear": 337, "io": [337, 344], "doe": [337, 343, 344, 345, 347, 352], "templat": 337, "global": [337, 345], "wide": [337, 341, 343, 344, 353], "regard": [337, 343, 344], "referenc": [337, 345], "first_profil": 337, "builtin": [337, 338, 344], "is_custom": 337, "express": [337, 344, 345, 352], "rho0": 337, "null": 337, "second_profil": 337, "multilin": 337, "readabl": 337, "exec": 337, "descript": [337, 343, 347], "paper": [337, 341, 347], "load_method": [337, 347], "csv": 337, "load_from_fil": 337, "extra_clust": 337, "Not": [337, 343, 345, 347], "desc": 337, "cute": 337, "notic": [338, 343, 344, 345, 347, 348], "breakag": 338, "pleas": [338, 349, 350, 351], "notifi": 338, "aim": [338, 343, 345, 353], "nut": [338, 345], "bolt": [338, 345], "accord": 339, "complex": [339, 343, 344, 345, 348], "turbul": 339, "fashion": 339, "uniform": [339, 352], "natur": 339, "bf": [339, 343, 352], "tild": 339, "v_x": 339, "v_1": 339, "u_1": 339, "iN": 339, "u_2": 339, "v_y": 339, "v_2": 339, "u_3": 339, "u_4": 339, "v_z": 339, "v_3": 339, "u_5": 339, "u_6": 339, "special": [339, 345], "handl": 339, "constraint": 339, "cdot": [339, 340, 343, 345], "least": [339, 343], "diverg": [339, 340, 343, 352, 353], "space": [339, 345, 352], "subtract": 339, "off": [339, 344, 345, 348, 353], "parallel": 339, "hat": [339, 340], "machin": 339, "precis": 339, "linearli": 339, "free": 339, "small": [339, 343, 347], "mhd": 339, "clean": 339, "substanti": 339, "concern": 339, "transport": 339, "evolv": 339, "solv": [339, 340, 352], "transform": 339, "clusterfield": 339, "map_field_to_particl": 339, "vfield": 339, "write_to_h5": 339, "bfield": 339, "build": [340, 347], "coupl": 340, "On": 340, "summari": 340, "easili": [340, 343, 345, 352], "end": [340, 341, 348], "classic": [340, 345], "1984apj": 340, "286": 340, "7b": 340, "403": 340, "886m": 340, "postul": 340, "propos": 340, "milgrom": 340, "1983": 340, "held": 340, "characterist": 340, "a_0": [340, 343], "asymptot": [340, 343], "_n": 340, "regim": [340, 343], "deep": [340, 341, 343], "rang": [340, 347], "accler": 340, "attempt": 340, "underwai": 340, "establish": 340, "covari": 340, "standout": 340, "candid": 340, "aquadtrat": 340, "quintessenti": 340, "variat": 340, "dz": 340, "fulfil": 340, "paradigm": 340, "solver": [340, 344], "major": [340, 343, 344, 347], "reduc": [340, 345], "implicit": [340, 343], "optim": 340, "converg": [340, 347], "guess": 340, "essenti": [340, 344, 347, 348], "simplest": [340, 352], "sign": 340, "lead": [340, 348], "gamma_": 340, "treat": 340, "infin": [340, 353], "inward": 340, "unlik": 340, "quasi": 340, "q": 340, "identifi": 340, "second": [340, 345, 348, 352, 353], "nu": [340, 343, 345], "much": [340, 343, 344, 348, 352], "meet": 340, "criteria": 340, "motion": [340, 345], "h": [340, 344, 345, 348, 353], "_a": 340, "a_n": 340, "_q": 340, "curl": 340, "recogn": [340, 343], "commonli": [340, 343], "milgromian": 340, "1983apj": 340, "270": 340, "365m": 340, "bekenstein": 340, "cross": 341, "platform": 341, "possibl": [341, 343, 344, 345], "configur": [341, 342, 343, 344], "cored_hernquist_mass_profil": 341, "einasto": 341, "high": 341, "qualiti": [341, 347, 348], "capac": 341, "catalog": 341, "explor": [341, 344, 347], "simpl": [341, 345, 348], "literatur": [341, 345, 353], "quickstart": 341, "start": [341, 344, 347, 348], "learn": [341, 343], "offer": 341, "experi": 341, "execut": 341, "particular": [341, 347, 348], "past": 341, "explain": 341, "backbon": 341, "api": [341, 343, 344, 347, 348], "dive": 341, "contribut": [341, 343, 347], "hint": 341, "might": [341, 344], "search": 341, "spatial": 342, "get": [342, 343, 344, 345, 348, 349, 352], "hold": [343, 344], "intial": 343, "protocol": 343, "fluid": 343, "obei": 343, "euler": 343, "conserv": 343, "viscos": 343, "context": [343, 345, 347, 353], "k_b": 343, "m_p": 343, "ln": [343, 353], "gasseou": 343, "worth": [343, 344, 345, 347, 348], "remaind": 343, "sim": [343, 353], "theoret": 343, "gm_": 343, "stabl": 343, "taken": 343, "stabil": [343, 345], "approx": 343, "2r": 343, "situat": 343, "solvabl": 343, "dmr": 343, "summar": 343, "tabl": [343, 347], "from_arrai": [343, 344], "grav": 343, "t_g": 343, "chosen": [343, 345, 348], "via": [343, 352], "incompress": [343, 345], "bari": 343, "difficult": [343, 347], "effici": 343, "int_": 343, "r_0": 343, "exactli": [343, 344, 352], "accept": [343, 352], "no_ga": 343, "syntact": 343, "vast": 343, "success": 343, "algorithm": [343, 347], "wa": [343, 345, 347, 352], "check_hs": [343, 344, 348], "clearli": [343, 344], "successfulli": [343, 345, 348], "equilibr": [343, 344, 348], "plai": [343, 344, 345], "role": 343, "ioniz": 343, "set_magnetic_field_from_beta": [343, 344], "p_": 343, "whichev": 343, "expon": 343, "choos": [343, 352], "set_magnetic_field_from_dens": [343, 344], "awar": 343, "slow": 343, "worthwhil": 343, "consult": 343, "write_model_to_ascii": 343, "write_model_to_h5": [343, 344, 347, 348], "write_model_to_binari": 343, "confirm": [343, 347], "patholog": 343, "incomplet": 343, "interfer": 343, "prevent": [343, 344, 347, 348], "Such": 343, "immedi": [343, 344], "implic": 343, "find_overdensity_radiu": [343, 344, 348], "snfw_total_mass": [343, 344], "find_radius_mass": [343, 344, 348], "5e15": [343, 344], "rhot": [343, 344, 348], "mt": [343, 344, 348], "500": [343, 344, 352], "f_g": [343, 344, 348], "12": [343, 344, 347], "rhog": [343, 344, 348], "67": [343, 344, 348], "temp": 343, "42": [343, 347, 348], "02": [343, 344, 345, 347], "00": 343, "350": [343, 347], "19": [343, 344, 347], "10000": [343, 344, 345, 347, 348, 352], "short": 343, "answer": 343, "noth": 343, "until": 343, "is_phys": [343, 344, 347, 348], "35": [343, 344, 347], "meth": 343, "rebuild_phys": [343, 347], "newli": 343, "origin": [343, 344, 352, 353], "m2": 343, "pleasant": 343, "reach": [343, 347], "require_phys": 343, "magenta": 343, "restrict": [343, 347], "viabil": 343, "forest": 343, "green": [343, 344], "leav": 343, "teal": 343, "rebuild": [343, 347], "quickguid": 344, "shown": 344, "lot": [344, 347, 348], "bell": 344, "whistl": 344, "confus": [344, 345], "usag": [344, 348], "measur": 344, "softwar": [344, 345], "easi": [344, 348], "custom": 344, "ones": [344, 352], "pyplot": [344, 347, 348, 352], "plt": [344, 347, 348, 352], "25": [344, 347], "39": [344, 345, 347, 348], "profile_exampl": 344, "1e7": 344, "other_profile_exampl": 344, "built_in": 344, "sum": 344, "behind": [344, 348], "scene": [344, 348], "few": [344, 347], "add_cor": [344, 348], "cutoff": [344, 348], "respect": [344, 348, 352], "subplot": [344, 347, 348, 352], "color": [344, 345, 347], "t_profil": 344, "800": [344, 347], "red": [344, 347], "c_profil": 344, "50": [344, 347, 352], "okai": [344, 345, 347, 348], "my": [344, 347, 348], "raw": 344, "profile_1": [344, 345], "sine": 344, "geomspac": 344, "profile_2": 344, "cosin": 344, "last": [344, 345], "veri": [344, 345, 347, 352], "root": 344, "elsewher": 344, "doesn": 344, "to_binari": [344, 348], "from_binari": 344, "arbitrarili": 344, "next": [344, 348, 352], "tour": 344, "la": 344, "talk": 344, "pretti": [344, 347], "useless": 344, "ll": [344, 349, 350, 351], "is_calcul": 344, "reset": [344, 345], "modular": 344, "classnam": 344, "_classnam": 344, "def": 344, "log": [344, 348], "mylog": 344, "__repr__": 344, "saniti": 344, "pull": [344, 348], "debug": 344, "tdens_func": 344, "gpot_profil": 344, "gpot1": 344, "gpot2": 344, "convert_to_unit": 344, "log_str": 344, "comp": [344, 347], "stream": 344, "sy": 344, "stderr": 344, "_val": 344, "succe": 344, "dev": 344, "theorist": 344, "contributor": 344, "secondli": 344, "plain": 344, "sens": [344, 345, 348], "fanci": [344, 348], "again": [344, 347], "label": [344, 352], "distinguish": 344, "satisfi": [344, 345], "interphas": 344, "fact": [344, 345, 348], "basic_model": [344, 348], "27": [344, 345], "16": [344, 345, 353], "547": 344, "655": 344, "659": 344, "52": 344, "938": 344, "26": [344, 347], "04": [344, 347], "788": 344, "37": 344, "710": 344, "now": [344, 345, 347, 348, 352, 353], "hood": [344, 345], "everyth": 344, "odict_kei": 344, "gas_fract": [344, 348], "electron_number_dens": [344, 348], "ask": 344, "aren": [344, 345], "dm_virial": [344, 345], "star_viri": 344, "back": 344, "shortli": 344, "introduc": [344, 353], "asid": 344, "thing": [344, 345, 347, 348], "One": [344, 345, 352], "737": 344, "33609e": 344, "07": [344, 347], "That": 344, "000": 344, "neg": [344, 348], "sun": [344, 348], "aug": [344, 347], "luster_gener": [344, 347, 348], "protect": 344, "_virial": [344, 345], "_dm_virial": [344, 345], "lt": [344, 345, 348], "0x7f297d4857c0": 344, "gt": [344, 345, 348], "did": 344, "moment": [344, 345], "organiz": 344, "cython": [344, 345], "virialization_method": 344, "explan": 344, "main": 344, "doc": 344, "mention": [344, 348, 352], "gone": 344, "magic": 344, "ahead": 344, "try": [344, 349, 350, 351], "14": [344, 347], "generate_dm_particl": [344, 352], "1_000_000": [344, 347, 352], "28": [344, 347], "05": [344, 345], "549": 344, "1000000": [344, 347, 352], "553": 344, "850": 344, "notebook": [344, 348], "awhil": 344, "bread": 344, "butter": 344, "discret": 344, "awai": 344, "15": [344, 347], "million": [344, 345], "field_nam": 344, "defaultdict": 344, "particle_posit": [344, 352], "particle_veloc": [344, 352], "bore": 344, "Its": [344, 347], "realli": [344, 348], "17": [344, 347], "gas_particl": [344, 352], "generate_gas_particl": [344, 352], "914": 344, "916": [344, 347, 348], "166": 344, "973": [344, 347], "thermal_energi": [344, 347, 352], "goe": 344, "don": [344, 348], "rest": 344, "write_particl": [344, 352], "write_particles_to_h5": 344, "write_to_gadget_fil": [344, 352], "make_radial_cut": [344, 347, 352], "add_offset": [344, 345, 347, 352], "add_black_hol": [344, 352], "18": [344, 347], "4000": [344, 347], "move": 344, "bix": 344, "to_yt_dataset": [344, 345, 347], "8000": [344, 347], "209": 344, "current_tim": [344, 345, 347], "211": [344, 347], "214": 344, "domain_left_edg": [344, 345, 347], "215": [344, 348], "domain_right_edg": [344, 345, 347], "217": 344, "cosmological_simul": [344, 345, 347], "sort": [344, 347], "phase": [344, 345, 352], "diagram": 344, "field_list": 344, "p1": 344, "particleplot": [344, 345, 347], "particle_position_x": [344, 345, 347], "particle_position_i": [344, 345, 347], "226": 344, "alloc": [344, 345, 347], "949e": 344, "particle_position_z": 344, "particle_velocity_x": 344, "particle_velocity_i": 344, "particle_velocity_z": 344, "nbodi": 344, "026": 344, "xlim": [344, 347], "000000": [344, 347], "028": 344, "ylim": [344, 347], "031": 344, "032": 344, "037": 344, "splat": [344, 347], "ngp": [344, 347], "set_cmap": [344, 347], "kama": [344, 347], "21": 344, "ds2": 344, "p2": 344, "phaseplot": 344, "weight_field": [344, 347], "set_unit": 344, "623": 344, "625": 344, "627": 344, "629": 344, "631": 344, "634": 344, "22e": 344, "22": 344, "gas_particles_1": 344, "100_000": [344, 345, 348], "gas_particles_2": 344, "dm_particl": [344, 352], "192": 344, "100000": [344, 345, 348], "193": 344, "418": 344, "421": 344, "422": 344, "448": 344, "654": 344, "657": 344, "705": 344, "23": [344, 348], "concat_clust": 344, "big_system": 344, "194": 344, "24": 344, "16000": 344, "362": 344, "365": [344, 347], "368": 344, "370": 344, "372": 344, "particle_on": 344, "386": 344, "3e": 344, "810": 344, "812": 344, "815": 344, "817": 344, "820": 344, "698": 344, "700": 344, "703": 344, "704": 344, "707": 344, "circl": 344, "speak": 344, "duper": 344, "amaz": 344, "smash": 344, "frontend": [344, 348], "dig": 344, "844": 344, "012": 344, "getattr": [344, 347], "500000": 344, "link": 344, "regener": [344, 345], "intent": [344, 348], "33": 344, "to_fil": 344, "basic_": 344, "num_dm_particl": 344, "num_star_particl": 344, "velocity1": 344, "velocity2": 344, "involv": 344, "act": [344, 345], "book": 344, "tricki": 345, "busi": 345, "imposs": 345, "undertak": 345, "__": 345, "review": 345, "tenant": 345, "ensembl": 345, "nbsphinx": 345, "span": 345, "principl": 345, "unfortun": 345, "strategi": 345, "consider": 345, "statist": 345, "mechan": 345, "neighborhood": 345, "intuit": 345, "flow": 345, "dd": 345, "dt": 345, "sum_": 345, "2n_": 345, "dim": 345, "x_j": 345, "_j": 345, "hamiltonian": 345, "bracket": 345, "summat": 345, "think": 345, "statement": 345, "vlasov": 345, "extrem": [345, 348], "benefit": 345, "cbe": 345, "long": [345, 348, 352], "importantli": 345, "manifest": 345, "By": [345, 352], "v_j": 345, "sum_i": 345, "v_i": 345, "x_i": 345, "sigma_": 345, "ij": 345, "convei": 345, "multi": 345, "isn": [345, 348], "troublesom": 345, "fortun": 345, "onlyon": 345, "_0": [345, 352], "energyto": 345, "relianc": 345, "30": [345, 347, 348], "458": 345, "virialequilibrium": 345, "0x7f5675f5d220": 345, "privat": 345, "technic": 345, "0x7f5675f5d7f0": 345, "yipe": 345, "generate_particl": 345, "32": [345, 348], "615": 345, "617": 345, "628": 345, "pdf": 345, "cummul": 345, "quit": 345, "661": 345, "664": 345, "706": 345, "03": [345, 347], "056": 345, "057": 345, "059": 345, "061": 345, "062": 345, "069": 345, "1e": 345, "typeerror": 345, "traceback": 345, "recent": 345, "34": [345, 347], "virtualenv": 345, "lib": 345, "python3": 345, "visual": 345, "particle_plot": 345, "782": 345, "x_field": 345, "y_field": 345, "z_field": 345, "778": [345, 348], "break": 345, "780": 345, "781": 345, "particleprojectionplot": 345, "784": 345, "plotwindow": 345, "style": [345, 348], "785": 345, "particlephaseplot": [345, 347], "786": 345, "787": 345, "unexpect": 345, "replic": [347, 353], "scientif": 347, "inquiri": 347, "assist": 347, "replica": 347, "cluster_modul": 347, "briefli": 347, "observation": 347, "get_collect": 347, "hopefulli": 347, "29": 347, "384": 347, "enumer": 347, "backend": 347, "evid": 347, "beauti": 347, "entri": 347, "obj": 347, "pprint": 347, "61": 347, "tmin": 347, "9747": 347, "88": 347, "526": 347, "943": 347, "94": 347, "57": [347, 348], "1100": 347, "1239": 347, "188839": 347, "rt": [347, 348], "1420": 347, "0569": 347, "5488": 347, "712": 347, "345": 347, "76": 347, "70": [347, 353], "450": 347, "91429": 347, "0162": 347, "78": 347, "585": 347, "013": 347, "44": 347, "577": 347, "767": 347, "112": 347, "81": 347, "408": 347, "290021": 347, "3030": 347, "1883": 347, "turn": [347, 348], "799": 347, "wed": 347, "392": 347, "394": 347, "figsiz": [347, 352], "set_yscal": 347, "set_ylim": 347, "set_xlim": 347, "set_ylabel": [347, 352], "set_xlabel": [347, 352], "fun": 347, "collections_model": 347, "collections_exampl": 347, "setup_particle_": 347, "109": 347, "142": 347, "167": 347, "38": [347, 348], "652": 347, "45": 347, "212": 347, "426": 347, "758": 347, "47": 347, "825": 347, "2000": 347, "51": 347, "511": 347, "515": 347, "522": 347, "525": 347, "528": 347, "2e": 347, "06": 347, "272": 347, "277": 347, "283": 347, "285": 347, "298": 347, "topic": 347, "prepar": 347, "minim": [347, 353], "amin": 347, "bin": 347, "ouput": 347, "chane": 347, "56": 347, "862": 347, "405": 347, "407": 347, "home": 347, "ediggin": 347, "198": 347, "integrationwarn": 347, "occurr": 347, "roundoff": 347, "detect": 347, "underestim": 347, "ret": 347, "quad": 347, "vline": 347, "ymin": 347, "1e2": 347, "ymax": 347, "1e13": 347, "weirdli": 347, "never": 347, "intend": 347, "force_fix": 347, "tag": [347, 352], "artifici": 347, "force_radiu": 347, "mirror": 347, "model_fix": 347, "803": 347, "338": 347, "339": 347, "clustermod": 347, "uster_gener": 347, "941": 347, "fresh": 347, "992": 347, "extrapol": 347, "full_output": 347, "960": 347, "153": 347, "add_subplot": 347, "111": 347, "sensibl": 347, "choic": [347, 353], "far": [347, 348], "neglig": 347, "anywai": 347, "46": 347, "968": 347, "088": 347, "149": 347, "229": 347, "231": 347, "336": 347, "48": 347, "208": 347, "106": 347, "310": 347, "436": 347, "446": 347, "464": 347, "468": 347, "475": 347, "538": 347, "665e": 347, "961": 347, "964": 347, "976": 347, "007": 347, "36": 347, "big": 348, "idea": [348, 352], "underpin": 348, "example_profil": 348, "1e10": 348, "300": [348, 352], "74": 348, "60387957432596": 348, "whole": 348, "rememb": 348, "ed": 348, "won": 348, "alert": 348, "colossu": 348, "ccosmo": 348, "setcosmologi": 348, "planck18": 348, "hubble_const": 348, "omega_matt": 348, "om0": 348, "omega_lambda": 348, "ode0": 348, "546": 348, "1e15": 348, "modeldiemer19": 348, "nfw_scale_dens": [348, 353], "ylabel": 348, "session": 348, "115": 348, "r2500": 348, "2500": 348, "1e1": 348, "1e4": 348, "jupyt": 348, "render": 348, "properli": 348, "cgparam": 348, "15000": 348, "876": 348, "878": 348, "101": 348, "pictur": 348, "perspect": 348, "pai": 348, "attent": 348, "account": 348, "pertin": 348, "takeawai": 348, "machineri": 348, "advantag": 348, "yscale": 348, "good": [348, 352], "545": 348, "00110331": 348, "intrins": 348, "ic_exampl": 348, "695": 348, "0x7f90bef59fd0": 348, "accomod": 348, "scenario": 348, "create_dataset": 348, "front": [348, 353], "setup_ramses_": 348, "729": 348, "755": 348, "915": 348, "944": 348, "merger_config": 348, "txt": 348, "uh": [349, 350, 351], "oh": [349, 350, 351], "yourself": [349, 350, 351], "contact": [349, 350, 351], "draw": 352, "tot": 352, "sinc": 352, "tangenti": 352, "number_of_particl": 352, "latter": 352, "magnetic_field": 352, "hand": 352, "equal": 352, "n_ga": 352, "isotropi": 352, "dv": 352, "2dv": 352, "net": 352, "further": 352, "cal": 352, "integrel": 352, "pair": 352, "reject": 352, "check_dm_viri": 352, "check_star_viri": 352, "accuraci": 352, "diff": 352, "loglog": 352, "vir": 352, "markers": 352, "legend": 352, "difficulti": 352, "infinit": 352, "generate_star_particl": 352, "carri": 352, "wish": 352, "n_dm": 352, "n_star": 352, "star_particl": 352, "cover": 352, "generate_": 352, "_particl": 352, "kind": 352, "all_particl": 352, "gas_part": 352, "gas_parts1": 352, "gas_parts2": 352, "drop_ptyp": 352, "translat": 352, "boost": 352, "frame": 352, "shift": 352, "movement": 352, "mbh": 352, "0e9": 352, "rather": 352, "keep": 352, "track": 352, "num_particles1": 352, "num_particles2": 352, "200_000": 352, "halo1": 352, "halo2": 352, "cluster1": 352, "cluster2": 352, "pick": 352, "overwritten": 352, "ug": 352, "microgauss": 352, "magnetic_field_x": 352, "metal": 352, "zsun": 352, "obvious": 352, "my_particl": 352, "new_part": 352, "gas_onli": 352, "dm_star": 352, "cluster_": 352, "from_gadget_fil": 352, "fall": 353, "0e": 353, "manifestli": 353, "0e7": 353, "dp": 353, "mp": 353, "finit": 353, "3m": 353, "0e15": 353, "bulg": 353, "shperic": 353, "regularli": 353, "brightest": 353, "bcg": 353, "m_h": 353, "rho_e": 353, "3n": 353, "d_n": 353, "1215n": 353, "184": 353, "229635n": 353, "band": 353, "modif": 353, "flat": 353, "parameter": 353, "increas": 353, "freedom": 353, "v06": 353, "am06": 353, "ca_c": 353, "t_": 353, "t_0t": 353, "min": 353, "a_": 353, "k_": 353, "journal": 353, "1965": 353, "kinemat": 353, "trudi": 353, "inst": 353, "astrofiz": 353, "alma": 353, "ata": 353, "87": 353, "jone": 353, "murrai": 353, "van": 353, "speybroeck": 353, "nearbi": 353, "1978": 353, "677": 353, "cold": 353}, "objects": {"": [[1, 0, 0, "-", "codes"], [11, 0, 0, "-", "collection"], [60, 0, 0, "-", "fields"], [103, 0, 0, "-", "gravity"], [146, 0, 0, "-", "ics"], [163, 0, 0, "-", "model"], [236, 0, 0, "-", "particles"], [259, 0, 0, "-", "radial_profiles"], [303, 0, 0, "-", "relations"], [309, 0, 0, "-", "utils"], [322, 0, 0, "-", "virial"]], "codes": [[2, 1, 1, "", "setup_arepo_ics"], [3, 1, 1, "", "setup_art_ics"], [4, 1, 1, "", "setup_athena_ics"], [5, 1, 1, "", "setup_enzo_ics"], [6, 1, 1, "", "setup_flash_ics"], [7, 1, 1, "", "setup_gamer_ics"], [8, 1, 1, "", "setup_gizmo_ics"], [9, 1, 1, "", "setup_ramses_ics"], [10, 1, 1, "", "write_amr_particles"]], "collection": [[12, 2, 1, "", "Ascasibar07"], [24, 2, 1, "", "ClusterCollection"], [35, 2, 1, "", "Sanderson10"], [47, 2, 1, "", "Vikhlinin06"], [59, 1, 1, "", "get_collections"]], "collection.Ascasibar07": [[13, 3, 1, "", "__init__"], [14, 4, 1, "", "description"], [15, 3, 1, "", "load"], [16, 4, 1, "", "load_method"], [17, 3, 1, "", "load_model"], [18, 4, 1, "", "name"], [19, 5, 1, "", "names"], [20, 5, 1, "", "parameters"], [21, 4, 1, "", "path"], [22, 3, 1, "", "plot_summary"], [23, 5, 1, "", "profiles"]], "collection.ClusterCollection": [[25, 3, 1, "", "__init__"], [26, 4, 1, "", "description"], [27, 4, 1, "", "load_method"], [28, 3, 1, "", "load_model"], [29, 4, 1, "", "name"], [30, 5, 1, "", "names"], [31, 5, 1, "", "parameters"], [32, 4, 1, "", "path"], [33, 3, 1, "", "plot_summary"], [34, 5, 1, "", "profiles"]], "collection.Sanderson10": [[36, 3, 1, "", "__init__"], [37, 4, 1, "", "description"], [38, 3, 1, "", "load"], [39, 4, 1, "", "load_method"], [40, 3, 1, "", "load_model"], [41, 4, 1, "", "name"], [42, 5, 1, "", "names"], [43, 5, 1, "", "parameters"], [44, 4, 1, "", "path"], [45, 3, 1, "", "plot_summary"], [46, 5, 1, "", "profiles"]], "collection.Vikhlinin06": [[48, 3, 1, "", "__init__"], [49, 4, 1, "", "description"], [50, 3, 1, "", "load"], [51, 4, 1, "", "load_method"], [52, 3, 1, "", "load_model"], [53, 4, 1, "", "name"], [54, 5, 1, "", "names"], [55, 5, 1, "", "parameters"], [56, 4, 1, "", "path"], [57, 3, 1, "", "plot_summary"], [58, 5, 1, "", "profiles"]], "fields": [[61, 2, 1, "", "ClusterField"], [66, 2, 1, "", "GaussianRandomField"], [71, 2, 1, "", "RadialRandomMagneticField"], [76, 2, 1, "", "RadialRandomMagneticVectorPotential"], [81, 2, 1, "", "RadialRandomVelocityField"], [86, 2, 1, "", "RandomMagneticField"], [91, 2, 1, "", "RandomMagneticVectorPotential"], [96, 2, 1, "", "RandomVelocityField"], [101, 1, 1, "", "parse_value"], [102, 1, 1, "", "rot_3d"]], "fields.ClusterField": [[62, 3, 1, "", "__init__"], [63, 3, 1, "", "map_field_to_particles"], [64, 5, 1, "", "units"], [65, 3, 1, "", "write_file"]], "fields.GaussianRandomField": [[67, 3, 1, "", "__init__"], [68, 3, 1, "", "map_field_to_particles"], [69, 5, 1, "", "units"], [70, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[72, 3, 1, "", "__init__"], [73, 3, 1, "", "map_field_to_particles"], [74, 5, 1, "", "units"], [75, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[77, 3, 1, "", "__init__"], [78, 3, 1, "", "map_field_to_particles"], [79, 5, 1, "", "units"], [80, 3, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[82, 3, 1, "", "__init__"], [83, 3, 1, "", "map_field_to_particles"], [84, 5, 1, "", "units"], [85, 3, 1, "", "write_file"]], "fields.RandomMagneticField": [[87, 3, 1, "", "__init__"], [88, 3, 1, "", "map_field_to_particles"], [89, 5, 1, "", "units"], [90, 3, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[92, 3, 1, "", "__init__"], [93, 3, 1, "", "map_field_to_particles"], [94, 5, 1, "", "units"], [95, 3, 1, "", "write_file"]], "fields.RandomVelocityField": [[97, 3, 1, "", "__init__"], [98, 3, 1, "", "map_field_to_particles"], [99, 5, 1, "", "units"], [100, 3, 1, "", "write_file"]], "gravity": [[104, 2, 1, "", "AQUALGravity"], [113, 2, 1, "", "EMONDGravity"], [122, 2, 1, "", "Gravity"], [128, 2, 1, "", "NewtonianGravity"], [137, 2, 1, "", "QUMONDGravity"]], "gravity.AQUALGravity": [[105, 3, 1, "", "__init__"], [106, 4, 1, "", "attrs"], [107, 3, 1, "", "compute_mass"], [108, 3, 1, "", "compute_potential"], [109, 5, 1, "", "is_calculated"], [110, 4, 1, "", "model"], [111, 3, 1, "", "potential"], [112, 3, 1, "", "reset"]], "gravity.EMONDGravity": [[114, 3, 1, "", "__init__"], [115, 4, 1, "", "attrs"], [116, 3, 1, "", "compute_mass"], [117, 3, 1, "", "compute_potential"], [118, 5, 1, "", "is_calculated"], [119, 4, 1, "", "model"], [120, 3, 1, "", "potential"], [121, 3, 1, "", "reset"]], "gravity.Gravity": [[123, 3, 1, "", "__init__"], [124, 4, 1, "", "attrs"], [125, 5, 1, "", "is_calculated"], [126, 4, 1, "", "model"], [127, 3, 1, "", "reset"]], "gravity.NewtonianGravity": [[129, 3, 1, "", "__init__"], [130, 4, 1, "", "attrs"], [131, 3, 1, "", "compute_mass"], [132, 3, 1, "", "compute_potential"], [133, 5, 1, "", "is_calculated"], [134, 4, 1, "", "model"], [135, 3, 1, "", "potential"], [136, 3, 1, "", "reset"]], "gravity.QUMONDGravity": [[138, 3, 1, "", "__init__"], [139, 4, 1, "", "attrs"], [140, 3, 1, "", "compute_mass"], [141, 3, 1, "", "compute_potential"], [142, 5, 1, "", "is_calculated"], [143, 4, 1, "", "model"], [144, 3, 1, "", "potential"], [145, 3, 1, "", "reset"]], "ics": [[147, 2, 1, "", "ClusterICs"], [162, 1, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[148, 3, 1, "", "__init__"], [149, 4, 1, "", "basename"], [150, 4, 1, "", "center"], [151, 3, 1, "", "create_dataset"], [152, 3, 1, "", "from_file"], [153, 4, 1, "", "mag_file"], [154, 4, 1, "", "num_halos"], [155, 4, 1, "", "profiles"], [156, 4, 1, "", "r_max"], [157, 3, 1, "", "resample_particle_ics"], [158, 3, 1, "", "setup_particle_ics"], [159, 3, 1, "", "to_file"], [160, 4, 1, "", "tot_np"], [161, 4, 1, "", "velocity"]], "model": [[164, 2, 1, "", "ClusterModel"], [200, 2, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[165, 3, 1, "", "__init__"], [166, 4, 1, "", "attrs"], [167, 3, 1, "", "check_dm_virial"], [168, 3, 1, "", "check_hse"], [169, 3, 1, "", "check_star_virial"], [170, 4, 1, "", "default_fields"], [171, 5, 1, "", "dm_virial"], [172, 4, 1, "", "fields"], [173, 3, 1, "", "find_field_at_radius"], [174, 3, 1, "", "from_arrays"], [175, 3, 1, "", "from_dens_and_entr"], [176, 3, 1, "", "from_dens_and_tden"], [177, 3, 1, "", "from_dens_and_temp"], [178, 3, 1, "", "from_h5_file"], [179, 3, 1, "", "generate_dm_particles"], [180, 3, 1, "", "generate_gas_particles"], [181, 3, 1, "", "generate_star_particles"], [182, 3, 1, "", "generate_tracer_particles"], [183, 3, 1, "", "is_physical"], [184, 3, 1, "", "keys"], [185, 3, 1, "", "mass_in_radius"], [186, 3, 1, "", "no_gas"], [187, 4, 1, "", "num_elements"], [188, 3, 1, "", "plot"], [189, 5, 1, "", "pot"], [190, 3, 1, "", "rebuild_physical"], [191, 3, 1, "", "set_field"], [192, 3, 1, "", "set_magnetic_field_from_beta"], [193, 3, 1, "", "set_magnetic_field_from_density"], [194, 3, 1, "", "set_rmax"], [195, 5, 1, "", "star_virial"], [196, 5, 1, "", "virialization_method"], [197, 3, 1, "", "write_model_to_ascii"], [198, 3, 1, "", "write_model_to_binary"], [199, 3, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[201, 3, 1, "", "__init__"], [202, 4, 1, "", "attrs"], [203, 3, 1, "", "check_dm_virial"], [204, 3, 1, "", "check_hse"], [205, 3, 1, "", "check_star_virial"], [206, 4, 1, "", "default_fields"], [207, 5, 1, "", "dm_virial"], [208, 4, 1, "", "fields"], [209, 3, 1, "", "find_field_at_radius"], [210, 3, 1, "", "from_arrays"], [211, 3, 1, "", "from_dens_and_entr"], [212, 3, 1, "", "from_dens_and_tden"], [213, 3, 1, "", "from_dens_and_temp"], [214, 3, 1, "", "from_h5_file"], [215, 3, 1, "", "generate_dm_particles"], [216, 3, 1, "", "generate_gas_particles"], [217, 3, 1, "", "generate_star_particles"], [218, 3, 1, "", "generate_tracer_particles"], [219, 3, 1, "", "is_physical"], [220, 3, 1, "", "keys"], [221, 3, 1, "", "mass_in_radius"], [222, 3, 1, "", "no_gas"], [223, 4, 1, "", "num_elements"], [224, 3, 1, "", "plot"], [225, 5, 1, "", "pot"], [226, 3, 1, "", "rebuild_physical"], [227, 3, 1, "", "set_field"], [228, 3, 1, "", "set_magnetic_field_from_beta"], [229, 3, 1, "", "set_magnetic_field_from_density"], [230, 3, 1, "", "set_rmax"], [231, 5, 1, "", "star_virial"], [232, 5, 1, "", "virialization_method"], [233, 3, 1, "", "write_model_to_ascii"], [234, 3, 1, "", "write_model_to_binary"], [235, 3, 1, "", "write_model_to_h5"]], "particles": [[237, 2, 1, "", "ClusterParticles"], [257, 1, 1, "", "concat_clusters"], [258, 1, 1, "", "resample_clusters"]], "particles.ClusterParticles": [[238, 3, 1, "", "__init__"], [239, 3, 1, "", "add_black_hole"], [240, 3, 1, "", "add_offsets"], [241, 3, 1, "", "drop_ptypes"], [242, 4, 1, "", "fields"], [243, 3, 1, "", "from_fields"], [244, 3, 1, "", "from_file"], [245, 3, 1, "", "from_gadget_file"], [246, 3, 1, "", "from_h5_file"], [247, 3, 1, "", "keys"], [248, 3, 1, "", "make_radial_cut"], [249, 5, 1, "", "num_passive_scalars"], [250, 4, 1, "", "particle_types"], [251, 4, 1, "", "passive_scalars"], [252, 3, 1, "", "set_field"], [253, 3, 1, "", "to_yt_dataset"], [254, 3, 1, "", "write_particles"], [255, 3, 1, "", "write_particles_to_h5"], [256, 3, 1, "", "write_to_gadget_file"]], "radial_profiles": [[260, 2, 1, "", "RadialProfile"], [270, 1, 1, "", "ad07_density_profile"], [271, 1, 1, "", "ad07_temperature_profile"], [272, 1, 1, "", "am06_density_profile"], [273, 1, 1, "", "am06_temperature_profile"], [274, 1, 1, "", "baseline_entropy_profile"], [275, 1, 1, "", "beta_model_profile"], [276, 1, 1, "", "broken_entropy_profile"], [277, 1, 1, "", "constant_profile"], [278, 1, 1, "", "convert_nfw_to_hernquist"], [279, 1, 1, "", "cored_hernquist_density_profile"], [280, 1, 1, "", "cored_snfw_density_profile"], [281, 1, 1, "", "cored_snfw_mass_profile"], [282, 1, 1, "", "cored_snfw_total_mass"], [283, 1, 1, "", "einasto_density_profile"], [284, 1, 1, "", "einasto_mass_profile"], [285, 1, 1, "", "find_overdensity_radius"], [286, 1, 1, "", "find_radius_mass"], [287, 1, 1, "", "hernquist_density_profile"], [288, 1, 1, "", "hernquist_mass_profile"], [289, 1, 1, "", "nfw_density_profile"], [290, 1, 1, "", "nfw_mass_profile"], [291, 1, 1, "", "nfw_scale_density"], [292, 1, 1, "", "power_law_profile"], [293, 1, 1, "", "rescale_profile_by_mass"], [294, 1, 1, "", "snfw_conc"], [295, 1, 1, "", "snfw_density_profile"], [296, 1, 1, "", "snfw_mass_profile"], [297, 1, 1, "", "snfw_total_mass"], [298, 1, 1, "", "tnfw_density_profile"], [299, 1, 1, "", "tnfw_mass_profile"], [300, 1, 1, "", "vikhlinin_density_profile"], [301, 1, 1, "", "vikhlinin_temperature_profile"], [302, 1, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[261, 3, 1, "", "__init__"], [262, 3, 1, "", "add_core"], [263, 3, 1, "", "built_in"], [264, 4, 1, "", "builtin"], [265, 3, 1, "", "cutoff"], [266, 3, 1, "", "from_array"], [267, 3, 1, "", "from_binary"], [268, 3, 1, "", "plot"], [269, 3, 1, "", "to_binary"]], "relations": [[304, 1, 1, "", "convert_ne_to_density"], [305, 1, 1, "", "f_gas"], [306, 1, 1, "", "m_bcg"], [307, 1, 1, "", "m_sat"], [308, 1, 1, "", "r_bcg"]], "utils": [[310, 1, 1, "", "ensure_list"], [311, 1, 1, "", "ensure_ytarray"], [312, 1, 1, "", "ensure_ytquantity"], [313, 1, 1, "", "eprint"], [314, 1, 1, "", "generate_particle_radii"], [315, 1, 1, "", "integrate"], [316, 1, 1, "", "integrate_mass"], [317, 1, 1, "", "integrate_toinf"], [318, 1, 1, "", "log_string"], [319, 1, 1, "", "moving_average"], [320, 1, 1, "", "parse_prng"], [321, 1, 1, "", "truncate_spline"]], "virial": [[323, 2, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[324, 3, 1, "", "__init__"], [325, 3, 1, "", "check_virial"], [326, 5, 1, "", "df"], [327, 5, 1, "", "ee"], [328, 5, 1, "", "ff"], [329, 3, 1, "", "generate_particles"], [330, 4, 1, "", "model"], [331, 4, 1, "", "num_elements"], [332, 4, 1, "", "ptype"], [333, 5, 1, "", "sigma"], [334, 4, 1, "", "type"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"quickstart": [0, 348, 349, 350], "guid": [0, 338, 347, 348, 349, 350], "content": [0, 337, 340, 341, 343, 344, 347, 348], "introduct": 0, "get": [0, 347, 350, 351], "packag": 0, "from": [0, 342, 343, 352], "pypi": 0, "With": 0, "conda": 0, "pip": 0, "sourc": 0, "depend": 0, "start": 0, "unit": [0, 64, 69, 74, 79, 84, 89, 94, 99], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 336, 338], "avail": [1, 337, 340], "softwar": 1, "setup_arepo_": 2, "setup_art_": 3, "setup_athena_": 4, "setup_enzo_": 5, "setup_flash_": 6, "setup_gamer_": 7, "setup_gizmo_": 8, "setup_ramses_": 9, "write_amr_particl": 10, "collect": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 337, 347], "ascasibar07": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__init__": [13, 25, 36, 48, 62, 67, 72, 77, 82, 87, 92, 97, 105, 114, 123, 129, 138, 148, 165, 201, 238, 261, 324], "descript": [14, 26, 37, 49], "load": [15, 38, 50], "load_method": [16, 27, 39, 51], "load_model": [17, 28, 40, 52], "name": [18, 19, 29, 30, 41, 42, 53, 54], "paramet": [20, 31, 43, 55, 342], "path": [21, 32, 44, 56], "plot_summari": [22, 33, 45, 57], "profil": [23, 34, 46, 58, 155, 259, 343, 344, 353], "clustercollect": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "sanderson10": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "vikhlinin06": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_collect": 59, "field": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 172, 208, 242, 339, 343, 352], "clusterfield": [61, 62, 63, 64, 65], "map_field_to_particl": [63, 68, 73, 78, 83, 88, 93, 98], "write_fil": [65, 70, 75, 80, 85, 90, 95, 100], "gaussianrandomfield": [66, 67, 68, 69, 70], "radialrandommagneticfield": [71, 72, 73, 74, 75], "radialrandommagneticvectorpotenti": [76, 77, 78, 79, 80], "radialrandomvelocityfield": [81, 82, 83, 84, 85], "randommagneticfield": [86, 87, 88, 89, 90], "randommagneticvectorpotenti": [91, 92, 93, 94, 95], "randomvelocityfield": [96, 97, 98, 99, 100], "parse_valu": 101, "rot_3d": 102, "graviti": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 340, 343, 344, 351], "aqualgrav": [104, 105, 106, 107, 108, 109, 110, 111, 112], "attr": [106, 115, 124, 130, 139, 166, 202], "compute_mass": [107, 116, 131, 140], "compute_potenti": [108, 117, 132, 141], "is_calcul": [109, 118, 125, 133, 142], "model": [110, 119, 126, 134, 143, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 330, 343], "potenti": [111, 120, 135, 144, 339], "reset": [112, 121, 127, 136, 145], "emondgrav": [113, 114, 115, 116, 117, 118, 119, 120, 121], "newtoniangrav": [128, 129, 130, 131, 132, 133, 134, 135, 136], "qumondgrav": [137, 138, 139, 140, 141, 142, 143, 144, 145], "ic": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 336], "cluster": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 336, 339, 342, 343, 344, 350], "basenam": 149, "center": 150, "create_dataset": 151, "from_fil": [152, 244], "mag_fil": 153, "num_halo": 154, "r_max": 156, "resample_particle_": 157, "setup_particle_": 158, "to_fil": 159, "tot_np": 160, "veloc": [161, 339, 352], "compute_centers_for_binari": 162, "galaxi": 163, "clustermodel": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 343, 344, 352], "check_dm_viri": [167, 203], "check_hs": [168, 204], "check_star_viri": [169, 205], "default_field": [170, 206], "dm_virial": [171, 207], "find_field_at_radiu": [173, 209], "from_arrai": [174, 210, 266], "develop": [174, 210], "note": [174, 210, 340, 353], "from_dens_and_entr": [175, 211], "from_dens_and_tden": [176, 212], "from_dens_and_temp": [177, 213], "from_h5_fil": [178, 214, 246], "generate_dm_particl": [179, 215], "generate_gas_particl": [180, 216], "generate_star_particl": [181, 217], "generate_tracer_particl": [182, 218], "is_phys": [183, 219], "kei": [184, 220, 247], "mass_in_radiu": [185, 221], "no_ga": [186, 222], "num_el": [187, 223, 331], "plot": [188, 224, 268], "pot": [189, 225], "rebuild_phys": [190, 226], "method": [190, 226], "set_field": [191, 227, 252], "set_magnetic_field_from_beta": [192, 228], "set_magnetic_field_from_dens": [193, 229], "set_rmax": [194, 230], "star_viri": [195, 231], "virialization_method": [196, 232], "write_model_to_ascii": [197, 233], "write_model_to_binari": [198, 234], "write_model_to_h5": [199, 235], "hydrostaticequilibrium": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "particl": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 339, 344, 352], "clusterparticl": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 344, 352], "add_black_hol": 239, "add_offset": 240, "drop_ptyp": 241, "from_field": 243, "from_gadget_fil": 245, "make_radial_cut": 248, "num_passive_scalar": 249, "particle_typ": 250, "passive_scalar": 251, "to_yt_dataset": 253, "write_particl": 254, "write_particles_to_h5": 255, "write_to_gadget_fil": 256, "concat_clust": 257, "resample_clust": 258, "radial_profil": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "radial": [259, 339, 343, 344, 353], "radialprofil": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 344], "info": 260, "add_cor": 262, "built_in": 263, "builtin": [264, 347], "cutoff": 265, "from_binari": 267, "to_binari": 269, "ad07_density_profil": 270, "ad07_temperature_profil": 271, "am06_density_profil": 272, "am06_temperature_profil": 273, "baseline_entropy_profil": 274, "beta_model_profil": 275, "broken_entropy_profil": 276, "constant_profil": 277, "convert_nfw_to_hernquist": 278, "cored_hernquist_density_profil": 279, "cored_snfw_density_profil": 280, "cored_snfw_mass_profil": 281, "cored_snfw_total_mass": 282, "einasto_density_profil": 283, "einasto_mass_profil": 284, "find_overdensity_radiu": 285, "find_radius_mass": 286, "hernquist_density_profil": 287, "hernquist_mass_profil": 288, "nfw_density_profil": 289, "nfw_mass_profil": 290, "nfw_scale_dens": 291, "power_law_profil": 292, "rescale_profile_by_mass": 293, "snfw_conc": 294, "snfw_density_profil": 295, "snfw_mass_profil": 296, "snfw_total_mass": 297, "tnfw_density_profil": 298, "tnfw_mass_profil": 299, "vikhlinin_density_profil": 300, "vikhlinin_temperature_profil": 301, "walker_entropy_profil": 302, "relat": [303, 304, 305, 306, 307, 308], "convert_ne_to_dens": 304, "f_ga": 305, "m_bcg": 306, "m_sat": 307, "r_bcg": 308, "util": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "ensure_list": 310, "ensure_ytarrai": 311, "ensure_ytquant": 312, "eprint": 313, "generate_particle_radii": 314, "integr": 315, "integrate_mass": 316, "integrate_toinf": 317, "log_str": 318, "moving_averag": 319, "parse_prng": 320, "truncate_splin": 321, "virial": [322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 345, 352], "virialequilibrium": [323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 344], "gener": [323, 336, 339, 342, 343, 344, 350, 352, 353], "phase": 323, "space": 323, "densiti": [323, 343, 353], "check_viri": 325, "df": 326, "ee": 327, "ff": 328, "generate_particl": 329, "ptype": 332, "sigma": 333, "type": [334, 352], "api": [335, 338], "set": [336, 343], "up": 336, "ideal": 336, "problem": 336, "variou": 336, "flash": 336, "gamer": 336, "arepo": 336, "gizmo": 336, "enzo": 336, "rams": 336, "your": [336, 349], "configur": 336, "run": 336, "simul": [336, 349], "athena": 336, "dataset": 337, "access": [337, 344, 347], "built": 337, "In": 337, "custom": 337, "exampl": [338, 340], "3d": 339, "mathemat": [339, 340, 343, 352, 353], "overview": [339, 343, 352], "initi": [339, 342], "magnet": [339, 343], "random": 339, "vector": 339, "map": 339, "write": [339, 343], "out": [339, 350], "disk": [339, 343], "theori": 340, "mondian": [340, 351], "aqual": [340, 343], "implement": 340, "qumond": [340, 343], "refer": [340, 345, 353], "cluster_gener": [341, 344, 345], "featur": [341, 347], "resourc": 341, "indic": 341, "tabl": 341, "condit": 342, "script": 342, "file": 342, "reader": 343, "suggest": 343, "newtonian": 343, "mond": 343, "us": [343, 344, 346, 347], "ga": [343, 352], "temperatur": [343, 353], "total": 343, "entropi": [343, 353], "without": 343, "check": [343, 352], "hydrostat": 343, "equilibrium": [343, 352], "strength": 343, "beta": 343, "plasma": 343, "ad": [343, 352], "other": 343, "read": 343, "object": [343, 352], "user": 343, "advic": 343, "non": 343, "physic": 343, "system": 343, "data": 344, "structur": 344, "exist": 344, "creat": 344, "i": [344, 347, 352], "o": [344, 352], "oper": [344, 352], "insid": 344, "conent": 345, "galact": 345, "dynam": 345, "The": [345, 348, 350, 352], "distribut": 345, "function": 345, "collisionless": 345, "boltzmann": 345, "equat": 345, "jean": 345, "": 345, "theorem": 345, "eddington": 345, "formula": 345, "local": 345, "maxwellian": 345, "approxim": 345, "advanc": 346, "case": 346, "what": 347, "ar": 347, "how": 347, "do": 347, "One": 347, "technic": 347, "basic": 348, "build": 348, "foundat": 348, "rais": 348, "frame": 348, "finish": 348, "hous": 348, "first": 349, "most": 350, "funki": 351, "dark": 352, "matter": 352, "star": 352, "equilibria": 352, "class": 352, "drop": 352, "add": 352, "posit": 352, "offset": 352, "make": 352, "cut": 352, "radiu": 352, "black": 352, "hole": 352, "new": 352, "chang": 352, "gadget": 352, "like": 352, "constant": 353, "power": 353, "law": 353, "mass": 353, "nfw": 353, "super": 353, "truncat": 353, "hernquist": 353, "einasto": 353, "vikhlinin": 353, "et": 353, "al": 353, "2006": 353, "ascasibar": 353, "markevitch": 353, "baselin": 353}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Quickstart Guide": [[0, "quickstart-guide"]], "Contents": [[0, "contents"], [337, "contents"], [340, "contents"], [341, "contents"], [343, "contents"], [344, "Contents"], [347, "Contents"], [348, "Contents"]], "Introduction": [[0, "introduction"]], "Getting the Package": [[0, "getting-the-package"]], "From PyPI": [[0, "from-pypi"]], "With CONDA": [[0, "with-conda"]], "With PIP": [[0, "with-pip"]], "From Source": [[0, "from-source"]], "Dependencies": [[0, "dependencies"]], "Getting Started": [[0, "id1"]], "Quickstart Guides": [[0, "quickstart-guides"]], "Units": [[0, "units"]], "codes": [[1, "module-codes"]], "Available Softwares": [[1, "available-softwares"]], "codes.setup_arepo_ics": [[2, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[3, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[4, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[5, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[6, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[7, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[8, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[9, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[10, "codes-write-amr-particles"]], "collection": [[11, "module-collection"]], "collection.Ascasibar07": [[12, "collection-ascasibar07"]], "collection.Ascasibar07.__init__": [[13, "collection-ascasibar07-init"]], "collection.Ascasibar07.description": [[14, "collection-ascasibar07-description"]], "collection.Ascasibar07.load": [[15, "collection-ascasibar07-load"]], "collection.Ascasibar07.load_method": [[16, "collection-ascasibar07-load-method"]], "collection.Ascasibar07.load_model": [[17, "collection-ascasibar07-load-model"]], "collection.Ascasibar07.name": [[18, "collection-ascasibar07-name"]], "collection.Ascasibar07.names": [[19, "collection-ascasibar07-names"]], "collection.Ascasibar07.parameters": [[20, "collection-ascasibar07-parameters"]], "collection.Ascasibar07.path": [[21, "collection-ascasibar07-path"]], "collection.Ascasibar07.plot_summary": [[22, "collection-ascasibar07-plot-summary"]], "collection.Ascasibar07.profiles": [[23, "collection-ascasibar07-profiles"]], "collection.ClusterCollection": [[24, "collection-clustercollection"]], "collection.ClusterCollection.__init__": [[25, "collection-clustercollection-init"]], "collection.ClusterCollection.description": [[26, "collection-clustercollection-description"]], "collection.ClusterCollection.load_method": [[27, "collection-clustercollection-load-method"]], "collection.ClusterCollection.load_model": [[28, "collection-clustercollection-load-model"]], "collection.ClusterCollection.name": [[29, "collection-clustercollection-name"]], "collection.ClusterCollection.names": [[30, "collection-clustercollection-names"]], "collection.ClusterCollection.parameters": [[31, "collection-clustercollection-parameters"]], "collection.ClusterCollection.path": [[32, "collection-clustercollection-path"]], "collection.ClusterCollection.plot_summary": [[33, "collection-clustercollection-plot-summary"]], "collection.ClusterCollection.profiles": [[34, "collection-clustercollection-profiles"]], "collection.Sanderson10": [[35, "collection-sanderson10"]], "collection.Sanderson10.__init__": [[36, "collection-sanderson10-init"]], "collection.Sanderson10.description": [[37, "collection-sanderson10-description"]], "collection.Sanderson10.load": [[38, "collection-sanderson10-load"]], "collection.Sanderson10.load_method": [[39, "collection-sanderson10-load-method"]], "collection.Sanderson10.load_model": [[40, "collection-sanderson10-load-model"]], "collection.Sanderson10.name": [[41, "collection-sanderson10-name"]], "collection.Sanderson10.names": [[42, "collection-sanderson10-names"]], "collection.Sanderson10.parameters": [[43, "collection-sanderson10-parameters"]], "collection.Sanderson10.path": [[44, "collection-sanderson10-path"]], "collection.Sanderson10.plot_summary": [[45, "collection-sanderson10-plot-summary"]], "collection.Sanderson10.profiles": [[46, "collection-sanderson10-profiles"]], "collection.Vikhlinin06": [[47, "collection-vikhlinin06"]], "collection.Vikhlinin06.__init__": [[48, "collection-vikhlinin06-init"]], "collection.Vikhlinin06.description": [[49, "collection-vikhlinin06-description"]], "collection.Vikhlinin06.load": [[50, "collection-vikhlinin06-load"]], "collection.Vikhlinin06.load_method": [[51, "collection-vikhlinin06-load-method"]], "collection.Vikhlinin06.load_model": [[52, "collection-vikhlinin06-load-model"]], "collection.Vikhlinin06.name": [[53, "collection-vikhlinin06-name"]], "collection.Vikhlinin06.names": [[54, "collection-vikhlinin06-names"]], "collection.Vikhlinin06.parameters": [[55, "collection-vikhlinin06-parameters"]], "collection.Vikhlinin06.path": [[56, "collection-vikhlinin06-path"]], "collection.Vikhlinin06.plot_summary": [[57, "collection-vikhlinin06-plot-summary"]], "collection.Vikhlinin06.profiles": [[58, "collection-vikhlinin06-profiles"]], "collection.get_collections": [[59, "collection-get-collections"]], "fields": [[60, "module-fields"]], "fields.ClusterField": [[61, "fields-clusterfield"]], "fields.ClusterField.__init__": [[62, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[63, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[64, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[65, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[66, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[67, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[68, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[69, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[70, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[71, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[72, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[73, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[74, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[75, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[76, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[77, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[78, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[79, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[80, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[81, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[82, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[83, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[84, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[85, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[86, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[87, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[88, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[89, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[90, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[91, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[92, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[93, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[94, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[95, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[96, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[97, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[98, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[99, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[100, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[101, "fields-parse-value"]], "fields.rot_3d": [[102, "fields-rot-3d"]], "gravity": [[103, "module-gravity"]], "gravity.AQUALGravity": [[104, "gravity-aqualgravity"]], "gravity.AQUALGravity.__init__": [[105, "gravity-aqualgravity-init"]], "gravity.AQUALGravity.attrs": [[106, "gravity-aqualgravity-attrs"]], "gravity.AQUALGravity.compute_mass": [[107, "gravity-aqualgravity-compute-mass"]], "gravity.AQUALGravity.compute_potential": [[108, "gravity-aqualgravity-compute-potential"]], "gravity.AQUALGravity.is_calculated": [[109, "gravity-aqualgravity-is-calculated"]], "gravity.AQUALGravity.model": [[110, "gravity-aqualgravity-model"]], "gravity.AQUALGravity.potential": [[111, "gravity-aqualgravity-potential"]], "gravity.AQUALGravity.reset": [[112, "gravity-aqualgravity-reset"]], "gravity.EMONDGravity": [[113, "gravity-emondgravity"]], "gravity.EMONDGravity.__init__": [[114, "gravity-emondgravity-init"]], "gravity.EMONDGravity.attrs": [[115, "gravity-emondgravity-attrs"]], "gravity.EMONDGravity.compute_mass": [[116, "gravity-emondgravity-compute-mass"]], "gravity.EMONDGravity.compute_potential": [[117, "gravity-emondgravity-compute-potential"]], "gravity.EMONDGravity.is_calculated": [[118, "gravity-emondgravity-is-calculated"]], "gravity.EMONDGravity.model": [[119, "gravity-emondgravity-model"]], "gravity.EMONDGravity.potential": [[120, "gravity-emondgravity-potential"]], "gravity.EMONDGravity.reset": [[121, "gravity-emondgravity-reset"]], "gravity.Gravity": [[122, "gravity-gravity"]], "gravity.Gravity.__init__": [[123, "gravity-gravity-init"]], "gravity.Gravity.attrs": [[124, "gravity-gravity-attrs"]], "gravity.Gravity.is_calculated": [[125, "gravity-gravity-is-calculated"]], "gravity.Gravity.model": [[126, "gravity-gravity-model"]], "gravity.Gravity.reset": [[127, "gravity-gravity-reset"]], "gravity.NewtonianGravity": [[128, "gravity-newtoniangravity"]], "gravity.NewtonianGravity.__init__": [[129, "gravity-newtoniangravity-init"]], "gravity.NewtonianGravity.attrs": [[130, "gravity-newtoniangravity-attrs"]], "gravity.NewtonianGravity.compute_mass": [[131, "gravity-newtoniangravity-compute-mass"]], "gravity.NewtonianGravity.compute_potential": [[132, "gravity-newtoniangravity-compute-potential"]], "gravity.NewtonianGravity.is_calculated": [[133, "gravity-newtoniangravity-is-calculated"]], "gravity.NewtonianGravity.model": [[134, "gravity-newtoniangravity-model"]], "gravity.NewtonianGravity.potential": [[135, "gravity-newtoniangravity-potential"]], "gravity.NewtonianGravity.reset": [[136, "gravity-newtoniangravity-reset"]], "gravity.QUMONDGravity": [[137, "gravity-qumondgravity"]], "gravity.QUMONDGravity.__init__": [[138, "gravity-qumondgravity-init"]], "gravity.QUMONDGravity.attrs": [[139, "gravity-qumondgravity-attrs"]], "gravity.QUMONDGravity.compute_mass": [[140, "gravity-qumondgravity-compute-mass"]], "gravity.QUMONDGravity.compute_potential": [[141, "gravity-qumondgravity-compute-potential"]], "gravity.QUMONDGravity.is_calculated": [[142, "gravity-qumondgravity-is-calculated"]], "gravity.QUMONDGravity.model": [[143, "gravity-qumondgravity-model"]], "gravity.QUMONDGravity.potential": [[144, "gravity-qumondgravity-potential"]], "gravity.QUMONDGravity.reset": [[145, "gravity-qumondgravity-reset"]], "ics": [[146, "module-ics"]], "ics.ClusterICs": [[147, "ics-clusterics"]], "ics.ClusterICs.__init__": [[148, "ics-clusterics-init"]], "ics.ClusterICs.basename": [[149, "ics-clusterics-basename"]], "ics.ClusterICs.center": [[150, "ics-clusterics-center"]], "ics.ClusterICs.create_dataset": [[151, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[152, "ics-clusterics-from-file"]], "ics.ClusterICs.mag_file": [[153, "ics-clusterics-mag-file"]], "ics.ClusterICs.num_halos": [[154, "ics-clusterics-num-halos"]], "ics.ClusterICs.profiles": [[155, "ics-clusterics-profiles"]], "ics.ClusterICs.r_max": [[156, "ics-clusterics-r-max"]], "ics.ClusterICs.resample_particle_ics": [[157, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[158, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[159, "ics-clusterics-to-file"]], "ics.ClusterICs.tot_np": [[160, "ics-clusterics-tot-np"]], "ics.ClusterICs.velocity": [[161, "ics-clusterics-velocity"]], "ics.compute_centers_for_binary": [[162, "ics-compute-centers-for-binary"]], "model": [[163, "module-model"]], "Galaxy Cluster Models": [[163, "galaxy-cluster-models"]], "model.ClusterModel": [[164, "model-clustermodel"]], "model.ClusterModel.__init__": [[165, "model-clustermodel-init"]], "model.ClusterModel.attrs": [[166, "model-clustermodel-attrs"]], "model.ClusterModel.check_dm_virial": [[167, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[168, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[169, "model-clustermodel-check-star-virial"]], "model.ClusterModel.default_fields": [[170, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[171, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[172, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[173, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.from_arrays": [[174, "model-clustermodel-from-arrays"]], "development note": [[174, null], [210, null]], "model.ClusterModel.from_dens_and_entr": [[175, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[176, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[177, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[178, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[179, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[180, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[181, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[182, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.is_physical": [[183, "model-clustermodel-is-physical"]], "model.ClusterModel.keys": [[184, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[185, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[186, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[187, "model-clustermodel-num-elements"]], "model.ClusterModel.plot": [[188, "model-clustermodel-plot"]], "model.ClusterModel.pot": [[189, "model-clustermodel-pot"]], "model.ClusterModel.rebuild_physical": [[190, "model-clustermodel-rebuild-physical"]], "Method": [[190, "method"], [226, "method"]], "model.ClusterModel.set_field": [[191, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[192, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[193, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[194, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[195, "model-clustermodel-star-virial"]], "model.ClusterModel.virialization_method": [[196, "model-clustermodel-virialization-method"]], "model.ClusterModel.write_model_to_ascii": [[197, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[198, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[199, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[200, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[201, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.attrs": [[202, "model-hydrostaticequilibrium-attrs"]], "model.HydrostaticEquilibrium.check_dm_virial": [[203, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[204, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[205, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.default_fields": [[206, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[207, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[208, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[209, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.from_arrays": [[210, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[211, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[212, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[213, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[214, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[215, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[216, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[217, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[218, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.is_physical": [[219, "model-hydrostaticequilibrium-is-physical"]], "model.HydrostaticEquilibrium.keys": [[220, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[221, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[222, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[223, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.plot": [[224, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.pot": [[225, "model-hydrostaticequilibrium-pot"]], "model.HydrostaticEquilibrium.rebuild_physical": [[226, "model-hydrostaticequilibrium-rebuild-physical"]], "model.HydrostaticEquilibrium.set_field": [[227, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[228, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[229, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[230, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[231, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.virialization_method": [[232, "model-hydrostaticequilibrium-virialization-method"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[233, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[234, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[235, "model-hydrostaticequilibrium-write-model-to-h5"]], "particles": [[236, "module-particles"]], "particles.ClusterParticles": [[237, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[238, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[239, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[240, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[241, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.fields": [[242, "particles-clusterparticles-fields"]], "particles.ClusterParticles.from_fields": [[243, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[244, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[245, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[246, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[247, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[248, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[249, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.particle_types": [[250, "particles-clusterparticles-particle-types"]], "particles.ClusterParticles.passive_scalars": [[251, "particles-clusterparticles-passive-scalars"]], "particles.ClusterParticles.set_field": [[252, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[253, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[254, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[255, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[256, "particles-clusterparticles-write-to-gadget-file"]], "particles.concat_clusters": [[257, "particles-concat-clusters"]], "particles.resample_clusters": [[258, "particles-resample-clusters"]], "radial_profiles": [[259, "module-radial_profiles"]], "Radial Profiles": [[259, "id1"], [344, "Radial-Profiles"], [353, "radial-profiles"]], "radial_profiles.RadialProfile": [[260, "radial-profiles-radialprofile"]], "info": [[260, null]], "radial_profiles.RadialProfile.__init__": [[261, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[262, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[263, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[264, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[265, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[266, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[267, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.plot": [[268, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[269, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[270, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[271, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[272, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[273, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[274, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[275, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[276, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[277, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[278, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[279, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[280, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[281, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[282, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[283, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[284, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[285, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[286, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[287, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[288, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[289, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[290, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[291, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[292, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[293, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[294, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[295, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[296, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[297, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[298, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[299, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[300, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[301, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[302, "radial-profiles-walker-entropy-profile"]], "relations": [[303, "module-relations"]], "Relations": [[303, "id1"]], "relations.convert_ne_to_density": [[304, "relations-convert-ne-to-density"]], "relations.f_gas": [[305, "relations-f-gas"]], "relations.m_bcg": [[306, "relations-m-bcg"]], "relations.m_sat": [[307, "relations-m-sat"]], "relations.r_bcg": [[308, "relations-r-bcg"]], "utils": [[309, "module-utils"]], "utils.ensure_list": [[310, "utils-ensure-list"]], "utils.ensure_ytarray": [[311, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[312, "utils-ensure-ytquantity"]], "utils.eprint": [[313, "utils-eprint"]], "utils.generate_particle_radii": [[314, "utils-generate-particle-radii"]], "utils.integrate": [[315, "utils-integrate"]], "utils.integrate_mass": [[316, "utils-integrate-mass"]], "utils.integrate_toinf": [[317, "utils-integrate-toinf"]], "utils.log_string": [[318, "utils-log-string"]], "utils.moving_average": [[319, "utils-moving-average"]], "utils.parse_prng": [[320, "utils-parse-prng"]], "utils.truncate_spline": [[321, "utils-truncate-spline"]], "virial": [[322, "module-virial"]], "virial.VirialEquilibrium": [[323, "virial-virialequilibrium"]], "Generating the Phase Space Density": [[323, "generating-the-phase-space-density"]], "virial.VirialEquilibrium.__init__": [[324, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[325, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.df": [[326, "virial-virialequilibrium-df"]], "virial.VirialEquilibrium.ee": [[327, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[328, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[329, "virial-virialequilibrium-generate-particles"]], "virial.VirialEquilibrium.model": [[330, "virial-virialequilibrium-model"]], "virial.VirialEquilibrium.num_elements": [[331, "virial-virialequilibrium-num-elements"]], "virial.VirialEquilibrium.ptype": [[332, "virial-virialequilibrium-ptype"]], "virial.VirialEquilibrium.sigma": [[333, "virial-virialequilibrium-sigma"]], "virial.VirialEquilibrium.type": [[334, "virial-virialequilibrium-type"]], "API": [[335, "api"]], "Setting Up Idealized Cluster Problems in Various Codes": [[336, "setting-up-idealized-cluster-problems-in-various-codes"]], "FLASH": [[336, "flash"]], "GAMER": [[336, "gamer"]], "Arepo": [[336, "arepo"]], "GIZMO": [[336, "gizmo"]], "Enzo": [[336, "enzo"]], "Ramses": [[336, "ramses"]], "Generating your ICs": [[336, "generating-your-ics"]], "Configuring RAMSES": [[336, "configuring-ramses"]], "Running the Simulation": [[336, "running-the-simulation"]], "Athena++": [[336, "athena"]], "Collections": [[337, "collections"]], "Available Datasets": [[337, "available-datasets"]], "Accessing Collections": [[337, "accessing-collections"]], "Built-In Collections": [[337, "built-in-collections"]], "Custom Collections": [[337, "custom-collections"]], "Examples": [[338, "examples"]], "API Guides": [[338, "api-guides"]], "Code Examples": [[338, "code-examples"]], "Generating 3D Cluster Fields": [[339, "generating-3d-cluster-fields"]], "Mathematical Overview": [[339, "mathematical-overview"]], "Initializing a Magnetic Field": [[339, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[339, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[339, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[339, "initializing-a-velocity-field"]], "Random Velocity Fields": [[339, "random-velocity-fields"]], "Radial Random Velocity Fields": [[339, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[339, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[339, "writing-a-field-out-to-disk"]], "Gravity Theories": [[340, "gravity-theories"]], "Available Gravity Theories": [[340, "available-gravity-theories"]], "MONDian Gravity": [[340, "mondian-gravity"]], "AQUAL": [[340, "aqual"]], "Implementation": [[340, "implementation"]], "QUMOND": [[340, "qumond"]], "Mathematical Note": [[340, null], [353, null]], "Example": [[340, null]], "References": [[340, "references"], [345, "References"], [353, "references"]], "cluster_generator": [[341, "cluster-generator"]], "Features": [[341, "features"]], "Resources": [[341, "resources"]], "Indices and tables": [[341, "indices-and-tables"]], "Initial Conditions Generation": [[342, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[342, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[342, "clusterics-parameter-files"]], "Cluster Models": [[343, "cluster-models"]], "Cluster Models: Mathematical Overview": [[343, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[343, null]], "Newtonian Gravity": [[343, "newtonian-gravity"]], "MOND Gravity: AQUAL": [[343, "mond-gravity-aqual"]], "MOND Gravity: QUMOND": [[343, "mond-gravity-qumond"]], "Generating a model.ClusterModel Using Radial Profiles": [[343, "generating-a-model-clustermodel-using-radial-profiles"]], "ClusterModel from Gas Density and Gas Temperature Profiles": [[343, "clustermodel-from-gas-density-and-gas-temperature-profiles"]], "ClusterModel from Gas Density and Total Density Profiles": [[343, "clustermodel-from-gas-density-and-total-density-profiles"]], "ClusterModel from Gas Density and Gas Entropy Profiles": [[343, "clustermodel-from-gas-density-and-gas-entropy-profiles"]], "ClusterModel Without Gas": [[343, "clustermodel-without-gas"]], "Checking the Hydrostatic Equilibrium": [[343, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[343, "setting-a-magnetic-field-strength-profile"]], "Setting a Magnetic Field from \\beta": [[343, "setting-a-magnetic-field-from-beta"]], "Setting a Magnetic Field from plasma density": [[343, "setting-a-magnetic-field-from-plasma-density"]], "Adding Other Fields": [[343, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[343, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[343, null]], "Non-Physical Systems": [[343, "non-physical-systems"]], "Data Structures in cluster_generator": [[344, "Data-Structures-in-cluster_generator"]], "Data Structures": [[344, "Data-Structures"]], "Accessing and Using Existing Profiles": [[344, "Accessing-and-Using-Existing-Profiles"]], "Creating Profiles": [[344, "Creating-Profiles"]], "I/O Operations on RadialProfiles": [[344, "I/O-Operations-on-RadialProfiles"]], "Gravity": [[344, "Gravity"]], "ClusterModel": [[344, "ClusterModel"]], "VirialEquilibrium": [[344, "VirialEquilibrium"]], "Generating Particles": [[344, "Generating-Particles"]], "ClusterParticles": [[344, "ClusterParticles"]], "ClusterICs": [[344, "ClusterICs"]], "Inside ClusterICs": [[344, "Inside-ClusterICs"]], "Virialization": [[345, "Virialization"]], "Conents": [[345, "Conents"]], "Galactic Dynamics": [[345, "Galactic-Dynamics"]], "The Distribution Function": [[345, "The-Distribution-Function"]], "The Collisionless Boltzmann Equation": [[345, "The-Collisionless-Boltzmann-Equation"]], "The Jean\u2019s Equation": [[345, "The-Jean's-Equation"]], "The Jean\u2019s Theorem": [[345, "The-Jean's-Theorem"]], "The Eddington Formula": [[345, "The-Eddington-Formula"]], "The Local Maxwellian Approximation": [[345, "The-Local-Maxwellian-Approximation"]], "Virialization in cluster_generator": [[345, "Virialization-in-cluster_generator"]], "Advanced Use Cases": [[346, "Advanced-Use-Cases"]], "Feature Guide: Using Builtin Collections": [[347, "Feature-Guide:-Using-Builtin-Collections"]], "What Are Collections": [[347, "What-Are-Collections"]], "How Do I Access One?": [[347, "How-Do-I-Access-One?"]], "Getting Technical": [[347, "Getting-Technical"]], "Quickstart Guide: The Basics": [[348, "Quickstart-Guide:-The-Basics"]], "Building The Foundation": [[348, "Building-The-Foundation"]], "Raising The Frame": [[348, "Raising-The-Frame"]], "Finishing The House": [[348, "Finishing-The-House"]], "Quickstart Guide: Your First Simulation": [[349, "Quickstart-Guide:-Your-First-Simulation"]], "Quickstart Guide: Getting The Most Out of Cluster Generator": [[350, "Quickstart-Guide:-Getting-The-Most-Out-of-Cluster-Generator"]], "Getting Funky: MONDian Gravity": [[351, "Getting-Funky:-MONDian-Gravity"]], "Particles": [[352, "particles"]], "Generating Particles from ClusterModel Objects": [[352, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[352, "gas-particles"]], "Dark Matter and Star Particles": [[352, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[352, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[352, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[352, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[352, "the-clusterparticles-class"]], "ClusterParticles Operations": [[352, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[352, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[352, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[352, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[352, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[352, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[352, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[352, "clusterparticles-i-o"]], "Gadget-Like I/O": [[352, "gadget-like-i-o"]], "General Profiles": [[353, "general-profiles"]], "Constant Profile": [[353, "constant-profile"]], "Power-Law Profile": [[353, "power-law-profile"]], "Density and Mass Profiles": [[353, "density-and-mass-profiles"]], "NFW Profile": [[353, "nfw-profile"]], "\u201csuper-NFW\u201d Profile": [[353, "super-nfw-profile"]], "Truncated NFW Profile": [[353, "truncated-nfw-profile"]], "Hernquist Profile": [[353, "hernquist-profile"]], "Einasto Profile": [[353, "einasto-profile"]], "Vikhlinin et al. 2006 Density Profile": [[353, "vikhlinin-et-al-2006-density-profile"]], "Ascasibar & Markevitch 2006 Density Profile": [[353, "ascasibar-markevitch-2006-density-profile"]], "Temperature Profiles": [[353, "temperature-profiles"]], "Vikhlinin et al. 2006 Temperature Profile": [[353, "vikhlinin-et-al-2006-temperature-profile"]], "Ascasibar & Markevitch 2006 Temperature Profile": [[353, "ascasibar-markevitch-2006-temperature-profile"]], "Entropy Profiles": [[353, "entropy-profiles"]], "Baseline Entropy Profile": [[353, "baseline-entropy-profile"]]}, "indexentries": {"codes": [[1, "module-codes"]], "module": [[1, "module-codes"], [11, "module-collection"], [60, "module-fields"], [103, "module-gravity"], [146, "module-ics"], [163, "module-model"], [236, "module-particles"], [259, "module-radial_profiles"], [303, "module-relations"], [309, "module-utils"], [322, "module-virial"]], "setup_arepo_ics() (in module codes)": [[2, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[3, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[4, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[5, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[6, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[7, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[8, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[9, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[10, "codes.write_amr_particles"]], "collection": [[11, "module-collection"]], "ascasibar07 (class in collection)": [[12, "collection.Ascasibar07"]], "__init__() (collection.ascasibar07 method)": [[13, "collection.Ascasibar07.__init__"]], "description (collection.ascasibar07 attribute)": [[14, "collection.Ascasibar07.description"]], "load() (collection.ascasibar07 static method)": [[15, "collection.Ascasibar07.load"]], "load_method (collection.ascasibar07 attribute)": [[16, "collection.Ascasibar07.load_method"]], "load_model() (collection.ascasibar07 method)": [[17, "collection.Ascasibar07.load_model"]], "name (collection.ascasibar07 attribute)": [[18, "collection.Ascasibar07.name"]], "names (collection.ascasibar07 property)": [[19, "collection.Ascasibar07.names"]], "parameters (collection.ascasibar07 property)": [[20, "collection.Ascasibar07.parameters"]], "path (collection.ascasibar07 attribute)": [[21, "collection.Ascasibar07.path"]], "plot_summary() (collection.ascasibar07 method)": [[22, "collection.Ascasibar07.plot_summary"]], "profiles (collection.ascasibar07 property)": [[23, "collection.Ascasibar07.profiles"]], "clustercollection (class in collection)": [[24, "collection.ClusterCollection"]], "__init__() (collection.clustercollection method)": [[25, "collection.ClusterCollection.__init__"]], "description (collection.clustercollection attribute)": [[26, "collection.ClusterCollection.description"]], "load_method (collection.clustercollection attribute)": [[27, "collection.ClusterCollection.load_method"]], "load_model() (collection.clustercollection method)": [[28, "collection.ClusterCollection.load_model"]], "name (collection.clustercollection attribute)": [[29, "collection.ClusterCollection.name"]], "names (collection.clustercollection property)": [[30, "collection.ClusterCollection.names"]], "parameters (collection.clustercollection property)": [[31, "collection.ClusterCollection.parameters"]], "path (collection.clustercollection attribute)": [[32, "collection.ClusterCollection.path"]], "plot_summary() (collection.clustercollection method)": [[33, "collection.ClusterCollection.plot_summary"]], "profiles (collection.clustercollection property)": [[34, "collection.ClusterCollection.profiles"]], "sanderson10 (class in collection)": [[35, "collection.Sanderson10"]], "__init__() (collection.sanderson10 method)": [[36, "collection.Sanderson10.__init__"]], "description (collection.sanderson10 attribute)": [[37, "collection.Sanderson10.description"]], "load() (collection.sanderson10 static method)": [[38, "collection.Sanderson10.load"]], "load_method (collection.sanderson10 attribute)": [[39, "collection.Sanderson10.load_method"]], "load_model() (collection.sanderson10 method)": [[40, "collection.Sanderson10.load_model"]], "name (collection.sanderson10 attribute)": [[41, "collection.Sanderson10.name"]], "names (collection.sanderson10 property)": [[42, "collection.Sanderson10.names"]], "parameters (collection.sanderson10 property)": [[43, "collection.Sanderson10.parameters"]], "path (collection.sanderson10 attribute)": [[44, "collection.Sanderson10.path"]], "plot_summary() (collection.sanderson10 method)": [[45, "collection.Sanderson10.plot_summary"]], "profiles (collection.sanderson10 property)": [[46, "collection.Sanderson10.profiles"]], "vikhlinin06 (class in collection)": [[47, "collection.Vikhlinin06"]], "__init__() (collection.vikhlinin06 method)": [[48, "collection.Vikhlinin06.__init__"]], "description (collection.vikhlinin06 attribute)": [[49, "collection.Vikhlinin06.description"]], "load() (collection.vikhlinin06 static method)": [[50, "collection.Vikhlinin06.load"]], "load_method (collection.vikhlinin06 attribute)": [[51, "collection.Vikhlinin06.load_method"]], "load_model() (collection.vikhlinin06 method)": [[52, "collection.Vikhlinin06.load_model"]], "name (collection.vikhlinin06 attribute)": [[53, "collection.Vikhlinin06.name"]], "names (collection.vikhlinin06 property)": [[54, "collection.Vikhlinin06.names"]], "parameters (collection.vikhlinin06 property)": [[55, "collection.Vikhlinin06.parameters"]], "path (collection.vikhlinin06 attribute)": [[56, "collection.Vikhlinin06.path"]], "plot_summary() (collection.vikhlinin06 method)": [[57, "collection.Vikhlinin06.plot_summary"]], "profiles (collection.vikhlinin06 property)": [[58, "collection.Vikhlinin06.profiles"]], "get_collections() (in module collection)": [[59, "collection.get_collections"]], "fields": [[60, "module-fields"]], "clusterfield (class in fields)": [[61, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[62, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[63, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[64, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[65, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[66, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[67, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[68, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[69, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[70, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[71, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[72, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[73, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[74, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[75, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[76, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[77, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[78, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[79, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[80, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[81, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[82, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[83, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[84, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[85, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[86, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[87, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[88, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[89, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[90, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[91, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[92, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[93, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[94, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[95, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[96, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[97, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[98, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[99, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[100, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[101, "fields.parse_value"]], "rot_3d() (in module fields)": [[102, "fields.rot_3d"]], "gravity": [[103, "module-gravity"]], "aqualgravity (class in gravity)": [[104, "gravity.AQUALGravity"]], "__init__() (gravity.aqualgravity method)": [[105, "gravity.AQUALGravity.__init__"]], "attrs (gravity.aqualgravity attribute)": [[106, "gravity.AQUALGravity.attrs"]], "compute_mass() (gravity.aqualgravity class method)": [[107, "gravity.AQUALGravity.compute_mass"]], "compute_potential() (gravity.aqualgravity class method)": [[108, "gravity.AQUALGravity.compute_potential"]], "is_calculated (gravity.aqualgravity property)": [[109, "gravity.AQUALGravity.is_calculated"]], "model (gravity.aqualgravity attribute)": [[110, "gravity.AQUALGravity.model"]], "potential() (gravity.aqualgravity method)": [[111, "gravity.AQUALGravity.potential"]], "reset() (gravity.aqualgravity method)": [[112, "gravity.AQUALGravity.reset"]], "emondgravity (class in gravity)": [[113, "gravity.EMONDGravity"]], "__init__() (gravity.emondgravity method)": [[114, "gravity.EMONDGravity.__init__"]], "attrs (gravity.emondgravity attribute)": [[115, "gravity.EMONDGravity.attrs"]], "compute_mass() (gravity.emondgravity class method)": [[116, "gravity.EMONDGravity.compute_mass"]], "compute_potential() (gravity.emondgravity class method)": [[117, "gravity.EMONDGravity.compute_potential"]], "is_calculated (gravity.emondgravity property)": [[118, "gravity.EMONDGravity.is_calculated"]], "model (gravity.emondgravity attribute)": [[119, "gravity.EMONDGravity.model"]], "potential() (gravity.emondgravity method)": [[120, "gravity.EMONDGravity.potential"]], "reset() (gravity.emondgravity method)": [[121, "gravity.EMONDGravity.reset"]], "gravity (class in gravity)": [[122, "gravity.Gravity"]], "__init__() (gravity.gravity method)": [[123, "gravity.Gravity.__init__"]], "attrs (gravity.gravity attribute)": [[124, "gravity.Gravity.attrs"]], "is_calculated (gravity.gravity property)": [[125, "gravity.Gravity.is_calculated"]], "model (gravity.gravity attribute)": [[126, "gravity.Gravity.model"]], "reset() (gravity.gravity method)": [[127, "gravity.Gravity.reset"]], "newtoniangravity (class in gravity)": [[128, "gravity.NewtonianGravity"]], "__init__() (gravity.newtoniangravity method)": [[129, "gravity.NewtonianGravity.__init__"]], "attrs (gravity.newtoniangravity attribute)": [[130, "gravity.NewtonianGravity.attrs"]], "compute_mass() (gravity.newtoniangravity class method)": [[131, "gravity.NewtonianGravity.compute_mass"]], "compute_potential() (gravity.newtoniangravity class method)": [[132, "gravity.NewtonianGravity.compute_potential"]], "is_calculated (gravity.newtoniangravity property)": [[133, "gravity.NewtonianGravity.is_calculated"]], "model (gravity.newtoniangravity attribute)": [[134, "gravity.NewtonianGravity.model"]], "potential() (gravity.newtoniangravity method)": [[135, "gravity.NewtonianGravity.potential"]], "reset() (gravity.newtoniangravity method)": [[136, "gravity.NewtonianGravity.reset"]], "qumondgravity (class in gravity)": [[137, "gravity.QUMONDGravity"]], "__init__() (gravity.qumondgravity method)": [[138, "gravity.QUMONDGravity.__init__"]], "attrs (gravity.qumondgravity attribute)": [[139, "gravity.QUMONDGravity.attrs"]], "compute_mass() (gravity.qumondgravity class method)": [[140, "gravity.QUMONDGravity.compute_mass"]], "compute_potential() (gravity.qumondgravity class method)": [[141, "gravity.QUMONDGravity.compute_potential"]], "is_calculated (gravity.qumondgravity property)": [[142, "gravity.QUMONDGravity.is_calculated"]], "model (gravity.qumondgravity attribute)": [[143, "gravity.QUMONDGravity.model"]], "potential() (gravity.qumondgravity method)": [[144, "gravity.QUMONDGravity.potential"]], "reset() (gravity.qumondgravity method)": [[145, "gravity.QUMONDGravity.reset"]], "ics": [[146, "module-ics"]], "clusterics (class in ics)": [[147, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[148, "ics.ClusterICs.__init__"]], "basename (ics.clusterics attribute)": [[149, "ics.ClusterICs.basename"]], "center (ics.clusterics attribute)": [[150, "ics.ClusterICs.center"]], "create_dataset() (ics.clusterics method)": [[151, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[152, "ics.ClusterICs.from_file"]], "mag_file (ics.clusterics attribute)": [[153, "ics.ClusterICs.mag_file"]], "num_halos (ics.clusterics attribute)": [[154, "ics.ClusterICs.num_halos"]], "profiles (ics.clusterics attribute)": [[155, "ics.ClusterICs.profiles"]], "r_max (ics.clusterics attribute)": [[156, "ics.ClusterICs.r_max"]], "resample_particle_ics() (ics.clusterics method)": [[157, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[158, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[159, "ics.ClusterICs.to_file"]], "tot_np (ics.clusterics attribute)": [[160, "ics.ClusterICs.tot_np"]], "velocity (ics.clusterics attribute)": [[161, "ics.ClusterICs.velocity"]], "compute_centers_for_binary() (in module ics)": [[162, "ics.compute_centers_for_binary"]], "model": [[163, "module-model"]], "clustermodel (class in model)": [[164, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[165, "model.ClusterModel.__init__"]], "attrs (model.clustermodel attribute)": [[166, "model.ClusterModel.attrs"]], "check_dm_virial() (model.clustermodel method)": [[167, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[168, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[169, "model.ClusterModel.check_star_virial"]], "default_fields (model.clustermodel attribute)": [[170, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[171, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[172, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[173, "model.ClusterModel.find_field_at_radius"]], "from_arrays() (model.clustermodel class method)": [[174, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[175, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[176, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[177, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[178, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[179, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[180, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[181, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[182, "model.ClusterModel.generate_tracer_particles"]], "is_physical() (model.clustermodel method)": [[183, "model.ClusterModel.is_physical"]], "keys() (model.clustermodel method)": [[184, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[185, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[186, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[187, "model.ClusterModel.num_elements"]], "plot() (model.clustermodel method)": [[188, "model.ClusterModel.plot"]], "pot (model.clustermodel property)": [[189, "model.ClusterModel.pot"]], "rebuild_physical() (model.clustermodel method)": [[190, "model.ClusterModel.rebuild_physical"]], "set_field() (model.clustermodel method)": [[191, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[192, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[193, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[194, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[195, "model.ClusterModel.star_virial"]], "virialization_method (model.clustermodel property)": [[196, "model.ClusterModel.virialization_method"]], "write_model_to_ascii() (model.clustermodel method)": [[197, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[198, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[199, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[200, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[201, "model.HydrostaticEquilibrium.__init__"]], "attrs (model.hydrostaticequilibrium attribute)": [[202, "model.HydrostaticEquilibrium.attrs"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[203, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[204, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[205, "model.HydrostaticEquilibrium.check_star_virial"]], "default_fields (model.hydrostaticequilibrium attribute)": [[206, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[207, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[208, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[209, "model.HydrostaticEquilibrium.find_field_at_radius"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[210, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[211, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[212, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[213, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[214, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[215, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[216, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[217, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[218, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "is_physical() (model.hydrostaticequilibrium method)": [[219, "model.HydrostaticEquilibrium.is_physical"]], "keys() (model.hydrostaticequilibrium method)": [[220, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[221, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[222, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[223, "model.HydrostaticEquilibrium.num_elements"]], "plot() (model.hydrostaticequilibrium method)": [[224, "model.HydrostaticEquilibrium.plot"]], "pot (model.hydrostaticequilibrium property)": [[225, "model.HydrostaticEquilibrium.pot"]], "rebuild_physical() (model.hydrostaticequilibrium method)": [[226, "model.HydrostaticEquilibrium.rebuild_physical"]], "set_field() (model.hydrostaticequilibrium method)": [[227, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[228, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[229, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[230, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[231, "model.HydrostaticEquilibrium.star_virial"]], "virialization_method (model.hydrostaticequilibrium property)": [[232, "model.HydrostaticEquilibrium.virialization_method"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[233, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[234, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[235, "model.HydrostaticEquilibrium.write_model_to_h5"]], "particles": [[236, "module-particles"]], "clusterparticles (class in particles)": [[237, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[238, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[239, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[240, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[241, "particles.ClusterParticles.drop_ptypes"]], "fields (particles.clusterparticles attribute)": [[242, "particles.ClusterParticles.fields"]], "from_fields() (particles.clusterparticles class method)": [[243, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[244, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[245, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[246, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[247, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[248, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[249, "particles.ClusterParticles.num_passive_scalars"]], "particle_types (particles.clusterparticles attribute)": [[250, "particles.ClusterParticles.particle_types"]], "passive_scalars (particles.clusterparticles attribute)": [[251, "particles.ClusterParticles.passive_scalars"]], "set_field() (particles.clusterparticles method)": [[252, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[253, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[254, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[255, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[256, "particles.ClusterParticles.write_to_gadget_file"]], "concat_clusters() (in module particles)": [[257, "particles.concat_clusters"]], "resample_clusters() (in module particles)": [[258, "particles.resample_clusters"]], "radial_profiles": [[259, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[260, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[261, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[262, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[263, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[264, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[265, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[266, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[267, "radial_profiles.RadialProfile.from_binary"]], "plot() (radial_profiles.radialprofile method)": [[268, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[269, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[270, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[271, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[272, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[273, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[274, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[275, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[276, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[277, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[278, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[279, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[280, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[281, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[282, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[283, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[284, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[285, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[286, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[287, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[288, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[289, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[290, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[291, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[292, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[293, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[294, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[295, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[296, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[297, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[298, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[299, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[300, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[301, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[302, "radial_profiles.walker_entropy_profile"]], "relations": [[303, "module-relations"]], "convert_ne_to_density() (in module relations)": [[304, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[305, "relations.f_gas"]], "m_bcg() (in module relations)": [[306, "relations.m_bcg"]], "m_sat() (in module relations)": [[307, "relations.m_sat"]], "r_bcg() (in module relations)": [[308, "relations.r_bcg"]], "utils": [[309, "module-utils"]], "ensure_list() (in module utils)": [[310, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[311, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[312, "utils.ensure_ytquantity"]], "eprint() (in module utils)": [[313, "utils.eprint"]], "generate_particle_radii() (in module utils)": [[314, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[315, "utils.integrate"]], "integrate_mass() (in module utils)": [[316, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[317, "utils.integrate_toinf"]], "log_string() (in module utils)": [[318, "utils.log_string"]], "moving_average() (in module utils)": [[319, "utils.moving_average"]], "parse_prng() (in module utils)": [[320, "utils.parse_prng"]], "truncate_spline() (in module utils)": [[321, "utils.truncate_spline"]], "virial": [[322, "module-virial"]], "virialequilibrium (class in virial)": [[323, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[324, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[325, "virial.VirialEquilibrium.check_virial"]], "df (virial.virialequilibrium property)": [[326, "virial.VirialEquilibrium.df"]], "ee (virial.virialequilibrium property)": [[327, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[328, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[329, "virial.VirialEquilibrium.generate_particles"]], "model (virial.virialequilibrium attribute)": [[330, "virial.VirialEquilibrium.model"]], "num_elements (virial.virialequilibrium attribute)": [[331, "virial.VirialEquilibrium.num_elements"]], "ptype (virial.virialequilibrium attribute)": [[332, "virial.VirialEquilibrium.ptype"]], "sigma (virial.virialequilibrium property)": [[333, "virial.VirialEquilibrium.sigma"]], "type (virial.virialequilibrium attribute)": [[334, "virial.VirialEquilibrium.type"]]}})