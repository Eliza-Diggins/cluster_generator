Search.setIndex({"docnames": ["Articles", "_as_gen/codes", "_as_gen/codes.resample_arepo_ics", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/correction", "_as_gen/correction.NonPhysicalRegion", "_as_gen/correction.NonPhysicalRegion.__init__", "_as_gen/correction.NonPhysicalRegion.correct", "_as_gen/correction.NonPhysicalRegion.correctable", "_as_gen/correction.NonPhysicalRegion.identify", "_as_gen/correction.NonPhysicalRegion.is_close", "_as_gen/correction.NonPhysicalRegion.message", "_as_gen/correction.NonPhysicalRegion.obj", "_as_gen/correction.NonPhysicalRegion.rmax", "_as_gen/correction.NonPhysicalRegion.rmin", "_as_gen/correction.NonPhysicalRegion.size", "_as_gen/correction.NonPhysicalRegion.type", "_as_gen/correction.Type0NPR", "_as_gen/correction.Type0NPR.__init__", "_as_gen/correction.Type0NPR.correct", "_as_gen/correction.Type0NPR.correctable", "_as_gen/correction.Type0NPR.identify", "_as_gen/correction.Type0NPR.is_close", "_as_gen/correction.Type0NPR.message", "_as_gen/correction.Type0NPR.obj", "_as_gen/correction.Type0NPR.rmax", "_as_gen/correction.Type0NPR.rmin", "_as_gen/correction.Type0NPR.size", "_as_gen/correction.Type0NPR.type", "_as_gen/correction.Type0aNPR", "_as_gen/correction.Type0aNPR.__init__", "_as_gen/correction.Type0aNPR.correct", "_as_gen/correction.Type0aNPR.correctable", "_as_gen/correction.Type0aNPR.identify", "_as_gen/correction.Type0aNPR.is_close", "_as_gen/correction.Type0aNPR.message", "_as_gen/correction.Type0aNPR.obj", "_as_gen/correction.Type0aNPR.rmax", "_as_gen/correction.Type0aNPR.rmin", "_as_gen/correction.Type0aNPR.size", "_as_gen/correction.Type0aNPR.type", "_as_gen/correction.Type0bNPR", "_as_gen/correction.Type0bNPR.__init__", "_as_gen/correction.Type0bNPR.correct", "_as_gen/correction.Type0bNPR.correctable", "_as_gen/correction.Type0bNPR.identify", "_as_gen/correction.Type0bNPR.is_close", "_as_gen/correction.Type0bNPR.message", "_as_gen/correction.Type0bNPR.obj", "_as_gen/correction.Type0bNPR.rmax", "_as_gen/correction.Type0bNPR.rmin", "_as_gen/correction.Type0bNPR.size", "_as_gen/correction.Type0bNPR.type", "_as_gen/correction.Type0cNPR", "_as_gen/correction.Type0cNPR.__init__", "_as_gen/correction.Type0cNPR.correct", "_as_gen/correction.Type0cNPR.correctable", "_as_gen/correction.Type0cNPR.identify", "_as_gen/correction.Type0cNPR.is_close", "_as_gen/correction.Type0cNPR.message", "_as_gen/correction.Type0cNPR.obj", "_as_gen/correction.Type0cNPR.rmax", "_as_gen/correction.Type0cNPR.rmin", "_as_gen/correction.Type0cNPR.size", "_as_gen/correction.Type0cNPR.type", "_as_gen/correction.Type1NPR", "_as_gen/correction.Type1NPR.__init__", "_as_gen/correction.Type1NPR.correct", "_as_gen/correction.Type1NPR.correctable", "_as_gen/correction.Type1NPR.identify", "_as_gen/correction.Type1NPR.is_close", "_as_gen/correction.Type1NPR.message", "_as_gen/correction.Type1NPR.obj", "_as_gen/correction.Type1NPR.rmax", "_as_gen/correction.Type1NPR.rmin", "_as_gen/correction.Type1NPR.size", "_as_gen/correction.Type1NPR.type", "_as_gen/correction.Type1aNPR", "_as_gen/correction.Type1aNPR.__init__", "_as_gen/correction.Type1aNPR.correct", "_as_gen/correction.Type1aNPR.correctable", "_as_gen/correction.Type1aNPR.identify", "_as_gen/correction.Type1aNPR.is_close", "_as_gen/correction.Type1aNPR.message", "_as_gen/correction.Type1aNPR.obj", "_as_gen/correction.Type1aNPR.rmax", "_as_gen/correction.Type1aNPR.rmin", "_as_gen/correction.Type1aNPR.size", "_as_gen/correction.Type1aNPR.type", "_as_gen/correction.Type2NPR", "_as_gen/correction.Type2NPR.__init__", "_as_gen/correction.Type2NPR.correct", "_as_gen/correction.Type2NPR.correctable", "_as_gen/correction.Type2NPR.identify", "_as_gen/correction.Type2NPR.is_close", "_as_gen/correction.Type2NPR.message", "_as_gen/correction.Type2NPR.obj", "_as_gen/correction.Type2NPR.rmax", "_as_gen/correction.Type2NPR.rmin", "_as_gen/correction.Type2NPR.size", "_as_gen/correction.Type2NPR.type", "_as_gen/correction.Type2aNPR", "_as_gen/correction.Type2aNPR.__init__", "_as_gen/correction.Type2aNPR.correct", "_as_gen/correction.Type2aNPR.correctable", "_as_gen/correction.Type2aNPR.identify", "_as_gen/correction.Type2aNPR.is_close", "_as_gen/correction.Type2aNPR.message", "_as_gen/correction.Type2aNPR.obj", "_as_gen/correction.Type2aNPR.rmax", "_as_gen/correction.Type2aNPR.rmin", "_as_gen/correction.Type2aNPR.size", "_as_gen/correction.Type2aNPR.type", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.create_dataset", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.find_radius_for_density", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.items", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.panel_plot", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.properties", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.values", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.create_dataset", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.items", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.panel_plot", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.properties", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.values", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/numalgs", "_as_gen/numalgs.extrap_power_law", "_as_gen/numalgs.find_holes", "_as_gen/numalgs.identify_domain_borders", "_as_gen/numalgs.monotone_interpolation", "_as_gen/numalgs.positive_interpolation", "_as_gen/numalgs.solve_temperature", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.combine_three_clusters", "_as_gen/particles.combine_two_clusters", "_as_gen/particles.resample_one_cluster", "_as_gen/particles.resample_three_clusters", "_as_gen/particles.resample_two_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.name", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/relations.rho_scale_hern", "_as_gen/utils", "_as_gen/utils.LogMute", "_as_gen/utils.LogMute.__init__", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.parse_prng", "_as_gen/utils.time_limit", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_notebooks/examples/FirstJourney", "api", "codes", "collections", "correction", "correction_methods", "examples", "fields", "getting_started", "index", "initial_conditions", "models", "particles", "radial_profiles"], "filenames": ["Articles.rst", "_as_gen/codes.rst", "_as_gen/codes.resample_arepo_ics.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/correction.rst", "_as_gen/correction.NonPhysicalRegion.rst", "_as_gen/correction.NonPhysicalRegion.__init__.rst", "_as_gen/correction.NonPhysicalRegion.correct.rst", "_as_gen/correction.NonPhysicalRegion.correctable.rst", "_as_gen/correction.NonPhysicalRegion.identify.rst", "_as_gen/correction.NonPhysicalRegion.is_close.rst", "_as_gen/correction.NonPhysicalRegion.message.rst", "_as_gen/correction.NonPhysicalRegion.obj.rst", "_as_gen/correction.NonPhysicalRegion.rmax.rst", "_as_gen/correction.NonPhysicalRegion.rmin.rst", "_as_gen/correction.NonPhysicalRegion.size.rst", "_as_gen/correction.NonPhysicalRegion.type.rst", "_as_gen/correction.Type0NPR.rst", "_as_gen/correction.Type0NPR.__init__.rst", "_as_gen/correction.Type0NPR.correct.rst", "_as_gen/correction.Type0NPR.correctable.rst", "_as_gen/correction.Type0NPR.identify.rst", "_as_gen/correction.Type0NPR.is_close.rst", "_as_gen/correction.Type0NPR.message.rst", "_as_gen/correction.Type0NPR.obj.rst", "_as_gen/correction.Type0NPR.rmax.rst", "_as_gen/correction.Type0NPR.rmin.rst", "_as_gen/correction.Type0NPR.size.rst", "_as_gen/correction.Type0NPR.type.rst", "_as_gen/correction.Type0aNPR.rst", "_as_gen/correction.Type0aNPR.__init__.rst", "_as_gen/correction.Type0aNPR.correct.rst", "_as_gen/correction.Type0aNPR.correctable.rst", "_as_gen/correction.Type0aNPR.identify.rst", "_as_gen/correction.Type0aNPR.is_close.rst", "_as_gen/correction.Type0aNPR.message.rst", "_as_gen/correction.Type0aNPR.obj.rst", "_as_gen/correction.Type0aNPR.rmax.rst", "_as_gen/correction.Type0aNPR.rmin.rst", "_as_gen/correction.Type0aNPR.size.rst", "_as_gen/correction.Type0aNPR.type.rst", "_as_gen/correction.Type0bNPR.rst", "_as_gen/correction.Type0bNPR.__init__.rst", "_as_gen/correction.Type0bNPR.correct.rst", "_as_gen/correction.Type0bNPR.correctable.rst", "_as_gen/correction.Type0bNPR.identify.rst", "_as_gen/correction.Type0bNPR.is_close.rst", "_as_gen/correction.Type0bNPR.message.rst", "_as_gen/correction.Type0bNPR.obj.rst", "_as_gen/correction.Type0bNPR.rmax.rst", "_as_gen/correction.Type0bNPR.rmin.rst", "_as_gen/correction.Type0bNPR.size.rst", "_as_gen/correction.Type0bNPR.type.rst", "_as_gen/correction.Type0cNPR.rst", "_as_gen/correction.Type0cNPR.__init__.rst", "_as_gen/correction.Type0cNPR.correct.rst", "_as_gen/correction.Type0cNPR.correctable.rst", "_as_gen/correction.Type0cNPR.identify.rst", "_as_gen/correction.Type0cNPR.is_close.rst", "_as_gen/correction.Type0cNPR.message.rst", "_as_gen/correction.Type0cNPR.obj.rst", "_as_gen/correction.Type0cNPR.rmax.rst", "_as_gen/correction.Type0cNPR.rmin.rst", "_as_gen/correction.Type0cNPR.size.rst", "_as_gen/correction.Type0cNPR.type.rst", "_as_gen/correction.Type1NPR.rst", "_as_gen/correction.Type1NPR.__init__.rst", "_as_gen/correction.Type1NPR.correct.rst", "_as_gen/correction.Type1NPR.correctable.rst", "_as_gen/correction.Type1NPR.identify.rst", "_as_gen/correction.Type1NPR.is_close.rst", "_as_gen/correction.Type1NPR.message.rst", "_as_gen/correction.Type1NPR.obj.rst", "_as_gen/correction.Type1NPR.rmax.rst", "_as_gen/correction.Type1NPR.rmin.rst", "_as_gen/correction.Type1NPR.size.rst", "_as_gen/correction.Type1NPR.type.rst", "_as_gen/correction.Type1aNPR.rst", "_as_gen/correction.Type1aNPR.__init__.rst", "_as_gen/correction.Type1aNPR.correct.rst", "_as_gen/correction.Type1aNPR.correctable.rst", "_as_gen/correction.Type1aNPR.identify.rst", "_as_gen/correction.Type1aNPR.is_close.rst", "_as_gen/correction.Type1aNPR.message.rst", "_as_gen/correction.Type1aNPR.obj.rst", "_as_gen/correction.Type1aNPR.rmax.rst", "_as_gen/correction.Type1aNPR.rmin.rst", "_as_gen/correction.Type1aNPR.size.rst", "_as_gen/correction.Type1aNPR.type.rst", "_as_gen/correction.Type2NPR.rst", "_as_gen/correction.Type2NPR.__init__.rst", "_as_gen/correction.Type2NPR.correct.rst", "_as_gen/correction.Type2NPR.correctable.rst", "_as_gen/correction.Type2NPR.identify.rst", "_as_gen/correction.Type2NPR.is_close.rst", "_as_gen/correction.Type2NPR.message.rst", "_as_gen/correction.Type2NPR.obj.rst", "_as_gen/correction.Type2NPR.rmax.rst", "_as_gen/correction.Type2NPR.rmin.rst", "_as_gen/correction.Type2NPR.size.rst", "_as_gen/correction.Type2NPR.type.rst", "_as_gen/correction.Type2aNPR.rst", "_as_gen/correction.Type2aNPR.__init__.rst", "_as_gen/correction.Type2aNPR.correct.rst", "_as_gen/correction.Type2aNPR.correctable.rst", "_as_gen/correction.Type2aNPR.identify.rst", "_as_gen/correction.Type2aNPR.is_close.rst", "_as_gen/correction.Type2aNPR.message.rst", "_as_gen/correction.Type2aNPR.obj.rst", "_as_gen/correction.Type2aNPR.rmax.rst", "_as_gen/correction.Type2aNPR.rmin.rst", "_as_gen/correction.Type2aNPR.size.rst", "_as_gen/correction.Type2aNPR.type.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.create_dataset.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.find_radius_for_density.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.items.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.panel_plot.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.properties.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.values.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.create_dataset.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.find_radius_for_density.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.items.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.panel_plot.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.properties.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.values.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/numalgs.rst", "_as_gen/numalgs.extrap_power_law.rst", "_as_gen/numalgs.find_holes.rst", "_as_gen/numalgs.identify_domain_borders.rst", "_as_gen/numalgs.monotone_interpolation.rst", "_as_gen/numalgs.positive_interpolation.rst", "_as_gen/numalgs.solve_temperature.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.combine_three_clusters.rst", "_as_gen/particles.combine_two_clusters.rst", "_as_gen/particles.resample_one_cluster.rst", "_as_gen/particles.resample_three_clusters.rst", "_as_gen/particles.resample_two_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.name.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/relations.rho_scale_hern.rst", "_as_gen/utils.rst", "_as_gen/utils.LogMute.rst", "_as_gen/utils.LogMute.__init__.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.time_limit.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_notebooks/examples/FirstJourney.ipynb", "api.rst", "codes.rst", "collections.rst", "correction.rst", "correction_methods.rst", "examples.rst", "fields.rst", "getting_started.rst", "index.rst", "initial_conditions.rst", "models.rst", "particles.rst", "radial_profiles.rst"], "titles": ["User Reference Guide", "codes", "codes.resample_arepo_ics", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "correction", "correction.NonPhysicalRegion", "correction.NonPhysicalRegion.__init__", "correction.NonPhysicalRegion.correct", "correction.NonPhysicalRegion.correctable", "correction.NonPhysicalRegion.identify", "correction.NonPhysicalRegion.is_close", "correction.NonPhysicalRegion.message", "correction.NonPhysicalRegion.obj", "correction.NonPhysicalRegion.rmax", "correction.NonPhysicalRegion.rmin", "correction.NonPhysicalRegion.size", "correction.NonPhysicalRegion.type", "correction.Type0NPR", "correction.Type0NPR.__init__", "correction.Type0NPR.correct", "correction.Type0NPR.correctable", "correction.Type0NPR.identify", "correction.Type0NPR.is_close", "correction.Type0NPR.message", "correction.Type0NPR.obj", "correction.Type0NPR.rmax", "correction.Type0NPR.rmin", "correction.Type0NPR.size", "correction.Type0NPR.type", "correction.Type0aNPR", "correction.Type0aNPR.__init__", "correction.Type0aNPR.correct", "correction.Type0aNPR.correctable", "correction.Type0aNPR.identify", "correction.Type0aNPR.is_close", "correction.Type0aNPR.message", "correction.Type0aNPR.obj", "correction.Type0aNPR.rmax", "correction.Type0aNPR.rmin", "correction.Type0aNPR.size", "correction.Type0aNPR.type", "correction.Type0bNPR", "correction.Type0bNPR.__init__", "correction.Type0bNPR.correct", "correction.Type0bNPR.correctable", "correction.Type0bNPR.identify", "correction.Type0bNPR.is_close", "correction.Type0bNPR.message", "correction.Type0bNPR.obj", "correction.Type0bNPR.rmax", "correction.Type0bNPR.rmin", "correction.Type0bNPR.size", "correction.Type0bNPR.type", "correction.Type0cNPR", "correction.Type0cNPR.__init__", "correction.Type0cNPR.correct", "correction.Type0cNPR.correctable", "correction.Type0cNPR.identify", "correction.Type0cNPR.is_close", "correction.Type0cNPR.message", "correction.Type0cNPR.obj", "correction.Type0cNPR.rmax", "correction.Type0cNPR.rmin", "correction.Type0cNPR.size", "correction.Type0cNPR.type", "correction.Type1NPR", "correction.Type1NPR.__init__", "correction.Type1NPR.correct", "correction.Type1NPR.correctable", "correction.Type1NPR.identify", "correction.Type1NPR.is_close", "correction.Type1NPR.message", "correction.Type1NPR.obj", "correction.Type1NPR.rmax", "correction.Type1NPR.rmin", "correction.Type1NPR.size", "correction.Type1NPR.type", "correction.Type1aNPR", "correction.Type1aNPR.__init__", "correction.Type1aNPR.correct", "correction.Type1aNPR.correctable", "correction.Type1aNPR.identify", "correction.Type1aNPR.is_close", "correction.Type1aNPR.message", "correction.Type1aNPR.obj", "correction.Type1aNPR.rmax", "correction.Type1aNPR.rmin", "correction.Type1aNPR.size", "correction.Type1aNPR.type", "correction.Type2NPR", "correction.Type2NPR.__init__", "correction.Type2NPR.correct", "correction.Type2NPR.correctable", "correction.Type2NPR.identify", "correction.Type2NPR.is_close", "correction.Type2NPR.message", "correction.Type2NPR.obj", "correction.Type2NPR.rmax", "correction.Type2NPR.rmin", "correction.Type2NPR.size", "correction.Type2NPR.type", "correction.Type2aNPR", "correction.Type2aNPR.__init__", "correction.Type2aNPR.correct", "correction.Type2aNPR.correctable", "correction.Type2aNPR.identify", "correction.Type2aNPR.is_close", "correction.Type2aNPR.message", "correction.Type2aNPR.obj", "correction.Type2aNPR.rmax", "correction.Type2aNPR.rmin", "correction.Type2aNPR.size", "correction.Type2aNPR.type", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.create_dataset", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.find_radius_for_density", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.items", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.panel_plot", "model.ClusterModel.plot", "model.ClusterModel.properties", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.values", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.create_dataset", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.find_radius_for_density", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.items", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.panel_plot", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.properties", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.values", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "numalgs", "numalgs.extrap_power_law", "numalgs.find_holes", "numalgs.identify_domain_borders", "numalgs.monotone_interpolation", "numalgs.positive_interpolation", "numalgs.solve_temperature", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.combine_three_clusters", "particles.combine_two_clusters", "particles.resample_one_cluster", "particles.resample_three_clusters", "particles.resample_two_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.name", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "relations.rho_scale_hern", "utils", "utils.LogMute", "utils.LogMute.__init__", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.parse_prng", "utils.time_limit", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "Your First Journey With CG", "API", "Simulation Software", "Cluster Collections", "Correcting Non-Physical Behavior", "Methods For Correcting Non-Physical Regions", "Examples", "Generating 3D Cluster Fields", "Quickstart Guide", "Cluster Generator", "Initial Conditions Generation", "Cluster Models", "Particles", "Radial Profiles"], "terms": {"welcom": [0, 355], "cluster": [0, 5, 6, 7, 8, 9, 10, 17, 29, 41, 53, 65, 77, 85, 89, 101, 113, 172, 173, 174, 179, 216, 258, 259, 262, 273, 274, 275, 276, 277, 290, 291, 292, 293, 294, 320, 321, 325, 344, 351, 353, 354, 355, 357, 361, 362], "gener": [0, 5, 6, 7, 8, 9, 10, 122, 166, 170, 174, 185, 190, 191, 192, 193, 199, 200, 222, 227, 228, 229, 230, 236, 237, 250, 262, 284, 285, 296, 322, 336, 344, 348, 349, 351, 352, 353, 354, 357], "On": [0, 351, 355, 362], "thi": [0, 7, 8, 10, 13, 15, 17, 22, 27, 29, 34, 39, 41, 46, 51, 53, 58, 63, 65, 70, 75, 77, 82, 85, 87, 89, 94, 99, 101, 106, 111, 113, 118, 124, 129, 134, 139, 144, 149, 154, 159, 166, 170, 179, 190, 191, 192, 193, 199, 200, 209, 216, 227, 228, 229, 230, 236, 237, 246, 249, 250, 258, 259, 281, 285, 289, 314, 320, 341, 344, 345, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362], "page": [0, 349, 351, 353, 355, 357, 360, 362], "you": [0, 190, 191, 192, 193, 209, 227, 228, 229, 230, 246, 348, 349, 351, 353, 355, 357, 358, 361, 362], "ll": [0, 349, 355, 362], "find": [0, 183, 220, 250, 302, 305, 306, 317, 349, 353, 354, 355, 358, 360, 361, 362], "link": 0, "varieti": [0, 349, 351, 353, 355, 357, 358, 360], "differ": [0, 126, 131, 136, 141, 146, 151, 156, 161, 199, 236, 250, 279, 345, 349, 358, 360, 361], "which": [0, 8, 11, 21, 22, 25, 33, 34, 37, 45, 46, 49, 57, 58, 61, 69, 70, 73, 81, 82, 85, 93, 94, 97, 105, 106, 117, 118, 124, 129, 134, 139, 144, 149, 154, 159, 162, 163, 166, 167, 169, 172, 179, 184, 185, 186, 190, 191, 192, 193, 197, 199, 200, 202, 204, 205, 216, 221, 222, 223, 227, 228, 229, 230, 234, 236, 237, 239, 241, 242, 249, 250, 251, 252, 253, 258, 259, 272, 281, 284, 311, 312, 344, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362], "provid": [0, 15, 27, 39, 51, 63, 75, 87, 99, 111, 249, 250, 288, 297, 349, 351, 352, 353, 354, 357, 358, 360, 361, 362], "an": [0, 11, 15, 27, 39, 51, 63, 75, 87, 99, 111, 126, 131, 136, 141, 146, 151, 156, 161, 162, 163, 166, 167, 177, 179, 202, 208, 210, 214, 216, 239, 245, 247, 249, 252, 253, 262, 268, 269, 270, 272, 285, 288, 298, 305, 306, 309, 310, 311, 314, 326, 349, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362], "indepth": 0, "look": [0, 349, 353, 355, 357, 358, 362], "under": [0, 341, 354, 362], "hood": [0, 362], "radial": [0, 187, 188, 197, 203, 204, 224, 225, 234, 240, 241, 249, 266, 275, 279, 285, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 345, 349, 357, 358, 359, 361], "profil": [0, 8, 25, 49, 73, 85, 109, 165, 166, 169, 170, 183, 186, 187, 188, 197, 203, 204, 220, 223, 224, 225, 234, 240, 241, 249, 250, 252, 253, 254, 275, 278, 279, 280, 281, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 337, 338, 339, 344, 345, 349, 352, 353, 354, 355, 357, 358, 359, 361], "ar": [0, 7, 10, 18, 25, 30, 42, 54, 66, 73, 78, 85, 90, 97, 102, 109, 114, 126, 131, 136, 141, 146, 151, 156, 161, 162, 163, 167, 172, 174, 187, 188, 197, 199, 201, 208, 224, 225, 234, 236, 238, 245, 249, 252, 258, 259, 349, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362], "basi": 0, "all": [0, 8, 13, 15, 17, 25, 27, 29, 37, 39, 41, 49, 51, 53, 61, 63, 65, 73, 75, 77, 85, 87, 89, 97, 99, 101, 109, 111, 113, 167, 179, 199, 201, 209, 216, 236, 238, 246, 259, 260, 263, 266, 269, 349, 351, 352, 353, 355, 357, 358, 360, 361, 362], "model": [0, 12, 13, 15, 17, 27, 29, 39, 41, 51, 53, 63, 65, 75, 77, 87, 89, 99, 101, 111, 113, 166, 170, 262, 295, 302, 317, 320, 343, 344, 351, 352, 353, 355, 356, 357, 358, 361], "built": [0, 19, 31, 43, 55, 67, 79, 91, 103, 115, 283, 349, 353, 358, 360], "read": [0, 8, 11, 168, 189, 226, 262, 263, 351, 352, 357, 361, 362], "time": [0, 15, 27, 39, 51, 63, 75, 87, 99, 111, 190, 191, 192, 193, 227, 228, 229, 230, 298, 341, 348, 349, 352, 355, 356, 357, 360], "10": [0, 15, 27, 39, 51, 63, 75, 87, 99, 111, 249, 252, 253, 349, 361, 362], "minut": 0, "learn": [0, 355, 357, 358, 360], "more": [0, 15, 27, 39, 51, 63, 75, 87, 99, 111, 170, 259, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362], "about": [0, 8, 163, 349, 352, 355, 357, 360, 362], "central": [0, 172, 204, 241, 250, 294], "clustermodel": [0, 12, 13, 15, 17, 27, 29, 39, 41, 51, 53, 63, 65, 75, 77, 87, 89, 99, 101, 111, 113, 166, 173, 211, 212, 222, 223, 226, 234, 238, 242, 344, 349, 352], "class": [0, 12, 13, 15, 25, 27, 37, 39, 49, 51, 61, 63, 73, 75, 85, 87, 97, 99, 109, 111, 121, 122, 127, 132, 137, 142, 147, 152, 157, 164, 165, 173, 174, 185, 211, 222, 255, 256, 278, 279, 330, 331, 342, 343, 349, 352, 353, 354, 359, 360, 362], "can": [0, 174, 179, 180, 203, 204, 209, 216, 217, 240, 241, 246, 253, 259, 272, 312, 344, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362], "your": [0, 179, 216, 250, 352, 353, 355, 356, 357, 358, 362], "workflow": 0, "30": 0, "code": [0, 166, 170, 249, 272, 349, 351, 352, 353, 356, 357, 358, 361, 362], "avail": [0, 85, 174, 190, 191, 192, 193, 199, 227, 228, 229, 230, 236, 348, 349, 352, 353, 355, 357, 358, 360], "simul": [0, 164, 166, 272, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362], "ic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 349, 351, 357, 361], "collect": [0, 355, 357, 358], "pre": [0, 166, 199, 236, 249, 281, 357, 358, 360], "packag": [0, 330, 352, 358, 360], "particl": [0, 7, 8, 10, 11, 124, 129, 134, 139, 144, 149, 154, 159, 166, 169, 170, 190, 191, 192, 193, 227, 228, 229, 230, 336, 344, 345, 348, 349, 351, 357, 358, 359, 360], "initi": [0, 25, 73, 85, 121, 164, 166, 168, 169, 170, 171, 174, 175, 185, 189, 197, 212, 222, 226, 234, 255, 256, 272, 282, 349, 351, 352, 353, 354, 355, 357, 358, 360, 361], "condit": [0, 85, 164, 166, 168, 169, 170, 171, 174, 255, 256, 272, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "interest": [0, 351, 352], "how": [0, 8, 351, 353, 355, 357, 358, 360, 361, 362], "oper": [0, 357], "here": [0, 249, 303, 304, 353, 357, 358, 360, 362], "": [0, 12, 13, 19, 31, 43, 55, 67, 79, 91, 103, 115, 200, 208, 237, 245, 259, 275, 294, 298, 325, 349, 352, 353, 354, 355, 356, 357, 358, 360, 362], "correct": [0, 162, 249, 253, 329, 352, 355, 357, 358, 360], "non": [0, 12, 13, 15, 17, 23, 24, 25, 27, 29, 35, 36, 37, 39, 41, 47, 48, 49, 51, 53, 59, 60, 61, 63, 65, 71, 72, 73, 75, 77, 83, 84, 85, 87, 89, 95, 96, 97, 99, 101, 107, 108, 109, 111, 113, 119, 120, 199, 236, 250, 351, 352, 355, 357, 358], "physic": [0, 12, 13, 15, 17, 23, 24, 25, 27, 29, 35, 36, 37, 39, 41, 47, 48, 49, 51, 53, 59, 60, 61, 63, 65, 71, 72, 73, 75, 77, 83, 84, 85, 87, 89, 95, 96, 97, 99, 101, 107, 108, 109, 111, 113, 119, 120, 173, 199, 236, 279, 351, 352, 355, 357, 358, 362], "region": [0, 15, 23, 24, 25, 27, 35, 36, 37, 39, 47, 48, 49, 51, 59, 60, 61, 63, 71, 72, 73, 75, 83, 84, 85, 87, 95, 96, 97, 99, 107, 108, 109, 111, 119, 120, 321, 352], "what": [0, 201, 238, 349, 351, 355, 357], "goe": [0, 349, 353], "behind": [0, 201, 238, 349], "when": [0, 85, 167, 174, 201, 238, 288, 305, 306, 311, 353, 354, 358, 360], "us": [0, 7, 8, 10, 13, 19, 31, 43, 55, 67, 79, 91, 103, 115, 124, 129, 134, 139, 144, 149, 154, 159, 166, 167, 169, 170, 174, 179, 187, 188, 199, 200, 208, 209, 216, 224, 225, 236, 237, 245, 246, 248, 249, 250, 251, 258, 259, 268, 272, 285, 288, 305, 306, 311, 312, 325, 344, 345, 349, 351, 353, 354, 356, 357, 358, 359, 361], "modul": [0, 12, 173, 255, 330, 342, 352, 353, 355, 357, 358, 362], "npr": [0, 15, 17, 18, 19, 25, 27, 29, 30, 31, 39, 41, 42, 43, 51, 53, 54, 55, 63, 65, 66, 67, 73, 75, 77, 78, 79, 87, 89, 90, 91, 97, 99, 101, 102, 103, 109, 111, 113, 114, 115, 352], "numer": [0, 248, 352, 357, 360, 361], "analysi": [0, 357], "go": [0, 281, 284, 349, 352, 353, 354], "algorithm": [0, 248, 249, 250, 352, 353, 354, 358, 360], "underli": [0, 354, 358, 361], "mathemat": [0, 357, 362], "field": [0, 8, 85, 166, 169, 174, 175, 179, 180, 183, 185, 194, 195, 198, 199, 200, 202, 203, 204, 207, 209, 211, 212, 216, 217, 220, 222, 231, 232, 235, 236, 237, 239, 240, 241, 244, 246, 256, 257, 261, 268, 272, 349, 351, 353, 354, 357, 358], "magnet": [0, 8, 121, 166, 203, 204, 240, 241, 351, 357], "specif": [1, 200, 237, 272, 286, 351, 357, 358, 360, 361], "util": [1, 323, 349, 351, 353, 357, 358], "cluster_gener": [1, 11, 12, 13, 25, 37, 49, 61, 73, 85, 97, 109, 189, 226, 249, 262, 263, 330, 349, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362], "librari": [1, 352, 355, 357, 358], "function": [1, 15, 19, 27, 31, 39, 43, 51, 55, 63, 67, 75, 79, 87, 91, 99, 103, 111, 115, 121, 164, 177, 214, 248, 249, 250, 253, 255, 278, 279, 285, 323, 330, 341, 344, 345, 349, 352, 354, 356, 357, 360, 361, 362], "infil": 2, "outfil": 2, "overwrit": [2, 3, 11, 126, 131, 136, 141, 146, 151, 156, 161, 171, 199, 208, 209, 210, 236, 245, 246, 247, 270, 271, 272, 349, 361], "fals": [2, 3, 7, 8, 10, 11, 13, 16, 25, 28, 37, 40, 49, 52, 61, 64, 73, 76, 100, 122, 123, 126, 127, 128, 131, 136, 141, 142, 143, 146, 151, 156, 157, 158, 161, 170, 171, 190, 191, 192, 208, 209, 210, 227, 228, 229, 245, 246, 247, 251, 258, 268, 270, 271, 272, 348], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 23, 25, 26, 37, 38, 49, 50, 61, 62, 73, 74, 85, 86, 97, 98, 109, 110, 122, 123, 124, 126, 127, 128, 132, 133, 137, 142, 143, 147, 148, 152, 157, 158, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 357, 358, 361], "resampl": [2, 169, 275, 276, 277], "arepo": [2, 3, 169, 263, 358, 361], "boxsiz": 3, "nx": 3, "ic_fil": 3, "regenerate_particl": [3, 7, 8, 10, 170], "prng": [3, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158, 170, 190, 191, 192, 193, 227, 228, 229, 230, 336, 340, 348], "none": [3, 19, 31, 43, 55, 67, 79, 91, 103, 115, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 161, 165, 166, 167, 169, 170, 174, 175, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 200, 209, 210, 211, 212, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 246, 247, 249, 250, 251, 258, 259, 262, 263, 264, 266, 268, 269, 272, 276, 277, 279, 280, 288, 289, 305, 306, 311, 320, 336, 343, 344, 348, 360], "setup": [3, 4, 7, 8, 349, 351], "art": 4, "paramet": [5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 27, 29, 30, 31, 39, 41, 42, 43, 51, 53, 54, 55, 63, 65, 66, 67, 75, 77, 78, 79, 87, 89, 90, 91, 99, 101, 102, 103, 111, 113, 114, 115, 122, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 162, 163, 166, 167, 169, 170, 171, 172, 174, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 200, 201, 203, 204, 205, 208, 209, 210, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 258, 259, 262, 263, 266, 268, 269, 270, 272, 279, 281, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 341, 344, 348, 352, 354, 361, 362], "object": [5, 6, 7, 8, 9, 10, 17, 20, 29, 32, 41, 44, 53, 56, 65, 68, 77, 80, 89, 92, 101, 104, 113, 116, 124, 129, 134, 139, 144, 149, 154, 159, 182, 190, 191, 192, 193, 201, 219, 227, 228, 229, 230, 238, 278, 279, 283, 284, 286, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 344, 348, 352, 353, 356, 357, 362], "The": [5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 81, 82, 84, 87, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 108, 111, 113, 114, 115, 116, 117, 118, 120, 122, 124, 125, 126, 129, 130, 131, 134, 135, 136, 139, 140, 141, 144, 145, 146, 149, 150, 151, 154, 155, 156, 159, 160, 161, 162, 163, 166, 167, 171, 172, 174, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 258, 262, 263, 266, 268, 269, 270, 272, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 341, 344, 345, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362], "athena": [5, 355, 356, 358], "from": [5, 6, 7, 8, 9, 10, 85, 162, 166, 167, 168, 169, 170, 172, 177, 185, 186, 189, 199, 200, 203, 209, 214, 222, 223, 226, 236, 237, 240, 246, 249, 251, 253, 254, 262, 263, 266, 282, 286, 290, 291, 305, 306, 311, 314, 320, 321, 325, 344, 345, 349, 351, 352, 353, 357, 358, 362], "enzo": [6, 358], "use_particl": 7, "true": [7, 8, 10, 11, 15, 17, 27, 29, 39, 41, 51, 53, 63, 65, 75, 77, 85, 87, 88, 89, 97, 99, 101, 109, 111, 112, 113, 122, 170, 171, 190, 191, 192, 203, 204, 209, 227, 228, 229, 240, 241, 246, 250, 258, 268, 324, 348, 349, 352, 353, 361], "flash": [7, 11, 355, 356, 358], "par": 7, "line": [7, 8], "need": [7, 8, 312, 351, 353, 356, 357, 358, 360, 361, 362], "galaxyclustermerg": [7, 351], "If": [7, 8, 10, 15, 17, 18, 27, 29, 30, 39, 41, 42, 51, 53, 54, 63, 65, 66, 75, 77, 78, 87, 89, 90, 99, 101, 102, 111, 113, 114, 122, 162, 170, 171, 179, 189, 190, 191, 192, 193, 199, 201, 209, 216, 226, 227, 228, 229, 230, 236, 238, 246, 249, 250, 253, 258, 259, 263, 266, 268, 269, 272, 305, 306, 311, 320, 344, 348, 349, 353, 354, 356, 357, 358, 360, 361, 362], "dark": [7, 8, 174, 181, 190, 218, 227, 258, 290, 348, 351, 357], "matter": [7, 8, 174, 181, 190, 218, 227, 258, 290, 348, 351, 354, 357], "potenti": [7, 8, 122, 126, 131, 136, 141, 146, 151, 156, 161, 182, 190, 191, 192, 200, 219, 227, 228, 229, 237, 254, 258, 341, 348, 349, 351, 352, 357, 360, 361], "star": [7, 8, 166, 192, 229, 348, 351, 357, 360], "have": [7, 8, 10, 15, 27, 39, 51, 63, 75, 85, 87, 99, 111, 124, 129, 134, 139, 144, 149, 154, 159, 170, 190, 191, 192, 193, 199, 227, 228, 229, 230, 236, 289, 348, 349, 352, 353, 356, 357, 358, 360, 361, 362], "been": [7, 8, 10, 169, 352, 353, 360], "creat": [7, 8, 10, 124, 129, 134, 139, 144, 149, 154, 159, 167, 179, 216, 269, 288, 351, 352, 353, 357, 359, 361], "yet": [7, 8, 352, 360], "thei": [7, 8, 85, 124, 129, 134, 139, 144, 149, 154, 159, 199, 201, 236, 238, 259, 349, 352, 353, 354, 360, 361], "step": [7, 8, 252, 253, 349, 351, 352, 353, 355, 357], "gamer": [7, 8, 11, 356, 358], "boolean": [7, 8, 10, 11, 126, 131, 136, 141, 146, 151, 156, 161, 171, 190, 191, 192, 203, 204, 227, 228, 229, 240, 241, 258, 268, 270, 272, 348, 361], "option": [7, 8, 10, 11, 15, 18, 19, 27, 30, 31, 39, 42, 43, 51, 54, 55, 63, 66, 67, 75, 78, 79, 87, 90, 91, 99, 102, 103, 111, 114, 115, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 163, 166, 167, 171, 172, 174, 179, 185, 187, 188, 189, 190, 191, 192, 193, 197, 199, 201, 203, 204, 208, 210, 216, 222, 224, 225, 226, 227, 228, 229, 230, 234, 236, 238, 240, 241, 245, 247, 249, 250, 251, 252, 253, 258, 259, 263, 266, 268, 269, 270, 272, 283, 288, 290, 305, 306, 311, 325, 341, 344, 348, 351, 356, 357, 360, 361], "set": [7, 8, 10, 124, 129, 134, 139, 144, 149, 154, 159, 166, 170, 174, 190, 191, 192, 193, 199, 202, 203, 204, 227, 228, 229, 230, 236, 239, 240, 241, 258, 266, 268, 269, 348, 351, 353, 356, 357, 359, 361], "up": [7, 170, 199, 236, 351, 353, 357, 359, 361, 362], "distribut": [7, 193, 230, 259, 275, 290, 291, 344, 345, 349, 351, 357, 358, 359, 360, 361], "default": [7, 8, 10, 11, 15, 19, 27, 31, 39, 43, 51, 55, 63, 67, 75, 79, 87, 91, 99, 103, 111, 115, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 162, 167, 171, 172, 174, 179, 180, 190, 191, 192, 193, 200, 201, 203, 204, 208, 210, 216, 217, 227, 228, 229, 230, 237, 238, 240, 241, 245, 247, 249, 250, 252, 253, 258, 259, 266, 268, 270, 272, 288, 290, 305, 306, 311, 320, 325, 344, 348, 349, 352, 354, 356, 361], "file": [7, 8, 10, 11, 126, 131, 136, 141, 146, 151, 156, 161, 166, 169, 171, 189, 208, 209, 210, 226, 245, 246, 247, 262, 263, 270, 272, 286, 289, 349, 351, 352, 357, 361, 362], "alreadi": [7, 8, 10, 268, 349, 356, 357, 360, 361], "being": [7, 10, 174, 179, 216, 353, 360, 361], "flag": [7, 8, 10], "i": [7, 8, 10, 13, 15, 17, 18, 19, 21, 22, 27, 29, 30, 31, 33, 34, 39, 41, 42, 43, 45, 46, 51, 53, 54, 55, 57, 58, 63, 65, 66, 67, 69, 70, 75, 77, 78, 79, 81, 82, 85, 87, 89, 90, 91, 93, 94, 99, 101, 102, 103, 105, 106, 111, 113, 114, 115, 117, 118, 122, 162, 170, 172, 174, 179, 190, 191, 192, 193, 197, 199, 200, 201, 202, 204, 216, 227, 228, 229, 230, 234, 236, 237, 238, 239, 241, 249, 250, 251, 252, 253, 258, 268, 279, 281, 284, 289, 290, 303, 304, 311, 312, 324, 334, 348, 349, 351, 353, 354, 355, 356, 357, 358, 360, 362], "re": [7, 8, 10, 349, 353, 357, 358], "use_trac": 8, "input_testprob": 8, "clustermerg": [8, 351], "new": [8, 124, 129, 134, 139, 144, 149, 154, 159, 205, 242, 249, 259, 355, 356, 358], "also": [8, 126, 131, 136, 141, 146, 151, 156, 161, 249, 349, 351, 353, 357, 358, 360, 361, 362], "cg": [8, 173, 208, 209, 210, 245, 246, 247, 248, 255, 342, 350, 351, 353, 354, 357, 358, 360, 361, 362], "unit": [8, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 162, 200, 203, 204, 208, 210, 237, 240, 241, 245, 247, 258, 259, 266, 268, 272, 285, 325, 334, 335, 349, 351, 356, 361], "present": [8, 18, 30, 42, 54, 66, 78, 90, 102, 114, 352], "note": [8, 85, 174, 189, 201, 226, 238, 249, 250, 252, 253, 281, 284, 285, 353, 357, 360], "given": [8, 169, 172, 196, 233, 258, 259, 282, 298, 303, 304, 305, 306, 311, 314, 324, 326, 328, 353, 356, 357, 360, 361], "should": [8, 85, 166, 199, 200, 201, 209, 236, 237, 238, 246, 252, 253, 259, 284, 286, 289, 311, 349, 351, 353, 355, 360, 361, 362], "name": [8, 11, 126, 131, 136, 141, 146, 151, 156, 161, 166, 171, 189, 199, 201, 202, 208, 209, 210, 226, 236, 238, 239, 245, 246, 247, 262, 263, 268, 270, 272, 279, 280, 282, 360, 361, 362], "add": [8, 122, 124, 129, 134, 139, 144, 149, 154, 159, 258, 259, 268, 281, 351, 353, 360, 362], "tracer": [8, 166, 193, 230], "gizmo": [9, 263, 355, 358, 361], "func": [9, 19, 31, 43, 55, 67, 79, 91, 103, 115], "rams": [10, 11, 355, 357, 358], "output_filenam": [11, 208, 209, 210, 245, 246, 247, 270, 271], "ptype": [11, 124, 129, 134, 139, 144, 149, 154, 159, 259, 260, 262, 263, 264, 266, 268, 269, 343, 344, 356, 361], "ptype_num": 11, "in_cg": [11, 208, 209, 210, 245, 246, 247], "format": [11, 126, 131, 136, 141, 146, 151, 156, 161, 168, 199, 200, 236, 237, 272, 305, 306, 311, 357, 358, 360, 361], "hdf5": [11, 126, 131, 136, 141, 146, 151, 156, 161, 169, 189, 210, 226, 247, 262, 270, 272, 351, 360, 361], "write": [11, 126, 131, 136, 141, 146, 151, 156, 161, 171, 208, 209, 210, 245, 246, 247, 270, 272, 361], "clusterparticl": [11, 124, 129, 134, 139, 144, 149, 154, 159, 190, 192, 227, 229, 348, 356], "instanc": [11, 12, 13, 15, 17, 18, 27, 29, 30, 39, 41, 42, 51, 53, 54, 63, 65, 66, 75, 77, 78, 87, 89, 90, 99, 101, 102, 111, 113, 114, 166, 174, 175, 181, 189, 197, 199, 201, 205, 206, 212, 218, 226, 234, 236, 238, 242, 243, 279, 286, 288, 289, 349, 352, 353, 354, 360, 361, 362], "written": [11, 126, 131, 136, 141, 146, 151, 156, 161, 272, 356, 360, 361], "string": [11, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 171, 200, 201, 237, 238, 259, 262, 263, 266, 268, 269, 270, 272, 344, 362], "exist": [11, 85, 126, 131, 136, 141, 146, 151, 156, 161, 199, 208, 209, 210, 236, 245, 246, 247, 268, 270, 272, 281, 354, 355, 356, 361], "same": [11, 126, 131, 136, 141, 146, 151, 156, 161, 171, 190, 191, 192, 193, 208, 209, 210, 227, 228, 229, 230, 245, 246, 247, 268, 270, 348, 349, 353, 357, 361], "todo": [11, 132, 137, 142, 147, 152, 157, 165, 169, 275, 327, 343], "return": [11, 15, 17, 18, 19, 23, 27, 29, 30, 31, 35, 39, 41, 42, 43, 47, 51, 53, 54, 55, 59, 63, 65, 66, 67, 71, 75, 77, 78, 79, 83, 87, 89, 90, 91, 95, 99, 101, 102, 103, 107, 111, 113, 114, 115, 119, 162, 163, 177, 185, 186, 190, 192, 197, 199, 200, 205, 209, 214, 222, 223, 227, 229, 234, 236, 237, 242, 246, 249, 250, 251, 252, 253, 254, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 345, 348, 352, 353, 357, 361, 362], "type": [11, 15, 17, 18, 19, 25, 27, 29, 30, 31, 37, 39, 41, 42, 43, 49, 51, 53, 54, 55, 61, 63, 65, 66, 67, 73, 75, 77, 78, 79, 85, 87, 89, 90, 91, 97, 99, 101, 102, 103, 109, 111, 113, 114, 115, 124, 129, 134, 139, 144, 149, 154, 159, 162, 169, 177, 185, 186, 190, 192, 197, 200, 205, 209, 214, 222, 223, 227, 229, 234, 237, 242, 246, 249, 251, 254, 255, 259, 260, 262, 263, 266, 268, 269, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 344, 348, 351, 356, 357, 358, 360], "method": [12, 13, 15, 25, 27, 37, 39, 49, 51, 61, 63, 73, 75, 85, 87, 97, 99, 109, 111, 122, 127, 132, 137, 142, 147, 152, 157, 165, 173, 174, 179, 189, 211, 216, 226, 250, 252, 256, 279, 331, 336, 343, 345, 349, 351, 352, 353, 355, 356, 357, 360, 361], "other": [12, 18, 30, 42, 54, 66, 78, 90, 102, 114, 121, 174, 201, 238, 351, 353, 357, 359, 362], "issu": [12, 179, 189, 199, 216, 226, 236, 352, 353, 354, 355, 357, 358, 360], "cgp": 12, "diagram": [12, 13, 25, 37, 49, 61, 73, 85, 97, 109, 353], "nonphysicalregion": [12, 25, 30, 37, 42, 49, 54, 61, 66, 73, 78, 85, 90, 97, 102, 109, 114, 352, 353], "type0npr": [12, 13, 37, 49, 61, 73, 85, 97, 109, 353], "type0anpr": [12, 13, 25, 49, 61, 73, 85, 97, 109, 353], "type0bnpr": [12, 13, 25, 37, 61, 73, 85, 97, 109, 353], "type0cnpr": [12, 13, 25, 37, 49, 73, 85, 97, 109, 353], "type1npr": [12, 13, 25, 37, 49, 61, 85, 97, 109, 353], "type1anpr": [12, 13, 15, 25, 27, 37, 39, 49, 51, 61, 63, 73, 75, 97, 99, 109, 111, 353, 354], "type2npr": [12, 13, 25, 37, 49, 61, 73, 85, 109], "type2anpr": [12, 13, 25, 37, 49, 61, 73, 85, 97, 354], "correctionfailur": [12, 13, 15, 25, 27, 37, 39, 49, 51, 61, 63, 73, 75, 85, 87, 97, 99, 109, 111, 353], "except": [12, 330, 352], "rmin": [13, 14, 18, 25, 26, 30, 37, 38, 42, 49, 50, 54, 61, 62, 66, 73, 74, 78, 85, 86, 90, 97, 98, 102, 109, 110, 114, 186, 187, 188, 197, 223, 224, 225, 234, 288, 353], "rmax": [13, 14, 18, 25, 26, 30, 37, 38, 42, 49, 50, 54, 61, 62, 66, 73, 74, 78, 85, 86, 90, 97, 98, 102, 109, 110, 114, 186, 187, 188, 197, 223, 224, 225, 234, 288, 353], "npr_type": [13, 14], "obj": [13, 14, 25, 26, 37, 38, 49, 50, 61, 62, 73, 74, 85, 86, 97, 98, 109, 110, 353], "archetyp": [13, 360], "parent": 13, "sub": [13, 15, 27, 39, 51, 63, 75, 87, 99, 111, 190, 191, 192, 193, 227, 228, 229, 230, 348, 351, 353], "denot": 13, "relev": [13, 252, 253], "properti": [13, 25, 37, 49, 61, 73, 85, 97, 109, 125, 130, 135, 140, 145, 150, 155, 160, 174, 175, 181, 185, 189, 197, 206, 209, 211, 212, 218, 222, 226, 234, 243, 246, 267, 346, 347, 349, 352, 353, 357, 361], "scope": [13, 25, 37, 49, 61, 73, 85, 97, 109, 353], "graviti": [13, 25, 37, 49, 61, 73, 85, 97, 109, 201, 209, 238, 246, 351, 353, 355, 358], "attribut": [13, 25, 37, 49, 61, 73, 85, 97, 109, 122, 127, 132, 137, 142, 147, 152, 157, 174, 185, 189, 201, 209, 211, 222, 226, 238, 246, 256, 279, 343, 351, 360], "classmethod": [15, 17, 27, 29, 39, 41, 51, 53, 63, 65, 75, 77, 87, 89, 99, 101, 111, 113, 168, 185, 186, 187, 188, 189, 197, 222, 223, 224, 225, 226, 234, 261, 262, 263, 264, 282, 285, 286, 353], "recurs": [15, 17, 27, 29, 39, 41, 51, 53, 63, 65, 75, 77, 87, 89, 99, 101, 111, 113, 352, 353], "fiter": [15, 27, 39, 51, 63, 75, 87, 99, 111], "kwarg": [15, 27, 39, 51, 63, 75, 87, 99, 111, 167, 179, 185, 186, 187, 188, 197, 199, 200, 216, 222, 223, 224, 225, 234, 236, 237, 288, 341, 353, 354], "identifi": [15, 27, 39, 51, 63, 75, 87, 99, 111, 250, 251, 272, 352, 353, 354], "seek": [15, 17, 27, 29, 39, 41, 51, 53, 63, 65, 75, 77, 87, 89, 99, 101, 111, 113, 189, 226], "bool": [15, 17, 18, 27, 29, 30, 39, 41, 42, 51, 53, 54, 63, 65, 66, 75, 77, 78, 87, 89, 90, 99, 101, 102, 111, 113, 114, 122, 170, 208, 209, 210, 245, 246, 247], "iter": [15, 18, 27, 30, 39, 42, 51, 54, 63, 66, 75, 78, 87, 90, 99, 102, 111, 114, 253], "through": [15, 27, 39, 51, 63, 75, 87, 99, 111, 185, 222, 249, 349, 351, 352, 357], "correspond": [15, 27, 39, 51, 63, 75, 85, 87, 99, 109, 111, 166, 199, 201, 236, 238, 249, 252, 253, 284, 285, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 352, 353, 354, 356, 360, 361], "int": [15, 27, 39, 51, 63, 75, 87, 99, 111, 163, 166, 167, 179, 186, 199, 216, 223, 236, 249, 250, 252, 253, 284, 290, 361], "maxim": [15, 27, 39, 51, 63, 75, 87, 99, 111, 166, 189, 205, 226, 242, 341, 357, 360], "number": [15, 27, 39, 51, 63, 75, 87, 99, 111, 122, 166, 167, 170, 174, 179, 185, 186, 187, 188, 190, 191, 192, 193, 197, 198, 216, 222, 223, 224, 225, 227, 228, 229, 230, 234, 235, 250, 253, 268, 288, 348, 352, 357, 358, 361], "attempt": [15, 27, 39, 51, 63, 75, 87, 99, 111, 353], "befor": [15, 27, 39, 51, 63, 75, 87, 99, 111, 208, 210, 245, 247, 351, 357], "process": [15, 27, 39, 51, 63, 75, 87, 99, 111, 169, 181, 206, 218, 243, 250, 341, 351, 353, 354, 357, 358, 362], "failur": [15, 27, 39, 51, 63, 75, 87, 99, 111, 353, 354, 358], "mai": [15, 27, 39, 51, 63, 75, 85, 87, 99, 111, 201, 238, 249, 285, 312, 349, 352, 353, 354, 356, 357, 360, 361], "than": [15, 27, 39, 51, 63, 75, 87, 99, 111, 170, 252, 253, 281], "onli": [15, 27, 39, 51, 63, 75, 85, 87, 99, 111, 190, 191, 192, 193, 197, 209, 227, 228, 229, 230, 234, 246, 348, 351, 353, 354, 358, 361, 362], "made": [15, 27, 39, 51, 63, 75, 87, 99, 111, 162, 352, 353, 357], "ani": [15, 27, 39, 51, 63, 75, 85, 87, 99, 111, 166, 199, 200, 209, 236, 237, 246, 281, 352, 353, 357, 358, 361, 362], "select": [15, 27, 39, 51, 63, 75, 87, 99, 111, 199, 236, 311, 349], "addit": [15, 27, 39, 51, 63, 75, 87, 99, 111, 122, 174, 185, 197, 199, 201, 222, 234, 236, 238, 272, 353, 357, 360, 361, 362], "pass": [15, 18, 19, 27, 30, 31, 39, 42, 43, 51, 54, 55, 63, 66, 67, 75, 78, 79, 87, 90, 91, 99, 102, 103, 111, 114, 115, 174, 185, 197, 199, 201, 222, 234, 236, 238, 249, 250, 341, 354, 357], "kei": [15, 18, 27, 30, 39, 42, 51, 54, 63, 66, 75, 78, 87, 90, 99, 102, 111, 114, 166, 174, 185, 199, 200, 201, 222, 236, 237, 238], "inform": [15, 27, 39, 51, 63, 75, 87, 99, 111, 168, 171, 272, 349, 358, 360, 361, 362], "correction_paramet": [15, 27, 39, 51, 63, 75, 87, 99, 111, 253, 354], "degre": [15, 27, 39, 51, 63, 75, 87, 99, 111, 253, 290, 291, 354], "impos": [15, 27, 39, 51, 63, 75, 87, 99, 111, 353], "dure": [15, 27, 39, 51, 63, 73, 75, 87, 99, 111, 249, 253, 352, 353], "interpol": [15, 27, 39, 51, 63, 75, 87, 99, 111, 124, 129, 134, 139, 144, 149, 154, 159, 252, 253, 285, 354, 356, 357], "procedur": [15, 27, 39, 51, 63, 75, 87, 99, 111, 209, 246, 349, 356, 360], "rais": [15, 27, 39, 51, 63, 75, 87, 99, 111, 249, 353], "one": [15, 27, 39, 51, 63, 75, 87, 99, 111, 170, 190, 191, 192, 193, 199, 200, 227, 228, 229, 230, 236, 237, 249, 259, 281, 288, 305, 306, 311, 312, 345, 348, 349, 351, 352, 353, 354, 356, 357, 359, 360, 361], "uncorrect": [15, 27, 39, 51, 63, 75, 87, 99, 111], "them": [17, 29, 41, 53, 65, 77, 89, 101, 113, 170, 349, 351, 353, 354, 360, 361, 362], "just": [17, 29, 41, 53, 65, 77, 89, 101, 113, 349, 362], "subtyp": [17, 29, 41, 53, 65, 77, 89, 101, 113], "propag": [17, 29, 41, 53, 65, 77, 89, 101, 113], "downward": [17, 29, 41, 53, 65, 77, 89, 101, 113], "tree": [17, 29, 41, 53, 65, 77, 89, 101, 113, 353], "pattern": [17, 29, 41, 53, 65, 77, 89, 101, 113], "A": [17, 29, 41, 53, 65, 77, 89, 101, 113, 187, 188, 190, 191, 192, 193, 197, 199, 200, 205, 224, 225, 227, 228, 229, 230, 234, 236, 237, 242, 249, 252, 253, 259, 262, 288, 295, 299, 300, 301, 303, 304, 307, 308, 312, 315, 316, 318, 319, 320, 321, 322, 325, 348, 353, 354, 356, 361], "list": [17, 18, 29, 30, 41, 42, 53, 54, 65, 66, 77, 78, 89, 90, 101, 102, 113, 114, 166, 199, 201, 209, 236, 238, 246, 251, 259, 262, 263, 266, 269, 333, 351, 357, 358, 360], "indic": [17, 25, 29, 37, 41, 49, 53, 61, 65, 73, 77, 89, 97, 101, 113, 250, 251, 259, 268, 353, 360], "regim": [17, 29, 41, 53, 65, 77, 89, 101, 113, 249, 352], "rtol": [18, 30, 42, 54, 66, 78, 90, 102, 114, 250, 252, 253], "0": [18, 25, 30, 42, 54, 66, 78, 85, 90, 102, 114, 122, 123, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158, 165, 166, 167, 172, 179, 204, 216, 241, 249, 250, 252, 253, 258, 266, 281, 290, 296, 305, 306, 311, 325, 349, 351, 352, 356, 360, 361], "01": [18, 30, 42, 54, 66, 78, 90, 102, 114, 352], "compar": [18, 30, 42, 54, 66, 78, 90, 102, 114, 250], "two": [18, 30, 42, 54, 66, 78, 90, 102, 114, 170, 172, 351, 353, 357, 360, 361], "check": [18, 30, 42, 54, 66, 78, 85, 90, 102, 114, 199, 202, 236, 239, 268, 327, 349, 353, 357], "rel": [18, 30, 42, 54, 66, 78, 90, 102, 114, 170, 177, 179, 214, 216, 252, 253, 345, 352, 353, 358, 360, 361], "separ": [18, 30, 42, 54, 66, 78, 90, 102, 114, 172], "within": [18, 30, 42, 54, 66, 78, 85, 90, 102, 114, 190, 191, 192, 193, 196, 227, 228, 229, 230, 233, 272, 313, 325, 348, 354, 361], "toler": [18, 30, 42, 54, 66, 78, 90, 102, 114, 250, 252, 253], "dict": [18, 30, 42, 54, 66, 78, 90, 102, 114, 166, 174, 185, 199, 200, 201, 222, 236, 237, 238], "equal": [18, 30, 42, 54, 66, 78, 90, 102, 114, 361], "valu": [18, 30, 42, 54, 66, 78, 85, 90, 102, 114, 162, 166, 183, 199, 201, 202, 220, 236, 238, 239, 249, 250, 251, 252, 253, 258, 268, 285, 290, 291, 297, 305, 312, 326, 327, 328, 349, 352, 356, 360, 361, 362], "minimum": [18, 22, 30, 34, 42, 46, 54, 58, 66, 70, 78, 82, 90, 94, 102, 106, 114, 118, 167, 179, 186, 187, 188, 189, 197, 199, 200, 209, 210, 216, 223, 224, 225, 226, 234, 236, 237, 246, 247, 250, 253, 258, 288, 321, 361], "maximum": [18, 21, 30, 33, 42, 45, 54, 57, 66, 69, 78, 81, 90, 93, 102, 105, 114, 117, 186, 187, 188, 190, 191, 192, 193, 197, 199, 200, 209, 210, 223, 224, 225, 227, 228, 229, 230, 234, 236, 237, 246, 247, 250, 253, 266, 288, 341, 348, 361], "radii": [18, 30, 42, 54, 66, 78, 90, 102, 114, 174, 190, 191, 192, 193, 227, 228, 229, 230, 249, 276, 277, 285, 336, 337, 348, 349, 353, 354, 355, 357, 360, 361], "requir": [18, 30, 42, 54, 66, 78, 90, 102, 114, 190, 191, 192, 193, 227, 228, 229, 230, 249, 289, 348, 351, 352, 354, 356, 357, 360, 361], "tupl": [18, 30, 42, 54, 66, 78, 90, 102, 114, 162, 167, 179, 200, 216, 237, 251], "assum": [18, 30, 42, 54, 66, 78, 85, 90, 102, 114, 162, 203, 204, 240, 241, 258, 259, 356, 357, 360, 361], "element": [18, 30, 42, 54, 66, 78, 90, 102, 114, 185, 198, 222, 235, 259, 338], "form": [18, 30, 42, 54, 66, 78, 90, 102, 114, 162, 200, 237, 284, 303, 304, 352, 360], "describ": [18, 30, 42, 54, 66, 78, 90, 102, 114, 187, 188, 197, 201, 224, 225, 234, 238, 353, 360, 361], "abov": [18, 30, 42, 54, 66, 78, 90, 102, 114, 249, 352, 356, 357, 360, 361], "each": [18, 30, 42, 54, 66, 78, 90, 102, 114, 122, 166, 167, 190, 191, 192, 198, 199, 227, 228, 229, 235, 236, 249, 250, 348, 349, 351, 352, 353, 355, 356, 358, 360, 361, 362], "must": [18, 30, 42, 54, 66, 78, 90, 102, 114, 179, 185, 200, 216, 222, 237, 249, 252, 253, 279, 353, 360, 361], "comparison": [18, 30, 42, 54, 66, 78, 90, 102, 114], "float": [18, 30, 42, 54, 66, 78, 90, 102, 114, 163, 166, 167, 172, 179, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 200, 203, 204, 205, 209, 210, 216, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 240, 241, 242, 246, 247, 249, 250, 252, 253, 258, 266, 269, 272, 281, 284, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 341, 348, 362], "print": [19, 31, 43, 55, 67, 79, 91, 103, 115, 349, 352, 362], "output": [19, 31, 43, 55, 67, 79, 91, 103, 115, 126, 131, 136, 141, 146, 151, 156, 161, 166, 169, 209, 246, 249, 331, 349, 357, 362], "callabl": [19, 31, 43, 55, 67, 79, 91, 103, 115, 186, 223, 249, 250, 279, 285, 341, 362], "displai": [19, 31, 43, 55, 67, 79, 91, 103, 115], "progenitor": [20, 32, 44, 56, 68, 80, 92, 104, 116], "referenc": [20, 32, 44, 56, 68, 80, 92, 104, 116], "radiu": [21, 22, 33, 34, 45, 46, 57, 58, 69, 70, 81, 82, 93, 94, 105, 106, 117, 118, 166, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 200, 205, 209, 210, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 236, 237, 242, 246, 247, 254, 266, 281, 284, 288, 290, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 328, 329, 348, 349, 354, 362], "defect": [21, 22, 33, 34, 45, 46, 57, 58, 69, 70, 81, 82, 93, 94, 105, 106, 117, 118], "detect": [21, 22, 33, 34, 45, 46, 57, 58, 69, 70, 81, 82, 93, 94, 105, 106, 117, 118, 352, 353], "marker": [25, 73, 97], "subclass": [25, 37, 49, 61, 73, 97, 353], "character": 25, "inher": 25, "basic": [25, 323, 330, 349, 355, 357, 358, 360], "For": [25, 179, 216, 249, 289, 349, 353, 357, 358, 360, 361, 362], "exampl": [25, 189, 226, 249, 262, 263, 349, 352, 353, 357, 358, 360, 361, 362], "user": [25, 164, 201, 209, 238, 246, 249, 351, 352, 353, 354, 357, 358, 361, 362], "try": [25, 349, 352], "neg": [25, 37, 49, 353, 354], "temperatur": [25, 37, 85, 109, 167, 180, 188, 217, 225, 254, 290, 291, 292, 293, 312, 321, 349, 352, 353, 354, 357, 360], "associ": [37, 49, 61, 125, 130, 135, 140, 145, 150, 155, 160, 181, 182, 201, 206, 218, 219, 238, 243, 278], "entropi": [37, 186, 223, 294, 296, 312, 322, 349, 353, 357, 358, 360], "0a": 37, "t_g": [37, 73, 85, 97, 109, 353, 360], "rho_g": [37, 73, 85, 97, 109, 352, 353, 354, 360], "s_g": [37, 353], "densiti": [49, 85, 167, 169, 170, 180, 184, 185, 186, 187, 188, 191, 193, 197, 204, 217, 221, 222, 223, 224, 225, 228, 230, 234, 241, 254, 290, 291, 292, 295, 298, 299, 300, 303, 305, 306, 307, 309, 310, 311, 312, 313, 315, 318, 319, 320, 324, 329, 345, 349, 352, 353, 354, 357, 360, 361], "0b": 49, "caus": [61, 281, 284, 353, 354, 360], "elsewher": 61, "specifi": [61, 163, 179, 184, 190, 191, 192, 193, 199, 201, 205, 209, 216, 221, 227, 228, 229, 230, 236, 238, 242, 246, 249, 251, 272, 282, 348, 353, 357, 360, 361], "0c": 61, "1": [73, 122, 123, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158, 163, 190, 191, 192, 193, 199, 200, 227, 228, 229, 230, 236, 237, 249, 250, 251, 252, 253, 281, 284, 322, 324, 348, 349, 351, 352, 360, 361], "gravit": [73, 85, 97, 109, 190, 191, 192, 200, 201, 227, 228, 229, 237, 238, 258, 348, 349, 352, 353, 354, 355, 357, 358, 360, 361], "theori": [73, 97, 109, 201, 238, 353, 355, 357, 358, 360], "independ": [73, 353, 360], "driven": [73, 352], "breakdown": [73, 351], "deriv": [73, 249, 250, 352, 353, 354, 356, 357, 358, 360, 361], "behavior": [73, 199, 201, 236, 238, 249, 284, 285, 354, 355, 357, 358, 360, 362], "construct": [73, 186, 187, 188, 223, 224, 225, 344, 352, 353, 354, 358, 360], "where": [85, 172, 209, 246, 249, 250, 303, 304, 353, 354, 360, 361], "growth": 85, "rate": [85, 284], "ga": [85, 124, 129, 134, 139, 144, 149, 154, 159, 166, 169, 170, 186, 187, 188, 191, 193, 223, 224, 225, 228, 230, 254, 263, 290, 291, 349, 353, 356, 357, 360], "inconsist": [85, 109, 353, 354], "posit": [85, 170, 172, 190, 191, 192, 193, 227, 228, 229, 230, 249, 251, 253, 258, 259, 348, 349, 353, 354, 356, 357], "1a": [85, 353, 354], "nabla": [85, 353, 354, 356, 360], "phi": [85, 353, 354, 360, 361], "determin": [85, 172, 177, 184, 196, 199, 214, 221, 233, 236, 249, 253, 258, 352, 353, 354, 360, 361], "frac": [85, 249, 281, 284, 349, 353, 354, 360, 361], "k_bt": [85, 354], "m_p": [85, 353, 354, 360], "eta": [85, 204, 241, 353, 354, 360], "left": [85, 167, 179, 200, 216, 237, 249, 250, 281, 284, 353, 354, 360, 361], "partial_r": 85, "ln": [85, 353, 354, 360], "right": [85, 249, 250, 281, 284, 349, 353, 354, 360, 361], "becaus": [85, 249, 351, 352, 353, 354, 360], "spheric": [85, 338, 356, 357, 361], "symmetr": [85, 357, 361], "entir": [85, 166, 249, 352, 353, 360], "mass": [85, 167, 170, 187, 188, 196, 197, 224, 225, 233, 234, 258, 290, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 316, 317, 319, 324, 326, 327, 329, 349, 353, 354, 357, 360, 361], "shell": 85, "therefor": [85, 353, 354, 360], "alwai": [85, 124, 129, 134, 139, 144, 149, 154, 159], "thu": [85, 249, 353, 354, 356, 361], "d": [85, 172, 281, 298, 351, 353, 354, 360, 361], "dr": [85, 281, 353, 354, 360], "t": [85, 249, 290, 291, 294, 349, 351, 352, 353, 354, 360], "type1a": 85, "reli": [85, 351, 362], "doe": [85, 353, 361], "consid": [85, 352, 354, 355, 357, 360], "even": [85, 349, 354, 361], "2": [97, 109, 163, 172, 203, 204, 240, 241, 249, 250, 251, 252, 253, 274, 277, 294, 303, 304, 349, 351, 357, 360, 361], "depend": [97, 109, 199, 236, 249, 349, 356], "asymptot": [109, 249, 353, 354, 360], "3d": [121, 124, 126, 129, 131, 134, 136, 139, 141, 144, 146, 149, 151, 154, 156, 159, 161, 167, 179, 216, 357, 361], "base": [121, 190, 191, 192, 193, 199, 227, 228, 229, 230, 236, 250, 252, 253, 348, 351, 352, 357, 358, 360, 361], "task": [121, 357, 358, 359], "left_edg": [122, 123, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158, 167, 179, 216], "right_edg": [122, 123, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158], "ddim": [122, 123, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158], "pad": [122, 123, 127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158], "vector_potenti": [122, 123, 127, 128], "divergence_clean": [122, 123, 127, 128, 142, 143, 157, 158], "arrai": [122, 162, 166, 172, 174, 177, 179, 185, 198, 202, 214, 216, 222, 235, 239, 249, 250, 251, 252, 253, 258, 259, 266, 268, 285, 324, 326, 327, 334, 345, 355, 357, 361, 362], "like": [122, 162, 169, 172, 249, 252, 253, 258, 259, 266, 285, 349, 351, 352, 353, 357, 358, 362], "lower": 122, "edg": [122, 167, 179, 216, 251], "box": [122, 167, 179, 216, 272, 361], "kpc": [122, 126, 131, 136, 141, 146, 151, 156, 161, 167, 172, 179, 187, 188, 190, 191, 192, 193, 197, 199, 200, 216, 224, 225, 227, 228, 229, 230, 234, 236, 237, 258, 259, 266, 269, 272, 281, 284, 285, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 348, 349, 357, 361], "dimens": [122, 167, 179, 216, 357], "upper": 122, "grid": [122, 167, 179, 199, 216, 236, 351, 356, 357], "ax": [122, 126, 131, 136, 141, 146, 151, 156, 161, 199, 200, 236, 237, 249, 288, 349, 361], "amount": [122, 361], "boundari": [122, 251], "vector": [122, 163, 360, 361], "diverg": [122, 356, 361], "remov": [122, 266, 356], "cluster_particl": [124, 129, 134, 139, 144, 149, 154, 159], "map": [124, 129, 134, 139, 144, 149, 154, 159, 249, 361], "tri": [124, 129, 134, 139, 144, 149, 154, 159], "linear": [124, 129, 134, 139, 144, 149, 154, 159, 356], "ad": [124, 129, 134, 139, 144, 149, 154, 159, 167, 170, 259, 268, 281, 355, 358], "almost": [124, 129, 134, 139, 144, 149, 154, 159, 353], "case": [124, 129, 134, 139, 144, 149, 154, 159, 166, 169, 200, 209, 237, 246, 249, 258, 352, 353, 354, 355, 358, 360, 361], "chang": [124, 129, 134, 139, 144, 149, 154, 159, 352], "impli": [124, 129, 134, 139, 144, 149, 154, 159, 249, 354, 360], "remain": [124, 129, 134, 139, 144, 149, 154, 159], "galact": [124, 129, 134, 139, 144, 149, 154, 159], "filenam": [126, 131, 136, 141, 146, 151, 156, 161, 168, 171, 189, 209, 226, 246, 262, 263, 264, 286, 289], "length_unit": [126, 131, 136, 141, 146, 151, 156, 161], "field_unit": [126, 131, 136, 141, 146, 151, 156, 161], "coordin": [126, 131, 136, 141, 146, 151, 156, 161, 167, 179, 216, 259, 266], "cell": [126, 131, 136, 141, 146, 151, 156, 161, 167, 169, 179, 216, 351, 356], "along": [126, 131, 136, 141, 146, 151, 156, 161, 172, 302, 317], "length": [126, 131, 136, 141, 146, 151, 156, 161, 199, 236, 290, 291, 329, 349, 357, 360], "affect": [126, 131, 136, 141, 146, 151, 156, 161], "str": [126, 131, 136, 141, 146, 151, 156, 161, 162, 166, 174, 185, 189, 199, 201, 208, 209, 210, 222, 226, 236, 238, 245, 246, 247, 286, 289], "l_min": [127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158], "l_max": [127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158], "alpha": [127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158, 249, 281, 290, 291, 292, 294, 296, 312, 320, 322, 354, 360], "3": [127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158, 163, 167, 179, 199, 204, 216, 236, 241, 249, 250, 259, 273, 276, 292, 295, 309, 310, 318, 319, 320, 349, 351, 353, 357, 360, 361], "6666666666666665": [127, 128, 132, 133, 137, 138, 142, 143, 147, 148, 152, 153, 157, 158], "g_rm": [127, 128], "ctr1": [127, 128, 132, 133, 137, 138, 142, 143], "ctr2": [127, 128, 132, 133, 137, 138, 142, 143], "ctr3": [127, 128, 132, 133, 137, 138, 142, 143], "r1": [127, 128], "r2": [127, 128], "r3": [127, 128], "g1": [127, 128], "g2": [127, 128], "g3": [127, 128], "r_max": [127, 128, 132, 133, 137, 138, 142, 143, 165, 166, 189, 190, 191, 192, 193, 199, 200, 205, 209, 210, 226, 227, 228, 229, 230, 236, 237, 242, 246, 247, 266, 336, 348, 361], "manag": [127, 255, 331, 343, 349, 352], "gaussian": [127, 203, 204, 240, 241], "random": [127, 170, 190, 191, 192, 193, 227, 228, 229, 230, 340, 348, 361, 362], "profile1": [132, 133, 137, 138, 142, 143], "profile2": [132, 133, 137, 138, 142, 143], "profile3": [132, 133, 137, 138, 142, 143], "docstr": [132, 137, 142, 147, 152, 157, 165, 275, 357], "b_rm": [147, 148, 152, 153], "v_rm": [157, 158], "default_unit": [162, 335], "pars": 162, "convert": [162, 208, 210, 245, 247, 268, 324, 352, 357, 358, 360], "unyt_arrai": [162, 166, 174, 179, 185, 186, 202, 216, 222, 223, 239, 254, 259, 268, 324, 344, 360], "simpli": [162, 250, 353, 361], "v_arrai": 162, "v_unit": 162, "convers": [162, 324], "final": [162, 349, 353, 357, 361, 362], "quantiti": [162, 166, 167, 335, 357, 360, 361], "axi": [163, 200, 237], "gx": 163, "gy": 163, "gz": 163, "ang": 163, "rotat": 163, "angl": 163, "around": [163, 250, 349, 362], "x": [163, 172, 200, 237, 249, 250, 251, 252, 253, 333, 335, 351, 354, 357, 358, 361, 362], "compon": [163, 185, 222, 349, 356, 358, 360, 361], "y": [163, 172, 249, 250, 252, 253, 292, 351], "z": [163, 172, 305, 306, 311], "over": [163, 200, 237, 250, 252, 253, 337, 338, 345, 361], "face": 164, "structur": [164, 201, 238, 349, 356, 357, 360, 362], "interfac": [164, 357, 358], "softwar": [164, 349, 353, 357, 358, 361], "basenam": [165, 166], "num_halo": [165, 166], "center": [165, 166, 172, 253, 259, 266, 275, 361, 362], "veloc": [165, 166, 167, 169, 170, 179, 190, 192, 216, 227, 229, 258, 259, 275, 348, 349, 357, 359, 360], "num_particl": [165, 166, 190, 191, 192, 193, 227, 228, 229, 230, 336, 348, 349, 361], "mag_fil": [165, 166], "particle_fil": [165, 166], "20000": [165, 166, 361], "r_max_trac": [165, 166], "refer": [166, 179, 216, 290, 292, 294, 295, 298, 302, 303, 307, 315, 317, 318, 321, 349, 350, 360, 362], "halo": [166, 298, 305, 306, 311, 351, 354, 357, 360, 361], "includ": [166, 180, 199, 208, 217, 236, 245, 351, 352, 356, 358, 360], "system": [166, 190, 191, 192, 193, 227, 228, 229, 230, 266, 303, 348, 352, 353, 354, 357, 358, 360, 361], "part": [166, 169, 353, 356, 358, 361], "unyt": [166, 174, 185, 222, 324, 326, 327, 357, 361], "speci": [166, 197, 234], "dictionari": [166, 199, 200, 201, 209, 236, 237, 238, 246], "dm": [166, 263, 349, 357, 360, 361], "run": [166, 341, 349, 351, 355, 357, 359], "sph": [166, 170], "follow": [166, 250, 349, 351, 352, 353, 354, 357, 358, 360, 362], "path": [166, 209, 246], "contain": [166, 173, 177, 185, 200, 214, 222, 237, 250, 251, 256, 281, 352, 358, 360, 361], "data": [166, 249, 263, 349, 352, 360], "truncat": [166, 205, 242, 284, 318, 319, 362], "domain": [166, 167, 179, 216, 249, 250, 251, 252, 253, 269, 353, 354], "domain_dimens": [167, 179, 216], "box_siz": [167, 179, 216, 269, 272, 361], "memori": [167, 179, 216, 269, 357], "uniformli": [167, 179, 199, 216, 236], "dataset": [167, 179, 216, 269, 352, 357, 358], "yt": [167, 179, 216, 269, 272, 305, 306, 311, 355, 357], "place": [167, 179, 199, 216, 236, 357, 358, 361, 362], "multipl": [167, 361], "per": 167, "volum": [167, 338], "pressur": [167, 180, 203, 217, 240, 349, 357, 360], "wherea": 167, "weight": [167, 170], "side": [167, 179, 216, 250, 269], "size": [167, 179, 202, 216, 239, 250, 268], "array_lik": [167, 179, 216, 250], "three": [167, 170, 179, 216, 351, 353, 356, 357, 361], "mean": [167, 179, 190, 191, 192, 193, 216, 227, 228, 229, 230, 259, 290, 324, 348, 349, 352, 357, 360], "yaml": [168, 357], "passive_scalar": [169, 268, 276, 277, 361], "gadget": [169, 263, 272, 351, 355], "ha": [169, 202, 239, 249, 268, 311, 312, 335, 349, 351, 352, 353, 354, 356, 360, 361], "some": [169, 204, 241, 249, 313, 328, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360], "relax": 169, "make": [169, 200, 202, 237, 239, 266, 268, 288, 349, 353, 354], "glass": 169, "meshrelax": 169, "thermal": [169, 170, 203, 240, 360], "energi": [169, 170, 191, 193, 228, 230, 357, 361], "onto": [169, 199, 236, 275, 356], "hydrostat": [169, 177, 187, 188, 191, 214, 224, 225, 228, 357, 361], "routin": 170, "either": [170, 249, 263, 272, 344, 356, 361], "singl": [170, 259, 263, 275, 351, 353, 356, 357, 359, 360, 361], "combin": [170, 273, 274, 349, 361], "togeth": [170, 353, 361], "overlap": 170, "regener": 170, "b": [172, 203, 204, 240, 241, 299, 321, 322, 351, 352, 354, 356, 362], "common": [172, 353, 354, 360], "distanc": 172, "calcul": [172, 314, 345, 353, 357, 361], "first": [172, 351, 352, 353, 355, 357, 360, 361], "direct": [172, 358, 361], "sep_x": 172, "sqrt": [172, 361], "between": [172, 288, 323, 325, 345, 357, 358, 360, 361], "impact": 172, "so": [172, 174, 208, 245, 272, 312, 349, 353, 356, 358, 360, 361, 362], "result": [172, 197, 234, 249, 324, 349, 353, 356, 361], "center1": [172, 273, 274, 276, 277], "5": [172, 249, 284, 303, 349, 352, 361], "center2": [172, 273, 274, 276, 277], "core": [173, 281, 290, 291, 292, 293, 295, 299, 300, 301, 302, 320, 352, 353, 357, 358, 360, 362], "relat": [173, 360], "repres": [173, 279, 290, 291, 349, 351, 352, 353, 354, 362], "self": [173, 174, 176, 178, 185, 194, 195, 207, 209, 213, 215, 222, 231, 232, 244, 246, 352, 353, 362], "consist": [173, 185, 222, 289, 352, 353, 361, 362], "galaxi": [173, 292, 293, 294, 320, 321, 349, 352, 355, 357, 358, 360], "dm_virial": [174, 175, 176, 211, 212, 213], "star_viri": [174, 175, 178, 211, 212, 215], "comprehens": [174, 358, 360, 362], "represent": 174, "accur": 174, "predic": 174, "fix": [174, 353, 354, 360], "sampl": [174, 186, 190, 191, 192, 193, 223, 227, 228, 229, 230, 336, 348], "These": [174, 199, 201, 236, 238, 352, 353, 354, 357, 358, 360, 361, 362], "found": [174, 189, 201, 226, 238, 253, 353, 354], "see": [174, 349, 351, 352, 354, 355, 357, 358, 360, 361], "section": [174, 303, 304, 353, 357, 360], "detail": [174, 349, 357, 358, 361, 362], "virialequilibrium": [174, 181, 206, 218, 243], "virial": [174, 181, 190, 192, 206, 218, 227, 229, 243, 294, 355, 357, 358, 360], "By": [174, 361], "necessari": [174, 349, 356, 358, 360, 362], "stellar": [174, 185, 186, 187, 188, 197, 206, 222, 223, 224, 225, 234, 243, 303, 344, 360, 361], "__getitem__": 174, "__contains__": 174, "alias": 174, "down": 174, "There": [174, 199, 236, 353, 354, 357, 360], "__setitem__": 174, "index": [174, 249, 281, 290, 303, 304, 312, 358], "assign": [174, 349, 356, 361], "cannot": [174, 189, 226, 360], "done": [174, 249, 349, 351, 352, 356, 357, 360], "set_field": [174, 360, 361], "instead": [174, 250, 251, 281, 360, 362], "equival": [176, 178, 194, 195, 207, 211, 213, 215, 231, 232, 244, 249, 353, 360], "check_viri": [176, 178, 213, 215], "deviat": [177, 214, 360], "equilibrium": [177, 187, 188, 190, 191, 192, 208, 210, 214, 224, 225, 227, 228, 229, 245, 247, 344, 348, 357], "chk": [177, 214, 345], "numpi": [177, 214, 249, 250, 251, 252, 253, 259, 345, 357, 361], "intens": [179, 216], "we": [179, 216, 349, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362], "suggest": [179, 216, 292, 293, 358], "conserv": [179, 216, 360], "choic": [179, 216, 349, 360], "begin": [179, 216, 354, 357, 360], "order": [179, 216], "avoid": [179, 216], "oom": [179, 216], "500": [179, 216, 326, 327, 349, 361], "take": [179, 216, 249, 250, 281, 349, 352, 353, 355, 356, 357, 360], "appox": [179, 216], "3gb": [179, 216], "r": [179, 183, 216, 220, 249, 252, 253, 254, 281, 284, 285, 295, 312, 329, 336, 349, 351, 352, 353, 354, 356, 360, 361], "frame": [179, 216, 355, 361], "1x3": [179, 216], "total_dens": [180, 187, 197, 217, 224, 234, 349], "gravitational_potenti": [180, 217, 349], "gravitational_field": [180, 217, 349], "total_mass": [180, 217, 349], "gas_mass": [180, 217, 349], "dark_matter_mass": [180, 217, 349], "dark_matter_dens": [180, 217, 349, 361], "stellar_dens": [180, 185, 186, 187, 188, 197, 217, 222, 223, 224, 225, 234], "stellar_mass": [180, 217], "access": [180, 217, 358, 362], "reach": [184, 221], "alon": [185, 222], "its": [185, 189, 222, 226, 249, 281, 351, 352, 354, 355, 356, 357, 362], "definit": [185, 222], "assess": [185, 222], "radial_profil": [185, 222, 249, 349, 360, 362], "radialprofil": [185, 187, 188, 197, 222, 224, 225, 234, 249, 278, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 349, 360, 362], "from_dens_and_tden": [185, 222, 349, 360], "from_dens_and_temp": [185, 222, 360], "from_dens_and_entr": [185, 222, 360], "from_h5_fil": [185, 222, 360], "num_point": [186, 187, 188, 197, 223, 224, 225, 234, 288], "1000": [186, 187, 188, 197, 223, 224, 225, 234, 288, 361], "comput": [186, 190, 191, 192, 223, 227, 228, 229, 254, 305, 306, 311, 326, 328, 345, 348, 349, 352, 353, 354, 356, 360, 361], "point": [186, 187, 188, 197, 223, 224, 225, 234, 249, 250, 288, 354, 360], "total": [187, 197, 224, 234, 299, 300, 301, 302, 303, 304, 307, 308, 313, 315, 316, 317, 326, 327, 329, 349, 360, 361], "desir": [187, 188, 197, 201, 224, 225, 234, 238, 352, 361], "integ": [187, 188, 190, 191, 192, 193, 197, 224, 225, 227, 228, 229, 230, 234, 252, 253, 288, 292, 348], "evalu": [187, 188, 197, 224, 225, 234], "r_min": [189, 199, 200, 209, 210, 226, 236, 237, 246, 247], "both": [189, 226, 290, 291, 349, 353, 361], "later": [189, 226, 353, 356, 361], "lose": [189, 209, 226, 246], "warn": [189, 226, 352, 361], "import": [189, 226, 249, 262, 263, 349, 352, 353, 360, 361, 362], "hse_model": [189, 226], "h5": [189, 226, 262, 263, 349, 356, 357, 361], "sub_sampl": [190, 191, 192, 193, 227, 228, 229, 230, 348], "compute_potenti": [190, 191, 192, 227, 228, 229, 348, 361], "suppli": [190, 191, 192, 193, 201, 227, 228, 229, 230, 238, 305, 306, 311, 344, 348, 357, 360, 361], "out": [190, 191, 192, 193, 227, 228, 229, 230, 253, 348, 349, 355, 357, 361, 362], "allow": [190, 191, 192, 193, 227, 228, 229, 230, 253, 348, 354, 357, 360, 361, 362], "uniqu": [190, 191, 192, 193, 227, 228, 229, 230, 348, 361], "repeat": [190, 191, 192, 193, 227, 228, 229, 230, 348], "fill": [190, 191, 192, 193, 227, 228, 229, 230, 253, 348], "randomst": [190, 191, 192, 193, 227, 228, 229, 230, 348], "pseudo": [190, 191, 192, 193, 227, 228, 229, 230, 290, 291, 348], "typic": [190, 191, 192, 193, 227, 228, 229, 230, 348, 359, 360], "reason": [190, 191, 192, 193, 227, 228, 229, 230, 348, 353, 360], "test": [190, 191, 192, 193, 227, 228, 229, 230, 348], "seed": [190, 191, 192, 193, 227, 228, 229, 230, 348], "compos": [197, 234, 353], "collisionless": [197, 234, 345, 361], "keyword": [197, 199, 234, 236, 341, 353], "fig": [199, 200, 236, 237, 249, 288, 349, 361], "aspect_ratio": [199, 236, 349], "base_length": [199, 236, 349], "gs_kwarg": [199, 236, 352], "plot": [199, 236, 349, 357, 361], "get": [199, 236, 353, 358, 359, 360, 361, 362], "impress": [199, 236], "otherwis": [199, 203, 204, 236, 240, 241, 249, 357, 361], "figur": [199, 200, 236, 237, 288, 349], "fresh": [199, 236], "cover": [199, 236, 361], "those": [199, 209, 236, 246, 349, 352, 357, 361], "drawn": [199, 236], "organ": [199, 236], "belong": [199, 236, 272], "subdivid": [199, 236], "facilit": [199, 236, 353, 358], "draw": [199, 236, 361], "aspect": [199, 236, 352, 353, 357, 358], "ratio": [199, 203, 236, 240, 290], "individu": [199, 236, 357, 362], "subplot": [199, 236, 249, 361], "rest": [199, 236, 349], "geometri": [199, 236], "matplotlib": [199, 200, 236, 237, 249, 288, 349, 352, 361], "gridspec": [199, 236], "argument": [199, 236, 258, 341, 353, 356], "directli": [199, 236, 352, 353, 355, 357, 362], "pyplot": [199, 236, 249, 349, 352, 361], "sever": [199, 236, 353, 354, 361], "miss": [199, 236], "appli": [199, 236, 360], "across": [199, 236], "v": [200, 237, 349, 351, 356, 360, 361], "load": [200, 237, 262, 286, 352, 360, 362], "unset": [200, 237], "label": [200, 237, 361], "scale": [200, 237, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 329, 349, 357], "revis": [200, 237], "charact": [200, 237], "valid": [200, 237, 249, 286], "input": [200, 237, 302, 313, 317, 345, 351, 353, 356, 357, 361], "set_yscal": [200, 237], "normal": [200, 237, 259, 361], "flip": [200, 237], "below": [201, 238, 249, 250, 253, 351, 357, 360], "therein": [201, 238], "taken": [201, 238, 352], "standard": [201, 238, 279, 324, 357, 362], "anoth": [201, 238, 279, 353, 354, 360], "prefer": [201, 238, 289], "further": [201, 238, 361], "document": [201, 238, 353, 357, 358, 360], "In": [201, 238, 249, 250, 349, 351, 352, 353, 354, 355, 356, 357, 360, 361], "meth": [201, 238], "scene": [201, 238, 349], "dictat": [201, 238, 249], "certain": [201, 238, 266, 312, 355, 357, 361, 362], "backend": [201, 238, 248, 352], "It": [201, 238, 349, 360, 361], "ill": [201, 238], "advis": [201, 238], "alter": [201, 238, 249, 281, 361], "without": [201, 238, 353, 357, 358], "thorough": [201, 238], "understand": [201, 238, 353], "do": [201, 238, 349, 351, 352, 353, 356, 357, 358, 361, 362], "sure": [202, 239, 268, 349], "appropri": [202, 239, 268, 285, 357, 362], "beta": [203, 240, 292, 295, 320, 354, 360], "plasma": [203, 240, 360], "p_th": [203, 240], "p_b": [203, 204, 240, 241], "lorentz": [203, 204, 240, 241], "heavisid": [203, 204, 240, 241], "dimensionless": [203, 204, 240, 241, 290, 291, 349], "8": [203, 204, 240, 241, 349, 357, 361], "pi": [203, 204, 240, 241, 349, 361], "b0": [204, 241, 361], "6666666666666666": [204, 241], "proport": [204, 241, 360], "power": [204, 241, 249, 281, 303, 304, 312, 360], "usual": [204, 241, 357, 362], "strength": [204, 241], "gauss": [204, 241, 353], "ascii": [208, 245, 360], "text": [208, 245, 349, 354, 357, 358], "astropi": [208, 245], "qtabl": [208, 245], "whether": [208, 210, 245, 247, 272, 352, 353, 357], "fields_to_writ": [209, 246], "unformat": [209, 246], "fortran": [209, 246], "binari": [209, 246, 289, 351, 360, 362], "But": [209, 246], "why": [209, 246, 353], "would": [209, 246, 352, 357, 362], "want": [209, 246, 349, 354, 356, 357, 358, 360, 361, 362], "metadata": [209, 246], "attr": [209, 246], "As": [209, 246, 353, 354, 360], "manual": [209, 246, 360], "upon": [209, 246], "reopen": [209, 246], "too": [210, 247, 249, 352, 353], "x0": 249, "x1": 249, "f": [249, 252, 253, 281, 286, 289, 290, 298, 349, 351, 354, 361], "df": [249, 343, 344], "sign": 249, "extrapol": [249, 354], "give": [249, 360, 362], "particular": [249, 351, 353, 358], "law": [249, 303, 304, 312, 353, 360], "maintain": 249, "c": [249, 292, 293, 321, 351, 352, 354], "mathbb": 249, "x_0": [249, 354], "bound": [249, 357], "y1": 249, "piecewis": [249, 252, 253, 351, 354], "defin": [249, 250, 266, 278, 311, 349, 360, 361, 362], "transit": [249, 320, 321], "vertex": [249, 354], "g": [249, 294, 306, 356, 357, 360], "y_1": [249, 354], "x_1": [249, 354], "suffici": 249, "larg": [249, 353, 354, 360, 361], "match": [249, 353, 360], "adjust": 249, "ndarrai": [249, 250, 251, 252, 253, 360], "valueerror": 249, "omega": [249, 354], "le": [249, 354], "design": [249, 351, 352, 357, 358], "presum": 249, "undesir": 249, "beyond": [249, 284, 285, 361], "tild": [249, 356], "xi": [249, 360], "e_": [249, 354], "pm": [249, 354], "mp": [249, 354], "gamma": [249, 320, 354, 360], "y_0": [249, 354], "yield": [249, 360], "x_0y_0": 249, "well": [249, 357], "suit": 249, "vikhlinin_temperature_profil": [249, 283, 358], "a133": [249, 352, 354, 355, 357], "fall": [249, 250], "off": [249, 349, 352, 356], "far": [249, 349, 353], "quickli": 249, "wa": [249, 252, 253, 349, 352, 353, 360, 361], "fit": [249, 352, 353, 354, 355, 357], "np": [249, 360, 361], "plt": [249, 349, 352, 361], "61": 249, "12": 249, "00": 249, "1420": 249, "9747": 249, "57": 249, "88": 249, "geomspac": 249, "5000": [249, 349, 361], "semilogx": 249, "k": [249, 284, 349, 351, 356], "xn": 249, "yn": 249, "700": 249, "800": 249, "show": [249, 349, 351, 352, 355, 357], "png": 249, "hire": 249, "pdf": 249, "001": [250, 252, 253], "dy": 250, "locat": 250, "hole": [250, 252, 253, 258, 354], "monoton": [250, 252, 253, 353, 354], "identif": [250, 252, 253], "nearli": 250, "increas": [250, 353, 354], "e": [250, 252, 253, 279, 281, 303, 306, 315, 318, 356, 357, 361], "fail": 250, "wrong": [250, 353], "wai": [250, 252, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "1e": 250, "scheme": [250, 252, 253, 354], "secant": 250, "slope": [250, 253, 294, 303, 304, 320, 321, 352, 354], "n": [250, 252, 253, 290, 292, 303, 304, 315, 351, 354, 356, 357, 358], "h": [250, 351, 352], "hx": 250, "respect": [250, 353, 360, 361, 362], "hy": 250, "everi": [250, 349, 353, 358], "hi": 250, "To": [250, 349, 353, 354, 357, 358, 360, 361], "cumul": 250, "1d": [251, 356], "truth": [251, 352], "obtain": [251, 352, 357, 360], "consider": 251, "mark": 251, "buffer": [252, 253], "cubic": [252, 253, 272, 361], "spline": [252, 354], "patch": [252, 351, 354], "continu": [252, 285], "differenti": [252, 360, 361], "howev": [252, 289, 349, 352, 353, 354, 356, 357, 360], "2x": 252, "occur": [252, 253, 353, 358], "forc": [252, 253, 333, 354], "forward": 252, "larger": [252, 253], "enforc": [252, 253, 360], "newli": [252, 253], "solut": [252, 253], "methodologi": [252, 253, 353, 354], "develop": [252, 253, 351, 358], "eliza": [252, 253], "diggin": [252, 253, 354], "univers": [252, 253, 298, 351, 357], "utah": [252, 253], "work": [252, 253, 278, 292, 293, 349, 352, 353, 354, 356, 357, 362], "frisch": [252, 253], "carlson": [252, 253], "1980sjna": [252, 253], "17": [252, 253], "238f": [252, 253], "steffen": [252, 253], "m": [252, 253, 292, 294, 298, 300, 301, 303, 304, 305, 315, 316, 318, 329, 336, 349, 351, 354, 361], "1990a": [252, 253], "239": [252, 253], "443": [252, 253], "maxit": 253, "drop": [253, 260, 292, 293], "zero": [253, 284, 354, 356, 360, 361], "insist": 253, "carri": [253, 361, 362], "interv": 253, "potential_gradi": 254, "solv": [254, 356, 360, 361], "equat": [254, 314, 349, 360, 361], "gradient": [254, 353], "particle_typ": [256, 257], "bh_mass": 258, "po": [258, 361], "vel": [258, 361], "use_pot_min": [258, 361], "black": 258, "solar": 258, "ignor": [258, 360], "myr": [258, 259, 349, 357, 361], "r_ctr": [259, 361], "v_ctr": [259, 361], "offset": 259, "bulk": [259, 361], "circumst": 259, "dm_particl": [262, 361], "etc": [263, 357, 360, 361], "snapshot": [263, 361], "snapshot_060": 263, "cut": [266, 284], "outsid": [266, 352], "perform": [266, 349, 351, 357, 359, 361], "export": [266, 269, 351], "updat": [268, 353, 357], "itself": 268, "shape": [268, 353, 361], "preserv": [268, 356], "passiv": [268, 361], "scalar": [268, 357, 361], "width": [269, 272, 320, 321, 361], "ic_filenam": 272, "dtype": 272, "float32": 272, "datatyp": 272, "float64": 272, "frontend": 272, "particles1": [273, 274], "particles2": [273, 274], "particles3": 273, "hse1": [273, 274, 276, 277], "hse2": [273, 274, 276, 277], "hse3": [273, 276], "center3": [273, 276], "velocity1": [273, 274, 276, 277], "velocity2": [273, 274, 276, 277], "velocity3": [273, 276], "hse": [275, 353, 354, 360], "complet": [275, 349, 353, 357, 358, 362], "tool": [278, 355, 357, 358], "analyt": [278, 352, 355, 357, 361], "act": 279, "wrapper": [279, 349], "variabl": [279, 360, 362], "lambda": [279, 362], "r_core": 281, "low": 281, "insid": 281, "exponenti": [281, 354], "implement": [281, 353, 356, 358, 360], "exp": [281, 284], "r_": [281, 284, 296, 298, 303, 304, 309, 310, 312, 318, 319, 320, 349], "cuspi": 281, "_": [281, 349, 354, 361], "grow": [281, 352], "faster": [281, 284], "term": [281, 360], "limit": [281, 341, 353, 361], "arg": [282, 341, 362], "constant_profil": [283, 358, 362], "power_law_profil": [283, 358], "beta_model_profil": [283, 358], "hernquist_density_profil": [283, 349, 358], "cored_hernquist_density_profil": [283, 358], "hernquist_mass_profil": [283, 358], "nfw_density_profil": [283, 358], "nfw_mass_profil": [283, 358], "tnfw_density_profil": [283, 358], "tnfw_mass_profil": [283, 358], "snfw_density_profil": [283, 358], "snfw_mass_profil": [283, 358], "cored_snfw_density_profil": [283, 358], "cored_snfw_mass_profil": [283, 358], "cored_snfw_total_mass": 283, "einasto_density_profil": [283, 358], "einasto_mass_profil": [283, 358], "am06_density_profil": [283, 293, 358], "vikhlinin_density_profil": [283, 358], "am06_temperature_profil": [283, 292, 358], "baseline_entropy_profil": [283, 358], "broken_entropy_profil": [283, 358], "walker_entropy_profil": [283, 358], "r_cut": 284, "domin": 284, "higher": 284, "achiev": 284, "multipli": 284, "factor": [284, 353, 360], "2k": 284, "f_r": 285, "scipi": [285, 357], "univariatesplin": 285, "spectrum": 285, "lead": [285, 353, 354], "problemat": [285, 341], "intend": [285, 358], "serial": [286, 289, 357, 362], "version": [286, 354, 357], "save": [286, 349, 362], "disk": [286, 349, 361, 362], "open": 286, "rp": [286, 289], "quick": [288, 361], "logspac": 288, "send": 289, "extens": [289, 360], "t0": [290, 291], "4": [290, 349, 352, 361], "mu": [290, 360], "6": [290, 324, 349, 360, 362], "omega_b": 290, "048": 290, "omega_dm": 290, "262": 290, "polytrop": [290, 291], "asdi08": [290, 291], "kev": [290, 291, 293, 294, 321, 349, 357], "cool": [290, 291, 292, 293, 321, 353], "a_c": [290, 291, 292, 293], "fraction": 290, "molecular": [290, 324, 360], "cosmic": 290, "baryon": [290, 360], "ascasibar": [290, 292, 358], "diego": 290, "2008mnra": 290, "383": 290, "369a": 290, "rho_0": [292, 320], "asma06": [292, 293], "best": [292, 293, 353, 354, 356, 357, 358], "concert": [292, 293], "msun": [292, 295, 298, 299, 300, 301, 302, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 325, 349, 361], "markevitch": [292, 358], "2006": [292, 321, 358], "apj": [292, 307, 321, 325], "650": 292, "102": 292, "t_0": [293, 321], "k_0": [294, 296], "k_200": 294, "r_200": [294, 298, 322], "baselin": 294, "vokb05": 294, "floor": 294, "cm": [294, 349, 357], "logarithm": [294, 303, 304, 320, 321], "voit": 294, "kai": 294, "bryan": 294, "l": [294, 307, 315], "2005": 294, "mnra": [294, 315], "364": 294, "909": 294, "rho_c": 295, "r_c": [295, 300, 301, 302, 320], "cafu76": 295, "cavalier": 295, "fusco": 295, "femiano": 295, "1976": 295, "49": 295, "137": 295, "k_scale": [296, 322], "broken": 296, "const": 297, "constant": [297, 361], "m_200": 298, "conc": [298, 311], "m200": [298, 306], "r200": [298, 306, 328], "concentr": [298, 311, 314], "nfw": [298, 300, 301, 302, 309, 310, 311, 314, 315, 316, 317, 318, 319, 358], "nafrw90": [298, 309, 310, 311, 318], "hernquist": [298, 299, 307, 308, 349, 358], "hern90": [298, 299, 307, 308], "overdens": [298, 305, 306, 311], "200": [298, 311, 349, 361], "critic": [298, 305, 306, 311], "navarro": 298, "julio": 298, "frenk": 298, "carlo": 298, "white": 298, "simon": 298, "1997apj": 298, "490": 298, "493n": 298, "m_0": [299, 307, 308], "super": [300, 301, 302, 315, 316, 317, 353], "liwys18": [300, 301, 302, 314, 315, 316, 317], "sai": [302, 317, 352], "m200c": [302, 317], "r200c": [302, 314, 317], "eina65": [303, 304], "rvgb12": [303, 304], "invers": [303, 304, 336], "einasto": [303, 358], "1965": 303, "kinemat": 303, "dynam": [303, 353, 354, 358, 360, 361], "trudi": 303, "inst": 303, "astrofiz": 303, "alma": 303, "ata": 303, "87": 303, "retana": 303, "montenegro": 303, "et": [303, 321, 325, 358], "al": [303, 321, 325, 358], "2012a": 303, "540a": 303, "70r": 303, "delta": [305, 306, 311], "cosmo": [305, 306, 311], "enclos": 305, "redshift": [305, 306, 311], "cosmologi": [305, 306, 311], "m_r": 306, "1990": 307, "356": 307, "359": 307, "rho_": [309, 310, 318, 319, 349, 353, 360], "whatev": [312, 352], "els": 312, "rescal": 313, "conc_nfw": 314, "snfw": 314, "come": [314, 351, 353], "31": 314, "lillei": 315, "j": 315, "wyn": 315, "evan": 315, "sander": 315, "2018": 315, "r_t": [318, 319, 321], "tnfw": [318, 319], "bamao09": [318, 319], "baltz": 318, "marshal": 318, "p": [318, 351, 360, 361, 362], "oguri": 318, "2009": [318, 325], "jcap": 318, "015": 318, "epsilon": 320, "modifi": [320, 351], "vikrf06": [320, 321, 354], "inner": [320, 321], "middl": 320, "outer": [320, 321], "control": 320, "t_min": 321, "r_cool": 321, "a_cool": 321, "vikhlinin": [321, 325, 358], "kravtsov": 321, "forman": 321, "w": 321, "640": 321, "691": 321, "walker": 322, "relationship": [323, 325, 360], "variou": [323, 351, 357, 358, 360, 361], "ne": 324, "electron": 324, "unyt_quant": [324, 326, 327], "m500": [325, 326, 327], "hubbl": 325, "7": [325, 349], "mga": 325, "mtot": 325, "r500": 325, "692": 325, "1033": 325, "http": [325, 357], "ui": 325, "adsab": 325, "harvard": 325, "edu": 325, "ab": 325, "2009apj": 325, "1033v": 325, "100": [325, 361], "km": [325, 356], "mpc": 325, "bcg": [326, 328], "m_": [326, 327, 349, 354, 357, 360, 361], "fact": 327, "satellit": 327, "py": [330, 362], "logger": [331, 332], "context": [331, 360], "mute": 331, "log": 331, "arr": 334, "ensur": [334, 335], "rr": [337, 338, 339], "integr": [338, 339, 345, 349, 352, 361], "infin": 339, "grab": 340, "state": 340, "max_execution_tim": 341, "assert": 341, "unbound": 341, "execut": [341, 358], "launch": 341, "daemon": 341, "runtim": 341, "second": [341, 361], "dark_matt": [343, 344, 349], "rho": [345, 349, 354, 360, 361], "introduct": 349, "ve": [349, 351, 353, 357, 360], "successfulli": [349, 352, 360], "download": 349, "instal": [349, 358], "python": [349, 357, 358, 362], "congratul": 349, "now": [349, 352, 353, 361], "guid": [349, 351, 358], "walk": 349, "finish": [349, 357], "rope": 349, "onc": [349, 357, 360, 361, 362], "got": 349, "hang": 349, "mani": [349, 353, 354, 357, 360], "explor": [349, 358], "featur": [349, 357], "let": [349, 352, 354, 360], "properli": 349, "termin": 349, "pip": [349, 357], "everyth": 349, "plan": 349, "messag": 349, "tell": [349, 353], "brief": 349, "project": [349, 357], "appear": 349, "id": 349, "abl": [349, 355], "lot": [349, 352, 353], "slow": [349, 360], "simpl": [349, 353, 358], "mathrm": [349, 353, 354, 360, 361], "dyn": [349, 353, 354, 360], "ahead": [349, 352], "leg": 349, "produc": [349, 354, 355, 357, 360, 362], "beauti": 349, "veri": [349, 357, 361], "15": 349, "odot": [349, 357, 361], "total_density_profil": 349, "2e15": 349, "That": 349, "pretti": 349, "wasn": 349, "someth": [349, 353, 357], "14": 349, "littl": [349, 357], "shorter": 349, "gas_density_profil": 349, "2e14": 349, "add_subplot": 349, "111": 349, "color": 349, "red": [349, 354], "blue": [349, 354], "excel": 349, "our": [349, 357, 358, 361], "acquaint": 349, "most": [349, 352, 353, 354, 356, 357, 360, 362], "were": [349, 352], "essenti": 349, "next": [349, 353, 361], "chosen": [349, 353, 360], "actual": [349, 352, 354, 355, 357], "advantag": 349, "math": 349, "u": [349, 361], "galaxy_cluster_model": 349, "10000": [349, 352, 361], "info": [349, 352], "2023": [349, 352, 354], "27": 349, "09": 349, "50": [349, 361], "43": 349, "933": 349, "939": 349, "994": 349, "45": 349, "651": 349, "happen": [349, 352, 353], "000": 349, "worth": [349, 360], "rememb": 349, "own": [349, 352, 356, 362], "piec": 349, "item": [349, 352], "gas_fract": 349, "electron_number_dens": 349, "discret": 349, "close": 349, "realli": 349, "good": [349, 361], "summari": 349, "panel_plot": [349, 352], "cgparam": 349, "usetex": 349, "Not": [349, 360], "nice": 349, "isol": 349, "9": 349, "write_model_to_h5": [349, 360], "cluster_": [349, 361], "example_clust": 349, "1_000_000": [349, 361], "And": 349, "last": 349, "major": [349, 360], "setup_ramses_": 349, "53": 349, "412": 349, "1000000": [349, 361], "413": 349, "755": 349, "51": 349, "13": 349, "721": 349, "merger_config": 349, "txt": 349, "local": [349, 357], "directori": [349, 357, 358], "still": 349, "readi": [349, 353, 359], "instruct": [349, 357], "hallmark": 351, "abil": [351, 357], "eas": [351, 358], "support": [351, 352, 357], "tip": 351, "hydrodynam": [351, 356, 357, 358], "frolri": 351, "chicago": 351, "purpos": [351, 353, 355, 357, 358], "adapt": 351, "mesh": 351, "refin": 351, "parabol": 351, "ppm": 351, "merger": [351, 356, 357, 359], "mode": 351, "rigidgrav": 351, "rigid": 351, "selfgrav": 351, "inclus": 351, "tangl": 351, "gpu": 351, "acceler": [351, 360], "sctsch": 351, "amr": [351, 356], "approach": [351, 353, 354, 358, 360], "tripl": 351, "recommend": [351, 357, 358, 361], "makefil": 351, "simu_opt": 351, "dmodel": 351, "hydro": [351, 356, 360], "dgraviti": 351, "dparticl": 351, "dncomp_passive_us": 351, "merger_coll_numhalo": 351, "merger_coll_usemet": 351, "dmhd": 351, "deo": 351, "eos_gamma": 351, "dpar_natt_us": 351, "dgpu": 351, "dload_bal": 351, "hilbert": 351, "dopenmp": 351, "dsupport_hdf5": 351, "wesppa": 351, "smooth": 351, "max": 351, "planck": 351, "institut": 351, "astrophys": [351, 357, 358], "ideal": [351, 357, 360], "after": [351, 352, 361], "proper": 351, "background": [351, 357], "add_background_grid": 351, "config": 351, "configur": [351, 359], "enabl": 351, "sh": 351, "soon": 351, "multipurpos": 351, "romain": 351, "teyssier": 351, "minim": 351, "invas": 351, "newtonian": [351, 355, 357, 358, 360], "capabl": 351, "mondian": [351, 355, 357, 358], "due": [351, 356, 361], "regard": [351, 360], "full": [351, 356], "fryxel": 351, "olson": 351, "ricker": 351, "timm": 351, "zingal": 351, "lamb": 351, "q": 351, "tufo": 351, "2000": 351, "thermonuclear": 351, "journal": 351, "supplement": 351, "seri": 351, "131": 351, "273": 351, "schive": 351, "tsai": 351, "chiueh": 351, "2010": 351, "graphic": 351, "186": 351, "457": 351, "weinberg": 351, "springel": 351, "pakmor": 351, "2020": 351, "public": 351, "releas": 351, "248": 351, "32": 351, "easi": [352, 357, 358, 362], "end": [352, 353, 354, 358], "sometim": [352, 353, 357, 360], "known": [352, 357, 360], "constrain": [352, 356, 360], "observation": 352, "literatur": [352, 353, 355, 357, 358], "fortun": 352, "ever": 352, "cluster_collect": 352, "facil": 352, "vikhlinin06": 352, "briefli": 352, "abel": [352, 355, 357, 361], "133": [352, 355, 357], "__main__": 352, "protoclust": 352, "0x7f7d7e302890": 352, "a262": 352, "0x7f7d7e8fbdd0": 352, "a383": 352, "0x7f7d7dd17e10": 352, "a478": 352, "0x7f7d7dd4df90": 352, "a907": 352, "0x7f7d7dd49c10": 352, "a1413": 352, "0x7f7d7dd49dd0": 352, "a1795": 352, "0x7f7d7dd48590": 352, "a1991": 352, "0x7f7d7e33d410": 352, "a2029": 352, "0x7f7d7dba9810": 352, "a2390": 352, "0x7f7d7dbaa090": 352, "rxj": 352, "1159": 352, "5531": 352, "0x7f7d7dbaaa90": 352, "mkw": 352, "0x7f7d7dbab490": 352, "usg": 352, "cs152": 352, "0x7f7d7dbab750": 352, "notic": 352, "aren": 352, "quit": [352, 357], "thing": [352, 353], "special": [352, 356], "vik": 352, "11": 352, "08": 352, "59": 352, "37": 352, "344": 352, "492": 352, "39": 352, "067": 352, "0x7fab7769b390": 352, "fulli": [352, 357], "realiz": 352, "unfortun": 352, "wspace": 352, "speak": 352, "observ": [352, 353, 357, 358], "studi": [352, 357, 358], "rang": 352, "r_0": [352, 360], "r_1": 352, "don": 352, "guarante": [352, 354], "again": [352, 362], "autom": [352, 358], "complex": [352, 354, 356], "difficult": [352, 360], "categor": [352, 353], "systemat": 352, "residu": 352, "occasion": 352, "persist": 352, "recomput": 352, "seen": 352, "rapid": 352, "put": 352, "perfectli": 353, "manifestli": 353, "explicitli": 353, "flaw": 353, "ask": 353, "icm": [353, 357], "intrins": 353, "connect": 353, "won": 353, "viabl": [353, 354], "regularli": 353, "constraint": [353, 356, 358, 360], "while": [353, 355, 357], "fine": 353, "problem": [353, 360], "choos": [353, 357, 360, 361], "mond": [353, 360], "sim": [353, 354, 360], "stabil": [353, 360], "clearli": [353, 360], "often": [353, 354, 357], "hard": 353, "predict": 353, "previou": [353, 360], "could": 353, "gear": 353, "toward": [353, 354, 357], "possibl": [353, 358, 360], "easier": 353, "scienc": 353, "contend": 353, "descend": 353, "categori": 353, "start": [353, 358], "aris": [353, 354], "commonli": [353, 360], "temperament": 353, "encourag": [353, 357], "k_b": [353, 360], "decreas": [353, 354], "criterion": 353, "express": [353, 360, 361], "nabla_r": 353, "fast": 353, "Of": 353, "k_bt_g": 353, "n_e": [353, 360], "immedi": 353, "meet": [353, 358], "criteria": 353, "long": [353, 361], "upcom": 353, "establish": 353, "discuss": [353, 355, 357, 360], "repar": 353, "deem": 353, "obviou": 353, "wherev": 353, "reconstruct": 353, "excis": 353, "isn": 353, "fixabl": [353, 354], "error": 353, "enough": 353, "warrant": 353, "reconsider": 353, "practic": [353, 357, 360], "visit": [353, 358], "depth": [353, 357], "explan": [353, 358, 362], "contributor": 353, "yourself": 353, "situat": 353, "novel": 353, "inherit": 353, "highest": 353, "level": [353, 358], "templat": [353, 362], "type__npr": 353, "insert": [353, 362], "descript": [353, 360], "grav": [353, 360], "_method": 353, "_messag": 353, "_scope": 353, "def": [353, 362], "__init__": 353, "_identifi": 353, "cl": 353, "TO": 353, "THE": 353, "_correct": 353, "new_model": 353, "convent": [354, 357], "never": 354, "fundament": 354, "clear": 354, "foundat": 354, "recal": [354, 360], "origin": [354, 361], "numalg": 354, "strictli": 354, "gamma_c": 354, "dip": 354, "significantli": 354, "naiv": 354, "steep": 354, "particularli": 354, "high": 354, "intract": 354, "2a": 354, "ti": 354, "complementari": 354, "assumpt": [354, 358, 360], "furthermor": [354, 358, 360], "stabl": 354, "treat": 354, "rk_b": 354, "gm_p": 354, "becom": [354, 360], "unstabl": 354, "doesn": 354, "pose": 354, "much": [354, 358, 361], "signific": 354, "repair": 354, "suitabl": 354, "accomplish": 354, "interpolatori": 354, "call": [354, 362], "Then": [354, 356], "xi_": 354, "erron": 354, "rebuild": 354, "correctli": 354, "mild": 354, "jump": 354, "wide": [355, 358, 360], "script": 355, "tag": [355, 361], "knowledg": 355, "journei": [355, 357], "pipelin": [355, 357], "wonderland": [355, 357], "pull": [355, 357], "ins": [355, 357], "pynbodi": 355, "pyxsim": [355, 357, 358], "sox": [355, 357, 358], "symmetri": [356, 361], "applic": [356, 357], "accord": 356, "magneto": [356, 357], "turbul": 356, "dimension": [356, 357], "fashion": 356, "uniform": [356, 361], "natur": 356, "question": 356, "bf": [356, 360, 361], "v_x": 356, "v_1": 356, "u_1": 356, "iN": 356, "u_2": 356, "v_y": 356, "v_2": 356, "u_3": 356, "u_4": 356, "v_z": 356, "v_3": 356, "u_5": 356, "u_6": 356, "handl": 356, "cdot": [356, 360], "least": 356, "space": [356, 361], "subtract": 356, "parallel": 356, "hat": 356, "machin": 356, "precis": 356, "linearli": 356, "stage": 356, "free": 356, "small": 356, "mhd": 356, "clean": 356, "substanti": 356, "concern": 356, "transport": 356, "evolv": 356, "transform": 356, "clusterfield": 356, "map_field_to_particl": 356, "vfield": 356, "write_to_h5": 356, "bfield": 356, "largest": 357, "gravitation": 357, "current": [357, 358, 360], "endpoint": 357, "cosmolog": 357, "hot": 357, "rai": [357, 358], "emit": 357, "intraclust": 357, "medium": 357, "constitu": 357, "especi": 357, "focus": [357, 360], "approxim": 357, "roughli": 357, "semi": 357, "bodi": [357, 358], "commun": 357, "few": 357, "127760": 357, "pypi": 357, "pardon": 357, "dust": 357, "128225": 357, "128013": 357, "conda": 357, "128195": 357, "surprisingli": 357, "navig": 357, "raw": 357, "git": 357, "command": 357, "www": 357, "github": [357, 358], "com": 357, "jzuhon": 357, "clone": 357, "compat": 357, "manipul": 357, "curv": 357, "h5py": 357, "interact": [357, 360], "tqdm": 357, "progress": 357, "bar": 357, "ruamel": 357, "dill": 357, "spinner": 357, "panda": 357, "automat": [357, 360], "though": 357, "measur": 357, "photon": [357, 358], "analyz": 357, "spectra": 357, "instrument": [357, 358], "mock": [357, 358], "complement": 357, "familiar": 357, "feet": 357, "wet": 357, "somewhat": 357, "concret": 357, "help": 357, "overview": 357, "equilibria": 357, "handi": 357, "popular": 357, "throughout": [357, 360], "rm": [357, 361], "straighforwardli": 357, "unless": 357, "attach": 357, "intern": 357, "cross": 358, "platform": 358, "reduc": 358, "headach": 358, "gc": 358, "goal": [358, 362], "promot": 358, "repositori": 358, "modularli": 358, "scientif": 358, "build": [358, 362], "scratch": 358, "doc": [358, 362], "encount": 358, "bug": 358, "submit": 358, "cored_hernquist_mass_profil": 358, "paper": 358, "capac": 358, "catalog": 358, "altern": [358, 361], "aqual": [358, 360], "qumond": [358, 360], "realist": 358, "labor": 358, "overhead": 358, "quickstart": 358, "offer": 358, "experi": 358, "copi": 358, "past": 358, "backbon": 358, "api": [358, 360], "deep": 358, "dive": 358, "contribut": [358, 362], "hint": 358, "might": [358, 360], "synthet": 358, "event": 358, "observatori": 358, "easili": [358, 360, 361], "coupl": 358, "turn": 358, "count": 358, "chandra": 358, "xmm": 358, "newton": 358, "nustar": 358, "beginn": 358, "intermedi": 358, "advanc": 358, "search": 358, "spatial": 359, "hold": 360, "protocol": 360, "fluid": 360, "momentum": [360, 361], "obei": 360, "euler": 360, "viscos": 360, "partial": 360, "recogn": 360, "gasseou": 360, "remaind": 360, "infti": 360, "preced": 360, "window": 360, "poisson": 360, "flavor": 360, "a_0": 360, "implicit": 360, "nu": 360, "psi": [360, 361], "gm_": 360, "tabl": 360, "from_arrai": 360, "via": [360, 361], "incompress": 360, "bari": 360, "trivial": 360, "effici": 360, "invert": [360, 361], "int_": 360, "exactli": [360, 361], "accept": [360, 361], "formula": 360, "less": 360, "no_ga": 360, "syntact": 360, "vast": 360, "aim": 360, "success": 360, "check_hs": 360, "approx": 360, "equilibr": 360, "plai": 360, "role": 360, "ioniz": 360, "set_magnetic_field_from_beta": 360, "p_": 360, "whichev": 360, "expon": 360, "set_magnetic_field_from_dens": 360, "awar": 360, "num_el": 360, "worthwhil": 360, "summar": 360, "consult": 360, "write_model_to_ascii": 360, "write_model_to_binari": 360, "poor": 360, "tot": 361, "sinc": 361, "isotrop": 361, "tangenti": 361, "theta": 361, "particle_posit": 361, "particle_veloc": 361, "particle_mass": 361, "number_of_particl": 361, "latter": 361, "mention": 361, "thermal_energi": 361, "magnetic_field": 361, "hand": 361, "creation": 361, "n_ga": 361, "gas_particl": 361, "generate_gas_particl": 361, "phase": 361, "isotropi": 361, "dv": 361, "2dv": 361, "net": 361, "angular": 361, "cal": 361, "int_0": 361, "integrel": 361, "_0": 361, "pair": 361, "speed": 361, "reject": 361, "probabl": 361, "idea": 361, "check_dm_viri": 361, "check_star_viri": 361, "accuraci": 361, "diff": 361, "figsiz": 361, "loglog": 361, "vir": 361, "markers": 361, "lw": 361, "legend": 361, "set_xlabel": 361, "set_ylabel": 361, "One": 361, "difficulti": 361, "infinit": 361, "generate_dm_particl": 361, "generate_star_particl": 361, "wish": 361, "n_dm": 361, "n_star": 361, "star_particl": 361, "generate_": 361, "_particl": 361, "kind": 361, "all_particl": 361, "concaten": 361, "gas_part": 361, "gas_parts1": 361, "gas_parts2": 361, "drop_ptyp": 361, "translat": 361, "boost": 361, "add_offset": 361, "shift": 361, "movement": 361, "make_radial_cut": 361, "add_black_hol": 361, "simplest": 361, "mbh": 361, "0e9": 361, "300": 361, "rather": 361, "keep": 361, "track": 361, "num_particles1": 361, "num_particles2": 361, "200_000": 361, "halo1": 361, "ones": 361, "halo2": 361, "cluster1": 361, "cluster2": 361, "pick": 361, "overwritten": 361, "ug": 361, "microgauss": 361, "magnetic_field_x": 361, "metal": 361, "zsun": 361, "obvious": 361, "write_particl": 361, "my_particl": 361, "from_fil": 361, "new_part": 361, "gas_onli": 361, "dm_star": 361, "write_to_gadget_fil": 361, "from_gadget_fil": 361, "wrap": 362, "custom": 362, "framework": 362, "click": 362, "top": 362, "expect": 362, "great": 362, "cutoff": 362, "add_cor": 362, "to_binari": 362, "from_binari": 362, "built_in": 362, "havi": 362, "priori": 362, "extrem": 362, "new_profil": 362, "prof": 362, "my": 362, "perman": 362, "request": 362, "your_function_her": 362, "citat": 362, "desc": 362}, "objects": {"": [[1, 0, 0, "-", "codes"], [12, 0, 0, "-", "correction"], [121, 0, 0, "-", "fields"], [164, 0, 0, "-", "ics"], [173, 0, 0, "-", "model"], [248, 0, 0, "-", "numalgs"], [255, 0, 0, "-", "particles"], [278, 0, 0, "-", "radial_profiles"], [323, 0, 0, "-", "relations"], [330, 0, 0, "-", "utils"], [342, 0, 0, "-", "virial"]], "codes": [[2, 1, 1, "", "resample_arepo_ics"], [3, 1, 1, "", "setup_arepo_ics"], [4, 1, 1, "", "setup_art_ics"], [5, 1, 1, "", "setup_athena_ics"], [6, 1, 1, "", "setup_enzo_ics"], [7, 1, 1, "", "setup_flash_ics"], [8, 1, 1, "", "setup_gamer_ics"], [9, 1, 1, "", "setup_gizmo_ics"], [10, 1, 1, "", "setup_ramses_ics"], [11, 1, 1, "", "write_amr_particles"]], "correction": [[13, 2, 1, "", "NonPhysicalRegion"], [25, 2, 1, "", "Type0NPR"], [37, 2, 1, "", "Type0aNPR"], [49, 2, 1, "", "Type0bNPR"], [61, 2, 1, "", "Type0cNPR"], [73, 2, 1, "", "Type1NPR"], [85, 2, 1, "", "Type1aNPR"], [97, 2, 1, "", "Type2NPR"], [109, 2, 1, "", "Type2aNPR"]], "correction.NonPhysicalRegion": [[14, 3, 1, "", "__init__"], [15, 3, 1, "", "correct"], [16, 4, 1, "", "correctable"], [17, 3, 1, "", "identify"], [18, 3, 1, "", "is_close"], [19, 3, 1, "", "message"], [20, 4, 1, "", "obj"], [21, 4, 1, "", "rmax"], [22, 4, 1, "", "rmin"], [23, 3, 1, "", "size"], [24, 4, 1, "", "type"]], "correction.Type0NPR": [[26, 3, 1, "", "__init__"], [27, 3, 1, "", "correct"], [28, 4, 1, "", "correctable"], [29, 3, 1, "", "identify"], [30, 3, 1, "", "is_close"], [31, 3, 1, "", "message"], [32, 4, 1, "", "obj"], [33, 4, 1, "", "rmax"], [34, 4, 1, "", "rmin"], [35, 3, 1, "", "size"], [36, 4, 1, "", "type"]], "correction.Type0aNPR": [[38, 3, 1, "", "__init__"], [39, 3, 1, "", "correct"], [40, 4, 1, "", "correctable"], [41, 3, 1, "", "identify"], [42, 3, 1, "", "is_close"], [43, 3, 1, "", "message"], [44, 4, 1, "", "obj"], [45, 4, 1, "", "rmax"], [46, 4, 1, "", "rmin"], [47, 3, 1, "", "size"], [48, 4, 1, "", "type"]], "correction.Type0bNPR": [[50, 3, 1, "", "__init__"], [51, 3, 1, "", "correct"], [52, 4, 1, "", "correctable"], [53, 3, 1, "", "identify"], [54, 3, 1, "", "is_close"], [55, 3, 1, "", "message"], [56, 4, 1, "", "obj"], [57, 4, 1, "", "rmax"], [58, 4, 1, "", "rmin"], [59, 3, 1, "", "size"], [60, 4, 1, "", "type"]], "correction.Type0cNPR": [[62, 3, 1, "", "__init__"], [63, 3, 1, "", "correct"], [64, 4, 1, "", "correctable"], [65, 3, 1, "", "identify"], [66, 3, 1, "", "is_close"], [67, 3, 1, "", "message"], [68, 4, 1, "", "obj"], [69, 4, 1, "", "rmax"], [70, 4, 1, "", "rmin"], [71, 3, 1, "", "size"], [72, 4, 1, "", "type"]], "correction.Type1NPR": [[74, 3, 1, "", "__init__"], [75, 3, 1, "", "correct"], [76, 4, 1, "", "correctable"], [77, 3, 1, "", "identify"], [78, 3, 1, "", "is_close"], [79, 3, 1, "", "message"], [80, 4, 1, "", "obj"], [81, 4, 1, "", "rmax"], [82, 4, 1, "", "rmin"], [83, 3, 1, "", "size"], [84, 4, 1, "", "type"]], "correction.Type1aNPR": [[86, 3, 1, "", "__init__"], [87, 3, 1, "", "correct"], [88, 4, 1, "", "correctable"], [89, 3, 1, "", "identify"], [90, 3, 1, "", "is_close"], [91, 3, 1, "", "message"], [92, 4, 1, "", "obj"], [93, 4, 1, "", "rmax"], [94, 4, 1, "", "rmin"], [95, 3, 1, "", "size"], [96, 4, 1, "", "type"]], "correction.Type2NPR": [[98, 3, 1, "", "__init__"], [99, 3, 1, "", "correct"], [100, 4, 1, "", "correctable"], [101, 3, 1, "", "identify"], [102, 3, 1, "", "is_close"], [103, 3, 1, "", "message"], [104, 4, 1, "", "obj"], [105, 4, 1, "", "rmax"], [106, 4, 1, "", "rmin"], [107, 3, 1, "", "size"], [108, 4, 1, "", "type"]], "correction.Type2aNPR": [[110, 3, 1, "", "__init__"], [111, 3, 1, "", "correct"], [112, 4, 1, "", "correctable"], [113, 3, 1, "", "identify"], [114, 3, 1, "", "is_close"], [115, 3, 1, "", "message"], [116, 4, 1, "", "obj"], [117, 4, 1, "", "rmax"], [118, 4, 1, "", "rmin"], [119, 3, 1, "", "size"], [120, 4, 1, "", "type"]], "fields": [[122, 2, 1, "", "ClusterField"], [127, 2, 1, "", "GaussianRandomField"], [132, 2, 1, "", "RadialRandomMagneticField"], [137, 2, 1, "", "RadialRandomMagneticVectorPotential"], [142, 2, 1, "", "RadialRandomVelocityField"], [147, 2, 1, "", "RandomMagneticField"], [152, 2, 1, "", "RandomMagneticVectorPotential"], [157, 2, 1, "", "RandomVelocityField"], [162, 1, 1, "", "parse_value"], [163, 1, 1, "", "rot_3d"]], "fields.ClusterField": [[123, 3, 1, "", "__init__"], [124, 3, 1, "", "map_field_to_particles"], [125, 5, 1, "", "units"], [126, 3, 1, "", "write_file"]], "fields.GaussianRandomField": [[128, 3, 1, "", "__init__"], [129, 3, 1, "", "map_field_to_particles"], [130, 5, 1, "", "units"], [131, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[133, 3, 1, "", "__init__"], [134, 3, 1, "", "map_field_to_particles"], [135, 5, 1, "", "units"], [136, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[138, 3, 1, "", "__init__"], [139, 3, 1, "", "map_field_to_particles"], [140, 5, 1, "", "units"], [141, 3, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[143, 3, 1, "", "__init__"], [144, 3, 1, "", "map_field_to_particles"], [145, 5, 1, "", "units"], [146, 3, 1, "", "write_file"]], "fields.RandomMagneticField": [[148, 3, 1, "", "__init__"], [149, 3, 1, "", "map_field_to_particles"], [150, 5, 1, "", "units"], [151, 3, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[153, 3, 1, "", "__init__"], [154, 3, 1, "", "map_field_to_particles"], [155, 5, 1, "", "units"], [156, 3, 1, "", "write_file"]], "fields.RandomVelocityField": [[158, 3, 1, "", "__init__"], [159, 3, 1, "", "map_field_to_particles"], [160, 5, 1, "", "units"], [161, 3, 1, "", "write_file"]], "ics": [[165, 2, 1, "", "ClusterICs"], [172, 1, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[166, 3, 1, "", "__init__"], [167, 3, 1, "", "create_dataset"], [168, 3, 1, "", "from_file"], [169, 3, 1, "", "resample_particle_ics"], [170, 3, 1, "", "setup_particle_ics"], [171, 3, 1, "", "to_file"]], "model": [[174, 2, 1, "", "ClusterModel"], [211, 2, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[175, 3, 1, "", "__init__"], [176, 3, 1, "", "check_dm_virial"], [177, 3, 1, "", "check_hse"], [178, 3, 1, "", "check_star_virial"], [179, 3, 1, "", "create_dataset"], [180, 4, 1, "", "default_fields"], [181, 5, 1, "", "dm_virial"], [182, 4, 1, "", "fields"], [183, 3, 1, "", "find_field_at_radius"], [184, 3, 1, "", "find_radius_for_density"], [185, 3, 1, "", "from_arrays"], [186, 3, 1, "", "from_dens_and_entr"], [187, 3, 1, "", "from_dens_and_tden"], [188, 3, 1, "", "from_dens_and_temp"], [189, 3, 1, "", "from_h5_file"], [190, 3, 1, "", "generate_dm_particles"], [191, 3, 1, "", "generate_gas_particles"], [192, 3, 1, "", "generate_star_particles"], [193, 3, 1, "", "generate_tracer_particles"], [194, 3, 1, "", "items"], [195, 3, 1, "", "keys"], [196, 3, 1, "", "mass_in_radius"], [197, 3, 1, "", "no_gas"], [198, 4, 1, "", "num_elements"], [199, 3, 1, "", "panel_plot"], [200, 3, 1, "", "plot"], [201, 5, 1, "", "properties"], [202, 3, 1, "", "set_field"], [203, 3, 1, "", "set_magnetic_field_from_beta"], [204, 3, 1, "", "set_magnetic_field_from_density"], [205, 3, 1, "", "set_rmax"], [206, 5, 1, "", "star_virial"], [207, 3, 1, "", "values"], [208, 3, 1, "", "write_model_to_ascii"], [209, 3, 1, "", "write_model_to_binary"], [210, 3, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[212, 3, 1, "", "__init__"], [213, 3, 1, "", "check_dm_virial"], [214, 3, 1, "", "check_hse"], [215, 3, 1, "", "check_star_virial"], [216, 3, 1, "", "create_dataset"], [217, 4, 1, "", "default_fields"], [218, 5, 1, "", "dm_virial"], [219, 4, 1, "", "fields"], [220, 3, 1, "", "find_field_at_radius"], [221, 3, 1, "", "find_radius_for_density"], [222, 3, 1, "", "from_arrays"], [223, 3, 1, "", "from_dens_and_entr"], [224, 3, 1, "", "from_dens_and_tden"], [225, 3, 1, "", "from_dens_and_temp"], [226, 3, 1, "", "from_h5_file"], [227, 3, 1, "", "generate_dm_particles"], [228, 3, 1, "", "generate_gas_particles"], [229, 3, 1, "", "generate_star_particles"], [230, 3, 1, "", "generate_tracer_particles"], [231, 3, 1, "", "items"], [232, 3, 1, "", "keys"], [233, 3, 1, "", "mass_in_radius"], [234, 3, 1, "", "no_gas"], [235, 4, 1, "", "num_elements"], [236, 3, 1, "", "panel_plot"], [237, 3, 1, "", "plot"], [238, 5, 1, "", "properties"], [239, 3, 1, "", "set_field"], [240, 3, 1, "", "set_magnetic_field_from_beta"], [241, 3, 1, "", "set_magnetic_field_from_density"], [242, 3, 1, "", "set_rmax"], [243, 5, 1, "", "star_virial"], [244, 3, 1, "", "values"], [245, 3, 1, "", "write_model_to_ascii"], [246, 3, 1, "", "write_model_to_binary"], [247, 3, 1, "", "write_model_to_h5"]], "numalgs": [[249, 1, 1, "", "extrap_power_law"], [250, 1, 1, "", "find_holes"], [251, 1, 1, "", "identify_domain_borders"], [252, 1, 1, "", "monotone_interpolation"], [253, 1, 1, "", "positive_interpolation"], [254, 1, 1, "", "solve_temperature"]], "particles": [[256, 2, 1, "", "ClusterParticles"], [273, 1, 1, "", "combine_three_clusters"], [274, 1, 1, "", "combine_two_clusters"], [275, 1, 1, "", "resample_one_cluster"], [276, 1, 1, "", "resample_three_clusters"], [277, 1, 1, "", "resample_two_clusters"]], "particles.ClusterParticles": [[257, 3, 1, "", "__init__"], [258, 3, 1, "", "add_black_hole"], [259, 3, 1, "", "add_offsets"], [260, 3, 1, "", "drop_ptypes"], [261, 3, 1, "", "from_fields"], [262, 3, 1, "", "from_file"], [263, 3, 1, "", "from_gadget_file"], [264, 3, 1, "", "from_h5_file"], [265, 3, 1, "", "keys"], [266, 3, 1, "", "make_radial_cut"], [267, 5, 1, "", "num_passive_scalars"], [268, 3, 1, "", "set_field"], [269, 3, 1, "", "to_yt_dataset"], [270, 3, 1, "", "write_particles"], [271, 3, 1, "", "write_particles_to_h5"], [272, 3, 1, "", "write_to_gadget_file"]], "radial_profiles": [[279, 2, 1, "", "RadialProfile"], [290, 1, 1, "", "ad07_density_profile"], [291, 1, 1, "", "ad07_temperature_profile"], [292, 1, 1, "", "am06_density_profile"], [293, 1, 1, "", "am06_temperature_profile"], [294, 1, 1, "", "baseline_entropy_profile"], [295, 1, 1, "", "beta_model_profile"], [296, 1, 1, "", "broken_entropy_profile"], [297, 1, 1, "", "constant_profile"], [298, 1, 1, "", "convert_nfw_to_hernquist"], [299, 1, 1, "", "cored_hernquist_density_profile"], [300, 1, 1, "", "cored_snfw_density_profile"], [301, 1, 1, "", "cored_snfw_mass_profile"], [302, 1, 1, "", "cored_snfw_total_mass"], [303, 1, 1, "", "einasto_density_profile"], [304, 1, 1, "", "einasto_mass_profile"], [305, 1, 1, "", "find_overdensity_radius"], [306, 1, 1, "", "find_radius_mass"], [307, 1, 1, "", "hernquist_density_profile"], [308, 1, 1, "", "hernquist_mass_profile"], [309, 1, 1, "", "nfw_density_profile"], [310, 1, 1, "", "nfw_mass_profile"], [311, 1, 1, "", "nfw_scale_density"], [312, 1, 1, "", "power_law_profile"], [313, 1, 1, "", "rescale_profile_by_mass"], [314, 1, 1, "", "snfw_conc"], [315, 1, 1, "", "snfw_density_profile"], [316, 1, 1, "", "snfw_mass_profile"], [317, 1, 1, "", "snfw_total_mass"], [318, 1, 1, "", "tnfw_density_profile"], [319, 1, 1, "", "tnfw_mass_profile"], [320, 1, 1, "", "vikhlinin_density_profile"], [321, 1, 1, "", "vikhlinin_temperature_profile"], [322, 1, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[280, 3, 1, "", "__init__"], [281, 3, 1, "", "add_core"], [282, 3, 1, "", "built_in"], [283, 4, 1, "", "builtin"], [284, 3, 1, "", "cutoff"], [285, 3, 1, "", "from_array"], [286, 3, 1, "", "from_binary"], [287, 4, 1, "", "name"], [288, 3, 1, "", "plot"], [289, 3, 1, "", "to_binary"]], "relations": [[324, 1, 1, "", "convert_ne_to_density"], [325, 1, 1, "", "f_gas"], [326, 1, 1, "", "m_bcg"], [327, 1, 1, "", "m_sat"], [328, 1, 1, "", "r_bcg"], [329, 1, 1, "", "rho_scale_hern"]], "utils": [[331, 2, 1, "", "LogMute"], [333, 1, 1, "", "ensure_list"], [334, 1, 1, "", "ensure_ytarray"], [335, 1, 1, "", "ensure_ytquantity"], [336, 1, 1, "", "generate_particle_radii"], [337, 1, 1, "", "integrate"], [338, 1, 1, "", "integrate_mass"], [339, 1, 1, "", "integrate_toinf"], [340, 1, 1, "", "parse_prng"], [341, 1, 1, "", "time_limit"]], "utils.LogMute": [[332, 3, 1, "", "__init__"]], "virial": [[343, 2, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[344, 3, 1, "", "__init__"], [345, 3, 1, "", "check_virial"], [346, 5, 1, "", "ee"], [347, 5, 1, "", "ff"], [348, 3, 1, "", "generate_particles"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"user": [0, 360], "refer": [0, 351, 358], "guid": [0, 355, 357], "basic": 0, "compon": 0, "cg": [0, 349, 355], "In": [0, 362], "depth": 0, "articl": 0, "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 355], "resample_arepo_": 2, "setup_arepo_": 3, "setup_art_": 4, "setup_athena_": 5, "setup_enzo_": 6, "setup_flash_": 7, "setup_gamer_": 8, "setup_gizmo_": 9, "setup_ramses_": 10, "write_amr_particl": 11, "correct": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 353, 354], "nonphysicalregion": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "__init__": [14, 26, 38, 50, 62, 74, 86, 98, 110, 123, 128, 133, 138, 143, 148, 153, 158, 166, 175, 212, 257, 280, 332, 344], "identifi": [17, 29, 41, 53, 65, 77, 89, 101, 113], "is_clos": [18, 30, 42, 54, 66, 78, 90, 102, 114], "messag": [19, 31, 43, 55, 67, 79, 91, 103, 115], "obj": [20, 32, 44, 56, 68, 80, 92, 104, 116], "rmax": [21, 33, 45, 57, 69, 81, 93, 105, 117], "rmin": [22, 34, 46, 58, 70, 82, 94, 106, 118], "size": [23, 35, 47, 59, 71, 83, 95, 107, 119], "type": [24, 36, 48, 60, 72, 84, 96, 108, 120, 353, 354, 361], "type0npr": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "type0anpr": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "type0bnpr": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "type0cnpr": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "type1npr": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "type1anpr": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "type2npr": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "type2anpr": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "field": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 182, 219, 356, 360, 361], "clusterfield": [122, 123, 124, 125, 126], "map_field_to_particl": [124, 129, 134, 139, 144, 149, 154, 159], "unit": [125, 130, 135, 140, 145, 150, 155, 160, 357], "write_fil": [126, 131, 136, 141, 146, 151, 156, 161], "gaussianrandomfield": [127, 128, 129, 130, 131], "radialrandommagneticfield": [132, 133, 134, 135, 136], "radialrandommagneticvectorpotenti": [137, 138, 139, 140, 141], "radialrandomvelocityfield": [142, 143, 144, 145, 146], "randommagneticfield": [147, 148, 149, 150, 151], "randommagneticvectorpotenti": [152, 153, 154, 155, 156], "randomvelocityfield": [157, 158, 159, 160, 161], "parse_valu": 162, "rot_3d": 163, "ic": [164, 165, 166, 167, 168, 169, 170, 171, 172], "cluster": [165, 166, 167, 168, 169, 170, 171, 349, 352, 356, 358, 359, 360], "create_dataset": [167, 179, 216], "from_fil": [168, 262], "resample_particle_": 169, "setup_particle_": 170, "to_fil": 171, "compute_centers_for_binari": 172, "model": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 349, 360], "clustermodel": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 360, 361], "check_dm_viri": [176, 213], "check_hs": [177, 214], "check_star_viri": [178, 215], "default_field": [180, 217], "dm_virial": [181, 218], "find_field_at_radiu": [183, 220], "find_radius_for_dens": [184, 221], "from_arrai": [185, 222, 285], "develop": [185, 222, 355], "note": [185, 222], "from_dens_and_entr": [186, 223], "from_dens_and_tden": [187, 224], "from_dens_and_temp": [188, 225], "from_h5_fil": [189, 226, 264], "generate_dm_particl": [190, 227], "generate_gas_particl": [191, 228], "generate_star_particl": [192, 229], "generate_tracer_particl": [193, 230], "item": [194, 231], "kei": [195, 232, 265], "mass_in_radiu": [196, 233], "no_ga": [197, 234], "num_el": [198, 235], "panel_plot": [199, 236], "plot": [200, 237, 288], "properti": [201, 238], "set_field": [202, 239, 268], "set_magnetic_field_from_beta": [203, 240], "set_magnetic_field_from_dens": [204, 241], "set_rmax": [205, 242], "star_viri": [206, 243], "valu": [207, 244], "write_model_to_ascii": [208, 245], "write_model_to_binari": [209, 246], "write_model_to_h5": [210, 247], "hydrostaticequilibrium": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "numalg": [248, 249, 250, 251, 252, 253, 254], "extrap_power_law": 249, "find_hol": 250, "identify_domain_bord": 251, "monotone_interpol": 252, "positive_interpol": 253, "solve_temperatur": 254, "particl": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 356, 361], "clusterparticl": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 361], "add_black_hol": 258, "add_offset": 259, "drop_ptyp": 260, "from_field": 261, "from_gadget_fil": 263, "make_radial_cut": 266, "num_passive_scalar": 267, "to_yt_dataset": 269, "write_particl": 270, "write_particles_to_h5": 271, "write_to_gadget_fil": 272, "combine_three_clust": 273, "combine_two_clust": 274, "resample_one_clust": 275, "resample_three_clust": 276, "resample_two_clust": 277, "radial_profil": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "radialprofil": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "add_cor": 281, "built_in": 282, "builtin": 283, "cutoff": 284, "from_binari": 286, "name": 287, "to_binari": 289, "ad07_density_profil": 290, "ad07_temperature_profil": 291, "am06_density_profil": 292, "am06_temperature_profil": 293, "baseline_entropy_profil": 294, "beta_model_profil": 295, "broken_entropy_profil": 296, "constant_profil": 297, "convert_nfw_to_hernquist": 298, "cored_hernquist_density_profil": 299, "cored_snfw_density_profil": 300, "cored_snfw_mass_profil": 301, "cored_snfw_total_mass": 302, "einasto_density_profil": 303, "einasto_mass_profil": 304, "find_overdensity_radiu": 305, "find_radius_mass": 306, "hernquist_density_profil": 307, "hernquist_mass_profil": 308, "nfw_density_profil": 309, "nfw_mass_profil": 310, "nfw_scale_dens": 311, "power_law_profil": 312, "rescale_profile_by_mass": 313, "snfw_conc": 314, "snfw_density_profil": 315, "snfw_mass_profil": 316, "snfw_total_mass": 317, "tnfw_density_profil": 318, "tnfw_mass_profil": 319, "vikhlinin_density_profil": 320, "vikhlinin_temperature_profil": 321, "walker_entropy_profil": 322, "relat": [323, 324, 325, 326, 327, 328, 329, 358], "convert_ne_to_dens": 324, "f_ga": 325, "m_bcg": 326, "m_sat": 327, "r_bcg": 328, "rho_scale_hern": 329, "util": [330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "logmut": [331, 332], "ensure_list": 333, "ensure_ytarrai": 334, "ensure_ytquant": 335, "generate_particle_radii": 336, "integr": 337, "integrate_mass": 338, "integrate_toinf": 339, "parse_prng": 340, "time_limit": 341, "virial": [342, 343, 344, 345, 346, 347, 348, 361], "virialequilibrium": [343, 344, 345, 346, 347, 348], "check_viri": 345, "ee": 346, "ff": 347, "generate_particl": 348, "your": 349, "first": 349, "journei": 349, "With": 349, "content": [349, 353, 357, 360, 362], "introduc": 349, "get": [349, 357], "start": [349, 357], "packag": [349, 355, 357], "set": [349, 360], "up": 349, "build": 349, "The": [349, 360, 361], "api": 350, "simul": 351, "softwar": 351, "flash": 351, "gamer": 351, "arepo": 351, "gizmo": 351, "enzo": 351, "rams": 351, "athena": 351, "collect": 352, "what": 352, "i": [352, 361], "A": 352, "us": [352, 355, 360, 362], "sidebar": 352, "why": 352, "doe": 352, "look": 352, "so": 352, "bad": 352, "bumpi": 352, "non": [353, 354, 360], "physic": [353, 354, 360], "behavior": 353, "region": [353, 354], "0": [353, 354], "1": [353, 354], "2": [353, 354], "ad": [353, 360, 361], "new": [353, 361], "npr": [353, 354], "method": 354, "For": 354, "extrapolatori": 354, "power": 354, "law": 354, "replac": 354, "exampl": 355, "go": 355, "from": [355, 359, 360, 361], "To": 355, "scienc": 355, "beyond": 355, "extern": 355, "gener": [356, 358, 359, 360, 361], "3d": 356, "mathemat": [356, 360, 361], "overview": [356, 360, 361], "initi": [356, 359], "magnet": [356, 360], "random": 356, "vector": 356, "potenti": 356, "radial": [356, 360, 362], "veloc": [356, 361], "map": 356, "write": [356, 360], "out": 356, "disk": [356, 360], "quickstart": 357, "introduct": 357, "instal": 357, "Not": 357, "yet": 357, "implement": 357, "depend": 357, "featur": 358, "resourc": 358, "project": 358, "page": 358, "indic": 358, "tabl": 358, "addit": 358, "condit": 359, "script": 359, "paramet": 359, "file": 359, "reader": 360, "suggest": 360, "intraclust": 360, "medium": 360, "icm": 360, "graviti": 360, "profil": [360, 362], "check": [360, 361], "hydrostat": 360, "equilibrium": [360, 361], "strength": 360, "other": 360, "read": 360, "object": [360, 361], "advic": 360, "ga": 361, "dark": 361, "matter": 361, "star": 361, "equilibria": 361, "class": 361, "oper": 361, "drop": 361, "add": 361, "posit": 361, "offset": 361, "make": 361, "cut": 361, "radiu": 361, "black": 361, "hole": 361, "chang": 361, "o": 361, "gadget": 361, "like": 361, "built": 362, "creat": 362}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"User Reference Guide": [[0, "user-reference-guide"]], "Basic Components of CG": [[0, "basic-components-of-cg"]], "In Depth Articles": [[0, "in-depth-articles"]], "codes": [[1, "module-codes"]], "codes.resample_arepo_ics": [[2, "codes-resample-arepo-ics"]], "codes.setup_arepo_ics": [[3, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[4, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[5, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[6, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[7, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[8, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[9, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[10, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[11, "codes-write-amr-particles"]], "correction": [[12, "module-correction"]], "correction.NonPhysicalRegion": [[13, "correction-nonphysicalregion"]], "correction.NonPhysicalRegion.__init__": [[14, "correction-nonphysicalregion-init"]], "correction.NonPhysicalRegion.correct": [[15, "correction-nonphysicalregion-correct"]], "correction.NonPhysicalRegion.correctable": [[16, "correction-nonphysicalregion-correctable"]], "correction.NonPhysicalRegion.identify": [[17, "correction-nonphysicalregion-identify"]], "correction.NonPhysicalRegion.is_close": [[18, "correction-nonphysicalregion-is-close"]], "correction.NonPhysicalRegion.message": [[19, "correction-nonphysicalregion-message"]], "correction.NonPhysicalRegion.obj": [[20, "correction-nonphysicalregion-obj"]], "correction.NonPhysicalRegion.rmax": [[21, "correction-nonphysicalregion-rmax"]], "correction.NonPhysicalRegion.rmin": [[22, "correction-nonphysicalregion-rmin"]], "correction.NonPhysicalRegion.size": [[23, "correction-nonphysicalregion-size"]], "correction.NonPhysicalRegion.type": [[24, "correction-nonphysicalregion-type"]], "correction.Type0NPR": [[25, "correction-type0npr"]], "correction.Type0NPR.__init__": [[26, "correction-type0npr-init"]], "correction.Type0NPR.correct": [[27, "correction-type0npr-correct"]], "correction.Type0NPR.correctable": [[28, "correction-type0npr-correctable"]], "correction.Type0NPR.identify": [[29, "correction-type0npr-identify"]], "correction.Type0NPR.is_close": [[30, "correction-type0npr-is-close"]], "correction.Type0NPR.message": [[31, "correction-type0npr-message"]], "correction.Type0NPR.obj": [[32, "correction-type0npr-obj"]], "correction.Type0NPR.rmax": [[33, "correction-type0npr-rmax"]], "correction.Type0NPR.rmin": [[34, "correction-type0npr-rmin"]], "correction.Type0NPR.size": [[35, "correction-type0npr-size"]], "correction.Type0NPR.type": [[36, "correction-type0npr-type"]], "correction.Type0aNPR": [[37, "correction-type0anpr"]], "correction.Type0aNPR.__init__": [[38, "correction-type0anpr-init"]], "correction.Type0aNPR.correct": [[39, "correction-type0anpr-correct"]], "correction.Type0aNPR.correctable": [[40, "correction-type0anpr-correctable"]], "correction.Type0aNPR.identify": [[41, "correction-type0anpr-identify"]], "correction.Type0aNPR.is_close": [[42, "correction-type0anpr-is-close"]], "correction.Type0aNPR.message": [[43, "correction-type0anpr-message"]], "correction.Type0aNPR.obj": [[44, "correction-type0anpr-obj"]], "correction.Type0aNPR.rmax": [[45, "correction-type0anpr-rmax"]], "correction.Type0aNPR.rmin": [[46, "correction-type0anpr-rmin"]], "correction.Type0aNPR.size": [[47, "correction-type0anpr-size"]], "correction.Type0aNPR.type": [[48, "correction-type0anpr-type"]], "correction.Type0bNPR": [[49, "correction-type0bnpr"]], "correction.Type0bNPR.__init__": [[50, "correction-type0bnpr-init"]], "correction.Type0bNPR.correct": [[51, "correction-type0bnpr-correct"]], "correction.Type0bNPR.correctable": [[52, "correction-type0bnpr-correctable"]], "correction.Type0bNPR.identify": [[53, "correction-type0bnpr-identify"]], "correction.Type0bNPR.is_close": [[54, "correction-type0bnpr-is-close"]], "correction.Type0bNPR.message": [[55, "correction-type0bnpr-message"]], "correction.Type0bNPR.obj": [[56, "correction-type0bnpr-obj"]], "correction.Type0bNPR.rmax": [[57, "correction-type0bnpr-rmax"]], "correction.Type0bNPR.rmin": [[58, "correction-type0bnpr-rmin"]], "correction.Type0bNPR.size": [[59, "correction-type0bnpr-size"]], "correction.Type0bNPR.type": [[60, "correction-type0bnpr-type"]], "correction.Type0cNPR": [[61, "correction-type0cnpr"]], "correction.Type0cNPR.__init__": [[62, "correction-type0cnpr-init"]], "correction.Type0cNPR.correct": [[63, "correction-type0cnpr-correct"]], "correction.Type0cNPR.correctable": [[64, "correction-type0cnpr-correctable"]], "correction.Type0cNPR.identify": [[65, "correction-type0cnpr-identify"]], "correction.Type0cNPR.is_close": [[66, "correction-type0cnpr-is-close"]], "correction.Type0cNPR.message": [[67, "correction-type0cnpr-message"]], "correction.Type0cNPR.obj": [[68, "correction-type0cnpr-obj"]], "correction.Type0cNPR.rmax": [[69, "correction-type0cnpr-rmax"]], "correction.Type0cNPR.rmin": [[70, "correction-type0cnpr-rmin"]], "correction.Type0cNPR.size": [[71, "correction-type0cnpr-size"]], "correction.Type0cNPR.type": [[72, "correction-type0cnpr-type"]], "correction.Type1NPR": [[73, "correction-type1npr"]], "correction.Type1NPR.__init__": [[74, "correction-type1npr-init"]], "correction.Type1NPR.correct": [[75, "correction-type1npr-correct"]], "correction.Type1NPR.correctable": [[76, "correction-type1npr-correctable"]], "correction.Type1NPR.identify": [[77, "correction-type1npr-identify"]], "correction.Type1NPR.is_close": [[78, "correction-type1npr-is-close"]], "correction.Type1NPR.message": [[79, "correction-type1npr-message"]], "correction.Type1NPR.obj": [[80, "correction-type1npr-obj"]], "correction.Type1NPR.rmax": [[81, "correction-type1npr-rmax"]], "correction.Type1NPR.rmin": [[82, "correction-type1npr-rmin"]], "correction.Type1NPR.size": [[83, "correction-type1npr-size"]], "correction.Type1NPR.type": [[84, "correction-type1npr-type"]], "correction.Type1aNPR": [[85, "correction-type1anpr"]], "correction.Type1aNPR.__init__": [[86, "correction-type1anpr-init"]], "correction.Type1aNPR.correct": [[87, "correction-type1anpr-correct"]], "correction.Type1aNPR.correctable": [[88, "correction-type1anpr-correctable"]], "correction.Type1aNPR.identify": [[89, "correction-type1anpr-identify"]], "correction.Type1aNPR.is_close": [[90, "correction-type1anpr-is-close"]], "correction.Type1aNPR.message": [[91, "correction-type1anpr-message"]], "correction.Type1aNPR.obj": [[92, "correction-type1anpr-obj"]], "correction.Type1aNPR.rmax": [[93, "correction-type1anpr-rmax"]], "correction.Type1aNPR.rmin": [[94, "correction-type1anpr-rmin"]], "correction.Type1aNPR.size": [[95, "correction-type1anpr-size"]], "correction.Type1aNPR.type": [[96, "correction-type1anpr-type"]], "correction.Type2NPR": [[97, "correction-type2npr"]], "correction.Type2NPR.__init__": [[98, "correction-type2npr-init"]], "correction.Type2NPR.correct": [[99, "correction-type2npr-correct"]], "correction.Type2NPR.correctable": [[100, "correction-type2npr-correctable"]], "correction.Type2NPR.identify": [[101, "correction-type2npr-identify"]], "correction.Type2NPR.is_close": [[102, "correction-type2npr-is-close"]], "correction.Type2NPR.message": [[103, "correction-type2npr-message"]], "correction.Type2NPR.obj": [[104, "correction-type2npr-obj"]], "correction.Type2NPR.rmax": [[105, "correction-type2npr-rmax"]], "correction.Type2NPR.rmin": [[106, "correction-type2npr-rmin"]], "correction.Type2NPR.size": [[107, "correction-type2npr-size"]], "correction.Type2NPR.type": [[108, "correction-type2npr-type"]], "correction.Type2aNPR": [[109, "correction-type2anpr"]], "correction.Type2aNPR.__init__": [[110, "correction-type2anpr-init"]], "correction.Type2aNPR.correct": [[111, "correction-type2anpr-correct"]], "correction.Type2aNPR.correctable": [[112, "correction-type2anpr-correctable"]], "correction.Type2aNPR.identify": [[113, "correction-type2anpr-identify"]], "correction.Type2aNPR.is_close": [[114, "correction-type2anpr-is-close"]], "correction.Type2aNPR.message": [[115, "correction-type2anpr-message"]], "correction.Type2aNPR.obj": [[116, "correction-type2anpr-obj"]], "correction.Type2aNPR.rmax": [[117, "correction-type2anpr-rmax"]], "correction.Type2aNPR.rmin": [[118, "correction-type2anpr-rmin"]], "correction.Type2aNPR.size": [[119, "correction-type2anpr-size"]], "correction.Type2aNPR.type": [[120, "correction-type2anpr-type"]], "fields": [[121, "module-fields"]], "fields.ClusterField": [[122, "fields-clusterfield"]], "fields.ClusterField.__init__": [[123, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[124, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[125, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[126, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[127, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[128, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[129, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[130, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[131, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[132, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[133, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[134, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[135, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[136, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[137, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[138, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[139, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[140, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[141, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[142, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[143, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[144, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[145, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[146, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[147, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[148, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[149, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[150, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[151, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[152, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[153, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[154, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[155, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[156, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[157, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[158, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[159, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[160, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[161, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[162, "fields-parse-value"]], "fields.rot_3d": [[163, "fields-rot-3d"]], "ics": [[164, "module-ics"]], "ics.ClusterICs": [[165, "ics-clusterics"]], "ics.ClusterICs.__init__": [[166, "ics-clusterics-init"]], "ics.ClusterICs.create_dataset": [[167, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[168, "ics-clusterics-from-file"]], "ics.ClusterICs.resample_particle_ics": [[169, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[170, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[171, "ics-clusterics-to-file"]], "ics.compute_centers_for_binary": [[172, "ics-compute-centers-for-binary"]], "model": [[173, "module-model"]], "model.ClusterModel": [[174, "model-clustermodel"]], "model.ClusterModel.__init__": [[175, "model-clustermodel-init"]], "model.ClusterModel.check_dm_virial": [[176, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[177, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[178, "model-clustermodel-check-star-virial"]], "model.ClusterModel.create_dataset": [[179, "model-clustermodel-create-dataset"]], "model.ClusterModel.default_fields": [[180, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[181, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[182, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[183, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.find_radius_for_density": [[184, "model-clustermodel-find-radius-for-density"]], "model.ClusterModel.from_arrays": [[185, "model-clustermodel-from-arrays"]], "development note": [[185, null], [222, null]], "model.ClusterModel.from_dens_and_entr": [[186, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[187, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[188, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[189, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[190, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[191, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[192, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[193, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.items": [[194, "model-clustermodel-items"]], "model.ClusterModel.keys": [[195, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[196, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[197, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[198, "model-clustermodel-num-elements"]], "model.ClusterModel.panel_plot": [[199, "model-clustermodel-panel-plot"]], "model.ClusterModel.plot": [[200, "model-clustermodel-plot"]], "model.ClusterModel.properties": [[201, "model-clustermodel-properties"]], "model.ClusterModel.set_field": [[202, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[203, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[204, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[205, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[206, "model-clustermodel-star-virial"]], "model.ClusterModel.values": [[207, "model-clustermodel-values"]], "model.ClusterModel.write_model_to_ascii": [[208, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[209, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[210, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[211, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[212, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.check_dm_virial": [[213, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[214, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[215, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.create_dataset": [[216, "model-hydrostaticequilibrium-create-dataset"]], "model.HydrostaticEquilibrium.default_fields": [[217, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[218, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[219, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[220, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.find_radius_for_density": [[221, "model-hydrostaticequilibrium-find-radius-for-density"]], "model.HydrostaticEquilibrium.from_arrays": [[222, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[223, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[224, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[225, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[226, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[227, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[228, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[229, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[230, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.items": [[231, "model-hydrostaticequilibrium-items"]], "model.HydrostaticEquilibrium.keys": [[232, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[233, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[234, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[235, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.panel_plot": [[236, "model-hydrostaticequilibrium-panel-plot"]], "model.HydrostaticEquilibrium.plot": [[237, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.properties": [[238, "model-hydrostaticequilibrium-properties"]], "model.HydrostaticEquilibrium.set_field": [[239, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[240, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[241, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[242, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[243, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.values": [[244, "model-hydrostaticequilibrium-values"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[245, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[246, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[247, "model-hydrostaticequilibrium-write-model-to-h5"]], "numalgs": [[248, "module-numalgs"]], "numalgs.extrap_power_law": [[249, "numalgs-extrap-power-law"]], "numalgs.find_holes": [[250, "numalgs-find-holes"]], "numalgs.identify_domain_borders": [[251, "numalgs-identify-domain-borders"]], "numalgs.monotone_interpolation": [[252, "numalgs-monotone-interpolation"]], "numalgs.positive_interpolation": [[253, "numalgs-positive-interpolation"]], "numalgs.solve_temperature": [[254, "numalgs-solve-temperature"]], "particles": [[255, "module-particles"]], "particles.ClusterParticles": [[256, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[257, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[258, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[259, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[260, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.from_fields": [[261, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[262, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[263, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[264, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[265, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[266, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[267, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.set_field": [[268, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[269, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[270, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[271, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[272, "particles-clusterparticles-write-to-gadget-file"]], "particles.combine_three_clusters": [[273, "particles-combine-three-clusters"]], "particles.combine_two_clusters": [[274, "particles-combine-two-clusters"]], "particles.resample_one_cluster": [[275, "particles-resample-one-cluster"]], "particles.resample_three_clusters": [[276, "particles-resample-three-clusters"]], "particles.resample_two_clusters": [[277, "particles-resample-two-clusters"]], "radial_profiles": [[278, "module-radial_profiles"]], "radial_profiles.RadialProfile": [[279, "radial-profiles-radialprofile"]], "radial_profiles.RadialProfile.__init__": [[280, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[281, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[282, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[283, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[284, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[285, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[286, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.name": [[287, "radial-profiles-radialprofile-name"]], "radial_profiles.RadialProfile.plot": [[288, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[289, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[290, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[291, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[292, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[293, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[294, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[295, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[296, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[297, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[298, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[299, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[300, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[301, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[302, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[303, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[304, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[305, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[306, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[307, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[308, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[309, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[310, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[311, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[312, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[313, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[314, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[315, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[316, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[317, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[318, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[319, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[320, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[321, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[322, "radial-profiles-walker-entropy-profile"]], "relations": [[323, "module-relations"]], "relations.convert_ne_to_density": [[324, "relations-convert-ne-to-density"]], "relations.f_gas": [[325, "relations-f-gas"]], "relations.m_bcg": [[326, "relations-m-bcg"]], "relations.m_sat": [[327, "relations-m-sat"]], "relations.r_bcg": [[328, "relations-r-bcg"]], "relations.rho_scale_hern": [[329, "relations-rho-scale-hern"]], "utils": [[330, "module-utils"]], "utils.LogMute": [[331, "utils-logmute"]], "utils.LogMute.__init__": [[332, "utils-logmute-init"]], "utils.ensure_list": [[333, "utils-ensure-list"]], "utils.ensure_ytarray": [[334, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[335, "utils-ensure-ytquantity"]], "utils.generate_particle_radii": [[336, "utils-generate-particle-radii"]], "utils.integrate": [[337, "utils-integrate"]], "utils.integrate_mass": [[338, "utils-integrate-mass"]], "utils.integrate_toinf": [[339, "utils-integrate-toinf"]], "utils.parse_prng": [[340, "utils-parse-prng"]], "utils.time_limit": [[341, "utils-time-limit"]], "virial": [[342, "module-virial"]], "virial.VirialEquilibrium": [[343, "virial-virialequilibrium"]], "virial.VirialEquilibrium.__init__": [[344, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[345, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.ee": [[346, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[347, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[348, "virial-virialequilibrium-generate-particles"]], "Your First Journey With CG": [[349, "Your-First-Journey-With-CG"]], "Contents": [[349, "Contents"], [353, "contents"], [357, "contents"], [360, "contents"], [362, "contents"]], "Introducing CG": [[349, "Introducing-CG"]], "Getting Started With the Package": [[349, "Getting-Started-With-the-Package"]], "Setting Up Your First Cluster": [[349, "Setting-Up-Your-First-Cluster"]], "Building The Model": [[349, "Building-The-Model"]], "API": [[350, "api"]], "Simulation Software": [[351, "simulation-software"]], "FLASH": [[351, "flash"]], "GAMER": [[351, "gamer"]], "Arepo": [[351, "arepo"]], "GIZMO": [[351, "gizmo"]], "Enzo": [[351, "enzo"]], "RAMSES": [[351, "ramses"]], "Athena++": [[351, "athena"]], "References": [[351, "references"]], "Cluster Collections": [[352, "cluster-collections"]], "What is A Collection?": [[352, "what-is-a-collection"]], "Using Collections": [[352, "using-collections"]], "Sidebar: Why Does it Look So Bad!?": [[352, null]], "Sidebar: Why so Bumpy??": [[352, null]], "Correcting Non-Physical Behavior": [[353, "correcting-non-physical-behavior"], [353, "id1"]], "Non-Physical Regions": [[353, "non-physical-regions"]], "Type 0 Non-Physicalities": [[353, "type-0-non-physicalities"]], "Type 1 Non-Physicalities": [[353, "type-1-non-physicalities"], [353, null]], "Type 2 Non-Physicalities": [[353, "type-2-non-physicalities"]], "Adding a New NPR": [[353, "adding-a-new-npr"]], "Methods For Correcting Non-Physical Regions": [[354, "methods-for-correcting-non-physical-regions"]], "Type 0 NPRs": [[354, "type-0-nprs"]], "Type 1 NPRs": [[354, "type-1-nprs"]], "Type 2 NPRs": [[354, "type-2-nprs"]], "Extrapolatory Power Law Replacement": [[354, null]], "Examples": [[355, "examples"]], "Using CG": [[355, "using-cg"]], "Code Guides - Going From Code To Science": [[355, "code-guides-going-from-code-to-science"]], "Beyond CG - External Packages": [[355, "beyond-cg-external-packages"]], "Developing in CG": [[355, "developing-in-cg"]], "Generating 3D Cluster Fields": [[356, "generating-3d-cluster-fields"]], "Mathematical Overview": [[356, "mathematical-overview"]], "Initializing a Magnetic Field": [[356, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[356, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[356, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[356, "initializing-a-velocity-field"]], "Random Velocity Fields": [[356, "random-velocity-fields"]], "Radial Random Velocity Fields": [[356, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[356, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[356, "writing-a-field-out-to-disk"]], "Quickstart Guide": [[357, "quickstart-guide"]], "Introduction": [[357, "introduction"]], "Installing the Package": [[357, "installing-the-package"]], "Not Yet Implemented": [[357, null], [357, null], [357, null]], "Dependencies": [[357, "dependencies"]], "Getting Started": [[357, "id1"]], "Quickstart Guides": [[357, "quickstart-guides"]], "Units": [[357, "units"]], "Cluster Generator": [[358, "cluster-generator"]], "Features": [[358, "features"]], "Resources": [[358, "resources"]], "Related Projects": [[358, "related-projects"]], "Reference Pages": [[358, "reference-pages"]], "Indices and tables": [[358, "indices-and-tables"]], "Additional Pages": [[358, "additional-pages"]], "Initial Conditions Generation": [[359, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[359, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[359, "clusterics-parameter-files"]], "Cluster Models": [[360, "cluster-models"]], "Cluster Models: Mathematical Overview": [[360, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[360, null]], "The Intracluster Medium (ICM)": [[360, "the-intracluster-medium-icm"]], "Gravity": [[360, "gravity"]], "Generating a model.ClusterModel Using Radial Profiles": [[360, "generating-a-model-clustermodel-using-radial-profiles"]], "Checking the Hydrostatic Equilibrium": [[360, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[360, "setting-a-magnetic-field-strength-profile"]], "Adding Other Fields": [[360, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[360, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[360, null]], "Non-Physical Profiles": [[360, "non-physical-profiles"]], "Particles": [[361, "particles"]], "Generating Particles from ClusterModel Objects": [[361, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[361, "gas-particles"]], "Dark Matter and Star Particles": [[361, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[361, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[361, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[361, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[361, "the-clusterparticles-class"]], "ClusterParticles Operations": [[361, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[361, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[361, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[361, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[361, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[361, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[361, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[361, "clusterparticles-i-o"]], "Gadget-Like I/O": [[361, "gadget-like-i-o"]], "Radial Profiles": [[362, "radial-profiles"]], "Built-In Radial Profiles": [[362, "built-in-radial-profiles"]], "Using Radial Profiles": [[362, "using-radial-profiles"]], "Creating a Radial Profile": [[362, "creating-a-radial-profile"]]}, "indexentries": {"codes": [[1, "module-codes"]], "module": [[1, "module-codes"], [12, "module-correction"], [121, "module-fields"], [164, "module-ics"], [173, "module-model"], [248, "module-numalgs"], [255, "module-particles"], [278, "module-radial_profiles"], [323, "module-relations"], [330, "module-utils"], [342, "module-virial"]], "resample_arepo_ics() (in module codes)": [[2, "codes.resample_arepo_ics"]], "setup_arepo_ics() (in module codes)": [[3, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[4, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[5, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[6, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[7, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[8, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[9, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[10, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[11, "codes.write_amr_particles"]], "correction": [[12, "module-correction"]], "nonphysicalregion (class in correction)": [[13, "correction.NonPhysicalRegion"]], "__init__() (correction.nonphysicalregion method)": [[14, "correction.NonPhysicalRegion.__init__"]], "correct() (correction.nonphysicalregion class method)": [[15, "correction.NonPhysicalRegion.correct"]], "correctable (correction.nonphysicalregion attribute)": [[16, "correction.NonPhysicalRegion.correctable"]], "identify() (correction.nonphysicalregion class method)": [[17, "correction.NonPhysicalRegion.identify"]], "is_close() (correction.nonphysicalregion method)": [[18, "correction.NonPhysicalRegion.is_close"]], "message() (correction.nonphysicalregion method)": [[19, "correction.NonPhysicalRegion.message"]], "obj (correction.nonphysicalregion attribute)": [[20, "correction.NonPhysicalRegion.obj"]], "rmax (correction.nonphysicalregion attribute)": [[21, "correction.NonPhysicalRegion.rmax"]], "rmin (correction.nonphysicalregion attribute)": [[22, "correction.NonPhysicalRegion.rmin"]], "size() (correction.nonphysicalregion method)": [[23, "correction.NonPhysicalRegion.size"]], "type (correction.nonphysicalregion attribute)": [[24, "correction.NonPhysicalRegion.type"]], "type0npr (class in correction)": [[25, "correction.Type0NPR"]], "__init__() (correction.type0npr method)": [[26, "correction.Type0NPR.__init__"]], "correct() (correction.type0npr class method)": [[27, "correction.Type0NPR.correct"]], "correctable (correction.type0npr attribute)": [[28, "correction.Type0NPR.correctable"]], "identify() (correction.type0npr class method)": [[29, "correction.Type0NPR.identify"]], "is_close() (correction.type0npr method)": [[30, "correction.Type0NPR.is_close"]], "message() (correction.type0npr method)": [[31, "correction.Type0NPR.message"]], "obj (correction.type0npr attribute)": [[32, "correction.Type0NPR.obj"]], "rmax (correction.type0npr attribute)": [[33, "correction.Type0NPR.rmax"]], "rmin (correction.type0npr attribute)": [[34, "correction.Type0NPR.rmin"]], "size() (correction.type0npr method)": [[35, "correction.Type0NPR.size"]], "type (correction.type0npr attribute)": [[36, "correction.Type0NPR.type"]], "type0anpr (class in correction)": [[37, "correction.Type0aNPR"]], "__init__() (correction.type0anpr method)": [[38, "correction.Type0aNPR.__init__"]], "correct() (correction.type0anpr class method)": [[39, "correction.Type0aNPR.correct"]], "correctable (correction.type0anpr attribute)": [[40, "correction.Type0aNPR.correctable"]], "identify() (correction.type0anpr class method)": [[41, "correction.Type0aNPR.identify"]], "is_close() (correction.type0anpr method)": [[42, "correction.Type0aNPR.is_close"]], "message() (correction.type0anpr method)": [[43, "correction.Type0aNPR.message"]], "obj (correction.type0anpr attribute)": [[44, "correction.Type0aNPR.obj"]], "rmax (correction.type0anpr attribute)": [[45, "correction.Type0aNPR.rmax"]], "rmin (correction.type0anpr attribute)": [[46, "correction.Type0aNPR.rmin"]], "size() (correction.type0anpr method)": [[47, "correction.Type0aNPR.size"]], "type (correction.type0anpr attribute)": [[48, "correction.Type0aNPR.type"]], "type0bnpr (class in correction)": [[49, "correction.Type0bNPR"]], "__init__() (correction.type0bnpr method)": [[50, "correction.Type0bNPR.__init__"]], "correct() (correction.type0bnpr class method)": [[51, "correction.Type0bNPR.correct"]], "correctable (correction.type0bnpr attribute)": [[52, "correction.Type0bNPR.correctable"]], "identify() (correction.type0bnpr class method)": [[53, "correction.Type0bNPR.identify"]], "is_close() (correction.type0bnpr method)": [[54, "correction.Type0bNPR.is_close"]], "message() (correction.type0bnpr method)": [[55, "correction.Type0bNPR.message"]], "obj (correction.type0bnpr attribute)": [[56, "correction.Type0bNPR.obj"]], "rmax (correction.type0bnpr attribute)": [[57, "correction.Type0bNPR.rmax"]], "rmin (correction.type0bnpr attribute)": [[58, "correction.Type0bNPR.rmin"]], "size() (correction.type0bnpr method)": [[59, "correction.Type0bNPR.size"]], "type (correction.type0bnpr attribute)": [[60, "correction.Type0bNPR.type"]], "type0cnpr (class in correction)": [[61, "correction.Type0cNPR"]], "__init__() (correction.type0cnpr method)": [[62, "correction.Type0cNPR.__init__"]], "correct() (correction.type0cnpr class method)": [[63, "correction.Type0cNPR.correct"]], "correctable (correction.type0cnpr attribute)": [[64, "correction.Type0cNPR.correctable"]], "identify() (correction.type0cnpr class method)": [[65, "correction.Type0cNPR.identify"]], "is_close() (correction.type0cnpr method)": [[66, "correction.Type0cNPR.is_close"]], "message() (correction.type0cnpr method)": [[67, "correction.Type0cNPR.message"]], "obj (correction.type0cnpr attribute)": [[68, "correction.Type0cNPR.obj"]], "rmax (correction.type0cnpr attribute)": [[69, "correction.Type0cNPR.rmax"]], "rmin (correction.type0cnpr attribute)": [[70, "correction.Type0cNPR.rmin"]], "size() (correction.type0cnpr method)": [[71, "correction.Type0cNPR.size"]], "type (correction.type0cnpr attribute)": [[72, "correction.Type0cNPR.type"]], "type1npr (class in correction)": [[73, "correction.Type1NPR"]], "__init__() (correction.type1npr method)": [[74, "correction.Type1NPR.__init__"]], "correct() (correction.type1npr class method)": [[75, "correction.Type1NPR.correct"]], "correctable (correction.type1npr attribute)": [[76, "correction.Type1NPR.correctable"]], "identify() (correction.type1npr class method)": [[77, "correction.Type1NPR.identify"]], "is_close() (correction.type1npr method)": [[78, "correction.Type1NPR.is_close"]], "message() (correction.type1npr method)": [[79, "correction.Type1NPR.message"]], "obj (correction.type1npr attribute)": [[80, "correction.Type1NPR.obj"]], "rmax (correction.type1npr attribute)": [[81, "correction.Type1NPR.rmax"]], "rmin (correction.type1npr attribute)": [[82, "correction.Type1NPR.rmin"]], "size() (correction.type1npr method)": [[83, "correction.Type1NPR.size"]], "type (correction.type1npr attribute)": [[84, "correction.Type1NPR.type"]], "type1anpr (class in correction)": [[85, "correction.Type1aNPR"]], "__init__() (correction.type1anpr method)": [[86, "correction.Type1aNPR.__init__"]], "correct() (correction.type1anpr class method)": [[87, "correction.Type1aNPR.correct"]], "correctable (correction.type1anpr attribute)": [[88, "correction.Type1aNPR.correctable"]], "identify() (correction.type1anpr class method)": [[89, "correction.Type1aNPR.identify"]], "is_close() (correction.type1anpr method)": [[90, "correction.Type1aNPR.is_close"]], "message() (correction.type1anpr method)": [[91, "correction.Type1aNPR.message"]], "obj (correction.type1anpr attribute)": [[92, "correction.Type1aNPR.obj"]], "rmax (correction.type1anpr attribute)": [[93, "correction.Type1aNPR.rmax"]], "rmin (correction.type1anpr attribute)": [[94, "correction.Type1aNPR.rmin"]], "size() (correction.type1anpr method)": [[95, "correction.Type1aNPR.size"]], "type (correction.type1anpr attribute)": [[96, "correction.Type1aNPR.type"]], "type2npr (class in correction)": [[97, "correction.Type2NPR"]], "__init__() (correction.type2npr method)": [[98, "correction.Type2NPR.__init__"]], "correct() (correction.type2npr class method)": [[99, "correction.Type2NPR.correct"]], "correctable (correction.type2npr attribute)": [[100, "correction.Type2NPR.correctable"]], "identify() (correction.type2npr class method)": [[101, "correction.Type2NPR.identify"]], "is_close() (correction.type2npr method)": [[102, "correction.Type2NPR.is_close"]], "message() (correction.type2npr method)": [[103, "correction.Type2NPR.message"]], "obj (correction.type2npr attribute)": [[104, "correction.Type2NPR.obj"]], "rmax (correction.type2npr attribute)": [[105, "correction.Type2NPR.rmax"]], "rmin (correction.type2npr attribute)": [[106, "correction.Type2NPR.rmin"]], "size() (correction.type2npr method)": [[107, "correction.Type2NPR.size"]], "type (correction.type2npr attribute)": [[108, "correction.Type2NPR.type"]], "type2anpr (class in correction)": [[109, "correction.Type2aNPR"]], "__init__() (correction.type2anpr method)": [[110, "correction.Type2aNPR.__init__"]], "correct() (correction.type2anpr class method)": [[111, "correction.Type2aNPR.correct"]], "correctable (correction.type2anpr attribute)": [[112, "correction.Type2aNPR.correctable"]], "identify() (correction.type2anpr class method)": [[113, "correction.Type2aNPR.identify"]], "is_close() (correction.type2anpr method)": [[114, "correction.Type2aNPR.is_close"]], "message() (correction.type2anpr method)": [[115, "correction.Type2aNPR.message"]], "obj (correction.type2anpr attribute)": [[116, "correction.Type2aNPR.obj"]], "rmax (correction.type2anpr attribute)": [[117, "correction.Type2aNPR.rmax"]], "rmin (correction.type2anpr attribute)": [[118, "correction.Type2aNPR.rmin"]], "size() (correction.type2anpr method)": [[119, "correction.Type2aNPR.size"]], "type (correction.type2anpr attribute)": [[120, "correction.Type2aNPR.type"]], "fields": [[121, "module-fields"]], "clusterfield (class in fields)": [[122, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[123, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[124, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[125, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[126, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[127, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[128, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[129, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[130, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[131, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[132, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[133, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[134, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[135, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[136, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[137, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[138, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[139, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[140, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[141, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[142, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[143, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[144, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[145, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[146, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[147, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[148, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[149, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[150, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[151, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[152, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[153, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[154, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[155, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[156, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[157, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[158, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[159, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[160, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[161, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[162, "fields.parse_value"]], "rot_3d() (in module fields)": [[163, "fields.rot_3d"]], "ics": [[164, "module-ics"]], "clusterics (class in ics)": [[165, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[166, "ics.ClusterICs.__init__"]], "create_dataset() (ics.clusterics method)": [[167, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[168, "ics.ClusterICs.from_file"]], "resample_particle_ics() (ics.clusterics method)": [[169, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[170, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[171, "ics.ClusterICs.to_file"]], "compute_centers_for_binary() (in module ics)": [[172, "ics.compute_centers_for_binary"]], "model": [[173, "module-model"]], "clustermodel (class in model)": [[174, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[175, "model.ClusterModel.__init__"]], "check_dm_virial() (model.clustermodel method)": [[176, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[177, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[178, "model.ClusterModel.check_star_virial"]], "create_dataset() (model.clustermodel method)": [[179, "model.ClusterModel.create_dataset"]], "default_fields (model.clustermodel attribute)": [[180, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[181, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[182, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[183, "model.ClusterModel.find_field_at_radius"]], "find_radius_for_density() (model.clustermodel method)": [[184, "model.ClusterModel.find_radius_for_density"]], "from_arrays() (model.clustermodel class method)": [[185, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[186, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[187, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[188, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[189, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[190, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[191, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[192, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[193, "model.ClusterModel.generate_tracer_particles"]], "items() (model.clustermodel method)": [[194, "model.ClusterModel.items"]], "keys() (model.clustermodel method)": [[195, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[196, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[197, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[198, "model.ClusterModel.num_elements"]], "panel_plot() (model.clustermodel method)": [[199, "model.ClusterModel.panel_plot"]], "plot() (model.clustermodel method)": [[200, "model.ClusterModel.plot"]], "properties (model.clustermodel property)": [[201, "model.ClusterModel.properties"]], "set_field() (model.clustermodel method)": [[202, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[203, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[204, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[205, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[206, "model.ClusterModel.star_virial"]], "values() (model.clustermodel method)": [[207, "model.ClusterModel.values"]], "write_model_to_ascii() (model.clustermodel method)": [[208, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[209, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[210, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[211, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[212, "model.HydrostaticEquilibrium.__init__"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[213, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[214, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[215, "model.HydrostaticEquilibrium.check_star_virial"]], "create_dataset() (model.hydrostaticequilibrium method)": [[216, "model.HydrostaticEquilibrium.create_dataset"]], "default_fields (model.hydrostaticequilibrium attribute)": [[217, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[218, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[219, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[220, "model.HydrostaticEquilibrium.find_field_at_radius"]], "find_radius_for_density() (model.hydrostaticequilibrium method)": [[221, "model.HydrostaticEquilibrium.find_radius_for_density"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[222, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[223, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[224, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[225, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[226, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[227, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[228, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[229, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[230, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "items() (model.hydrostaticequilibrium method)": [[231, "model.HydrostaticEquilibrium.items"]], "keys() (model.hydrostaticequilibrium method)": [[232, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[233, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[234, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[235, "model.HydrostaticEquilibrium.num_elements"]], "panel_plot() (model.hydrostaticequilibrium method)": [[236, "model.HydrostaticEquilibrium.panel_plot"]], "plot() (model.hydrostaticequilibrium method)": [[237, "model.HydrostaticEquilibrium.plot"]], "properties (model.hydrostaticequilibrium property)": [[238, "model.HydrostaticEquilibrium.properties"]], "set_field() (model.hydrostaticequilibrium method)": [[239, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[240, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[241, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[242, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[243, "model.HydrostaticEquilibrium.star_virial"]], "values() (model.hydrostaticequilibrium method)": [[244, "model.HydrostaticEquilibrium.values"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[245, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[246, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[247, "model.HydrostaticEquilibrium.write_model_to_h5"]], "numalgs": [[248, "module-numalgs"]], "extrap_power_law() (in module numalgs)": [[249, "numalgs.extrap_power_law"]], "find_holes() (in module numalgs)": [[250, "numalgs.find_holes"]], "identify_domain_borders() (in module numalgs)": [[251, "numalgs.identify_domain_borders"]], "monotone_interpolation() (in module numalgs)": [[252, "numalgs.monotone_interpolation"]], "positive_interpolation() (in module numalgs)": [[253, "numalgs.positive_interpolation"]], "solve_temperature() (in module numalgs)": [[254, "numalgs.solve_temperature"]], "particles": [[255, "module-particles"]], "clusterparticles (class in particles)": [[256, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[257, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[258, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[259, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[260, "particles.ClusterParticles.drop_ptypes"]], "from_fields() (particles.clusterparticles class method)": [[261, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[262, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[263, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[264, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[265, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[266, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[267, "particles.ClusterParticles.num_passive_scalars"]], "set_field() (particles.clusterparticles method)": [[268, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[269, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[270, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[271, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[272, "particles.ClusterParticles.write_to_gadget_file"]], "combine_three_clusters() (in module particles)": [[273, "particles.combine_three_clusters"]], "combine_two_clusters() (in module particles)": [[274, "particles.combine_two_clusters"]], "resample_one_cluster() (in module particles)": [[275, "particles.resample_one_cluster"]], "resample_three_clusters() (in module particles)": [[276, "particles.resample_three_clusters"]], "resample_two_clusters() (in module particles)": [[277, "particles.resample_two_clusters"]], "radial_profiles": [[278, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[279, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[280, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[281, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[282, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[283, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[284, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[285, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[286, "radial_profiles.RadialProfile.from_binary"]], "name (radial_profiles.radialprofile attribute)": [[287, "radial_profiles.RadialProfile.name"]], "plot() (radial_profiles.radialprofile method)": [[288, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[289, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[290, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[291, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[292, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[293, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[294, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[295, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[296, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[297, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[298, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[299, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[300, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[301, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[302, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[303, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[304, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[305, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[306, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[307, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[308, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[309, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[310, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[311, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[312, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[313, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[314, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[315, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[316, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[317, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[318, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[319, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[320, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[321, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[322, "radial_profiles.walker_entropy_profile"]], "relations": [[323, "module-relations"]], "convert_ne_to_density() (in module relations)": [[324, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[325, "relations.f_gas"]], "m_bcg() (in module relations)": [[326, "relations.m_bcg"]], "m_sat() (in module relations)": [[327, "relations.m_sat"]], "r_bcg() (in module relations)": [[328, "relations.r_bcg"]], "rho_scale_hern() (in module relations)": [[329, "relations.rho_scale_hern"]], "utils": [[330, "module-utils"]], "logmute (class in utils)": [[331, "utils.LogMute"]], "__init__() (utils.logmute method)": [[332, "utils.LogMute.__init__"]], "ensure_list() (in module utils)": [[333, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[334, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[335, "utils.ensure_ytquantity"]], "generate_particle_radii() (in module utils)": [[336, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[337, "utils.integrate"]], "integrate_mass() (in module utils)": [[338, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[339, "utils.integrate_toinf"]], "parse_prng() (in module utils)": [[340, "utils.parse_prng"]], "time_limit() (in module utils)": [[341, "utils.time_limit"]], "virial": [[342, "module-virial"]], "virialequilibrium (class in virial)": [[343, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[344, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[345, "virial.VirialEquilibrium.check_virial"]], "ee (virial.virialequilibrium property)": [[346, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[347, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[348, "virial.VirialEquilibrium.generate_particles"]]}})