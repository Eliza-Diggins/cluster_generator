Search.setIndex({"docnames": ["Getting_Started", "_as_gen/codes", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/collection", "_as_gen/collection.Ascasibar07", "_as_gen/collection.Ascasibar07.__init__", "_as_gen/collection.Ascasibar07.description", "_as_gen/collection.Ascasibar07.load", "_as_gen/collection.Ascasibar07.load_method", "_as_gen/collection.Ascasibar07.load_model", "_as_gen/collection.Ascasibar07.name", "_as_gen/collection.Ascasibar07.names", "_as_gen/collection.Ascasibar07.parameters", "_as_gen/collection.Ascasibar07.path", "_as_gen/collection.Ascasibar07.plot_summary", "_as_gen/collection.Ascasibar07.profiles", "_as_gen/collection.ClusterCollection", "_as_gen/collection.ClusterCollection.__init__", "_as_gen/collection.ClusterCollection.description", "_as_gen/collection.ClusterCollection.load_method", "_as_gen/collection.ClusterCollection.load_model", "_as_gen/collection.ClusterCollection.name", "_as_gen/collection.ClusterCollection.names", "_as_gen/collection.ClusterCollection.parameters", "_as_gen/collection.ClusterCollection.path", "_as_gen/collection.ClusterCollection.plot_summary", "_as_gen/collection.ClusterCollection.profiles", "_as_gen/collection.Sanderson10", "_as_gen/collection.Sanderson10.__init__", "_as_gen/collection.Sanderson10.description", "_as_gen/collection.Sanderson10.load", "_as_gen/collection.Sanderson10.load_method", "_as_gen/collection.Sanderson10.load_model", "_as_gen/collection.Sanderson10.name", "_as_gen/collection.Sanderson10.names", "_as_gen/collection.Sanderson10.parameters", "_as_gen/collection.Sanderson10.path", "_as_gen/collection.Sanderson10.plot_summary", "_as_gen/collection.Sanderson10.profiles", "_as_gen/collection.Vikhlinin06", "_as_gen/collection.Vikhlinin06.__init__", "_as_gen/collection.Vikhlinin06.description", "_as_gen/collection.Vikhlinin06.load", "_as_gen/collection.Vikhlinin06.load_method", "_as_gen/collection.Vikhlinin06.load_model", "_as_gen/collection.Vikhlinin06.name", "_as_gen/collection.Vikhlinin06.names", "_as_gen/collection.Vikhlinin06.parameters", "_as_gen/collection.Vikhlinin06.path", "_as_gen/collection.Vikhlinin06.plot_summary", "_as_gen/collection.Vikhlinin06.profiles", "_as_gen/collection.get_collections", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/gravity", "_as_gen/gravity.AQUALGravity", "_as_gen/gravity.AQUALGravity.__init__", "_as_gen/gravity.AQUALGravity.attrs", "_as_gen/gravity.AQUALGravity.compute_mass", "_as_gen/gravity.AQUALGravity.compute_potential", "_as_gen/gravity.AQUALGravity.is_calculated", "_as_gen/gravity.AQUALGravity.model", "_as_gen/gravity.AQUALGravity.potential", "_as_gen/gravity.AQUALGravity.reset", "_as_gen/gravity.EMONDGravity", "_as_gen/gravity.EMONDGravity.__init__", "_as_gen/gravity.EMONDGravity.attrs", "_as_gen/gravity.EMONDGravity.compute_mass", "_as_gen/gravity.EMONDGravity.compute_potential", "_as_gen/gravity.EMONDGravity.is_calculated", "_as_gen/gravity.EMONDGravity.model", "_as_gen/gravity.EMONDGravity.potential", "_as_gen/gravity.EMONDGravity.reset", "_as_gen/gravity.Gravity", "_as_gen/gravity.Gravity.__init__", "_as_gen/gravity.Gravity.attrs", "_as_gen/gravity.Gravity.is_calculated", "_as_gen/gravity.Gravity.model", "_as_gen/gravity.Gravity.reset", "_as_gen/gravity.NewtonianGravity", "_as_gen/gravity.NewtonianGravity.__init__", "_as_gen/gravity.NewtonianGravity.attrs", "_as_gen/gravity.NewtonianGravity.compute_mass", "_as_gen/gravity.NewtonianGravity.compute_potential", "_as_gen/gravity.NewtonianGravity.is_calculated", "_as_gen/gravity.NewtonianGravity.model", "_as_gen/gravity.NewtonianGravity.potential", "_as_gen/gravity.NewtonianGravity.reset", "_as_gen/gravity.QUMONDGravity", "_as_gen/gravity.QUMONDGravity.__init__", "_as_gen/gravity.QUMONDGravity.attrs", "_as_gen/gravity.QUMONDGravity.compute_mass", "_as_gen/gravity.QUMONDGravity.compute_potential", "_as_gen/gravity.QUMONDGravity.is_calculated", "_as_gen/gravity.QUMONDGravity.model", "_as_gen/gravity.QUMONDGravity.potential", "_as_gen/gravity.QUMONDGravity.reset", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.basename", "_as_gen/ics.ClusterICs.center", "_as_gen/ics.ClusterICs.compute_orbits", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.mag_file", "_as_gen/ics.ClusterICs.num_halos", "_as_gen/ics.ClusterICs.profiles", "_as_gen/ics.ClusterICs.r_max", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.ClusterICs.tot_np", "_as_gen/ics.ClusterICs.velocity", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.attrs", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.create_dataset", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.is_physical", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.pot", "_as_gen/model.ClusterModel.rebuild_physical", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.virialization_method", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.attrs", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.create_dataset", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.is_physical", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.pot", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.virialization_method", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.fields", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.particle_types", "_as_gen/particles.ClusterParticles.passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.concat_clusters", "_as_gen/particles.resample_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/utils", "_as_gen/utils.build_yt_dataset_fields", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.eprint", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.log_string", "_as_gen/utils.moving_average", "_as_gen/utils.parse_prng", "_as_gen/utils.truncate_spline", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.df", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_as_gen/virial.VirialEquilibrium.model", "_as_gen/virial.VirialEquilibrium.num_elements", "_as_gen/virial.VirialEquilibrium.ptype", "_as_gen/virial.VirialEquilibrium.sigma", "_as_gen/virial.VirialEquilibrium.type", "api", "codes", "collections", "examples", "fields", "gravity", "index", "initial_conditions", "models", "notebooks/api_guides/1", "notebooks/api_guides/2", "notebooks/api_guides/3", "notebooks/api_guides/4", "notebooks/quick_notebooks/quickbook", "notebooks/quick_notebooks/quickbook2", "notebooks/quick_notebooks/quickbook3", "notebooks/quick_notebooks/quickbook4", "particles", "radial_profiles"], "filenames": ["Getting_Started.rst", "_as_gen/codes.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/collection.rst", "_as_gen/collection.Ascasibar07.rst", "_as_gen/collection.Ascasibar07.__init__.rst", "_as_gen/collection.Ascasibar07.description.rst", "_as_gen/collection.Ascasibar07.load.rst", "_as_gen/collection.Ascasibar07.load_method.rst", "_as_gen/collection.Ascasibar07.load_model.rst", "_as_gen/collection.Ascasibar07.name.rst", "_as_gen/collection.Ascasibar07.names.rst", "_as_gen/collection.Ascasibar07.parameters.rst", "_as_gen/collection.Ascasibar07.path.rst", "_as_gen/collection.Ascasibar07.plot_summary.rst", "_as_gen/collection.Ascasibar07.profiles.rst", "_as_gen/collection.ClusterCollection.rst", "_as_gen/collection.ClusterCollection.__init__.rst", "_as_gen/collection.ClusterCollection.description.rst", "_as_gen/collection.ClusterCollection.load_method.rst", "_as_gen/collection.ClusterCollection.load_model.rst", "_as_gen/collection.ClusterCollection.name.rst", "_as_gen/collection.ClusterCollection.names.rst", "_as_gen/collection.ClusterCollection.parameters.rst", "_as_gen/collection.ClusterCollection.path.rst", "_as_gen/collection.ClusterCollection.plot_summary.rst", "_as_gen/collection.ClusterCollection.profiles.rst", "_as_gen/collection.Sanderson10.rst", "_as_gen/collection.Sanderson10.__init__.rst", "_as_gen/collection.Sanderson10.description.rst", "_as_gen/collection.Sanderson10.load.rst", "_as_gen/collection.Sanderson10.load_method.rst", "_as_gen/collection.Sanderson10.load_model.rst", "_as_gen/collection.Sanderson10.name.rst", "_as_gen/collection.Sanderson10.names.rst", "_as_gen/collection.Sanderson10.parameters.rst", "_as_gen/collection.Sanderson10.path.rst", "_as_gen/collection.Sanderson10.plot_summary.rst", "_as_gen/collection.Sanderson10.profiles.rst", "_as_gen/collection.Vikhlinin06.rst", "_as_gen/collection.Vikhlinin06.__init__.rst", "_as_gen/collection.Vikhlinin06.description.rst", "_as_gen/collection.Vikhlinin06.load.rst", "_as_gen/collection.Vikhlinin06.load_method.rst", "_as_gen/collection.Vikhlinin06.load_model.rst", "_as_gen/collection.Vikhlinin06.name.rst", "_as_gen/collection.Vikhlinin06.names.rst", "_as_gen/collection.Vikhlinin06.parameters.rst", "_as_gen/collection.Vikhlinin06.path.rst", "_as_gen/collection.Vikhlinin06.plot_summary.rst", "_as_gen/collection.Vikhlinin06.profiles.rst", "_as_gen/collection.get_collections.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/gravity.rst", "_as_gen/gravity.AQUALGravity.rst", "_as_gen/gravity.AQUALGravity.__init__.rst", "_as_gen/gravity.AQUALGravity.attrs.rst", "_as_gen/gravity.AQUALGravity.compute_mass.rst", "_as_gen/gravity.AQUALGravity.compute_potential.rst", "_as_gen/gravity.AQUALGravity.is_calculated.rst", "_as_gen/gravity.AQUALGravity.model.rst", "_as_gen/gravity.AQUALGravity.potential.rst", "_as_gen/gravity.AQUALGravity.reset.rst", "_as_gen/gravity.EMONDGravity.rst", "_as_gen/gravity.EMONDGravity.__init__.rst", "_as_gen/gravity.EMONDGravity.attrs.rst", "_as_gen/gravity.EMONDGravity.compute_mass.rst", "_as_gen/gravity.EMONDGravity.compute_potential.rst", "_as_gen/gravity.EMONDGravity.is_calculated.rst", "_as_gen/gravity.EMONDGravity.model.rst", "_as_gen/gravity.EMONDGravity.potential.rst", "_as_gen/gravity.EMONDGravity.reset.rst", "_as_gen/gravity.Gravity.rst", "_as_gen/gravity.Gravity.__init__.rst", "_as_gen/gravity.Gravity.attrs.rst", "_as_gen/gravity.Gravity.is_calculated.rst", "_as_gen/gravity.Gravity.model.rst", "_as_gen/gravity.Gravity.reset.rst", "_as_gen/gravity.NewtonianGravity.rst", "_as_gen/gravity.NewtonianGravity.__init__.rst", "_as_gen/gravity.NewtonianGravity.attrs.rst", "_as_gen/gravity.NewtonianGravity.compute_mass.rst", "_as_gen/gravity.NewtonianGravity.compute_potential.rst", "_as_gen/gravity.NewtonianGravity.is_calculated.rst", "_as_gen/gravity.NewtonianGravity.model.rst", "_as_gen/gravity.NewtonianGravity.potential.rst", "_as_gen/gravity.NewtonianGravity.reset.rst", "_as_gen/gravity.QUMONDGravity.rst", "_as_gen/gravity.QUMONDGravity.__init__.rst", "_as_gen/gravity.QUMONDGravity.attrs.rst", "_as_gen/gravity.QUMONDGravity.compute_mass.rst", "_as_gen/gravity.QUMONDGravity.compute_potential.rst", "_as_gen/gravity.QUMONDGravity.is_calculated.rst", "_as_gen/gravity.QUMONDGravity.model.rst", "_as_gen/gravity.QUMONDGravity.potential.rst", "_as_gen/gravity.QUMONDGravity.reset.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.basename.rst", "_as_gen/ics.ClusterICs.center.rst", "_as_gen/ics.ClusterICs.compute_orbits.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.mag_file.rst", "_as_gen/ics.ClusterICs.num_halos.rst", "_as_gen/ics.ClusterICs.profiles.rst", "_as_gen/ics.ClusterICs.r_max.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.ClusterICs.tot_np.rst", "_as_gen/ics.ClusterICs.velocity.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.attrs.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.create_dataset.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.is_physical.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.pot.rst", "_as_gen/model.ClusterModel.rebuild_physical.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.virialization_method.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.attrs.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.create_dataset.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.is_physical.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.pot.rst", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.virialization_method.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.fields.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.particle_types.rst", "_as_gen/particles.ClusterParticles.passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.concat_clusters.rst", "_as_gen/particles.resample_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/utils.rst", "_as_gen/utils.build_yt_dataset_fields.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.eprint.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.log_string.rst", "_as_gen/utils.moving_average.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.truncate_spline.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.df.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_as_gen/virial.VirialEquilibrium.model.rst", "_as_gen/virial.VirialEquilibrium.num_elements.rst", "_as_gen/virial.VirialEquilibrium.ptype.rst", "_as_gen/virial.VirialEquilibrium.sigma.rst", "_as_gen/virial.VirialEquilibrium.type.rst", "api.rst", "codes.rst", "collections.rst", "examples.rst", "fields.rst", "gravity.rst", "index.rst", "initial_conditions.rst", "models.rst", "notebooks/api_guides/1.ipynb", "notebooks/api_guides/2.ipynb", "notebooks/api_guides/3.ipynb", "notebooks/api_guides/4.ipynb", "notebooks/quick_notebooks/quickbook.ipynb", "notebooks/quick_notebooks/quickbook2.ipynb", "notebooks/quick_notebooks/quickbook3.ipynb", "notebooks/quick_notebooks/quickbook4.ipynb", "particles.rst", "radial_profiles.rst"], "titles": ["Quickstart Guide", "codes", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "collection", "collection.Ascasibar07", "collection.Ascasibar07.__init__", "collection.Ascasibar07.description", "collection.Ascasibar07.load", "collection.Ascasibar07.load_method", "collection.Ascasibar07.load_model", "collection.Ascasibar07.name", "collection.Ascasibar07.names", "collection.Ascasibar07.parameters", "collection.Ascasibar07.path", "collection.Ascasibar07.plot_summary", "collection.Ascasibar07.profiles", "collection.ClusterCollection", "collection.ClusterCollection.__init__", "collection.ClusterCollection.description", "collection.ClusterCollection.load_method", "collection.ClusterCollection.load_model", "collection.ClusterCollection.name", "collection.ClusterCollection.names", "collection.ClusterCollection.parameters", "collection.ClusterCollection.path", "collection.ClusterCollection.plot_summary", "collection.ClusterCollection.profiles", "collection.Sanderson10", "collection.Sanderson10.__init__", "collection.Sanderson10.description", "collection.Sanderson10.load", "collection.Sanderson10.load_method", "collection.Sanderson10.load_model", "collection.Sanderson10.name", "collection.Sanderson10.names", "collection.Sanderson10.parameters", "collection.Sanderson10.path", "collection.Sanderson10.plot_summary", "collection.Sanderson10.profiles", "collection.Vikhlinin06", "collection.Vikhlinin06.__init__", "collection.Vikhlinin06.description", "collection.Vikhlinin06.load", "collection.Vikhlinin06.load_method", "collection.Vikhlinin06.load_model", "collection.Vikhlinin06.name", "collection.Vikhlinin06.names", "collection.Vikhlinin06.parameters", "collection.Vikhlinin06.path", "collection.Vikhlinin06.plot_summary", "collection.Vikhlinin06.profiles", "collection.get_collections", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "gravity", "gravity.AQUALGravity", "gravity.AQUALGravity.__init__", "gravity.AQUALGravity.attrs", "gravity.AQUALGravity.compute_mass", "gravity.AQUALGravity.compute_potential", "gravity.AQUALGravity.is_calculated", "gravity.AQUALGravity.model", "gravity.AQUALGravity.potential", "gravity.AQUALGravity.reset", "gravity.EMONDGravity", "gravity.EMONDGravity.__init__", "gravity.EMONDGravity.attrs", "gravity.EMONDGravity.compute_mass", "gravity.EMONDGravity.compute_potential", "gravity.EMONDGravity.is_calculated", "gravity.EMONDGravity.model", "gravity.EMONDGravity.potential", "gravity.EMONDGravity.reset", "gravity.Gravity", "gravity.Gravity.__init__", "gravity.Gravity.attrs", "gravity.Gravity.is_calculated", "gravity.Gravity.model", "gravity.Gravity.reset", "gravity.NewtonianGravity", "gravity.NewtonianGravity.__init__", "gravity.NewtonianGravity.attrs", "gravity.NewtonianGravity.compute_mass", "gravity.NewtonianGravity.compute_potential", "gravity.NewtonianGravity.is_calculated", "gravity.NewtonianGravity.model", "gravity.NewtonianGravity.potential", "gravity.NewtonianGravity.reset", "gravity.QUMONDGravity", "gravity.QUMONDGravity.__init__", "gravity.QUMONDGravity.attrs", "gravity.QUMONDGravity.compute_mass", "gravity.QUMONDGravity.compute_potential", "gravity.QUMONDGravity.is_calculated", "gravity.QUMONDGravity.model", "gravity.QUMONDGravity.potential", "gravity.QUMONDGravity.reset", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.basename", "ics.ClusterICs.center", "ics.ClusterICs.compute_orbits", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.mag_file", "ics.ClusterICs.num_halos", "ics.ClusterICs.profiles", "ics.ClusterICs.r_max", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.ClusterICs.tot_np", "ics.ClusterICs.velocity", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.attrs", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.create_dataset", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.is_physical", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.plot", "model.ClusterModel.pot", "model.ClusterModel.rebuild_physical", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.virialization_method", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.attrs", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.create_dataset", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.is_physical", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.pot", "model.HydrostaticEquilibrium.rebuild_physical", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.virialization_method", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.fields", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.particle_types", "particles.ClusterParticles.passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.concat_clusters", "particles.resample_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "utils", "utils.build_yt_dataset_fields", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.eprint", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.log_string", "utils.moving_average", "utils.parse_prng", "utils.truncate_spline", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.df", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "virial.VirialEquilibrium.model", "virial.VirialEquilibrium.num_elements", "virial.VirialEquilibrium.ptype", "virial.VirialEquilibrium.sigma", "virial.VirialEquilibrium.type", "API", "Setting Up Idealized Cluster Problems in Various Codes", "Collections", "Examples", "Generating 3D Cluster Fields", "Gravity Theories", "cluster_generator", "Initial Conditions Generation", "Cluster Models", "Data Structures in cluster_generator", "Virialization", "Advanced Use Cases", "Feature Guide: Using Builtin Collections", "Quickstart Guide: The Basics", "Quickstart Guide: Your First Simulation", "Quickstart Guide: Getting The Most Out of Cluster Generator", "Getting Funky: MONDian Gravity", "Particles", "Radial Profiles"], "terms": {"galaxi": [0, 28, 40, 262, 275, 276, 277, 303, 304, 327, 341, 344, 345, 347, 348, 349, 351, 352, 357], "cluster": [0, 4, 5, 6, 7, 8, 9, 11, 16, 17, 19, 24, 27, 28, 30, 39, 40, 42, 51, 52, 54, 163, 165, 171, 188, 208, 225, 240, 242, 243, 247, 260, 262, 273, 274, 275, 276, 277, 303, 304, 308, 326, 327, 329, 341, 344, 345, 349, 351, 352, 355, 356, 357], "ar": [0, 6, 9, 23, 25, 34, 46, 58, 65, 70, 75, 80, 85, 90, 95, 100, 101, 102, 122, 129, 131, 152, 163, 165, 178, 188, 199, 215, 225, 236, 240, 242, 243, 254, 262, 327, 329, 340, 341, 342, 343, 344, 345, 347, 348, 349, 352, 353, 354, 355, 356, 357], "largest": 0, "gravitation": 0, "bound": 0, "object": [0, 4, 5, 6, 7, 8, 9, 59, 63, 68, 73, 78, 83, 88, 93, 98, 107, 108, 109, 111, 116, 117, 118, 120, 125, 129, 132, 133, 135, 140, 141, 142, 147, 164, 165, 167, 174, 179, 181, 182, 183, 191, 204, 211, 216, 218, 219, 220, 228, 244, 260, 262, 263, 267, 268, 270, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 327, 333, 334, 341, 343, 348, 349, 351, 352, 355, 357], "univers": [0, 281, 327, 329, 344, 349], "current": [0, 340, 347, 349, 351], "endpoint": 0, "process": [0, 129, 158, 240, 327, 340, 341, 348, 349, 351], "cosmolog": [0, 340], "structur": [0, 25, 262, 342, 343, 347, 352], "format": [0, 10, 25, 65, 70, 75, 80, 85, 90, 95, 100, 153, 259, 288, 289, 294, 341, 347, 352, 356], "made": [0, 101, 344, 348, 352, 355, 357], "dark": [0, 6, 7, 181, 218, 242, 273, 333, 340, 347, 348], "matter": [0, 6, 7, 181, 218, 242, 273, 333, 340, 347, 348], "dm": [0, 147, 240, 347, 348, 351, 352, 355, 356, 357], "hot": [0, 355], "magnet": [0, 7, 60, 147, 154, 194, 195, 231, 232, 340, 348], "x": [0, 102, 147, 151, 163, 314, 316, 325, 327, 341, 344, 345, 347, 348, 349, 351, 355, 356, 357], "rai": [0, 341, 345, 355, 357], "emit": 0, "ga": [0, 7, 63, 68, 73, 78, 83, 88, 93, 98, 147, 158, 159, 177, 178, 179, 182, 188, 214, 215, 216, 219, 225, 240, 273, 274, 341, 343, 348, 351, 352, 355, 357], "known": [0, 341, 347, 351], "intraclust": [0, 347], "medium": [0, 347], "icm": [0, 347, 351], "constitu": [0, 17, 22, 33, 45, 52, 57, 327], "For": [0, 152, 171, 208, 272, 341, 348, 349, 351, 352, 355, 356], "mani": [0, 344, 347, 349, 352, 355], "applic": [0, 343, 349], "especi": 0, "those": [0, 200, 237, 342, 349, 351, 356], "focus": [0, 348, 352], "properti": [0, 19, 20, 23, 30, 31, 34, 42, 43, 46, 54, 55, 58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 118, 125, 133, 142, 173, 191, 197, 198, 200, 210, 228, 234, 235, 237, 252, 330, 331, 332, 337, 348, 349, 351, 356, 357], "can": [0, 147, 152, 164, 165, 171, 172, 192, 194, 195, 200, 208, 209, 229, 231, 232, 237, 243, 259, 295, 327, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 356, 357], "approxim": [0, 151, 327, 344, 348], "roughli": 0, "spheric": [0, 132, 327, 343, 344, 349, 356, 357], "symmetr": [0, 344, 349, 356], "thi": [0, 6, 7, 9, 14, 18, 23, 26, 29, 34, 37, 41, 46, 49, 53, 58, 63, 68, 73, 78, 83, 88, 93, 98, 108, 111, 117, 120, 122, 128, 129, 131, 132, 135, 141, 144, 147, 152, 159, 165, 171, 176, 181, 182, 183, 190, 192, 200, 208, 213, 218, 219, 220, 227, 229, 237, 240, 242, 243, 253, 265, 269, 272, 297, 303, 306, 318, 319, 320, 321, 325, 327, 329, 331, 333, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "i": [0, 6, 7, 9, 14, 18, 25, 26, 29, 37, 41, 49, 53, 101, 108, 111, 117, 120, 122, 128, 129, 131, 132, 135, 141, 144, 147, 151, 159, 163, 164, 165, 169, 171, 181, 182, 183, 185, 192, 193, 195, 206, 208, 218, 219, 220, 222, 229, 230, 232, 240, 242, 255, 263, 265, 268, 270, 272, 273, 286, 287, 294, 295, 307, 318, 319, 320, 321, 327, 329, 331, 333, 340, 341, 343, 344, 345, 347, 349, 352, 353, 354, 355, 357], "often": [0, 349, 351, 355, 357], "done": [0, 165, 270, 340, 341, 343, 347, 348, 349, 351, 352, 353, 354], "us": [0, 6, 7, 9, 16, 17, 27, 28, 39, 40, 51, 52, 63, 68, 73, 78, 83, 88, 93, 98, 107, 116, 131, 140, 151, 152, 158, 159, 165, 171, 177, 178, 179, 188, 190, 192, 199, 200, 208, 214, 215, 216, 225, 227, 229, 236, 237, 240, 242, 243, 255, 259, 262, 269, 270, 271, 288, 289, 294, 295, 327, 329, 338, 340, 341, 342, 343, 344, 345, 346, 349, 352, 355, 356, 357], "standard": [0, 262, 340, 344, 348, 349, 352, 357], "radial": [0, 178, 188, 194, 195, 215, 225, 231, 232, 251, 263, 269, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 319, 320, 321, 329, 345, 346, 351, 352, 356], "profil": [0, 7, 20, 22, 28, 31, 33, 40, 43, 45, 55, 57, 147, 148, 158, 159, 175, 177, 178, 179, 188, 192, 194, 195, 212, 214, 215, 216, 225, 229, 231, 232, 263, 264, 265, 268, 269, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 318, 319, 320, 321, 327, 329, 341, 345, 346, 349, 351, 352, 355, 356], "variou": [0, 147, 341, 345, 347, 348, 351, 356, 357], "physic": [0, 185, 192, 222, 229, 341, 348, 351, 352, 355, 357], "well": [0, 192, 229, 341, 348, 351, 352, 357], "assum": [0, 101, 194, 195, 231, 232, 242, 243, 327, 343, 344, 347, 349, 351, 352, 356], "hydrostat": [0, 158, 169, 178, 182, 206, 215, 219, 348, 352, 355, 356, 357], "virial": [0, 164, 181, 183, 198, 218, 220, 235, 277, 341, 342, 347, 348, 351, 352, 355, 357], "equilibrium": [0, 169, 178, 181, 182, 183, 199, 201, 206, 215, 218, 219, 220, 236, 238, 327, 333, 338, 348, 352, 355, 357], "These": [0, 108, 117, 122, 129, 132, 141, 164, 165, 179, 216, 240, 260, 329, 340, 341, 342, 347, 348, 355, 356, 357], "model": [0, 11, 17, 28, 40, 52, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 132, 133, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 159, 247, 260, 278, 285, 300, 303, 313, 327, 328, 335, 341, 343, 344, 345, 348, 349, 351, 352, 355, 356, 357], "semi": 0, "analyt": [0, 327, 347, 349, 355, 356], "studi": [0, 347, 348, 351], "ideal": [0, 327, 347, 349, 356], "n": [0, 273, 275, 283, 284, 286, 287, 297, 298, 299, 317, 323, 340, 343, 345, 348, 349, 351, 355, 357], "bodi": [0, 151, 340, 345, 349], "magneto": [0, 343], "hydrodynam": [0, 340, 343, 345], "simul": [0, 146, 147, 151, 240, 259, 327, 343, 345, 346, 347, 348, 349, 351, 352, 355], "whether": [0, 199, 201, 236, 238, 259], "singl": [0, 159, 243, 248, 340, 341, 343, 346, 347, 351, 356], "merger": [0, 340, 343, 346, 352], "between": [0, 151, 163, 271, 306, 308, 329, 341, 344, 347, 348, 356], "two": [0, 151, 159, 163, 340, 341, 344, 347, 348, 352, 355, 356], "more": [0, 147, 159, 177, 178, 188, 214, 215, 225, 243, 325, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 355, 356, 357], "purpos": [0, 129, 341, 348, 349], "cluster_gener": [0, 1, 10, 103, 122, 169, 199, 200, 201, 206, 236, 237, 238, 263, 312, 327, 340, 341, 342, 343, 344, 346, 347, 351, 352, 355, 356, 357], "which": [0, 7, 10, 17, 28, 40, 52, 63, 68, 73, 78, 83, 88, 93, 98, 101, 102, 108, 117, 129, 132, 141, 144, 147, 151, 152, 158, 163, 165, 171, 176, 177, 179, 181, 182, 183, 185, 190, 193, 195, 208, 213, 214, 216, 218, 219, 220, 222, 227, 230, 232, 240, 242, 243, 259, 262, 265, 268, 294, 295, 318, 319, 320, 321, 325, 327, 329, 333, 340, 341, 343, 344, 347, 348, 349, 351, 352, 355, 356, 357], "gener": [0, 4, 5, 6, 7, 8, 9, 22, 28, 33, 40, 45, 57, 159, 164, 165, 169, 176, 181, 182, 183, 188, 190, 192, 199, 200, 201, 206, 213, 218, 219, 220, 225, 227, 229, 236, 237, 238, 240, 247, 268, 269, 318, 326, 333, 341, 342, 344, 345, 349, 351, 352, 355], "input": [0, 285, 296, 300, 329, 340, 341, 343, 356], "produc": [0, 169, 206, 347, 351, 352], "distribut": [0, 6, 132, 240, 243, 273, 274, 318, 327, 329, 340, 346, 347, 356, 357], "star": [0, 6, 7, 147, 183, 220, 240, 333, 340, 347, 348], "particl": [0, 6, 7, 9, 10, 63, 68, 73, 78, 83, 88, 93, 98, 147, 158, 159, 161, 164, 181, 182, 183, 218, 219, 220, 318, 327, 329, 333, 336, 340, 346, 347, 349, 351, 352, 355], "There": [0, 165, 341, 344, 347, 348, 352, 357], "also": [0, 7, 65, 70, 75, 80, 85, 90, 95, 100, 327, 340, 344, 345, 347, 348, 349, 351, 352, 355, 356], "abil": 0, "creat": [0, 6, 7, 9, 63, 68, 73, 78, 83, 88, 93, 98, 152, 171, 208, 256, 271, 340, 346, 347, 352, 355, 356, 357], "veloc": [0, 147, 148, 151, 152, 158, 159, 171, 181, 183, 208, 218, 220, 242, 243, 260, 261, 313, 327, 333, 346, 347, 348, 349, 351, 352], "field": [0, 7, 17, 23, 34, 46, 52, 58, 107, 108, 109, 111, 112, 116, 117, 118, 120, 121, 125, 127, 131, 132, 133, 135, 136, 140, 141, 142, 144, 145, 147, 152, 154, 158, 164, 165, 166, 171, 172, 175, 176, 189, 190, 192, 193, 194, 195, 200, 202, 203, 208, 209, 212, 213, 226, 227, 229, 230, 231, 232, 237, 240, 241, 246, 255, 259, 335, 340, 341, 344, 348, 349, 352, 355], "three": [0, 152, 159, 171, 208, 340, 343, 356], "dimens": [0, 62, 67, 72, 77, 82, 87, 92, 97, 152, 171, 208], "base": [0, 24, 60, 122, 147, 164, 181, 182, 183, 218, 219, 220, 260, 333, 340, 345, 347, 348, 352, 355, 356], "": [0, 108, 109, 112, 117, 118, 121, 125, 127, 132, 133, 136, 141, 142, 145, 199, 236, 240, 243, 277, 292, 293, 308, 327, 329, 335, 340, 341, 343, 344, 347, 348, 351, 352, 355, 357], "final": [0, 101, 129, 318, 340, 347, 348, 356, 357], "set": [0, 6, 7, 9, 59, 63, 68, 73, 78, 83, 88, 93, 98, 159, 181, 182, 183, 193, 194, 195, 218, 219, 220, 230, 231, 232, 242, 251, 253, 255, 256, 333, 341, 343, 344, 346, 348, 351, 352, 355, 356, 357], "up": [0, 6, 147, 159, 341, 346, 348, 353, 354, 355, 356, 357], "initi": [0, 7, 13, 25, 36, 48, 60, 129, 146, 147, 149, 153, 158, 159, 160, 165, 176, 180, 192, 213, 217, 229, 239, 259, 266, 327, 340, 341, 342, 344, 345, 347, 348, 349, 351, 352, 356], "condit": [0, 7, 146, 147, 149, 153, 158, 159, 160, 165, 239, 259, 327, 340, 342, 343, 344, 345, 347, 348, 349, 351, 352, 356], "number": [0, 17, 22, 28, 33, 40, 45, 52, 57, 62, 67, 72, 77, 82, 87, 92, 97, 147, 151, 152, 155, 161, 165, 171, 176, 177, 178, 179, 181, 182, 183, 188, 189, 208, 213, 214, 215, 216, 218, 219, 220, 225, 226, 240, 252, 255, 271, 307, 318, 333, 335, 342, 348, 351, 352, 356], "code": [0, 151, 159, 343, 345, 348, 349, 351, 352, 355, 356], "astrophys": [0, 357], "commmun": 0, "The": [0, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 108, 110, 116, 117, 119, 122, 126, 129, 132, 134, 140, 141, 143, 144, 147, 149, 151, 152, 154, 157, 158, 160, 162, 163, 164, 165, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 242, 244, 245, 247, 248, 251, 252, 253, 255, 256, 257, 259, 260, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 318, 319, 320, 321, 325, 327, 329, 331, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 351, 355, 357], "obtain": [0, 14, 16, 18, 26, 27, 29, 37, 39, 41, 49, 51, 53, 327, 340, 344, 347, 349, 351], "python": [0, 341], "version": [0, 192, 229, 270, 357], "3": [0, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 102, 147, 152, 169, 171, 195, 206, 208, 232, 243, 260, 275, 278, 292, 293, 301, 302, 303, 327, 329, 341, 344, 347, 348, 349, 351, 352, 355, 356, 357], "8": [0, 194, 195, 231, 232, 327, 344, 348, 349, 351, 352, 355, 356, 357], "instal": [0, 340, 352], "instruct": 0, "provid": [0, 107, 108, 116, 117, 131, 132, 140, 141, 240, 262, 271, 306, 327, 340, 341, 344, 345, 347, 348, 349, 351, 352, 355, 356, 357], "below": [0, 340, 344, 347, 348], "featur": [0, 340, 342, 348, 352], "yet": [0, 6, 7, 347, 348, 353, 354], "avail": [0, 19, 30, 42, 54, 59, 181, 182, 183, 218, 219, 220, 245, 333, 340, 345, 347, 348, 349, 351, 352, 355, 357], "To": [0, 169, 192, 206, 229, 327, 341, 344, 345, 347, 348, 349, 351, 352, 356, 357], "librari": [0, 1, 270, 341, 344, 345, 348, 349, 351, 352, 355], "directli": [0, 108, 111, 117, 120, 122, 132, 135, 141, 340, 341, 347, 348, 351, 352, 355], "option": [0, 6, 7, 9, 10, 17, 22, 28, 33, 40, 45, 52, 57, 59, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 102, 129, 151, 152, 160, 163, 165, 171, 178, 180, 181, 182, 183, 188, 194, 195, 199, 201, 208, 215, 217, 218, 219, 220, 225, 231, 232, 236, 238, 240, 242, 243, 248, 251, 255, 256, 257, 259, 267, 271, 273, 288, 289, 294, 308, 318, 327, 333, 340, 343, 345, 347, 348, 351, 352, 355, 356], "If": [0, 6, 7, 9, 101, 111, 120, 129, 135, 144, 159, 160, 171, 180, 181, 182, 183, 200, 208, 217, 218, 219, 220, 237, 242, 243, 248, 251, 255, 256, 263, 288, 289, 294, 303, 327, 329, 333, 341, 342, 343, 345, 347, 348, 349, 353, 354, 355, 356, 357], "you": [0, 108, 111, 117, 120, 129, 132, 135, 141, 181, 182, 183, 200, 218, 219, 220, 237, 333, 340, 341, 342, 345, 348, 349, 351, 352, 353, 354, 355, 356, 357], "have": [0, 6, 7, 9, 63, 68, 73, 78, 83, 88, 93, 98, 108, 111, 117, 120, 129, 132, 135, 141, 159, 164, 181, 182, 183, 218, 219, 220, 272, 333, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 355, 356, 357], "github": 0, "url": 0, "follow": [0, 329, 340, 341, 345, 347, 348, 349, 351, 352], "your": [0, 129, 152, 171, 208, 341, 343, 345, 347, 348, 349, 351, 352, 355], "prefer": [0, 272, 355], "environ": 0, "venv": 0, "local": [0, 327, 348], "etc": [0, 192, 229, 248, 341, 347, 348, 352, 355, 356], "call": [0, 108, 117, 122, 132, 141, 151, 192, 229, 341, 344, 347, 348, 349, 352, 355], "git": 0, "http": [0, 308], "www": 0, "com": [0, 348], "eliza": 0, "diggin": 0, "repositori": 0, "without": [0, 129, 188, 225, 351, 355], "clone": 0, "re": [0, 6, 7, 9, 192, 229, 329, 341, 345, 348, 349, 352, 355], "interest": [0, 348, 349, 351, 352, 355, 357], "instead": [0, 122, 165, 169, 206, 265, 319, 320, 321, 344, 347, 348, 349, 355, 357], "do": [0, 129, 192, 229, 340, 341, 343, 344, 345, 347, 348, 349, 352, 355, 356], "first": [0, 163, 318, 340, 344, 347, 348, 349, 351, 352, 355, 356, 357], "make": [0, 158, 192, 193, 229, 230, 251, 255, 271, 341, 348, 349, 351, 352], "sure": [0, 193, 230, 255, 340, 348, 352], "navig": 0, "directori": [0, 340, 348], "where": [0, 147, 163, 200, 237, 286, 287, 329, 341, 344, 347, 348, 349, 356, 357], "want": [0, 200, 237, 341, 342, 343, 345, 347, 348, 351, 352, 355, 356, 357], "appear": [0, 351, 352], "onc": [0, 340, 347, 348, 351, 352, 356], "ha": [0, 109, 118, 125, 133, 142, 144, 151, 158, 193, 230, 255, 262, 263, 294, 295, 340, 341, 343, 344, 347, 348, 349, 351, 352, 355, 356, 357], "been": [0, 6, 7, 9, 158, 344, 347, 348], "chang": [0, 63, 68, 73, 78, 83, 88, 93, 98, 151, 340, 348, 351, 355], "so": [0, 163, 165, 192, 199, 229, 236, 260, 263, 295, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356], "insid": [0, 265], "same": [0, 10, 15, 38, 50, 65, 70, 75, 80, 85, 90, 95, 100, 160, 181, 182, 183, 199, 200, 201, 218, 219, 220, 236, 237, 238, 240, 255, 257, 260, 263, 333, 340, 344, 347, 351, 355, 356], "setup": [0, 6, 7, 146, 340, 348, 352], "py": [0, 312, 347, 348, 349, 351, 355], "script": [0, 349], "Then": [0, 327, 329, 343, 344, 349], "run": [0, 319, 320, 321, 346, 348, 352], "command": 0, "site": [0, 349], "place": [0, 152, 171, 208, 340, 341, 345, 348, 356], "e": [0, 240, 263, 265, 283, 284, 289, 297, 298, 299, 301, 302, 307, 327, 329, 343, 348, 349, 352, 355, 356, 357], "develop": [0, 342, 345, 355], "mode": [0, 340], "edit": 0, "import": [0, 169, 199, 200, 201, 206, 236, 237, 238, 347, 348, 349, 351, 352, 356, 357], "test": [0, 169, 181, 182, 183, 199, 200, 201, 206, 218, 219, 220, 236, 237, 238, 333, 352], "ve": [0, 341, 348, 349, 351, 352, 355], "project": [0, 348, 349, 352], "simpli": [0, 101, 131, 341, 347, 348, 349, 352, 356], "show": [0, 342, 348, 349, 351, 352, 355], "compat": 0, "requir": [0, 131, 181, 182, 183, 218, 219, 220, 272, 329, 333, 340, 343, 344, 347, 348, 349, 352, 356], "unyt": [0, 356], "quantiti": [0, 101, 152, 169, 192, 206, 229, 329, 348, 352, 356, 357], "manipul": [0, 327, 349], "numpi": [0, 169, 206, 243, 318, 329, 332, 348, 351, 356], "numer": [0, 329, 344, 347, 356], "oper": 0, "scipi": [0, 269], "interpol": [0, 63, 68, 73, 78, 83, 88, 93, 98, 269, 343, 344], "curv": 0, "fit": [0, 23, 34, 46, 58, 327, 341, 345, 351], "h5py": 0, "h5": [0, 147, 199, 200, 201, 236, 237, 238, 340, 343, 348, 349, 351, 352, 355, 356], "file": [0, 6, 7, 9, 10, 14, 16, 18, 21, 25, 26, 27, 29, 32, 37, 39, 41, 44, 49, 51, 53, 56, 65, 70, 75, 80, 85, 90, 95, 100, 147, 154, 156, 158, 160, 180, 199, 200, 201, 217, 236, 237, 238, 247, 248, 257, 259, 270, 272, 340, 341, 348, 349, 351, 352, 355, 356], "interact": [0, 341, 347, 348, 349, 351, 352, 355], "tqdm": 0, "progress": [0, 327], "bar": [0, 327], "ruamel": 0, "yaml": [0, 21, 25, 32, 44, 56, 153, 341, 348], "support": [0, 340, 345, 355], "dill": 0, "serial": [0, 270, 272, 348], "halo": [0, 147, 151, 155, 281, 288, 289, 294, 327, 340, 341, 347, 348, 351, 352, 356, 357], "spinner": [0, 108, 117, 132, 141, 352, 355], "panda": 0, "dataset": [0, 12, 14, 17, 18, 19, 20, 23, 26, 28, 29, 30, 31, 34, 35, 37, 40, 41, 42, 43, 46, 47, 49, 52, 53, 54, 55, 58, 152, 171, 208, 256, 345, 348, 351, 352], "automat": [0, 347, 348, 349], "detail": [0, 177, 178, 188, 214, 215, 225, 345, 348, 351, 352, 356], "though": [0, 348], "mai": [0, 131, 164, 295, 319, 320, 321, 327, 329, 343, 344, 347, 348, 349, 351, 352, 355, 356, 357], "yt": [0, 152, 171, 208, 256, 288, 289, 294, 348, 349, 351, 352, 355], "creation": [0, 356], "memori": [0, 152, 171, 208, 256], "analysi": 0, "begin": [0, 152, 171, 208, 341, 347, 349], "section": [0, 286, 287, 340, 347, 348, 352], "look": [0, 329, 341, 345, 348, 349, 351, 352, 355], "note": [0, 7, 131, 132, 165, 169, 180, 192, 206, 217, 229, 240, 265, 268, 269, 270, 318, 319, 320, 321, 327, 329, 347, 348, 349, 351, 352], "convent": [0, 352], "here": [0, 192, 229, 286, 287, 331, 341, 344, 347, 348, 352, 355], "familiar": [0, 342], "we": [0, 152, 169, 171, 192, 206, 208, 229, 318, 327, 329, 341, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356], "recommend": [0, 340, 356], "page": [0, 344, 345, 347, 348, 352], "read": [0, 7, 10, 153, 180, 217, 247, 248, 340, 341, 348, 356], "through": [0, 17, 22, 28, 33, 40, 45, 52, 57, 129, 165, 179, 216, 262, 340, 348, 349, 351, 355], "our": [0, 345, 348, 349, 351, 352, 353, 354, 355, 356], "feet": 0, "wet": 0, "length": [0, 65, 70, 75, 80, 85, 90, 95, 100, 151, 240, 260, 273, 274, 347], "10": [0, 348, 351, 352, 355, 356], "minut": 0, "basic": [0, 312, 341, 345, 348, 349], "understand": [0, 348, 349], "its": [0, 176, 180, 213, 217, 265, 318, 341, 343, 348, 349, 351, 352, 357], "capabl": [0, 340], "suitabl": 0, "time": [0, 151, 181, 182, 183, 218, 219, 220, 281, 327, 333, 343, 344, 347, 349], "user": [0, 147, 200, 237, 240, 340, 341, 342, 344, 345, 348, 351, 352, 355, 356], "20": [0, 329, 341, 348, 349, 355], "know": [0, 349, 351, 352, 355], "actual": [0, 25, 341, 348, 349, 351, 352, 355], "scienc": [0, 341, 355], "refer": [0, 152, 171, 208, 278, 285, 290, 300, 329, 345, 347, 351, 355], "entir": [0, 327, 347, 348, 349, 351], "rams": [0, 1, 9, 10, 345, 352, 355], "an": [0, 10, 25, 65, 70, 75, 80, 85, 90, 95, 100, 101, 102, 108, 117, 132, 141, 147, 151, 152, 169, 171, 185, 193, 199, 201, 206, 208, 222, 230, 236, 238, 240, 247, 255, 256, 257, 259, 260, 269, 271, 281, 288, 289, 292, 293, 294, 297, 307, 318, 327, 329, 340, 341, 343, 344, 347, 348, 349, 351, 352, 356, 357], "exampl": [0, 169, 176, 199, 200, 201, 206, 213, 236, 237, 238, 341, 345, 347, 348, 349, 351, 352, 356, 357], "40": [0, 341, 348, 351], "most": [0, 341, 343, 344, 347, 348, 349, 351, 352, 355], "out": [0, 181, 182, 183, 218, 219, 220, 329, 333, 340, 348, 349, 351, 356], "cgp": 0, "feel": [0, 353, 354], "like": [0, 62, 67, 72, 77, 82, 87, 92, 97, 158, 163, 240, 242, 243, 251, 269, 318, 319, 320, 321, 340, 345, 348, 349, 352, 355], "rope": [0, 352], "give": [0, 151, 341, 347, 348, 353, 354], "some": [0, 158, 195, 232, 240, 296, 340, 341, 343, 344, 345, 346, 348, 349, 351, 352, 355, 357], "deeper": [0, 349], "insight": 0, "function": [0, 1, 11, 22, 23, 33, 34, 45, 46, 57, 58, 60, 131, 146, 169, 206, 239, 240, 262, 263, 269, 306, 312, 318, 319, 320, 321, 325, 327, 329, 340, 341, 343, 344, 347, 348, 351, 352, 355, 356, 357], "teach": 0, "advanc": [0, 342, 351], "resourc": 0, "altern": [0, 345, 356], "method": [0, 12, 15, 16, 24, 27, 35, 38, 39, 47, 50, 51, 61, 66, 71, 76, 81, 86, 91, 96, 104, 108, 111, 113, 117, 120, 122, 128, 129, 132, 135, 137, 141, 147, 152, 165, 171, 176, 180, 198, 202, 208, 213, 217, 235, 240, 262, 263, 327, 329, 341, 343, 344, 347, 348, 349, 351, 352, 355, 356], "save": [0, 59, 270, 348, 351, 352, 355], "access": [0, 172, 209, 345, 349], "collect": [0, 342, 345], "funki": 0, "mondian": [0, 345], "graviti": [0, 17, 28, 40, 52, 165, 166, 169, 176, 177, 178, 179, 188, 199, 200, 201, 202, 203, 206, 213, 214, 215, 216, 225, 236, 237, 238, 327, 340, 341, 345, 349, 351, 352], "readi": [0, 341, 346, 348, 349, 352], "jump": 0, "down": [0, 165, 349], "rabbit": 0, "hole": [0, 242], "how": [0, 7, 342, 345, 347, 348, 349, 352, 355, 356], "theori": [0, 17, 28, 40, 52, 103, 122, 165, 178, 188, 215, 225, 327, 345, 347, 348, 349, 355], "built": [0, 267, 345, 347, 348, 351, 352, 355], "alreadi": [0, 6, 7, 9, 109, 111, 118, 120, 125, 133, 135, 142, 144, 255, 342, 343, 347, 348, 349, 351, 356], "somewhat": [0, 342, 355], "someth": [0, 347, 348, 349], "littl": [0, 348, 353, 354, 355], "depth": [0, 348], "concret": [0, 348], "core": [0, 262, 265, 273, 274, 275, 276, 278, 282, 283, 284, 285, 303, 344, 347, 348, 352, 357], "aspect": [0, 345], "best": [0, 275, 276, 343, 345, 348, 349, 351, 352], "see": [0, 177, 178, 188, 192, 214, 215, 225, 229, 329, 340, 341, 342, 344, 345, 347, 348, 349, 351, 352, 355, 356, 357], "discuss": [0, 329, 340, 347, 348, 349, 351], "help": [0, 341, 355], "mathemat": [0, 348, 349], "background": [0, 340, 349], "overview": 0, "all": [0, 7, 22, 33, 45, 57, 59, 152, 161, 171, 185, 192, 200, 208, 222, 229, 237, 243, 244, 248, 251, 256, 260, 263, 340, 341, 344, 345, 347, 348, 349, 351, 352, 355, 356, 357], "need": [0, 6, 7, 295, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 355, 356, 357], "howev": [0, 272, 327, 340, 343, 344, 347, 349, 352, 355], "other": [0, 60, 262, 340, 346, 348, 352, 355], "check": [0, 164, 169, 185, 193, 206, 222, 230, 255, 329, 341, 348, 349, 351, 352, 355], "equilibria": 0, "dimension": [0, 327, 343], "3d": [0, 60, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 152, 171, 208, 356], "one": [0, 28, 40, 122, 151, 159, 181, 182, 183, 190, 218, 219, 220, 227, 243, 263, 265, 271, 288, 289, 294, 295, 327, 329, 333, 340, 341, 343, 344, 346, 347, 348, 349, 351, 352, 355, 356, 357], "step": [0, 6, 7, 340, 348, 349], "individu": [0, 164, 319, 320, 321, 348, 351], "handi": 0, "tool": [0, 326, 345, 349], "document": [0, 177, 178, 188, 214, 215, 225, 341, 345, 347, 348, 352, 353, 354, 355], "popular": 0, "problem": [0, 334, 351, 355, 356], "given": [0, 7, 147, 158, 163, 242, 243, 266, 281, 286, 287, 288, 289, 294, 297, 343, 344, 347, 348, 349, 356, 357], "throughout": [0, 344, 347], "text": [0, 192, 199, 229, 236, 329, 344, 345, 348, 352, 355], "fulli": [0, 108, 117, 122, 132, 141, 164, 340, 341, 348, 352], "work": [0, 275, 276, 327, 340, 343, 349, 351, 353, 354, 355], "finish": [0, 17, 28, 40, 52, 260, 348], "system": [0, 17, 28, 40, 52, 108, 117, 132, 141, 151, 181, 182, 183, 192, 218, 219, 220, 229, 251, 260, 326, 327, 329, 333, 342, 344, 345, 348, 349, 352, 355, 356, 357], "design": [0, 345, 355, 357], "appropri": [0, 193, 230, 255, 269], "scale": [0, 169, 206, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 325, 357], "rm": [0, 356, 357], "kpc": [0, 62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 151, 152, 163, 171, 178, 181, 182, 183, 188, 190, 208, 215, 218, 219, 220, 225, 227, 242, 243, 251, 256, 259, 265, 268, 269, 271, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 329, 333, 341, 348, 351, 352, 355, 356, 357], "myr": [0, 151, 242, 243, 348, 352, 356], "mass": [0, 107, 116, 131, 132, 140, 151, 152, 159, 178, 188, 215, 225, 242, 262, 273, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 298, 299, 300, 302, 307, 318, 319, 320, 321, 341, 344, 347, 348, 351, 352, 355, 356], "m_": [0, 131, 318, 347, 351, 352, 356, 357], "odot": [0, 351, 352, 356, 357], "densiti": [0, 132, 152, 158, 159, 172, 177, 178, 179, 182, 188, 192, 195, 209, 214, 215, 216, 219, 225, 229, 232, 240, 262, 273, 274, 275, 278, 281, 282, 283, 286, 288, 289, 290, 292, 293, 294, 295, 296, 298, 301, 302, 303, 307, 320, 329, 341, 348, 349, 351, 352, 355, 356], "pressur": [0, 152, 172, 194, 209, 231, 341, 347, 348, 351, 352, 355], "specif": [0, 1, 240, 270, 342, 345, 347, 351, 352, 355, 356], "energi": [0, 158, 159, 182, 219, 327, 329, 348, 349, 351, 356], "gravit": [0, 103, 108, 111, 117, 120, 132, 135, 141, 151, 181, 182, 183, 192, 218, 219, 220, 229, 242, 333, 341, 344, 345, 347, 348, 349, 351, 352, 355, 356], "potenti": [0, 6, 7, 65, 70, 75, 80, 85, 90, 95, 100, 108, 109, 117, 118, 125, 132, 133, 141, 142, 174, 181, 182, 183, 191, 211, 218, 219, 220, 228, 242, 327, 329, 331, 333, 340, 341, 344, 347, 348, 349, 351, 352, 355, 356], "straighforwardli": 0, "deriv": [0, 167, 204, 329, 343, 344, 347, 349, 352, 356, 357], "arrai": [0, 62, 67, 72, 77, 82, 87, 92, 97, 101, 144, 147, 163, 169, 171, 185, 189, 193, 206, 208, 222, 226, 230, 240, 242, 243, 251, 255, 269, 318, 319, 320, 321, 323, 329, 332, 348, 352, 356], "scalar": [0, 252, 254, 255, 344, 356], "unless": [0, 347, 352], "otherwis": [0, 109, 118, 125, 133, 142, 185, 194, 195, 222, 231, 232, 356], "specifi": [0, 28, 40, 102, 171, 181, 182, 183, 200, 208, 218, 219, 220, 237, 240, 266, 333, 347, 348, 351, 355, 356], "docstr": 0, "what": [0, 344, 347, 348, 349, 352, 355], "mean": [0, 152, 171, 181, 182, 183, 208, 218, 219, 220, 243, 273, 307, 333, 341, 347, 349, 352, 355], "practic": [0, 347, 351], "suppli": [0, 181, 182, 183, 218, 219, 220, 288, 289, 294, 327, 333, 347, 348, 352, 356], "abov": [0, 327, 329, 341, 343, 347, 349, 351, 352, 356], "type": [0, 17, 22, 28, 33, 40, 45, 52, 57, 59, 63, 68, 73, 78, 83, 88, 93, 98, 101, 107, 108, 111, 112, 116, 117, 120, 121, 127, 131, 132, 135, 136, 140, 141, 144, 145, 147, 151, 158, 169, 176, 177, 179, 181, 183, 188, 190, 192, 200, 206, 213, 214, 216, 218, 220, 225, 227, 229, 237, 240, 243, 244, 248, 251, 253, 255, 256, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 308, 318, 319, 320, 321, 327, 328, 329, 333, 336, 340, 343, 344, 345, 347, 348, 349, 352], "g": [0, 131, 132, 277, 289, 327, 343, 344, 347, 348, 349, 355], "posit": [0, 159, 163, 181, 182, 183, 218, 219, 220, 242, 243, 318, 333, 343, 344, 348, 349, 351, 352], "attach": [0, 106, 110, 115, 119, 122, 124, 126, 129, 130, 134, 139, 143, 144, 262, 348, 351], "convert": [0, 101, 192, 199, 201, 229, 236, 238, 255, 307, 345, 347, 348, 352], "intern": [0, 348], "befor": [0, 199, 201, 236, 238, 340, 349, 352], "perform": [0, 251, 340, 346, 356], "ani": [0, 131, 151, 176, 192, 200, 213, 229, 237, 254, 265, 329, 340, 342, 347, 348, 349, 351, 352, 355, 356, 357], "calcul": [0, 109, 118, 125, 133, 142, 151, 163, 297, 329, 341, 348, 356], "return": [0, 17, 22, 28, 33, 40, 45, 52, 57, 59, 101, 102, 107, 108, 109, 111, 112, 116, 117, 118, 120, 121, 125, 127, 131, 132, 133, 135, 136, 140, 141, 142, 144, 145, 151, 169, 176, 177, 179, 181, 183, 185, 188, 190, 192, 200, 206, 213, 214, 216, 218, 220, 222, 225, 227, 229, 237, 244, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 308, 318, 319, 320, 321, 325, 329, 333, 347, 348, 349, 351, 355, 356], "output": [0, 151, 158, 200, 237, 355], "usual": [0, 195, 232, 348, 355], "sometim": 0, "cm": [0, 277], "temperatur": [0, 152, 172, 179, 192, 209, 216, 229, 262, 273, 274, 275, 276, 295, 304, 341, 348, 351, 352, 355], "kev": [0, 179, 216, 273, 274, 276, 277, 304, 341, 351, 352, 355], "entropi": [0, 177, 192, 214, 229, 262, 277, 295, 345, 348, 352], "2": [0, 102, 131, 132, 163, 194, 195, 231, 232, 271, 277, 286, 287, 327, 329, 340, 341, 344, 347, 348, 349, 351, 352, 355, 356, 357], "util": [1, 169, 199, 200, 201, 206, 236, 237, 238, 344, 348, 351, 352, 355], "implement": [1, 11, 103, 104, 113, 122, 128, 131, 137, 265, 343, 345, 347, 348, 349, 351, 355], "statu": [1, 185, 222], "inform": [1, 153, 160, 345, 347, 348, 349, 356, 357], "full": [1, 108, 117, 132, 141, 343, 348], "ic": [2, 3, 4, 5, 6, 7, 8, 9, 348, 351, 352, 356], "boxsiz": [2, 240], "nx": 2, "ic_fil": 2, "overwrit": [2, 10, 65, 70, 75, 80, 85, 90, 95, 100, 160, 199, 200, 201, 236, 237, 238, 257, 258, 259, 348, 351, 352, 355, 356], "fals": [2, 6, 7, 9, 10, 61, 62, 65, 66, 67, 70, 75, 80, 81, 82, 85, 90, 95, 96, 97, 100, 108, 109, 111, 117, 118, 120, 125, 132, 133, 135, 141, 142, 144, 159, 160, 181, 182, 183, 199, 200, 201, 218, 219, 220, 236, 237, 238, 242, 255, 257, 258, 259, 329, 333, 341, 348, 352, 355], "regenerate_particl": [2, 6, 7, 9, 159], "prng": [2, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 159, 181, 182, 183, 184, 218, 219, 220, 221, 318, 324, 333], "none": [2, 17, 22, 33, 45, 52, 57, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 107, 108, 111, 112, 116, 117, 120, 121, 127, 131, 132, 135, 136, 140, 141, 145, 147, 148, 152, 158, 159, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 192, 200, 201, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 229, 237, 238, 242, 243, 244, 247, 248, 249, 251, 255, 256, 261, 263, 264, 271, 272, 288, 289, 294, 303, 317, 318, 319, 327, 328, 333, 347, 348, 349, 351], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 24, 25, 28, 33, 35, 36, 38, 47, 48, 50, 52, 59, 61, 62, 63, 65, 66, 67, 71, 72, 76, 81, 82, 86, 87, 91, 96, 97, 101, 102, 104, 105, 107, 108, 111, 113, 114, 116, 117, 120, 122, 123, 127, 128, 129, 131, 132, 135, 137, 138, 140, 141, 144, 147, 148, 151, 152, 153, 158, 159, 160, 163, 165, 166, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 333, 344, 345, 356], "paramet": [4, 5, 6, 7, 8, 9, 10, 17, 25, 28, 40, 52, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 108, 111, 116, 117, 120, 122, 129, 131, 132, 135, 140, 141, 144, 147, 151, 152, 158, 160, 163, 165, 171, 176, 177, 178, 179, 180, 181, 182, 183, 188, 190, 194, 195, 199, 200, 201, 208, 213, 214, 215, 216, 217, 218, 219, 220, 225, 227, 231, 232, 236, 237, 238, 240, 242, 243, 244, 247, 248, 251, 255, 256, 257, 259, 260, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 318, 325, 327, 329, 333, 341, 347, 348, 349, 351, 352, 355, 356, 357], "athena": [4, 343, 345], "from": [4, 5, 6, 7, 8, 9, 12, 14, 16, 18, 20, 26, 27, 29, 31, 35, 37, 39, 41, 43, 47, 49, 51, 53, 55, 101, 107, 108, 116, 117, 122, 132, 140, 141, 151, 152, 153, 158, 159, 163, 164, 167, 169, 176, 177, 179, 180, 190, 194, 199, 200, 201, 204, 206, 213, 214, 216, 217, 227, 231, 236, 237, 238, 240, 244, 247, 248, 251, 260, 266, 270, 273, 274, 288, 289, 294, 297, 303, 304, 308, 318, 327, 329, 340, 341, 344, 345, 348, 349, 351, 352, 355, 357], "enzo": [5, 345], "use_particl": 6, "true": [6, 7, 9, 10, 108, 109, 111, 117, 118, 120, 125, 132, 133, 135, 141, 142, 144, 160, 181, 182, 183, 185, 194, 195, 199, 200, 201, 218, 219, 220, 222, 231, 232, 236, 237, 238, 242, 255, 317, 329, 333, 341, 347, 348, 351, 352, 355, 356], "flash": [6, 10, 343, 345], "par": 6, "line": [6, 7, 340, 349, 355], "galaxyclustermerg": [6, 340], "thei": [6, 7, 63, 68, 73, 78, 83, 88, 93, 98, 243, 260, 341, 347, 348, 349, 351, 352, 355, 356], "gamer": [6, 7, 10, 343, 345], "boolean": [6, 7, 9, 10, 65, 70, 75, 80, 85, 90, 95, 100, 160, 181, 182, 183, 194, 195, 199, 201, 218, 219, 220, 231, 232, 236, 238, 242, 255, 257, 259, 333, 356], "default": [6, 7, 9, 10, 17, 52, 59, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 101, 128, 151, 152, 160, 163, 171, 172, 181, 182, 183, 190, 194, 195, 199, 201, 208, 209, 218, 219, 220, 227, 231, 232, 236, 238, 242, 243, 251, 255, 257, 259, 271, 273, 288, 289, 294, 303, 308, 327, 333, 341, 343, 348, 351, 352, 355, 356], "being": [6, 9, 107, 116, 140, 152, 165, 171, 208, 341, 344, 347, 348, 351, 352, 356], "flag": [6, 7, 9], "use_trac": 7, "input_testprob": 7, "clustermerg": [7, 340], "new": [7, 63, 68, 73, 78, 83, 88, 93, 98, 144, 192, 229, 243, 263, 325, 343, 345, 347, 348, 355], "cg": [7, 199, 200, 201, 236, 237, 238, 348, 349, 351, 352, 355, 356, 357], "unit": [7, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 101, 179, 194, 195, 199, 201, 216, 231, 232, 236, 238, 242, 243, 251, 255, 259, 269, 308, 315, 316, 341, 343, 352, 355, 356, 357], "present": [7, 348, 351], "about": [7, 102, 325, 347, 348, 352, 355], "should": [7, 108, 117, 122, 129, 132, 141, 147, 176, 200, 213, 237, 240, 243, 260, 268, 270, 272, 294, 340, 341, 347, 348, 349, 351, 352, 355, 356], "name": [7, 10, 17, 23, 28, 34, 40, 46, 52, 58, 65, 70, 75, 80, 85, 90, 95, 100, 147, 149, 158, 160, 180, 193, 199, 200, 201, 217, 230, 236, 237, 238, 240, 247, 248, 255, 257, 259, 263, 264, 266, 341, 347, 348, 351, 355, 356], "interpret": 7, "tracer": 7, "add": [7, 62, 63, 67, 68, 72, 73, 77, 78, 82, 83, 87, 88, 92, 93, 97, 98, 242, 243, 255, 262, 265, 340, 347, 348], "gizmo": [8, 248, 345, 356], "func": 8, "output_filenam": [10, 199, 200, 201, 236, 237, 238, 257, 258], "ptype": [10, 63, 68, 73, 78, 83, 88, 93, 98, 240, 243, 244, 247, 248, 249, 251, 255, 256, 327, 328, 343, 348, 349, 356], "ptype_num": 10, "in_cg": [10, 199, 200, 201, 236, 237, 238], "hdf5": [10, 65, 70, 75, 80, 85, 90, 95, 100, 158, 180, 201, 217, 238, 247, 257, 259, 340, 347, 356], "write": [10, 65, 70, 75, 80, 85, 90, 95, 100, 160, 199, 200, 201, 236, 237, 238, 257, 259, 329, 348, 353, 354, 355, 356], "clusterparticl": [10, 63, 68, 73, 78, 83, 88, 93, 98, 181, 183, 218, 220, 260, 333, 343], "instanc": [10, 12, 13, 23, 25, 28, 34, 35, 36, 40, 46, 47, 48, 58, 106, 108, 110, 112, 115, 117, 119, 121, 122, 124, 126, 127, 129, 130, 132, 134, 135, 136, 139, 141, 143, 144, 145, 180, 185, 192, 217, 222, 229, 260, 263, 270, 271, 272, 340, 341, 347, 348, 349, 351, 352, 356], "written": [10, 65, 70, 75, 80, 85, 90, 95, 100, 341, 343, 344, 347, 348, 353, 354, 355, 356], "string": [10, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 147, 158, 160, 180, 190, 199, 201, 217, 227, 236, 238, 243, 247, 248, 251, 255, 256, 257, 259, 327, 341], "exist": [10, 65, 70, 75, 80, 85, 90, 95, 100, 108, 111, 117, 120, 132, 135, 141, 199, 200, 201, 236, 237, 238, 255, 257, 259, 265, 343, 356], "class": [11, 12, 24, 35, 47, 60, 61, 66, 71, 76, 81, 86, 91, 96, 103, 104, 108, 111, 113, 117, 120, 122, 128, 129, 132, 135, 137, 141, 146, 147, 164, 165, 176, 202, 213, 239, 240, 262, 263, 326, 327, 341, 344, 346, 347, 348, 351, 352, 355, 357], "except": [11, 151, 340, 357], "clustercollect": [12, 20, 35, 43, 47, 55, 59, 341], "repres": [12, 35, 47, 273, 274, 318, 340, 349, 352, 355, 357], "ascasibar": [12, 273, 274, 275, 276, 341, 345], "diego": [12, 273, 274, 341], "2008mnra": [12, 273, 274, 341], "383": [12, 273, 274, 341], "369a": [12, 273, 274, 341], "attribut": [12, 24, 35, 47, 61, 66, 71, 76, 81, 86, 91, 96, 104, 106, 107, 108, 113, 115, 116, 117, 122, 124, 128, 130, 131, 132, 137, 139, 140, 141, 147, 165, 167, 176, 177, 178, 180, 188, 200, 202, 204, 213, 214, 215, 217, 225, 237, 240, 263, 327, 340, 341, 347, 348, 349, 351], "data": [14, 16, 18, 25, 26, 27, 29, 37, 39, 41, 49, 51, 53, 131, 147, 151, 245, 248, 260, 340, 341, 342, 347, 349, 351, 352], "static": [15, 38, 50, 129, 349], "__init__": [15, 38, 50, 348, 349], "load": [16, 17, 27, 28, 39, 40, 51, 52, 270, 341, 347, 348, 349, 351, 352], "model_nam": [17, 28, 40, 52], "r_min": [17, 28, 40, 52, 180, 190, 200, 201, 217, 227, 237, 238, 351], "r_max": [17, 28, 40, 52, 66, 67, 71, 72, 76, 77, 81, 82, 147, 148, 180, 181, 182, 183, 184, 190, 196, 200, 201, 217, 218, 219, 220, 221, 227, 233, 237, 238, 251, 318, 333, 348, 351, 355, 356], "num_point": [17, 28, 40, 52, 177, 178, 179, 188, 214, 215, 216, 225, 271, 348, 355], "1000": [17, 28, 40, 52, 178, 179, 188, 215, 216, 225, 271, 329, 348, 349, 351, 352, 356, 357], "newtonian": [17, 28, 40, 52, 128, 165, 166, 169, 177, 178, 179, 188, 199, 200, 201, 202, 203, 206, 214, 215, 216, 225, 236, 237, 238, 327, 341, 344, 345, 348, 349, 351, 352, 355], "kwarg": [17, 22, 28, 33, 40, 45, 52, 57, 104, 105, 113, 114, 122, 123, 128, 129, 137, 138, 152, 165, 166, 167, 171, 176, 177, 178, 179, 188, 190, 202, 203, 204, 208, 213, 214, 215, 216, 225, 227, 269, 271, 317, 348, 349, 351, 355], "str": [17, 25, 28, 40, 52, 101, 147, 165, 176, 177, 178, 179, 188, 200, 213, 214, 215, 216, 225, 237, 240, 270, 272, 327], "float": [17, 22, 28, 33, 40, 45, 52, 57, 102, 147, 151, 152, 163, 171, 177, 178, 179, 180, 181, 182, 183, 188, 190, 194, 195, 200, 208, 214, 215, 216, 217, 218, 219, 220, 225, 227, 231, 232, 237, 240, 242, 251, 256, 259, 265, 268, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 318, 325, 329, 333], "minimum": [17, 22, 28, 33, 40, 45, 52, 57, 152, 171, 177, 178, 179, 180, 188, 190, 200, 208, 214, 215, 216, 217, 225, 227, 237, 242, 271, 304, 356], "radiu": [17, 22, 28, 33, 40, 45, 52, 57, 131, 132, 147, 157, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 190, 200, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 237, 251, 265, 268, 271, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 318, 325, 329, 333, 348, 351, 352, 355, 357], "rmin": [17, 22, 33, 45, 52, 57, 177, 178, 179, 188, 190, 214, 215, 216, 225, 227, 271, 347, 348, 355], "maximum": [17, 22, 28, 33, 40, 45, 52, 57, 151, 177, 178, 179, 181, 182, 183, 188, 190, 200, 214, 215, 216, 218, 219, 220, 225, 227, 237, 251, 271, 318, 333, 348, 352, 356], "r_det": [17, 52, 329, 351], "int": [17, 22, 28, 33, 40, 45, 52, 57, 102, 147, 151, 152, 165, 171, 177, 179, 208, 214, 216, 240, 268, 273, 318, 327, 329, 349, 356], "point": [17, 22, 25, 28, 33, 40, 45, 52, 57, 151, 177, 178, 179, 188, 214, 215, 216, 225, 271, 342, 344, 347, 348, 349, 351], "addit": [17, 22, 28, 33, 40, 45, 52, 57, 62, 67, 72, 77, 82, 87, 92, 97, 106, 107, 108, 115, 116, 117, 122, 124, 129, 130, 131, 132, 139, 140, 141, 147, 165, 167, 176, 177, 178, 179, 188, 204, 213, 214, 215, 216, 225, 262, 341, 344, 347, 348, 352, 356], "pass": [17, 22, 28, 33, 40, 45, 52, 57, 108, 111, 117, 120, 122, 129, 131, 132, 135, 141, 151, 165, 176, 177, 178, 179, 188, 213, 214, 215, 216, 225, 263, 341, 348], "clustermodel": [17, 28, 40, 52, 109, 112, 118, 121, 122, 125, 127, 129, 133, 135, 136, 142, 145, 164, 213, 214, 215, 216, 217, 222, 225, 228, 229, 260, 327, 341, 349, 351, 352, 355], "dictionari": [20, 23, 31, 34, 43, 46, 55, 58, 161, 165, 179, 200, 216, 237, 341, 348, 351], "underli": [20, 21, 25, 31, 32, 43, 44, 55, 56, 260, 345, 347, 348, 349, 356], "each": [20, 31, 43, 55, 62, 67, 72, 77, 82, 87, 92, 97, 132, 147, 152, 181, 182, 183, 189, 218, 219, 220, 226, 240, 260, 262, 318, 319, 320, 321, 333, 340, 341, 343, 345, 347, 348, 349, 351, 352, 355, 356], "0": [22, 33, 45, 57, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 147, 148, 151, 152, 163, 169, 171, 192, 195, 206, 208, 229, 232, 242, 251, 265, 273, 279, 288, 289, 294, 308, 327, 329, 331, 341, 343, 344, 347, 348, 349, 351, 352, 355, 356, 357], "1": [22, 33, 45, 57, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 102, 132, 151, 181, 182, 183, 184, 218, 219, 220, 221, 265, 268, 278, 290, 305, 327, 329, 333, 341, 344, 347, 348, 349, 351, 352, 355, 356, 357], "rmax": [22, 33, 45, 57, 117, 177, 178, 179, 188, 190, 214, 215, 216, 225, 227, 271, 319, 347, 348, 351, 355], "5000": [22, 33, 45, 57, 348, 349, 351, 355, 356], "npoint": [22, 33, 45, 57], "plot": [22, 33, 45, 57, 348, 349, 351, 352, 355, 356], "galleri": [22, 33, 45, 57, 342], "param": [22, 33, 45, 57, 101, 319, 320, 321, 341], "includ": [22, 33, 45, 57, 131, 147, 155, 165, 172, 176, 199, 209, 213, 236, 240, 254, 318, 340, 341, 343, 344, 345, 348, 351], "kei": [22, 23, 33, 34, 45, 46, 57, 58, 131, 147, 165, 176, 213, 240, 341, 348, 349], "word": [22, 33, 45, 57], "argument": [22, 33, 45, 57, 129, 242, 341, 343, 348, 349, 355], "dict": [22, 33, 45, 57, 107, 108, 116, 117, 129, 131, 132, 140, 141, 147, 165, 176, 177, 178, 188, 213, 214, 215, 225, 240, 348], "radial_profil": [23, 34, 46, 58, 347, 348, 352, 357], "radialprofil": [23, 34, 46, 58, 178, 188, 215, 225, 262, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 347, 352, 357], "correspond": [23, 34, 46, 58, 268, 269, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 334, 341, 343, 344, 347, 349, 351, 356], "relev": [23, 34, 46, 58, 144, 344, 348], "path": [24, 25, 147, 199, 200, 201, 236, 237, 238, 340, 341, 348], "represent": [24, 28, 40, 165, 348], "contain": [25, 147, 161, 164, 169, 176, 206, 213, 263, 265, 340, 341, 342, 344, 345, 347, 348, 351, 352, 355, 356, 357], "rais": 25, "yamlerror": 25, "occur": [25, 144, 151, 185, 222, 344, 348, 351], "error": [25, 329, 351], "filenotfounderror": 25, "fail": [25, 327, 329, 348], "real": [25, 341, 351], "collectionserror": 25, "miss": [25, 341, 351, 352], "part": [25, 158, 343, 345, 348, 349, 351, 352, 355, 356], "sampl": [28, 40, 165, 177, 179, 181, 182, 183, 214, 216, 218, 219, 220, 260, 318, 333, 335, 341, 347, 348, 349, 357], "A": [35, 47, 151, 178, 181, 182, 183, 188, 215, 218, 219, 220, 225, 243, 271, 278, 280, 282, 283, 284, 286, 287, 290, 291, 295, 298, 299, 301, 302, 303, 304, 305, 308, 333, 341, 343, 344, 348, 352, 356, 357], "j": [35, 283, 284, 292, 293, 297, 298, 299, 329, 341, 344, 349, 357], "r": [35, 131, 132, 171, 175, 208, 212, 265, 268, 269, 278, 295, 318, 325, 327, 329, 331, 341, 343, 344, 347, 348, 349, 351, 352, 355, 356, 357], "sanderson": [35, 341], "t": [35, 151, 273, 274, 277, 341, 347, 348, 349, 352, 355, 357], "ponman": [35, 341], "2010mnra": [35, 344], "402": 35, "65": 35, "vikhlinin10": 38, "vikhlinin": [47, 303, 304, 308, 341, 345, 351], "et": [47, 286, 287, 303, 304, 308, 341, 345, 351], "al": [47, 286, 287, 303, 304, 308, 341, 345, 348, 351], "2006apj": [47, 341, 351], "640": [47, 303, 304, 341, 351, 357], "691v": [47, 341, 351], "list": [59, 147, 151, 156, 200, 237, 240, 243, 244, 248, 251, 256, 260, 341, 345, 347, 348, 352], "task": [60, 262, 342, 345, 346, 349], "left_edg": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 152, 171, 208, 355], "right_edg": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "ddim": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "pad": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "vector_potenti": [61, 62, 66, 67, 72, 77, 82, 87, 92, 97], "divergence_clean": [61, 62, 66, 67, 72, 77, 81, 82, 87, 92, 96, 97], "lower": [62, 67, 72, 77, 82, 87, 92, 97], "edg": [62, 67, 72, 77, 82, 87, 92, 97, 152, 171, 208, 344], "box": [62, 67, 72, 77, 82, 87, 92, 97, 152, 171, 208, 259, 344, 356], "upper": [62, 67, 72, 77, 82, 87, 92, 97], "grid": [62, 67, 72, 77, 82, 87, 92, 97, 152, 171, 208, 313, 340, 343, 352], "ax": [62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 190, 227, 271, 348, 351, 352, 355, 356], "amount": [62, 67, 72, 77, 82, 87, 92, 97, 356], "boundari": [62, 67, 72, 77, 82, 87, 92, 97], "cluster_particl": [63, 68, 73, 78, 83, 88, 93, 98], "map": [63, 68, 73, 78, 83, 88, 93, 98, 356], "tri": [63, 68, 73, 78, 83, 88, 93, 98, 351], "linear": [63, 68, 73, 78, 83, 88, 93, 98, 343, 344, 351, 352, 355], "ad": [63, 68, 73, 78, 83, 88, 93, 98, 152, 159, 243, 255, 265, 345, 348, 352, 357], "almost": [63, 68, 73, 78, 83, 88, 93, 98, 108, 117, 132, 141, 351], "alwai": [63, 68, 73, 78, 83, 88, 93, 98, 108, 117, 132, 141, 348, 352, 353, 354, 355], "case": [63, 68, 73, 78, 83, 88, 93, 98, 108, 117, 132, 141, 158, 190, 200, 227, 237, 242, 306, 327, 331, 342, 344, 345, 347, 348, 349, 351, 352, 356], "impli": [63, 68, 73, 78, 83, 88, 93, 98, 344, 347], "remain": [63, 68, 73, 78, 83, 88, 93, 98, 327, 344], "galact": [63, 68, 73, 78, 83, 88, 93, 98, 329], "filenam": [65, 70, 75, 80, 85, 90, 95, 100, 153, 158, 160, 180, 200, 217, 237, 247, 248, 249, 270, 272], "length_unit": [65, 70, 75, 80, 85, 90, 95, 100], "field_unit": [65, 70, 75, 80, 85, 90, 95, 100], "coordin": [65, 70, 75, 80, 85, 90, 95, 100, 152, 171, 208, 243, 251, 327, 349], "cell": [65, 70, 75, 80, 85, 90, 95, 100, 152, 158, 171, 208, 340, 343, 349, 355], "along": [65, 70, 75, 80, 85, 90, 95, 100, 163, 285, 300, 340], "differ": [65, 70, 75, 80, 85, 90, 95, 100, 122, 329, 341, 342, 345, 347, 348, 352, 355, 356], "affect": [65, 70, 75, 80, 85, 90, 95, 100], "l_min": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "l_max": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "alpha": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 169, 206, 265, 273, 274, 277, 279, 295, 303, 305, 341, 344, 347, 351, 357], "6666666666666665": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "g_rm": [66, 67], "ctr1": [66, 67, 71, 72, 76, 77, 81, 82], "ctr2": [66, 67, 71, 72, 76, 77, 81, 82], "ctr3": [66, 67, 71, 72, 76, 77, 81, 82], "r1": [66, 67], "r2": [66, 67], "r3": [66, 67], "g1": [66, 67], "g2": [66, 67], "g3": [66, 67], "profile1": [71, 72, 76, 77, 81, 82, 348], "profile2": [71, 72, 76, 77, 81, 82, 348], "profile3": [71, 72, 76, 77, 81, 82], "b_rm": [86, 87, 91, 92], "v_rm": [96, 97], "valu": [101, 175, 176, 193, 212, 213, 230, 240, 242, 255, 269, 273, 274, 280, 288, 295, 325, 341, 343, 347, 348, 349, 355, 356, 357], "default_unit": 101, "pars": 101, "correct": [101, 192, 229, 240, 340, 341, 347, 349], "unyt_arrai": [101, 108, 117, 131, 132, 141, 147, 165, 171, 176, 177, 179, 185, 193, 208, 213, 214, 216, 222, 230, 243, 255, 260, 327, 347, 348], "tupl": [101, 152, 171, 190, 208, 227, 240, 260], "form": [101, 179, 216, 260, 268, 286, 287, 327, 344, 347, 349], "v_arrai": 101, "v_unit": 101, "convers": [101, 348, 349], "axi": 102, "gx": 102, "gy": 102, "gz": 102, "ang": 102, "rotat": 102, "vector": [102, 169, 206, 344, 347, 356], "angl": 102, "around": [102, 344, 348, 352], "compon": [102, 341, 343, 345, 347, 348, 351, 352, 356], "y": [102, 151, 163, 275, 276, 341, 344, 348, 357], "z": [102, 151, 163, 288, 289, 294, 344, 347, 348, 351, 352, 355, 357], "over": [102, 319, 320, 321, 344, 347, 349, 351, 352, 356], "aqual": [104, 165, 345, 349], "aquadrat": [104, 344], "lagrangian": [104, 344, 349], "formul": [104, 113, 344], "mond": [104, 113, 340, 344, 349, 355], "newtoniangrav": [104, 113, 122, 137, 344, 348], "qumondgrav": [104, 113, 122, 128, 344], "emondgrav": [104, 122, 128, 137], "classmethod": [107, 108, 116, 117, 131, 132, 140, 141, 153, 176, 177, 178, 179, 180, 188, 213, 214, 215, 216, 217, 225, 246, 247, 248, 249, 266, 269, 270, 348], "attr": [107, 108, 116, 117, 122, 129, 131, 132, 140, 141, 165, 177, 178, 179, 188, 200, 214, 215, 216, 225, 237, 348, 351, 355], "comput": [107, 108, 111, 116, 117, 120, 131, 132, 135, 140, 141, 144, 151, 177, 179, 181, 182, 183, 214, 216, 218, 219, 220, 288, 289, 294, 319, 320, 321, 329, 333, 341, 343, 347, 348, 349, 351, 352, 355, 356], "dynam": [107, 116, 131, 140, 151, 327, 329, 344, 347, 348, 351, 352, 355, 356, 357], "associ": [107, 109, 116, 118, 125, 131, 133, 140, 142, 167, 174, 204, 211, 253, 348], "result": [107, 116, 131, 140, 151, 163, 319, 320, 321, 329, 343, 344, 347, 348, 349, 351, 356], "np": [107, 116, 140, 144, 151, 169, 206, 347, 348, 351, 356], "ndarrai": [107, 116, 140, 144, 151, 347, 348], "It": [108, 117, 132, 141, 340, 341, 347, 348, 349, 351, 352, 356, 357], "ill": [108, 117, 132, 141, 347], "advis": [108, 117, 132, 141], "activ": [108, 117, 132, 141], "self": [108, 117, 132, 141, 165, 176, 179, 200, 213, 216, 237, 240, 260, 332, 344, 347, 348, 351, 352], "reserv": [108, 117, 132, 141], "when": [108, 117, 132, 141, 151, 152, 192, 229, 271, 288, 289, 294, 327, 329, 345, 348, 349, 352, 355, 357], "undesir": [108, 117, 132, 141], "construct": [108, 117, 122, 132, 141, 177, 178, 214, 215, 327, 338, 341, 345, 347, 348, 349, 351, 352, 355], "would": [108, 117, 132, 141, 200, 237, 344, 348], "match": [108, 117, 132, 141, 341, 347, 348, 351], "were": [108, 117, 132, 141, 348, 351, 357], "realiz": [108, 117, 132, 141, 164, 341, 347, 348, 352, 355], "bool": [108, 109, 111, 117, 118, 120, 125, 132, 133, 135, 141, 142, 144, 185, 200, 222, 237, 329, 348], "disabl": [108, 117, 132, 141], "determin": [109, 118, 125, 133, 142, 163, 169, 206, 240, 242, 318, 327, 341, 347, 348, 349, 352, 355, 356, 357], "had": [109, 118, 125, 133, 142], "gravitational_potenti": [109, 118, 125, 133, 142, 172, 209, 348, 352], "popul": [109, 118, 125, 133, 142, 348], "rtype": [109, 118, 125, 133, 142], "forc": [111, 120, 135, 144, 348, 349, 351], "compute_potenti": [111, 120, 135, 181, 182, 183, 218, 219, 220, 333, 344, 356], "onli": [111, 120, 135, 181, 182, 183, 200, 218, 219, 220, 237, 327, 329, 333, 344, 345, 348, 349, 351, 352, 355, 356], "better": [111, 120, 135, 348, 351], "approach": [111, 120, 135, 192, 229, 327, 329, 344, 347, 348, 349], "recomput": [111, 120, 135, 192, 229, 347, 348], "even": [111, 120, 135, 144, 327, 347, 348, 349, 356], "gravitation_potenti": [112, 121, 127, 136, 145], "extend": 113, "aqualgrav": [113, 117, 122, 128, 137, 344], "typic": [122, 181, 182, 183, 218, 219, 220, 327, 329, 333, 344, 346, 347, 349, 352, 357], "select": [122, 294, 352], "modul": [122, 151, 239, 306, 312, 345, 348, 351, 355], "store": [122, 341, 348], "probabl": [129, 318, 349, 355, 356], "serv": 129, "keyword": [129, 349, 355], "transfer": 129, "gravitational_field": [131, 172, 209, 348, 352], "mathrm": [131, 132, 318, 344, 347, 349, 351, 352, 356, 357], "dyn": [131, 344, 347, 348, 351, 355], "frac": [131, 132, 169, 206, 265, 268, 318, 327, 329, 344, 347, 349, 356, 357], "nabla": [131, 132, 169, 206, 327, 343, 344, 347, 349], "phi": [131, 132, 169, 206, 327, 329, 331, 344, 347, 349, 356], "exploit": 132, "symmetri": [132, 327, 343, 344, 349, 356], "shell": 132, "consid": [132, 327, 344, 347, 349], "rho": [132, 192, 229, 327, 329, 344, 347, 348, 349, 356], "behavior": [132, 151, 268, 341, 344, 345, 347, 348, 351, 352, 355], "within": [132, 181, 182, 183, 218, 219, 220, 259, 296, 308, 318, 329, 333, 342, 351, 356, 357], "phi_": 132, "4": [132, 273, 327, 329, 341, 344, 347, 348, 349, 351, 352, 355, 356, 357], "pi": [132, 194, 195, 231, 232, 327, 329, 344, 348, 349, 356, 357], "int_0": [132, 327, 329, 349, 356], "xi": [132, 347], "d": [132, 163, 169, 206, 265, 292, 293, 327, 329, 344, 347, 348, 349, 351, 356, 357], "At": [132, 344, 347, 348, 349], "outward": 132, "acceler": [132, 151, 344, 347, 355], "gm": 132, "dr": [132, 265, 327, 347, 349], "thu": [132, 169, 206, 327, 343, 344, 347, 349, 356, 357], "left": [132, 152, 171, 208, 265, 268, 325, 327, 344, 347, 348, 349, 355, 356, 357], "int_r": [132, 327, 349], "infti": [132, 327, 344, 347, 349, 357], "right": [132, 265, 268, 327, 344, 347, 348, 349, 352, 356, 357], "connect": 135, "compute_mass": [135, 348], "qumond": [137, 165, 345, 349, 355], "solut": [144, 344, 347, 348, 349, 351, 357], "poisson": [144, 344, 347, 348, 349], "equat": [144, 297, 327, 329, 344, 347, 348, 356], "manag": [146, 239, 341, 348], "basenam": [147, 148, 348], "num_halo": [147, 148, 348], "center": [147, 148, 163, 243, 251, 260, 261, 313, 348, 351, 356], "num_particl": [147, 148, 181, 182, 183, 184, 218, 219, 220, 221, 318, 333, 348, 351, 355, 356], "mag_fil": [147, 148, 348], "particle_fil": [147, 148, 348], "20000": [147, 148, 356], "side": [147, 152, 171, 208, 256, 344, 348], "complet": [147, 329, 341, 344, 345, 348, 352], "less": [147, 347, 355], "arbitrari": [147, 344, 348, 352], "m": [147, 275, 276, 277, 283, 284, 286, 287, 288, 292, 293, 298, 299, 301, 302, 318, 341, 344, 347, 348, 356, 357], "maxim": [147, 157, 180, 217, 347, 348, 351, 357], "permit": 147, "t_max": 151, "max_step": 151, "dx_max": 151, "n_iter": 151, "10000": [151, 347, 348, 349, 351, 352, 355, 356], "softening_length": 151, "collision_dist": 151, "100": [151, 308, 347, 348, 352, 356, 357], "orbit": 151, "idea": [151, 352, 356], "allow": [151, 157, 181, 182, 183, 218, 219, 220, 327, 333, 341, 344, 347, 348, 349, 351, 352, 356], "timestep": 151, "distanc": [151, 163, 329], "per": [151, 152], "reduc": [151, 344, 349], "loss": 151, "accuraci": [151, 356], "close": [151, 355], "anoth": [151, 263, 347, 348, 355, 357], "iter": 151, "soften": 151, "stop": [151, 329, 348], "indic": [151, 243, 255, 347, 348, 349], "collis": 151, "locat": [151, 317, 340], "shape": [151, 255, 356], "time_index": 151, "dx": [151, 325], "dy": 151, "dz": [151, 344], "ddx": 151, "ddy": 151, "ddz": 151, "return_cod": 151, "exit": 151, "cython": [151, 348, 349], "err": 151, "warn": [151, 180, 217, 341, 348, 351, 355, 356], "dure": [151, 240, 347, 348], "execut": [151, 345], "simplenamespac": 151, "domain_dimens": [152, 171, 208, 313, 348, 349, 351], "box_siz": [152, 171, 208, 240, 256, 259, 348, 356], "intens": [152, 171, 208], "suggest": [152, 171, 208, 275, 276], "conserv": [152, 171, 208, 347], "choic": [152, 171, 208, 351, 357], "domain": [152, 171, 185, 208, 222, 256, 347, 349, 351, 352], "size": [152, 171, 176, 193, 208, 213, 230, 255, 351], "order": [152, 171, 208, 331, 344, 348, 351, 352], "avoid": [152, 171, 208], "oom": [152, 171, 208], "issu": [152, 171, 180, 208, 217, 329, 342, 355], "500": [152, 171, 208, 347, 348, 355, 356], "take": [152, 171, 208, 265, 325, 341, 343, 344, 347, 348, 349, 351, 352], "appox": [152, 171, 208], "3gb": [152, 171, 208], "uniformli": [152, 171, 208, 318], "multipl": [152, 355, 356], "volum": 152, "wherea": 152, "weight": [152, 159, 349], "array_lik": [152, 171, 208], "passive_scalar": [158, 255, 261, 356], "gadget": [158, 240, 248, 259, 340], "relax": [158, 341, 357], "glass": 158, "meshrelax": 158, "arepo": [158, 248, 345, 356], "resampl": 158, "thermal": [158, 159, 194, 231, 347, 348, 351], "onto": [158, 343, 348, 351], "rel": [159, 169, 171, 206, 208, 327, 329, 331, 345, 347, 348, 349, 351, 352, 355, 356], "sph": 159, "routin": 159, "either": [159, 248, 259, 327, 341, 343, 348, 356], "combin": [159, 260, 341, 349, 356, 357], "togeth": [159, 260, 352, 356], "than": [159, 265, 355], "overlap": 159, "them": [159, 164, 348, 352, 355, 356], "total": [161, 178, 188, 215, 225, 282, 283, 284, 285, 286, 287, 290, 291, 296, 298, 299, 300, 341, 348, 352, 355, 356, 357], "b": [163, 194, 195, 231, 232, 282, 304, 305, 341, 343, 351, 357], "common": [163, 341, 347, 352], "central": [163, 195, 232, 277, 357], "separ": 163, "direct": [163, 332, 348, 349, 356], "sep_x": 163, "sqrt": [163, 327, 329, 344, 349, 356], "impact": [163, 351, 357], "center1": [163, 348], "5": [163, 268, 341, 347, 348, 349, 351, 352, 355, 356, 357], "center2": [163, 348], "hse": [164, 169, 206, 260, 261, 347, 348, 352, 355], "comprehens": [165, 344, 345, 348, 352], "accur": [165, 348], "predic": [165, 352], "fix": [165, 192, 229, 347, 351], "radii": [165, 181, 182, 183, 185, 218, 219, 220, 222, 261, 269, 318, 319, 320, 321, 329, 333, 347, 351, 355, 356, 357], "num_el": [165, 347], "element": [165, 176, 189, 213, 226, 243, 260, 335, 351], "equival": [165, 176, 213, 249, 325, 347, 349, 355], "appli": [165, 327, 347, 349], "becom": [165, 179, 216, 325, 327, 347, 348, 349, 351, 357], "incorpor": [165, 179, 216, 340], "__getitem__": [165, 240], "__contains__": 165, "alias": 165, "__setitem__": [165, 240], "index": [165, 240, 265, 273, 286, 287, 295, 345, 348, 357], "assign": [165, 343, 348, 349, 351, 352, 356], "cannot": [165, 180, 217, 351], "set_field": [165, 347, 348, 356], "deviat": [169, 206, 347, 348, 352], "chk": [169, 206, 329, 348], "recal": [169, 206, 347, 349], "gamma": [169, 206, 303, 341, 344, 347, 351, 357], "defin": [169, 206, 251, 252, 294, 318, 341, 347, 352, 355, 356], "p": [169, 206, 301, 302, 341, 347, 348, 349, 351, 355, 356, 357], "rho_g": [169, 206, 341, 347, 355], "invari": [169, 206], "report": [169, 206], "generate_model": [169, 199, 200, 201, 206, 236, 237, 238], "assert_almost_equ": [169, 206], "mdl": [169, 199, 200, 201, 206, 236, 237, 238], "amax": [169, 206, 351], "decim": [169, 206], "frame": [171, 208, 356], "must": [171, 176, 179, 192, 208, 213, 216, 229, 240, 263, 340, 341, 347, 348, 349, 356], "1x3": [171, 208], "total_dens": [172, 178, 188, 209, 215, 225, 348, 351, 352, 355], "total_mass": [172, 209, 348, 352], "gas_mass": [172, 209, 348, 352], "dark_matter_mass": [172, 209, 348, 352], "dark_matter_dens": [172, 209, 348, 352, 355, 356], "stellar_dens": [172, 177, 178, 179, 188, 209, 214, 215, 216, 225, 347, 348, 352, 355], "stellar_mass": [172, 209, 348], "find": [175, 212, 285, 288, 289, 300, 327, 345, 347, 348, 349, 352, 355, 356], "alon": [176, 213], "consist": [176, 213, 260, 272, 344, 347, 348, 349, 351, 352, 356], "definit": [176, 213, 329], "assess": [176, 213], "from_dens_and_tden": [176, 213, 347, 348, 352, 355], "from_dens_and_temp": [176, 213, 341, 347, 348, 351], "from_dens_and_entr": [176, 213, 347], "from_h5_fil": [176, 213, 347, 349], "callabl": [177, 179, 214, 216, 263, 269, 319, 320, 321, 325, 348, 352], "stellar": [177, 178, 179, 188, 214, 215, 216, 225, 327, 336, 347, 356, 357], "describ": [178, 188, 215, 225, 348, 349, 351, 356, 357], "desir": [178, 188, 215, 225, 240, 260, 318, 348, 356], "integ": [178, 181, 182, 183, 188, 215, 218, 219, 220, 225, 271, 333], "evalu": [178, 188, 215, 225], "seek": [180, 217], "both": [180, 217, 273, 274, 327, 349, 355, 356], "pkl": [180, 217], "later": [180, 217, 343, 352, 356], "found": [180, 217, 347, 348, 352, 355], "lose": [180, 200, 217, 237], "sub_sampl": [181, 182, 183, 184, 218, 219, 220, 221, 333], "sub": [181, 182, 183, 218, 219, 220, 333], "uniqu": [181, 182, 183, 218, 219, 220, 333, 356], "repeat": [181, 182, 183, 218, 219, 220, 333], "fill": [181, 182, 183, 218, 219, 220, 333], "randomst": [181, 182, 183, 218, 219, 220, 318, 333], "pseudo": [181, 182, 183, 218, 219, 220, 273, 274, 318, 333], "random": [181, 182, 183, 218, 219, 220, 318, 333, 356], "reason": [181, 182, 183, 218, 219, 220, 333, 344, 347, 348], "seed": [181, 182, 183, 218, 219, 220, 333], "viabl": [185, 222, 327, 347, 349], "non": [185, 192, 222, 229, 327, 341, 344, 345, 349, 351, 352, 355], "fig": [190, 227, 271, 348, 351, 352, 355, 356], "v": [190, 227, 327, 329, 343, 344, 347, 349, 351, 356, 357], "matplotlib": [190, 227, 271, 348, 351, 352, 355, 356], "figur": [190, 227, 271, 351, 355], "constrain": [192, 229, 343], "itself": [192, 229, 255, 348, 349], "procedur": [192, 229, 341, 343, 347, 348], "accomplish": [192, 229, 342], "rho_i": [192, 229], "therefor": [192, 229, 327, 329, 347, 352, 355], "substitut": [192, 229], "_i": [192, 229], "depend": [192, 229, 327, 343, 347, 348, 349], "after": [192, 229, 340, 347, 348, 349, 356], "stage": [192, 229, 343, 349], "manual": [192, 200, 229, 237, 347, 348, 351], "beta": [194, 231, 278, 303, 341, 351, 357], "gaussian": [194, 195, 231, 232, 327, 347, 349], "plasma": [194, 231], "p_th": [194, 231], "p_b": [194, 195, 231, 232], "lorentz": [194, 195, 231, 232], "heavisid": [194, 195, 231, 232], "dimensionless": [194, 195, 231, 232, 273, 274], "ratio": [194, 231, 273], "b0": [195, 232, 356], "eta": [195, 232, 347], "6666666666666666": [195, 232], "proport": [195, 232, 347], "power": [195, 232, 265, 286, 287, 295, 325, 347, 351], "strength": [195, 232], "gauss": [195, 232], "ascii": [199, 236, 347], "astropi": [199, 236], "qtabl": [199, 236], "tempfil": [199, 200, 201, 236, 237, 238], "temporarydirectori": [199, 200, 201, 236, 237, 238], "temp_dir": [199, 200, 201, 236, 237, 238], "o": [199, 200, 201, 236, 237, 238, 351, 352], "join": [199, 200, 201, 236, 237, 238, 352], "fields_to_writ": [200, 237], "unformat": [200, 237], "fortran": [200, 237], "binari": [200, 237, 272, 340, 347, 352], "But": [200, 237, 348], "why": [200, 237, 344, 348, 349, 352], "fortan": [200, 237], "proceedur": [200, 237], "metadata": [200, 237], "As": [200, 237, 344, 347, 348, 351, 355, 357], "upon": [200, 237, 344], "reopen": [200, 237], "particle_typ": [240, 241], "interfac": [240, 345, 348], "black_hol": 240, "1d": [240, 343, 352], "particle_mass": [240, 348, 349, 351, 356], "implicitli": 240, "similarli": [240, 344, 347], "alia": 240, "bh_mass": 242, "po": [242, 356], "vel": [242, 356], "use_pot_min": [242, 356], "black": 242, "solar": [242, 352], "ignor": [242, 347, 349], "r_ctr": [243, 356], "v_ctr": [243, 356], "offset": [243, 348], "bulk": [243, 356], "normal": [243, 356, 357], "circumst": 243, "drop": [244, 275, 276], "remov": [244, 251, 343, 347], "relat": [245, 344, 347, 352, 357], "snapshot": [248, 356], "cl": [249, 348, 355], "from_fil": [249, 356], "cut": [251, 268, 348, 351], "outsid": [251, 347, 351], "certain": [251, 295, 356], "export": [251, 256], "passiv": [252, 254, 255, 356], "updat": 255, "preserv": [255, 325, 343], "width": [256, 259, 303, 304, 355, 356], "ic_filenam": 259, "dtype": [259, 348], "float32": 259, "cubic": [259, 356], "datatyp": [259, 348], "float64": [259, 348], "concaten": [260, 348, 351, 356], "joint": 260, "group": [260, 351], "instanti": [262, 348, 357], "wrapper": [262, 341, 348, 351, 352, 357], "lambda": [262, 263, 341, 348, 352], "cumul": [262, 318, 319, 320, 321], "alter": [262, 265, 344, 351, 356], "truncat": [262, 268, 301, 302, 325, 348, 351, 352, 355], "varieti": [262, 306, 342, 344, 345, 347, 348, 352], "previou": [263, 347], "r_core": 265, "pre": [265, 345, 347], "low": [265, 341, 344], "exponenti": 265, "f": [265, 270, 272, 273, 292, 293, 325, 327, 329, 344, 348, 349, 351, 352, 355, 356, 357], "exp": [265, 268, 327, 348, 349, 357], "r_": [265, 268, 279, 281, 286, 287, 292, 293, 295, 301, 302, 303, 341, 351, 357], "caus": [265, 268, 325, 357], "cuspi": [265, 357], "_": [265, 329, 348, 349, 351, 352, 356], "grow": 265, "faster": [265, 268, 348, 357], "term": [265, 357], "go": [265, 268, 341, 344, 348, 349, 351, 352, 355], "limit": [265, 351, 355, 356], "arg": [266, 349], "constant_profil": [267, 345, 348, 357], "power_law_profil": [267, 345, 348, 357], "beta_model_profil": [267, 345, 348], "hernquist_density_profil": [267, 345, 348, 352], "cored_hernquist_density_profil": [267, 345, 348], "hernquist_mass_profil": [267, 345, 348], "nfw_density_profil": [267, 345, 348, 357], "nfw_mass_profil": [267, 345, 348, 357], "tnfw_density_profil": [267, 345, 348, 352, 355], "tnfw_mass_profil": [267, 345, 348, 352, 355], "snfw_density_profil": [267, 345, 347, 348, 357], "snfw_mass_profil": [267, 345, 347, 348, 357], "cored_snfw_density_profil": [267, 345, 348], "cored_snfw_mass_profil": [267, 345, 348], "cored_snfw_total_mass": [267, 348], "einasto_density_profil": [267, 345, 348], "einasto_mass_profil": [267, 345, 348], "am06_density_profil": [267, 276, 345, 348], "vikhlinin_density_profil": [267, 345, 347, 348, 352, 355], "vikhlinin_temperature_profil": [267, 345, 347, 348], "am06_temperature_profil": [267, 275, 345, 348], "baseline_entropy_profil": [267, 345, 348], "broken_entropy_profil": [267, 345, 348], "walker_entropy_profil": [267, 345, 348], "rescale_profile_by_mass": [267, 347, 348, 352, 355], "r_cut": 268, "k": [268, 343, 348, 351, 357], "beyond": [268, 351, 356, 357], "domin": 268, "rate": [268, 325], "higher": [268, 325], "zero": [268, 343, 344, 347, 348, 351, 356], "achiev": [268, 351], "multipli": 268, "factor": [268, 347, 357], "2k": 268, "f_r": 269, "univariatesplin": 269, "continu": [269, 325, 348], "spectrum": 269, "disk": [270, 348, 356], "open": [270, 348], "valid": [270, 327, 349], "rp": [270, 272], "pickl": 270, "lw": [271, 356], "quick": [271, 349, 352, 356], "logspac": 271, "send": 272, "extens": [272, 347], "t0": [273, 274, 341, 351], "mu": [273, 344, 347, 355], "6": [273, 327, 347, 348, 349, 351, 352, 357], "omega_b": 273, "048": 273, "omega_dm": 273, "262": 273, "polytrop": [273, 274], "degre": [273, 274, 349], "cool": [273, 274, 275, 276, 304, 340, 357], "a_c": [273, 274, 275, 276, 357], "fraction": [273, 318, 352, 357], "molecular": [273, 307, 347], "cosmic": 273, "baryon": [273, 347], "rho_0": [275, 303, 351, 357], "c": [275, 276, 292, 293, 304, 341, 351, 352, 357], "markevitch": [275, 276, 345], "2006": [275, 276, 303, 304, 341, 345, 351], "apj": [275, 276, 282, 290, 291, 292, 293, 303, 304, 308, 357], "650": [275, 276, 357], "102": [275, 276, 352, 357], "concert": [275, 276], "msun": [275, 278, 281, 282, 283, 284, 285, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 303, 308, 341, 348, 356, 357], "t_0": [276, 304, 357], "k_0": [277, 279, 357], "k_200": 277, "r_200": [277, 281, 305], "baselin": 277, "voit": 277, "kai": 277, "bryan": 277, "l": [277, 282, 283, 284, 290, 291, 297, 298, 299, 329, 344, 348, 349, 357], "2005": 277, "mnra": [277, 283, 284, 297, 298, 299, 357], "364": 277, "909": 277, "floor": 277, "logarithm": [277, 286, 287, 303, 304, 357], "slope": [277, 286, 287, 303, 304, 325, 351, 357], "rho_c": 278, "r_c": [278, 283, 284, 285, 303, 341, 351, 357], "cavalier": [278, 357], "fusco": [278, 357], "femiano": [278, 357], "1976": 278, "49": [278, 355], "137": 278, "k_scale": [279, 305], "const": 280, "constant": [280, 327, 347, 349, 356], "m_200": 281, "conc": [281, 294, 347, 348, 352, 357], "m200": [281, 289, 347, 348, 352, 355], "r200": [281, 289, 311, 347, 348, 352, 355], "concentr": [281, 294, 297, 352, 357], "nfw": [281, 283, 284, 285, 292, 293, 294, 297, 298, 299, 300, 301, 302, 345, 355], "hernquist": [281, 282, 290, 291, 341, 345, 352], "overdens": [281, 288, 289, 294], "200": [281, 294, 347, 348, 352, 355, 356, 357], "critic": [281, 288, 289, 294], "m_0": [282, 290, 291], "1990": [282, 290, 291], "356": [282, 290, 291, 357], "359": [282, 290, 291, 357], "super": [283, 284, 285, 298, 299, 300, 348], "lillei": [283, 284, 297, 298, 299, 357], "wyn": [283, 284, 297, 298, 299, 357], "evan": [283, 284, 297, 298, 299, 357], "sander": [283, 284, 297, 298, 299, 357], "2018": [283, 284, 297, 298, 299, 357], "sai": [285, 300, 347], "m200c": [285, 300], "r200c": [285, 297, 300], "law": [286, 287, 295, 325, 347, 351], "retana": [286, 287], "montenegro": [286, 287], "2012": [286, 287], "540": [286, 287, 348], "a70": [286, 287], "invers": [286, 287, 318, 344, 349], "delta": [288, 289, 294, 347, 348, 352, 355, 357], "cosmo": [288, 289, 294, 352], "enclos": 288, "redshift": [288, 289, 294, 341, 352, 355], "cosmologi": [288, 289, 294, 352], "m_r": 289, "rho_": [292, 293, 301, 302, 344, 347, 355, 357], "navarro": [292, 293, 357], "frenk": [292, 293, 357], "white": [292, 293, 357], "1996": [292, 293, 357], "462": [292, 293, 357], "563": [292, 293, 357], "whatev": [295, 348], "els": [295, 348, 349], "rescal": [296, 352], "conc_nfw": 297, "snfw": [297, 357], "come": [297, 340, 348, 349], "31": [297, 348, 351, 352], "r_t": [301, 302, 304, 325, 341, 357], "tnfw": [301, 302, 357], "baltz": [301, 302], "marshal": [301, 302], "oguri": [301, 302], "2009": [301, 302, 308], "jcap": [301, 302], "015": [301, 302], "epsilon": [303, 341, 351, 357], "modifi": [303, 344, 347, 349, 357], "kravtsov": [303, 304, 357], "forman": [303, 304, 357], "w": [303, 304, 357], "691": [303, 304, 357], "inner": [303, 304, 351], "middl": 303, "outer": [303, 304, 355], "control": 303, "transit": [303, 304, 325, 344, 351], "t_min": [304, 341], "r_cool": [304, 341, 351], "a_cool": [304, 341, 351], "region": [304, 344, 347, 355], "empir": 306, "variabl": [306, 347], "ne": 307, "electron": 307, "n_e": [307, 347], "math": [307, 329, 349], "ho_": 307, "mu_e": 307, "m500": [308, 309, 310, 347, 348, 355], "hubbl": 308, "7": [308, 341, 348, 349, 351, 352, 355, 357], "relationship": [308, 344, 347], "mga": 308, "mtot": 308, "r500": [308, 347, 348], "692": 308, "1033": 308, "ui": 308, "adsab": 308, "harvard": 308, "edu": 308, "ab": 308, "2009apj": 308, "1033v": 308, "km": [308, 343], "mpc": 308, "packag": [312, 347, 348, 349, 352, 355], "arr": 315, "messag": [317, 322], "frmt": 317, "subject": [318, 349], "len": [318, 348], "Will": 318, "own": [318, 341, 343, 348, 349, 351, 352], "reli": [318, 347], "p_r": 318, "max": 318, "u": [318, 341, 348, 349, 352, 353, 354, 355, 356], "rr": [319, 320, 321, 348], "costli": [319, 320, 321], "larg": [319, 320, 321, 325, 329, 341, 347, 348, 351, 355, 356, 357], "becaus": [319, 320, 321, 327, 329, 344, 347, 348, 349, 351, 352, 355], "increment": [319, 320, 321], "integr": [320, 321, 327, 329, 344, 348, 349, 351, 352, 355, 356], "inf": 321, "rac": 325, "ight": 325, "df": [325, 327, 328, 332, 349], "yield": [325, 327, 344, 347, 349], "monoton": 325, "interpolatedunivariatesplin": [325, 348], "quickli": 325, "dark_matt": [327, 328, 336, 348, 349, 351, 352], "sigma2": [327, 328], "eddington": [327, 328, 329, 341, 348, 351, 352, 355], "necessari": [327, 340, 343, 344, 347, 348, 349, 355, 357], "facilit": [327, 341, 348, 355], "edington": 327, "formula": [327, 329, 347, 348, 357], "lma": [327, 348, 349], "thought": [327, 347], "occupi": 327, "textbf": [327, 329, 344, 349], "dot": [327, 349], "regardless": [327, 347, 349], "liouvil": [327, 349], "theorem": [327, 329], "collisionless": [327, 356], "boltzmann": 327, "jean": [327, 329], "question": [327, 343, 348], "wai": [327, 340, 341, 343, 344, 347, 348, 351, 352, 356], "steadi": [327, 349], "state": [327, 349], "integrand": 327, "invert": [327, 347, 349, 356], "abel": [327, 341, 349, 356], "happen": [327, 349, 352], "rh": [327, 349], "expand": [327, 349], "trivial": [327, 347, 349], "differenti": [327, 347, 349, 356], "In": [327, 331, 343, 344, 347, 348, 349, 351, 352, 355, 356], "stipul": [327, 349], "angular": [327, 349, 356], "momentum": [327, 347, 349, 356], "irrot": [327, 349], "simplifi": [327, 344, 349], "notat": [327, 349], "denot": [327, 344, 349], "psi": [327, 329, 331, 344, 347, 349, 356], "phi_0": [327, 329, 331], "mathcal": [327, 329, 344, 348, 349], "blinnei": [327, 349], "tremain": [327, 329, 349], "maxwellian": [327, 348], "while": [327, 349, 352, 353, 354], "badli": [327, 349], "behav": [327, 349, 351], "estim": [327, 349], "nonetheless": [327, 347, 348, 349, 351], "partial": [327, 347, 349], "sigma_r": [327, 348, 349], "sigma": [327, 349], "2_": [327, 349], "theta": [327, 349, 356], "stress": [327, 349], "tensor": [327, 329, 349], "isotrop": [327, 329, 349, 356], "dispers": [327, 329, 349], "rho_h": [327, 349, 357], "abl": [327, 349], "speed": [327, 349, 356], "v_r": 327, "rtol": 329, "01": [329, 348, 349, 351], "under": [329, 348, 349, 357], "just": [329, 341, 348, 349, 352, 355], "toler": [329, 351], "exce": 329, "enforc": [329, 344, 347, 355], "basi": [329, 348], "let": [329, 341, 344, 347, 348, 349, 351, 352, 355], "invok": 329, "acknowledg": 329, "furthermor": [329, 344, 347, 349], "due": [329, 343, 349, 355, 356], "assumpt": [329, 345, 347], "binnei": [329, 349], "2011": [329, 349], "vol": [329, 349], "princeton": [329, 349], "press": [329, 349], "decreas": 331, "revers": 332, "inherit": [335, 341, 348], "rigidgrav": 340, "rigid": 340, "selfgrav": 340, "inclus": 340, "tangl": 340, "john": 340, "zuhon": 340, "request": [340, 351], "who": [340, 342], "licens": 340, "copi": [340, 345], "tripl": 340, "makefil": 340, "simu_opt": 340, "dmodel": 340, "hydro": [340, 343, 347], "dgraviti": 340, "dparticl": 340, "dncomp_passive_us": 340, "merger_coll_numhalo": 340, "merger_coll_usemet": 340, "dmhd": 340, "deo": 340, "eos_gamma": 340, "dpar_natt_us": 340, "dgpu": 340, "dload_bal": 340, "hilbert": 340, "dopenmp": 340, "dsupport_hdf5": 340, "proper": 340, "add_background_grid": 340, "config": 340, "enabl": 340, "sh": 340, "soon": [340, 351], "adapt": 340, "mesh": [340, 348, 351], "refin": 340, "amr": [340, 343, 348], "radi": 340, "agn": 340, "feedback": 340, "host": 340, "raymond": [340, 355], "patch": [340, 355], "guid": [340, 344, 345, 348, 349, 355], "ins": [340, 351], "whichev": [340, 347], "pleas": [340, 342, 353, 354], "setup_ramses_": [340, 352], "intend": [340, 351], "mergerconfig": 340, "txt": [340, 352], "halo_": 340, "_part": 340, "_prof": 340, "unavail": 340, "cluster_merg": 340, "namelist": 340, "product": 341, "observ": [341, 344, 345, 351, 355, 357], "methodologi": 341, "chandra": [341, 345, 351, 357], "vikhlinin06": [341, 351], "phenomenolog": 341, "public": 341, "ascasibar07": 341, "13": [341, 348, 351], "9": [341, 348, 351, 352], "sanderson10": 341, "easiest": 341, "sever": [341, 344, 348, 355, 356], "seen": [341, 348, 351, 352], "print": [341, 348, 349, 351, 352, 355], "a133": [341, 351], "a262": [341, 351], "a383": [341, 351], "a478": [341, 351], "a907": [341, 351], "a1413": [341, 351], "a1795": [341, 351], "a1991": [341, 351], "a2029": [341, 351], "a2390": [341, 351], "rx": [341, 351], "j1159": [341, 351], "5531": [341, 351], "mkw": [341, 351], "usgc": [341, 351], "s152": [341, 351], "load_model": [341, 351], "info": [341, 348, 349, 351, 352, 355], "2023": [341, 348, 349, 351, 352, 355], "09": [341, 348, 349, 352, 355], "11": [341, 348, 351, 352], "08": [341, 348, 351], "53": [341, 351], "510": 341, "519": [341, 351], "mon": 341, "sep": [341, 352], "917": 341, "from_scratch": [341, 352], "923": 341, "55": 341, "And": [341, 352], "got": [341, 348, 349, 351, 355], "bit": [341, 348, 351], "intric": 341, "still": [341, 348], "everi": [341, 345, 348, 352], "hous": 341, "bear": 341, "io": [341, 348], "doe": [341, 347, 348, 349, 351, 355, 356], "templat": 341, "global": [341, 349], "wide": [341, 345, 347, 348, 357], "regard": [341, 347, 348], "referenc": [341, 349], "first_profil": 341, "builtin": [341, 342, 348], "is_custom": 341, "express": [341, 348, 349, 356], "rho0": 341, "null": 341, "second_profil": 341, "multilin": 341, "readabl": 341, "exec": 341, "descript": [341, 347, 351], "paper": [341, 345, 351], "load_method": [341, 351], "csv": 341, "load_from_fil": 341, "extra_clust": 341, "Not": [341, 347, 349, 351], "desc": 341, "cute": 341, "notic": [342, 347, 348, 349, 351, 352, 355], "breakag": 342, "notifi": 342, "aim": [342, 347, 349, 357], "nut": [342, 349], "bolt": [342, 349], "accord": 343, "complex": [343, 347, 348, 349, 352], "turbul": 343, "fashion": 343, "uniform": [343, 356], "natur": 343, "bf": [343, 347, 356], "tild": 343, "v_x": 343, "v_1": 343, "u_1": 343, "iN": 343, "u_2": 343, "v_y": 343, "v_2": 343, "u_3": 343, "u_4": 343, "v_z": 343, "v_3": 343, "u_5": 343, "u_6": 343, "special": [343, 349], "handl": 343, "constraint": 343, "cdot": [343, 344, 347, 349], "least": [343, 347], "diverg": [343, 344, 347, 356, 357], "space": [343, 349, 356], "subtract": 343, "off": [343, 348, 349, 352, 355, 357], "parallel": 343, "hat": [343, 344], "machin": 343, "precis": 343, "linearli": 343, "free": 343, "small": [343, 347, 351], "mhd": 343, "clean": 343, "substanti": 343, "concern": 343, "transport": 343, "evolv": 343, "solv": [343, 344, 356], "transform": 343, "clusterfield": 343, "map_field_to_particl": 343, "vfield": 343, "write_to_h5": 343, "bfield": 343, "build": [344, 345, 351, 355], "coupl": [344, 345], "On": 344, "summari": 344, "easili": [344, 345, 347, 349, 356], "end": [344, 345, 352], "classic": [344, 349], "1984apj": 344, "286": 344, "7b": 344, "403": [344, 355], "886m": 344, "postul": 344, "propos": 344, "milgrom": 344, "1983": 344, "held": 344, "characterist": 344, "a_0": [344, 347, 355], "asymptot": [344, 347], "_n": 344, "regim": [344, 347], "deep": [344, 345, 347], "rang": [344, 351], "accler": 344, "attempt": 344, "underwai": 344, "establish": 344, "covari": 344, "standout": 344, "candid": 344, "aquadtrat": 344, "quintessenti": 344, "variat": 344, "fulfil": 344, "paradigm": 344, "solver": [344, 348, 355], "major": [344, 347, 348, 351], "implicit": [344, 347], "optim": 344, "converg": [344, 351], "guess": 344, "essenti": [344, 348, 351, 352], "simplest": [344, 356], "sign": 344, "lead": [344, 352], "gamma_": 344, "treat": 344, "infin": [344, 357], "inward": 344, "unlik": [344, 355], "quasi": 344, "q": [344, 355], "identifi": 344, "second": [344, 349, 352, 356, 357], "nu": [344, 347, 349], "much": [344, 345, 347, 348, 352, 356], "meet": 344, "criteria": 344, "motion": [344, 349], "h": [344, 348, 349, 352, 357], "_a": 344, "a_n": 344, "_q": 344, "curl": 344, "recogn": [344, 347], "commonli": [344, 347], "milgromian": 344, "1983apj": 344, "270": 344, "365m": 344, "bekenstein": 344, "cross": 345, "platform": 345, "possibl": [345, 347, 348, 349], "configur": [345, 346, 347, 348], "cored_hernquist_mass_profil": 345, "einasto": 345, "high": 345, "qualiti": [345, 351, 352], "capac": 345, "catalog": 345, "explor": [345, 348, 351, 355], "simpl": [345, 349, 352], "literatur": [345, 349, 357], "quickstart": 345, "start": [345, 348, 351, 352], "learn": [345, 347], "offer": 345, "experi": 345, "particular": [345, 351, 352], "past": 345, "explain": 345, "backbon": 345, "api": [345, 347, 348, 351, 352], "dive": 345, "contribut": [345, 347, 351], "hint": 345, "might": [345, 348], "pyxsim": 345, "synthet": 345, "photon": 345, "event": 345, "observatori": 345, "eas": [345, 355], "sox": 345, "instrument": 345, "turn": [345, 351, 352, 355], "mock": 345, "count": 345, "realist": 345, "xmm": 345, "newton": 345, "nustar": 345, "search": 345, "spatial": 346, "get": [346, 347, 348, 349, 352, 353, 356], "hold": [347, 348], "intial": 347, "protocol": 347, "fluid": 347, "obei": 347, "euler": 347, "viscos": 347, "context": [347, 349, 351, 357], "k_b": 347, "m_p": 347, "ln": [347, 357], "gasseou": 347, "worth": [347, 348, 349, 351, 352], "remaind": 347, "sim": [347, 357], "theoret": 347, "gm_": 347, "stabl": 347, "similar": [347, 352, 357], "taken": 347, "stabil": [347, 349], "approx": 347, "2r": 347, "situat": 347, "solvabl": 347, "dmr": 347, "summar": 347, "tabl": [347, 351], "from_arrai": [347, 348], "grav": 347, "t_g": 347, "chosen": [347, 349, 352], "via": [347, 356], "incompress": [347, 349], "bari": 347, "difficult": [347, 351], "effici": 347, "int_": 347, "r_0": 347, "exactli": [347, 348, 356], "accept": [347, 356], "no_ga": 347, "syntact": 347, "vast": 347, "success": 347, "algorithm": [347, 351], "wa": [347, 349, 351, 356], "check_hs": [347, 348, 352], "clearli": [347, 348], "successfulli": [347, 349, 352], "equilibr": [347, 348, 352], "plai": [347, 348, 349], "role": 347, "ioniz": 347, "set_magnetic_field_from_beta": [347, 348], "p_": 347, "expon": 347, "choos": [347, 356], "set_magnetic_field_from_dens": [347, 348], "awar": 347, "slow": 347, "worthwhil": 347, "consult": 347, "write_model_to_ascii": 347, "write_model_to_h5": [347, 348, 351, 352, 355], "write_model_to_binari": 347, "confirm": [347, 351], "patholog": 347, "incomplet": 347, "interfer": 347, "prevent": [347, 348, 351, 352], "Such": 347, "immedi": [347, 348], "implic": 347, "find_overdensity_radiu": [347, 348, 352, 355], "snfw_total_mass": [347, 348], "find_radius_mass": [347, 348, 352, 355], "5e15": [347, 348], "rhot": [347, 348, 352], "mt": [347, 348, 352], "f_g": [347, 348, 352, 355], "12": [347, 348, 351], "rhog": [347, 348, 352], "67": [347, 348, 352, 355], "temp": 347, "42": [347, 351, 352], "02": [347, 348, 349, 351], "00": 347, "350": [347, 351], "19": [347, 348, 351], "short": 347, "answer": 347, "noth": 347, "until": 347, "is_phys": [347, 348, 351, 352, 355], "35": [347, 348, 351, 355], "meth": 347, "rebuild_phys": [347, 351], "newli": 347, "origin": [347, 348, 356, 357], "m2": 347, "pleasant": 347, "reach": [347, 351], "require_phys": 347, "magenta": 347, "restrict": [347, 351], "viabil": 347, "forest": 347, "green": [347, 348], "leav": 347, "teal": 347, "rebuild": [347, 351], "quickguid": 348, "shown": 348, "lot": [348, 351, 352], "bell": 348, "whistl": 348, "confus": [348, 349], "usag": [348, 352], "measur": 348, "softwar": [348, 349, 355], "easi": [348, 352, 355], "custom": 348, "ones": [348, 356], "pyplot": [348, 351, 352, 355, 356], "plt": [348, 351, 352, 355, 356], "25": [348, 351], "39": [348, 349, 351, 352, 355], "profile_exampl": 348, "1e7": 348, "other_profile_exampl": 348, "built_in": 348, "sum": 348, "behind": [348, 352], "scene": [348, 352], "few": [348, 351, 355], "add_cor": [348, 352], "cutoff": [348, 352], "respect": [348, 352, 356], "subplot": [348, 351, 352, 355, 356], "color": [348, 349, 351, 355], "t_profil": 348, "800": [348, 351], "red": [348, 351], "c_profil": 348, "50": [348, 351, 356], "okai": [348, 349, 351, 352, 355], "my": [348, 351, 352], "raw": 348, "profile_1": [348, 349], "sine": 348, "geomspac": 348, "profile_2": 348, "cosin": 348, "last": [348, 349, 355], "veri": [348, 349, 351, 355, 356], "root": 348, "elsewher": 348, "doesn": 348, "to_binari": [348, 352], "from_binari": 348, "arbitrarili": 348, "next": [348, 352, 356], "tour": 348, "la": 348, "talk": [348, 355], "pretti": [348, 351], "useless": 348, "ll": [348, 353, 354, 355], "is_calcul": 348, "reset": [348, 349], "modular": [348, 355], "classnam": 348, "_classnam": 348, "def": 348, "log": [348, 352, 355], "mylog": 348, "__repr__": 348, "saniti": 348, "pull": [348, 352], "debug": 348, "tdens_func": 348, "gpot_profil": 348, "gpot1": 348, "gpot2": 348, "convert_to_unit": [348, 355], "log_str": 348, "comp": [348, 351], "stream": 348, "sy": 348, "stderr": 348, "_val": 348, "succe": 348, "dev": 348, "theorist": 348, "contributor": 348, "secondli": 348, "plain": 348, "sens": [348, 349, 352], "fanci": [348, 352], "again": [348, 351], "label": [348, 356], "distinguish": 348, "satisfi": [348, 349], "interphas": 348, "fact": [348, 349, 352], "basic_model": [348, 352], "27": [348, 349], "16": [348, 349, 357], "547": 348, "655": 348, "659": 348, "52": 348, "938": 348, "26": [348, 351], "04": [348, 351], "788": 348, "37": 348, "710": 348, "now": [348, 349, 351, 352, 355, 356, 357], "hood": [348, 349], "everyth": 348, "odict_kei": 348, "gas_fract": [348, 352], "electron_number_dens": [348, 352], "ask": 348, "aren": [348, 349], "dm_virial": [348, 349], "star_viri": 348, "back": 348, "shortli": 348, "introduc": [348, 357], "asid": 348, "thing": [348, 349, 351, 352, 355], "One": [348, 349, 355, 356], "737": 348, "33609e": 348, "07": [348, 351, 355], "That": 348, "000": 348, "neg": [348, 352], "sun": [348, 352], "aug": [348, 351], "luster_gener": [348, 351, 352], "protect": 348, "_virial": [348, 349], "_dm_virial": [348, 349], "lt": [348, 349, 352], "0x7f297d4857c0": 348, "gt": [348, 349, 352, 355], "did": 348, "moment": [348, 349], "organiz": 348, "virialization_method": 348, "explan": 348, "main": 348, "doc": 348, "mention": [348, 352, 356], "gone": 348, "magic": 348, "ahead": 348, "try": [348, 353, 354], "14": [348, 351], "generate_dm_particl": [348, 356], "1_000_000": [348, 351, 355, 356], "28": [348, 351], "05": [348, 349], "549": 348, "1000000": [348, 351, 356], "553": 348, "850": 348, "notebook": [348, 352], "awhil": 348, "bread": 348, "butter": 348, "discret": 348, "awai": 348, "15": [348, 351], "million": [348, 349], "field_nam": 348, "defaultdict": 348, "particle_posit": [348, 356], "particle_veloc": [348, 356], "bore": 348, "Its": [348, 351], "realli": [348, 352, 355], "17": [348, 351], "gas_particl": [348, 356], "generate_gas_particl": [348, 356], "914": 348, "916": [348, 351, 352], "166": 348, "973": [348, 351], "thermal_energi": [348, 351, 356], "goe": 348, "don": [348, 352], "rest": [348, 355], "write_particl": [348, 356], "write_particles_to_h5": 348, "write_to_gadget_fil": [348, 356], "make_radial_cut": [348, 351, 356], "add_offset": [348, 349, 351, 356], "add_black_hol": [348, 356], "18": [348, 351], "4000": [348, 351], "move": 348, "bix": 348, "to_yt_dataset": [348, 349, 351], "8000": [348, 351], "209": 348, "current_tim": [348, 349, 351], "211": [348, 351], "214": 348, "domain_left_edg": [348, 349, 351], "215": [348, 352], "domain_right_edg": [348, 349, 351], "217": 348, "cosmological_simul": [348, 349, 351], "sort": [348, 351], "phase": [348, 349, 356], "diagram": 348, "field_list": 348, "p1": 348, "particleplot": [348, 349, 351], "particle_position_x": [348, 349, 351], "particle_position_i": [348, 349, 351], "226": 348, "alloc": [348, 349, 351], "949e": 348, "particle_position_z": 348, "particle_velocity_x": 348, "particle_velocity_i": 348, "particle_velocity_z": 348, "nbodi": 348, "026": 348, "xlim": [348, 351], "000000": [348, 351], "028": 348, "ylim": [348, 351], "031": 348, "032": 348, "037": 348, "splat": [348, 351], "ngp": [348, 351], "set_cmap": [348, 351, 355], "kama": [348, 351], "21": 348, "ds2": 348, "p2": 348, "phaseplot": 348, "weight_field": [348, 351], "set_unit": 348, "623": 348, "625": 348, "627": 348, "629": 348, "631": 348, "634": 348, "22e": 348, "22": 348, "gas_particles_1": 348, "100_000": [348, 349, 352], "gas_particles_2": 348, "dm_particl": [348, 356], "192": 348, "100000": [348, 349, 352], "193": 348, "418": 348, "421": 348, "422": 348, "448": 348, "654": 348, "657": 348, "705": 348, "23": [348, 352, 355], "concat_clust": 348, "big_system": 348, "194": 348, "24": 348, "16000": 348, "362": 348, "365": [348, 351], "368": 348, "370": 348, "372": 348, "particle_on": 348, "386": 348, "3e": 348, "810": 348, "812": 348, "815": 348, "817": 348, "820": 348, "698": 348, "700": 348, "703": [348, 355], "704": [348, 355], "707": 348, "circl": 348, "speak": 348, "duper": 348, "amaz": 348, "smash": 348, "frontend": [348, 352], "dig": 348, "844": 348, "012": 348, "getattr": [348, 351], "500000": 348, "link": 348, "regener": [348, 349], "intent": [348, 352], "33": 348, "to_fil": 348, "basic_": 348, "num_dm_particl": 348, "num_star_particl": 348, "velocity1": 348, "velocity2": 348, "involv": 348, "act": [348, 349], "book": 348, "tricki": 349, "busi": 349, "imposs": 349, "undertak": 349, "__": 349, "review": 349, "tenant": 349, "ensembl": 349, "nbsphinx": 349, "span": 349, "principl": 349, "unfortun": 349, "strategi": 349, "consider": 349, "statist": 349, "mechan": 349, "neighborhood": 349, "intuit": 349, "flow": 349, "dd": 349, "dt": 349, "sum_": 349, "2n_": 349, "dim": 349, "x_j": 349, "_j": 349, "hamiltonian": 349, "bracket": 349, "summat": 349, "think": 349, "statement": 349, "vlasov": 349, "extrem": [349, 352], "benefit": 349, "cbe": 349, "long": [349, 352, 356], "importantli": 349, "manifest": 349, "By": [349, 356], "v_j": 349, "sum_i": 349, "v_i": 349, "x_i": 349, "sigma_": 349, "ij": 349, "convei": 349, "multi": 349, "isn": [349, 352], "troublesom": 349, "fortun": 349, "onlyon": 349, "_0": [349, 356], "energyto": 349, "relianc": 349, "30": [349, 351, 352], "458": 349, "virialequilibrium": 349, "0x7f5675f5d220": 349, "privat": 349, "technic": 349, "0x7f5675f5d7f0": 349, "yipe": 349, "generate_particl": 349, "32": [349, 352], "615": [349, 355], "617": 349, "628": 349, "pdf": 349, "cummul": 349, "quit": 349, "661": 349, "664": 349, "706": 349, "03": [349, 351], "056": 349, "057": 349, "059": 349, "061": 349, "062": 349, "069": 349, "1e": 349, "typeerror": [349, 355], "traceback": [349, 355], "recent": [349, 355], "34": [349, 351, 355], "virtualenv": 349, "lib": 349, "python3": 349, "visual": 349, "particle_plot": 349, "782": 349, "x_field": 349, "y_field": 349, "z_field": 349, "778": [349, 352], "break": 349, "780": 349, "781": 349, "particleprojectionplot": 349, "784": 349, "plotwindow": 349, "style": [349, 352, 355], "785": 349, "particlephaseplot": [349, 351], "786": 349, "787": 349, "unexpect": 349, "replic": [351, 357], "scientif": 351, "inquiri": 351, "assist": 351, "replica": 351, "cluster_modul": 351, "briefli": 351, "observation": 351, "get_collect": 351, "hopefulli": 351, "29": 351, "384": 351, "enumer": 351, "backend": 351, "evid": 351, "beauti": 351, "entri": 351, "obj": [351, 355], "pprint": 351, "61": 351, "tmin": 351, "9747": 351, "88": 351, "526": 351, "943": 351, "94": 351, "57": [351, 352], "1100": 351, "1239": 351, "188839": 351, "rt": [351, 352], "1420": 351, "0569": 351, "5488": 351, "712": 351, "345": 351, "76": 351, "70": [351, 357], "450": 351, "91429": 351, "0162": 351, "78": 351, "585": 351, "013": 351, "44": 351, "577": 351, "767": 351, "112": 351, "81": 351, "408": 351, "290021": 351, "3030": 351, "1883": 351, "799": 351, "wed": 351, "392": 351, "394": 351, "figsiz": [351, 355, 356], "set_yscal": [351, 355], "set_ylim": 351, "set_xlim": 351, "set_ylabel": [351, 355, 356], "set_xlabel": [351, 355, 356], "fun": [351, 355], "collections_model": 351, "collections_exampl": 351, "setup_particle_": 351, "109": 351, "142": 351, "167": 351, "38": [351, 352, 355], "652": 351, "45": 351, "212": 351, "426": 351, "758": 351, "47": 351, "825": 351, "2000": 351, "51": 351, "511": 351, "515": 351, "522": 351, "525": 351, "528": 351, "2e": 351, "06": 351, "272": 351, "277": 351, "283": 351, "285": 351, "298": 351, "topic": 351, "prepar": 351, "minim": [351, 357], "amin": 351, "bin": 351, "ouput": 351, "chane": 351, "56": 351, "862": 351, "405": 351, "407": 351, "home": 351, "ediggin": 351, "198": 351, "integrationwarn": 351, "occurr": 351, "roundoff": 351, "detect": 351, "underestim": 351, "ret": 351, "quad": 351, "vline": 351, "ymin": 351, "1e2": 351, "ymax": 351, "1e13": 351, "weirdli": 351, "never": 351, "force_fix": 351, "tag": [351, 356], "artifici": 351, "force_radiu": 351, "mirror": 351, "model_fix": 351, "803": 351, "338": 351, "339": 351, "clustermod": 351, "uster_gener": 351, "941": 351, "fresh": 351, "992": 351, "extrapol": 351, "full_output": 351, "960": 351, "153": 351, "add_subplot": 351, "111": 351, "sensibl": 351, "far": [351, 352], "neglig": 351, "anywai": 351, "46": 351, "968": 351, "088": 351, "149": 351, "229": 351, "231": 351, "336": 351, "48": 351, "208": 351, "106": 351, "310": 351, "436": 351, "446": 351, "464": 351, "468": 351, "475": 351, "538": 351, "665e": 351, "961": 351, "964": 351, "976": 351, "007": 351, "36": [351, 355], "big": 352, "underpin": 352, "example_profil": 352, "1e10": 352, "300": [352, 356], "74": 352, "60387957432596": 352, "whole": 352, "rememb": 352, "ed": 352, "won": 352, "alert": [352, 355], "colossu": 352, "ccosmo": 352, "setcosmologi": 352, "planck18": 352, "hubble_const": 352, "omega_matt": 352, "om0": 352, "omega_lambda": 352, "ode0": 352, "546": [352, 355], "1e15": [352, 355], "modeldiemer19": 352, "nfw_scale_dens": [352, 355, 357], "ylabel": 352, "session": 352, "115": [352, 355], "r2500": 352, "2500": [352, 355], "1e1": 352, "1e4": 352, "jupyt": 352, "render": 352, "properli": 352, "cgparam": [352, 355], "15000": [352, 355], "876": 352, "878": 352, "101": 352, "pictur": 352, "perspect": 352, "pai": 352, "attent": 352, "account": 352, "pertin": 352, "takeawai": 352, "machineri": 352, "advantag": 352, "yscale": 352, "good": [352, 356], "545": 352, "00110331": 352, "intrins": 352, "ic_exampl": 352, "695": 352, "0x7f90bef59fd0": 352, "accomod": 352, "scenario": 352, "create_dataset": [352, 355], "front": [352, 357], "729": 352, "755": 352, "915": 352, "944": 352, "merger_config": 352, "uh": [353, 354], "oh": [353, 354], "yourself": [353, 354], "contact": [353, 354], "awesom": 355, "walk": 355, "further": [355, 356], "team": 355, "arcan": 355, "themselv": 355, "hard": 355, "workflow": 355, "probe": 355, "stuff": 355, "shouldn": 355, "action": 355, "primari": 355, "r200_1": 355, "r_s1": 355, "rho_s1": 355, "r_t1": 355, "mt_1": 355, "r500_1": 355, "m500_1": 355, "r2500_1": 355, "m2500_1": 355, "rhot_1": 355, "rhog_1": 355, "model_newtonian": 355, "hydrostaticequilibrium": 355, "398": 355, "843": 355, "612": 355, "609": 355, "mp": [355, 357], "610": 355, "_from_scratch": 355, "613": 355, "614": 355, "616": 355, "exact": 355, "model_mond": 355, "clear": 355, "glare": 355, "interp_funct": 355, "expect": 355, "didn": 355, "went": 355, "compar": 355, "gridspec_kw": 355, "wspace": 355, "hspace": 355, "zip": 355, "ravel": 355, "darkblu": 355, "forestgreen": 355, "dramat": 355, "larger": 355, "increas": [355, 357], "maintain": 355, "proced": 355, "mond_model": 355, "newtonian_model": 355, "mond_ic": 355, "newt_ic": 355, "mond_part": 355, "256": 355, "newt_part": 355, "sliceplot": 355, "kt": 355, "set_log": 355, "draw": 356, "tot": 356, "sinc": 356, "tangenti": 356, "number_of_particl": 356, "latter": 356, "magnetic_field": 356, "hand": 356, "equal": 356, "n_ga": 356, "isotropi": 356, "dv": 356, "2dv": 356, "net": 356, "cal": 356, "integrel": 356, "pair": 356, "reject": 356, "check_dm_viri": 356, "check_star_viri": 356, "diff": 356, "loglog": 356, "vir": 356, "markers": 356, "legend": 356, "difficulti": 356, "infinit": 356, "generate_star_particl": 356, "carri": 356, "wish": 356, "n_dm": 356, "n_star": 356, "star_particl": 356, "cover": 356, "generate_": 356, "_particl": 356, "kind": 356, "all_particl": 356, "gas_part": 356, "gas_parts1": 356, "gas_parts2": 356, "drop_ptyp": 356, "translat": 356, "boost": 356, "shift": 356, "movement": 356, "mbh": 356, "0e9": 356, "rather": 356, "keep": 356, "track": 356, "num_particles1": 356, "num_particles2": 356, "200_000": 356, "halo1": 356, "halo2": 356, "cluster1": 356, "cluster2": 356, "pick": 356, "overwritten": 356, "ug": 356, "microgauss": 356, "magnetic_field_x": 356, "metal": 356, "zsun": 356, "obvious": 356, "my_particl": 356, "new_part": 356, "gas_onli": 356, "dm_star": 356, "cluster_": 356, "from_gadget_fil": 356, "fall": 357, "0e": 357, "manifestli": 357, "0e7": 357, "dp": 357, "finit": 357, "3m": 357, "0e15": 357, "bulg": 357, "shperic": 357, "regularli": 357, "brightest": 357, "bcg": 357, "m_h": 357, "rho_e": 357, "3n": 357, "d_n": 357, "1215n": 357, "184": 357, "229635n": 357, "band": 357, "modif": 357, "flat": 357, "parameter": 357, "freedom": 357, "v06": 357, "am06": 357, "ca_c": 357, "t_": 357, "t_0t": 357, "min": 357, "a_": 357, "k_": 357, "journal": 357, "1965": 357, "kinemat": 357, "trudi": 357, "inst": 357, "astrofiz": 357, "alma": 357, "ata": 357, "87": 357, "jone": 357, "murrai": 357, "van": 357, "speybroeck": 357, "nearbi": 357, "1978": 357, "677": 357, "cold": 357}, "objects": {"": [[1, 0, 0, "-", "codes"], [11, 0, 0, "-", "collection"], [60, 0, 0, "-", "fields"], [103, 0, 0, "-", "gravity"], [146, 0, 0, "-", "ics"], [164, 0, 0, "-", "model"], [239, 0, 0, "-", "particles"], [262, 0, 0, "-", "radial_profiles"], [306, 0, 0, "-", "relations"], [312, 0, 0, "-", "utils"], [326, 0, 0, "-", "virial"]], "codes": [[2, 1, 1, "", "setup_arepo_ics"], [3, 1, 1, "", "setup_art_ics"], [4, 1, 1, "", "setup_athena_ics"], [5, 1, 1, "", "setup_enzo_ics"], [6, 1, 1, "", "setup_flash_ics"], [7, 1, 1, "", "setup_gamer_ics"], [8, 1, 1, "", "setup_gizmo_ics"], [9, 1, 1, "", "setup_ramses_ics"], [10, 1, 1, "", "write_amr_particles"]], "collection": [[12, 2, 1, "", "Ascasibar07"], [24, 2, 1, "", "ClusterCollection"], [35, 2, 1, "", "Sanderson10"], [47, 2, 1, "", "Vikhlinin06"], [59, 1, 1, "", "get_collections"]], "collection.Ascasibar07": [[13, 3, 1, "", "__init__"], [14, 4, 1, "", "description"], [15, 3, 1, "", "load"], [16, 4, 1, "", "load_method"], [17, 3, 1, "", "load_model"], [18, 4, 1, "", "name"], [19, 5, 1, "", "names"], [20, 5, 1, "", "parameters"], [21, 4, 1, "", "path"], [22, 3, 1, "", "plot_summary"], [23, 5, 1, "", "profiles"]], "collection.ClusterCollection": [[25, 3, 1, "", "__init__"], [26, 4, 1, "", "description"], [27, 4, 1, "", "load_method"], [28, 3, 1, "", "load_model"], [29, 4, 1, "", "name"], [30, 5, 1, "", "names"], [31, 5, 1, "", "parameters"], [32, 4, 1, "", "path"], [33, 3, 1, "", "plot_summary"], [34, 5, 1, "", "profiles"]], "collection.Sanderson10": [[36, 3, 1, "", "__init__"], [37, 4, 1, "", "description"], [38, 3, 1, "", "load"], [39, 4, 1, "", "load_method"], [40, 3, 1, "", "load_model"], [41, 4, 1, "", "name"], [42, 5, 1, "", "names"], [43, 5, 1, "", "parameters"], [44, 4, 1, "", "path"], [45, 3, 1, "", "plot_summary"], [46, 5, 1, "", "profiles"]], "collection.Vikhlinin06": [[48, 3, 1, "", "__init__"], [49, 4, 1, "", "description"], [50, 3, 1, "", "load"], [51, 4, 1, "", "load_method"], [52, 3, 1, "", "load_model"], [53, 4, 1, "", "name"], [54, 5, 1, "", "names"], [55, 5, 1, "", "parameters"], [56, 4, 1, "", "path"], [57, 3, 1, "", "plot_summary"], [58, 5, 1, "", "profiles"]], "fields": [[61, 2, 1, "", "ClusterField"], [66, 2, 1, "", "GaussianRandomField"], [71, 2, 1, "", "RadialRandomMagneticField"], [76, 2, 1, "", "RadialRandomMagneticVectorPotential"], [81, 2, 1, "", "RadialRandomVelocityField"], [86, 2, 1, "", "RandomMagneticField"], [91, 2, 1, "", "RandomMagneticVectorPotential"], [96, 2, 1, "", "RandomVelocityField"], [101, 1, 1, "", "parse_value"], [102, 1, 1, "", "rot_3d"]], "fields.ClusterField": [[62, 3, 1, "", "__init__"], [63, 3, 1, "", "map_field_to_particles"], [64, 5, 1, "", "units"], [65, 3, 1, "", "write_file"]], "fields.GaussianRandomField": [[67, 3, 1, "", "__init__"], [68, 3, 1, "", "map_field_to_particles"], [69, 5, 1, "", "units"], [70, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[72, 3, 1, "", "__init__"], [73, 3, 1, "", "map_field_to_particles"], [74, 5, 1, "", "units"], [75, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[77, 3, 1, "", "__init__"], [78, 3, 1, "", "map_field_to_particles"], [79, 5, 1, "", "units"], [80, 3, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[82, 3, 1, "", "__init__"], [83, 3, 1, "", "map_field_to_particles"], [84, 5, 1, "", "units"], [85, 3, 1, "", "write_file"]], "fields.RandomMagneticField": [[87, 3, 1, "", "__init__"], [88, 3, 1, "", "map_field_to_particles"], [89, 5, 1, "", "units"], [90, 3, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[92, 3, 1, "", "__init__"], [93, 3, 1, "", "map_field_to_particles"], [94, 5, 1, "", "units"], [95, 3, 1, "", "write_file"]], "fields.RandomVelocityField": [[97, 3, 1, "", "__init__"], [98, 3, 1, "", "map_field_to_particles"], [99, 5, 1, "", "units"], [100, 3, 1, "", "write_file"]], "gravity": [[104, 2, 1, "", "AQUALGravity"], [113, 2, 1, "", "EMONDGravity"], [122, 2, 1, "", "Gravity"], [128, 2, 1, "", "NewtonianGravity"], [137, 2, 1, "", "QUMONDGravity"]], "gravity.AQUALGravity": [[105, 3, 1, "", "__init__"], [106, 4, 1, "", "attrs"], [107, 3, 1, "", "compute_mass"], [108, 3, 1, "", "compute_potential"], [109, 5, 1, "", "is_calculated"], [110, 4, 1, "", "model"], [111, 3, 1, "", "potential"], [112, 3, 1, "", "reset"]], "gravity.EMONDGravity": [[114, 3, 1, "", "__init__"], [115, 4, 1, "", "attrs"], [116, 3, 1, "", "compute_mass"], [117, 3, 1, "", "compute_potential"], [118, 5, 1, "", "is_calculated"], [119, 4, 1, "", "model"], [120, 3, 1, "", "potential"], [121, 3, 1, "", "reset"]], "gravity.Gravity": [[123, 3, 1, "", "__init__"], [124, 4, 1, "", "attrs"], [125, 5, 1, "", "is_calculated"], [126, 4, 1, "", "model"], [127, 3, 1, "", "reset"]], "gravity.NewtonianGravity": [[129, 3, 1, "", "__init__"], [130, 4, 1, "", "attrs"], [131, 3, 1, "", "compute_mass"], [132, 3, 1, "", "compute_potential"], [133, 5, 1, "", "is_calculated"], [134, 4, 1, "", "model"], [135, 3, 1, "", "potential"], [136, 3, 1, "", "reset"]], "gravity.QUMONDGravity": [[138, 3, 1, "", "__init__"], [139, 4, 1, "", "attrs"], [140, 3, 1, "", "compute_mass"], [141, 3, 1, "", "compute_potential"], [142, 5, 1, "", "is_calculated"], [143, 4, 1, "", "model"], [144, 3, 1, "", "potential"], [145, 3, 1, "", "reset"]], "ics": [[147, 2, 1, "", "ClusterICs"], [163, 1, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[148, 3, 1, "", "__init__"], [149, 4, 1, "", "basename"], [150, 4, 1, "", "center"], [151, 3, 1, "", "compute_orbits"], [152, 3, 1, "", "create_dataset"], [153, 3, 1, "", "from_file"], [154, 4, 1, "", "mag_file"], [155, 4, 1, "", "num_halos"], [156, 4, 1, "", "profiles"], [157, 4, 1, "", "r_max"], [158, 3, 1, "", "resample_particle_ics"], [159, 3, 1, "", "setup_particle_ics"], [160, 3, 1, "", "to_file"], [161, 4, 1, "", "tot_np"], [162, 4, 1, "", "velocity"]], "model": [[165, 2, 1, "", "ClusterModel"], [202, 2, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[166, 3, 1, "", "__init__"], [167, 4, 1, "", "attrs"], [168, 3, 1, "", "check_dm_virial"], [169, 3, 1, "", "check_hse"], [170, 3, 1, "", "check_star_virial"], [171, 3, 1, "", "create_dataset"], [172, 4, 1, "", "default_fields"], [173, 5, 1, "", "dm_virial"], [174, 4, 1, "", "fields"], [175, 3, 1, "", "find_field_at_radius"], [176, 3, 1, "", "from_arrays"], [177, 3, 1, "", "from_dens_and_entr"], [178, 3, 1, "", "from_dens_and_tden"], [179, 3, 1, "", "from_dens_and_temp"], [180, 3, 1, "", "from_h5_file"], [181, 3, 1, "", "generate_dm_particles"], [182, 3, 1, "", "generate_gas_particles"], [183, 3, 1, "", "generate_star_particles"], [184, 3, 1, "", "generate_tracer_particles"], [185, 3, 1, "", "is_physical"], [186, 3, 1, "", "keys"], [187, 3, 1, "", "mass_in_radius"], [188, 3, 1, "", "no_gas"], [189, 4, 1, "", "num_elements"], [190, 3, 1, "", "plot"], [191, 5, 1, "", "pot"], [192, 3, 1, "", "rebuild_physical"], [193, 3, 1, "", "set_field"], [194, 3, 1, "", "set_magnetic_field_from_beta"], [195, 3, 1, "", "set_magnetic_field_from_density"], [196, 3, 1, "", "set_rmax"], [197, 5, 1, "", "star_virial"], [198, 5, 1, "", "virialization_method"], [199, 3, 1, "", "write_model_to_ascii"], [200, 3, 1, "", "write_model_to_binary"], [201, 3, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[203, 3, 1, "", "__init__"], [204, 4, 1, "", "attrs"], [205, 3, 1, "", "check_dm_virial"], [206, 3, 1, "", "check_hse"], [207, 3, 1, "", "check_star_virial"], [208, 3, 1, "", "create_dataset"], [209, 4, 1, "", "default_fields"], [210, 5, 1, "", "dm_virial"], [211, 4, 1, "", "fields"], [212, 3, 1, "", "find_field_at_radius"], [213, 3, 1, "", "from_arrays"], [214, 3, 1, "", "from_dens_and_entr"], [215, 3, 1, "", "from_dens_and_tden"], [216, 3, 1, "", "from_dens_and_temp"], [217, 3, 1, "", "from_h5_file"], [218, 3, 1, "", "generate_dm_particles"], [219, 3, 1, "", "generate_gas_particles"], [220, 3, 1, "", "generate_star_particles"], [221, 3, 1, "", "generate_tracer_particles"], [222, 3, 1, "", "is_physical"], [223, 3, 1, "", "keys"], [224, 3, 1, "", "mass_in_radius"], [225, 3, 1, "", "no_gas"], [226, 4, 1, "", "num_elements"], [227, 3, 1, "", "plot"], [228, 5, 1, "", "pot"], [229, 3, 1, "", "rebuild_physical"], [230, 3, 1, "", "set_field"], [231, 3, 1, "", "set_magnetic_field_from_beta"], [232, 3, 1, "", "set_magnetic_field_from_density"], [233, 3, 1, "", "set_rmax"], [234, 5, 1, "", "star_virial"], [235, 5, 1, "", "virialization_method"], [236, 3, 1, "", "write_model_to_ascii"], [237, 3, 1, "", "write_model_to_binary"], [238, 3, 1, "", "write_model_to_h5"]], "particles": [[240, 2, 1, "", "ClusterParticles"], [260, 1, 1, "", "concat_clusters"], [261, 1, 1, "", "resample_clusters"]], "particles.ClusterParticles": [[241, 3, 1, "", "__init__"], [242, 3, 1, "", "add_black_hole"], [243, 3, 1, "", "add_offsets"], [244, 3, 1, "", "drop_ptypes"], [245, 4, 1, "", "fields"], [246, 3, 1, "", "from_fields"], [247, 3, 1, "", "from_file"], [248, 3, 1, "", "from_gadget_file"], [249, 3, 1, "", "from_h5_file"], [250, 3, 1, "", "keys"], [251, 3, 1, "", "make_radial_cut"], [252, 5, 1, "", "num_passive_scalars"], [253, 4, 1, "", "particle_types"], [254, 4, 1, "", "passive_scalars"], [255, 3, 1, "", "set_field"], [256, 3, 1, "", "to_yt_dataset"], [257, 3, 1, "", "write_particles"], [258, 3, 1, "", "write_particles_to_h5"], [259, 3, 1, "", "write_to_gadget_file"]], "radial_profiles": [[263, 2, 1, "", "RadialProfile"], [273, 1, 1, "", "ad07_density_profile"], [274, 1, 1, "", "ad07_temperature_profile"], [275, 1, 1, "", "am06_density_profile"], [276, 1, 1, "", "am06_temperature_profile"], [277, 1, 1, "", "baseline_entropy_profile"], [278, 1, 1, "", "beta_model_profile"], [279, 1, 1, "", "broken_entropy_profile"], [280, 1, 1, "", "constant_profile"], [281, 1, 1, "", "convert_nfw_to_hernquist"], [282, 1, 1, "", "cored_hernquist_density_profile"], [283, 1, 1, "", "cored_snfw_density_profile"], [284, 1, 1, "", "cored_snfw_mass_profile"], [285, 1, 1, "", "cored_snfw_total_mass"], [286, 1, 1, "", "einasto_density_profile"], [287, 1, 1, "", "einasto_mass_profile"], [288, 1, 1, "", "find_overdensity_radius"], [289, 1, 1, "", "find_radius_mass"], [290, 1, 1, "", "hernquist_density_profile"], [291, 1, 1, "", "hernquist_mass_profile"], [292, 1, 1, "", "nfw_density_profile"], [293, 1, 1, "", "nfw_mass_profile"], [294, 1, 1, "", "nfw_scale_density"], [295, 1, 1, "", "power_law_profile"], [296, 1, 1, "", "rescale_profile_by_mass"], [297, 1, 1, "", "snfw_conc"], [298, 1, 1, "", "snfw_density_profile"], [299, 1, 1, "", "snfw_mass_profile"], [300, 1, 1, "", "snfw_total_mass"], [301, 1, 1, "", "tnfw_density_profile"], [302, 1, 1, "", "tnfw_mass_profile"], [303, 1, 1, "", "vikhlinin_density_profile"], [304, 1, 1, "", "vikhlinin_temperature_profile"], [305, 1, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[264, 3, 1, "", "__init__"], [265, 3, 1, "", "add_core"], [266, 3, 1, "", "built_in"], [267, 4, 1, "", "builtin"], [268, 3, 1, "", "cutoff"], [269, 3, 1, "", "from_array"], [270, 3, 1, "", "from_binary"], [271, 3, 1, "", "plot"], [272, 3, 1, "", "to_binary"]], "relations": [[307, 1, 1, "", "convert_ne_to_density"], [308, 1, 1, "", "f_gas"], [309, 1, 1, "", "m_bcg"], [310, 1, 1, "", "m_sat"], [311, 1, 1, "", "r_bcg"]], "utils": [[313, 1, 1, "", "build_yt_dataset_fields"], [314, 1, 1, "", "ensure_list"], [315, 1, 1, "", "ensure_ytarray"], [316, 1, 1, "", "ensure_ytquantity"], [317, 1, 1, "", "eprint"], [318, 1, 1, "", "generate_particle_radii"], [319, 1, 1, "", "integrate"], [320, 1, 1, "", "integrate_mass"], [321, 1, 1, "", "integrate_toinf"], [322, 1, 1, "", "log_string"], [323, 1, 1, "", "moving_average"], [324, 1, 1, "", "parse_prng"], [325, 1, 1, "", "truncate_spline"]], "virial": [[327, 2, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[328, 3, 1, "", "__init__"], [329, 3, 1, "", "check_virial"], [330, 5, 1, "", "df"], [331, 5, 1, "", "ee"], [332, 5, 1, "", "ff"], [333, 3, 1, "", "generate_particles"], [334, 4, 1, "", "model"], [335, 4, 1, "", "num_elements"], [336, 4, 1, "", "ptype"], [337, 5, 1, "", "sigma"], [338, 4, 1, "", "type"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"quickstart": [0, 352, 353, 354], "guid": [0, 342, 351, 352, 353, 354], "content": [0, 341, 344, 345, 347, 348, 351, 352, 355], "introduct": 0, "get": [0, 351, 354, 355], "packag": 0, "from": [0, 346, 347, 356], "pypi": 0, "With": [0, 355], "conda": 0, "pip": 0, "sourc": 0, "depend": 0, "start": [0, 355], "unit": [0, 64, 69, 74, 79, 84, 89, 94, 99], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 340, 342], "avail": [1, 341, 344], "softwar": 1, "setup_arepo_": 2, "setup_art_": 3, "setup_athena_": 4, "setup_enzo_": 5, "setup_flash_": 6, "setup_gamer_": 7, "setup_gizmo_": 8, "setup_ramses_": 9, "write_amr_particl": 10, "collect": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 341, 351], "ascasibar07": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__init__": [13, 25, 36, 48, 62, 67, 72, 77, 82, 87, 92, 97, 105, 114, 123, 129, 138, 148, 166, 203, 241, 264, 328], "descript": [14, 26, 37, 49], "load": [15, 38, 50], "load_method": [16, 27, 39, 51], "load_model": [17, 28, 40, 52], "name": [18, 19, 29, 30, 41, 42, 53, 54], "paramet": [20, 31, 43, 55, 346], "path": [21, 32, 44, 56], "plot_summari": [22, 33, 45, 57], "profil": [23, 34, 46, 58, 156, 262, 347, 348, 357], "clustercollect": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "sanderson10": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "vikhlinin06": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_collect": 59, "field": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 174, 211, 245, 343, 347, 356], "clusterfield": [61, 62, 63, 64, 65], "map_field_to_particl": [63, 68, 73, 78, 83, 88, 93, 98], "write_fil": [65, 70, 75, 80, 85, 90, 95, 100], "gaussianrandomfield": [66, 67, 68, 69, 70], "radialrandommagneticfield": [71, 72, 73, 74, 75], "radialrandommagneticvectorpotenti": [76, 77, 78, 79, 80], "radialrandomvelocityfield": [81, 82, 83, 84, 85], "randommagneticfield": [86, 87, 88, 89, 90], "randommagneticvectorpotenti": [91, 92, 93, 94, 95], "randomvelocityfield": [96, 97, 98, 99, 100], "parse_valu": 101, "rot_3d": 102, "graviti": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 344, 347, 348, 355], "aqualgrav": [104, 105, 106, 107, 108, 109, 110, 111, 112], "attr": [106, 115, 124, 130, 139, 167, 204], "compute_mass": [107, 116, 131, 140], "compute_potenti": [108, 117, 132, 141], "is_calcul": [109, 118, 125, 133, 142], "model": [110, 119, 126, 134, 143, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 334, 347], "potenti": [111, 120, 135, 144, 343], "reset": [112, 121, 127, 136, 145], "emondgrav": [113, 114, 115, 116, 117, 118, 119, 120, 121], "newtoniangrav": [128, 129, 130, 131, 132, 133, 134, 135, 136], "qumondgrav": [137, 138, 139, 140, 141, 142, 143, 144, 145], "ic": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 340], "cluster": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 340, 343, 346, 347, 348, 354], "basenam": 149, "center": 150, "compute_orbit": 151, "create_dataset": [152, 171, 208], "from_fil": [153, 247], "mag_fil": 154, "num_halo": 155, "r_max": 157, "resample_particle_": 158, "setup_particle_": 159, "to_fil": 160, "tot_np": 161, "veloc": [162, 343, 356], "compute_centers_for_binari": 163, "galaxi": 164, "clustermodel": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 347, 348, 356], "check_dm_viri": [168, 205], "check_hs": [169, 206], "check_star_viri": [170, 207], "default_field": [172, 209], "dm_virial": [173, 210], "find_field_at_radiu": [175, 212], "from_arrai": [176, 213, 269], "develop": [176, 213], "note": [176, 213, 344, 355, 357], "from_dens_and_entr": [177, 214], "from_dens_and_tden": [178, 215], "from_dens_and_temp": [179, 216], "from_h5_fil": [180, 217, 249], "generate_dm_particl": [181, 218], "generate_gas_particl": [182, 219], "generate_star_particl": [183, 220], "generate_tracer_particl": [184, 221], "is_phys": [185, 222], "kei": [186, 223, 250], "mass_in_radiu": [187, 224], "no_ga": [188, 225], "num_el": [189, 226, 335], "plot": [190, 227, 271], "pot": [191, 228], "rebuild_phys": [192, 229], "method": [192, 229], "set_field": [193, 230, 255], "set_magnetic_field_from_beta": [194, 231], "set_magnetic_field_from_dens": [195, 232], "set_rmax": [196, 233], "star_viri": [197, 234], "virialization_method": [198, 235], "write_model_to_ascii": [199, 236], "write_model_to_binari": [200, 237], "write_model_to_h5": [201, 238], "hydrostaticequilibrium": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "particl": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 343, 348, 356], "clusterparticl": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 348, 356], "add_black_hol": 242, "add_offset": 243, "drop_ptyp": 244, "from_field": 246, "from_gadget_fil": 248, "make_radial_cut": 251, "num_passive_scalar": 252, "particle_typ": 253, "passive_scalar": 254, "to_yt_dataset": 256, "write_particl": 257, "write_particles_to_h5": 258, "write_to_gadget_fil": 259, "concat_clust": 260, "resample_clust": 261, "radial_profil": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "radial": [262, 343, 347, 348, 357], "radialprofil": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 348], "info": 263, "add_cor": 265, "built_in": 266, "builtin": [267, 351], "cutoff": 268, "from_binari": 270, "to_binari": 272, "ad07_density_profil": 273, "ad07_temperature_profil": 274, "am06_density_profil": 275, "am06_temperature_profil": 276, "baseline_entropy_profil": 277, "beta_model_profil": 278, "broken_entropy_profil": 279, "constant_profil": 280, "convert_nfw_to_hernquist": 281, "cored_hernquist_density_profil": 282, "cored_snfw_density_profil": 283, "cored_snfw_mass_profil": 284, "cored_snfw_total_mass": 285, "einasto_density_profil": 286, "einasto_mass_profil": 287, "find_overdensity_radiu": 288, "find_radius_mass": 289, "hernquist_density_profil": 290, "hernquist_mass_profil": 291, "nfw_density_profil": 292, "nfw_mass_profil": 293, "nfw_scale_dens": 294, "power_law_profil": 295, "rescale_profile_by_mass": 296, "snfw_conc": 297, "snfw_density_profil": 298, "snfw_mass_profil": 299, "snfw_total_mass": 300, "tnfw_density_profil": 301, "tnfw_mass_profil": 302, "vikhlinin_density_profil": 303, "vikhlinin_temperature_profil": 304, "walker_entropy_profil": 305, "relat": [306, 307, 308, 309, 310, 311, 345], "convert_ne_to_dens": 307, "f_ga": 308, "m_bcg": 309, "m_sat": 310, "r_bcg": 311, "util": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "build_yt_dataset_field": 313, "ensure_list": 314, "ensure_ytarrai": 315, "ensure_ytquant": 316, "eprint": 317, "generate_particle_radii": 318, "integr": 319, "integrate_mass": 320, "integrate_toinf": 321, "log_str": 322, "moving_averag": 323, "parse_prng": 324, "truncate_splin": 325, "virial": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 349, 356], "virialequilibrium": [327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 348], "gener": [327, 340, 343, 346, 347, 348, 354, 356, 357], "phase": 327, "space": 327, "densiti": [327, 347, 357], "check_viri": 329, "df": 330, "ee": 331, "ff": 332, "generate_particl": 333, "ptype": 336, "sigma": 337, "type": [338, 356], "api": [339, 342], "set": [340, 347], "up": 340, "ideal": 340, "problem": 340, "variou": 340, "flash": 340, "gamer": 340, "arepo": 340, "gizmo": 340, "enzo": 340, "rams": 340, "your": [340, 353], "configur": 340, "run": 340, "simul": [340, 353], "athena": 340, "dataset": 341, "access": [341, 348, 351], "built": 341, "In": 341, "custom": 341, "exampl": [342, 344], "3d": 343, "mathemat": [343, 344, 347, 356, 357], "overview": [343, 347, 356], "initi": [343, 346, 355], "magnet": [343, 347], "random": 343, "vector": 343, "map": 343, "write": [343, 347], "out": [343, 354], "disk": [343, 347], "theori": 344, "mondian": [344, 355], "aqual": [344, 347], "implement": 344, "qumond": [344, 347], "refer": [344, 349, 357], "cluster_gener": [345, 348, 349], "featur": [345, 351], "resourc": 345, "project": 345, "indic": 345, "tabl": 345, "condit": [346, 355], "script": 346, "file": 346, "reader": 347, "suggest": 347, "newtonian": 347, "mond": 347, "us": [347, 348, 350, 351], "ga": [347, 356], "temperatur": [347, 357], "total": 347, "entropi": [347, 357], "without": 347, "check": [347, 356], "hydrostat": 347, "equilibrium": [347, 356], "strength": 347, "beta": 347, "plasma": 347, "ad": [347, 356], "other": 347, "read": 347, "object": [347, 356], "user": 347, "advic": 347, "non": 347, "physic": 347, "system": 347, "data": 348, "structur": 348, "exist": 348, "creat": 348, "i": [348, 351, 356], "o": [348, 356], "oper": [348, 356], "insid": 348, "conent": 349, "galact": 349, "dynam": 349, "The": [349, 352, 354, 356], "distribut": 349, "function": 349, "collisionless": 349, "boltzmann": 349, "equat": 349, "jean": 349, "": 349, "theorem": 349, "eddington": 349, "formula": 349, "local": 349, "maxwellian": 349, "approxim": 349, "advanc": 350, "case": 350, "what": 351, "ar": 351, "how": 351, "do": 351, "One": 351, "technic": 351, "basic": 352, "build": 352, "foundat": 352, "rais": 352, "frame": 352, "finish": 352, "hous": 352, "first": 353, "most": 354, "funki": 355, "import": 355, "make": [355, 356], "dark": 356, "matter": 356, "star": 356, "equilibria": 356, "class": 356, "drop": 356, "add": 356, "posit": 356, "offset": 356, "cut": 356, "radiu": 356, "black": 356, "hole": 356, "new": 356, "chang": 356, "gadget": 356, "like": 356, "constant": 357, "power": 357, "law": 357, "mass": 357, "nfw": 357, "super": 357, "truncat": 357, "hernquist": 357, "einasto": 357, "vikhlinin": 357, "et": 357, "al": 357, "2006": 357, "ascasibar": 357, "markevitch": 357, "baselin": 357}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Quickstart Guide": [[0, "quickstart-guide"]], "Contents": [[0, "contents"], [341, "contents"], [344, "contents"], [345, "contents"], [347, "contents"], [348, "Contents"], [351, "Contents"], [352, "Contents"], [355, "Contents"]], "Introduction": [[0, "introduction"]], "Getting the Package": [[0, "getting-the-package"]], "From PyPI": [[0, "from-pypi"]], "With CONDA": [[0, "with-conda"]], "With PIP": [[0, "with-pip"]], "From Source": [[0, "from-source"]], "Dependencies": [[0, "dependencies"]], "Getting Started": [[0, "id1"]], "Quickstart Guides": [[0, "quickstart-guides"]], "Units": [[0, "units"]], "codes": [[1, "module-codes"]], "Available Softwares": [[1, "available-softwares"]], "codes.setup_arepo_ics": [[2, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[3, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[4, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[5, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[6, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[7, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[8, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[9, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[10, "codes-write-amr-particles"]], "collection": [[11, "module-collection"]], "collection.Ascasibar07": [[12, "collection-ascasibar07"]], "collection.Ascasibar07.__init__": [[13, "collection-ascasibar07-init"]], "collection.Ascasibar07.description": [[14, "collection-ascasibar07-description"]], "collection.Ascasibar07.load": [[15, "collection-ascasibar07-load"]], "collection.Ascasibar07.load_method": [[16, "collection-ascasibar07-load-method"]], "collection.Ascasibar07.load_model": [[17, "collection-ascasibar07-load-model"]], "collection.Ascasibar07.name": [[18, "collection-ascasibar07-name"]], "collection.Ascasibar07.names": [[19, "collection-ascasibar07-names"]], "collection.Ascasibar07.parameters": [[20, "collection-ascasibar07-parameters"]], "collection.Ascasibar07.path": [[21, "collection-ascasibar07-path"]], "collection.Ascasibar07.plot_summary": [[22, "collection-ascasibar07-plot-summary"]], "collection.Ascasibar07.profiles": [[23, "collection-ascasibar07-profiles"]], "collection.ClusterCollection": [[24, "collection-clustercollection"]], "collection.ClusterCollection.__init__": [[25, "collection-clustercollection-init"]], "collection.ClusterCollection.description": [[26, "collection-clustercollection-description"]], "collection.ClusterCollection.load_method": [[27, "collection-clustercollection-load-method"]], "collection.ClusterCollection.load_model": [[28, "collection-clustercollection-load-model"]], "collection.ClusterCollection.name": [[29, "collection-clustercollection-name"]], "collection.ClusterCollection.names": [[30, "collection-clustercollection-names"]], "collection.ClusterCollection.parameters": [[31, "collection-clustercollection-parameters"]], "collection.ClusterCollection.path": [[32, "collection-clustercollection-path"]], "collection.ClusterCollection.plot_summary": [[33, "collection-clustercollection-plot-summary"]], "collection.ClusterCollection.profiles": [[34, "collection-clustercollection-profiles"]], "collection.Sanderson10": [[35, "collection-sanderson10"]], "collection.Sanderson10.__init__": [[36, "collection-sanderson10-init"]], "collection.Sanderson10.description": [[37, "collection-sanderson10-description"]], "collection.Sanderson10.load": [[38, "collection-sanderson10-load"]], "collection.Sanderson10.load_method": [[39, "collection-sanderson10-load-method"]], "collection.Sanderson10.load_model": [[40, "collection-sanderson10-load-model"]], "collection.Sanderson10.name": [[41, "collection-sanderson10-name"]], "collection.Sanderson10.names": [[42, "collection-sanderson10-names"]], "collection.Sanderson10.parameters": [[43, "collection-sanderson10-parameters"]], "collection.Sanderson10.path": [[44, "collection-sanderson10-path"]], "collection.Sanderson10.plot_summary": [[45, "collection-sanderson10-plot-summary"]], "collection.Sanderson10.profiles": [[46, "collection-sanderson10-profiles"]], "collection.Vikhlinin06": [[47, "collection-vikhlinin06"]], "collection.Vikhlinin06.__init__": [[48, "collection-vikhlinin06-init"]], "collection.Vikhlinin06.description": [[49, "collection-vikhlinin06-description"]], "collection.Vikhlinin06.load": [[50, "collection-vikhlinin06-load"]], "collection.Vikhlinin06.load_method": [[51, "collection-vikhlinin06-load-method"]], "collection.Vikhlinin06.load_model": [[52, "collection-vikhlinin06-load-model"]], "collection.Vikhlinin06.name": [[53, "collection-vikhlinin06-name"]], "collection.Vikhlinin06.names": [[54, "collection-vikhlinin06-names"]], "collection.Vikhlinin06.parameters": [[55, "collection-vikhlinin06-parameters"]], "collection.Vikhlinin06.path": [[56, "collection-vikhlinin06-path"]], "collection.Vikhlinin06.plot_summary": [[57, "collection-vikhlinin06-plot-summary"]], "collection.Vikhlinin06.profiles": [[58, "collection-vikhlinin06-profiles"]], "collection.get_collections": [[59, "collection-get-collections"]], "fields": [[60, "module-fields"]], "fields.ClusterField": [[61, "fields-clusterfield"]], "fields.ClusterField.__init__": [[62, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[63, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[64, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[65, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[66, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[67, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[68, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[69, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[70, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[71, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[72, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[73, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[74, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[75, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[76, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[77, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[78, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[79, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[80, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[81, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[82, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[83, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[84, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[85, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[86, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[87, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[88, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[89, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[90, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[91, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[92, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[93, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[94, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[95, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[96, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[97, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[98, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[99, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[100, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[101, "fields-parse-value"]], "fields.rot_3d": [[102, "fields-rot-3d"]], "gravity": [[103, "module-gravity"]], "gravity.AQUALGravity": [[104, "gravity-aqualgravity"]], "gravity.AQUALGravity.__init__": [[105, "gravity-aqualgravity-init"]], "gravity.AQUALGravity.attrs": [[106, "gravity-aqualgravity-attrs"]], "gravity.AQUALGravity.compute_mass": [[107, "gravity-aqualgravity-compute-mass"]], "gravity.AQUALGravity.compute_potential": [[108, "gravity-aqualgravity-compute-potential"]], "gravity.AQUALGravity.is_calculated": [[109, "gravity-aqualgravity-is-calculated"]], "gravity.AQUALGravity.model": [[110, "gravity-aqualgravity-model"]], "gravity.AQUALGravity.potential": [[111, "gravity-aqualgravity-potential"]], "gravity.AQUALGravity.reset": [[112, "gravity-aqualgravity-reset"]], "gravity.EMONDGravity": [[113, "gravity-emondgravity"]], "gravity.EMONDGravity.__init__": [[114, "gravity-emondgravity-init"]], "gravity.EMONDGravity.attrs": [[115, "gravity-emondgravity-attrs"]], "gravity.EMONDGravity.compute_mass": [[116, "gravity-emondgravity-compute-mass"]], "gravity.EMONDGravity.compute_potential": [[117, "gravity-emondgravity-compute-potential"]], "gravity.EMONDGravity.is_calculated": [[118, "gravity-emondgravity-is-calculated"]], "gravity.EMONDGravity.model": [[119, "gravity-emondgravity-model"]], "gravity.EMONDGravity.potential": [[120, "gravity-emondgravity-potential"]], "gravity.EMONDGravity.reset": [[121, "gravity-emondgravity-reset"]], "gravity.Gravity": [[122, "gravity-gravity"]], "gravity.Gravity.__init__": [[123, "gravity-gravity-init"]], "gravity.Gravity.attrs": [[124, "gravity-gravity-attrs"]], "gravity.Gravity.is_calculated": [[125, "gravity-gravity-is-calculated"]], "gravity.Gravity.model": [[126, "gravity-gravity-model"]], "gravity.Gravity.reset": [[127, "gravity-gravity-reset"]], "gravity.NewtonianGravity": [[128, "gravity-newtoniangravity"]], "gravity.NewtonianGravity.__init__": [[129, "gravity-newtoniangravity-init"]], "gravity.NewtonianGravity.attrs": [[130, "gravity-newtoniangravity-attrs"]], "gravity.NewtonianGravity.compute_mass": [[131, "gravity-newtoniangravity-compute-mass"]], "gravity.NewtonianGravity.compute_potential": [[132, "gravity-newtoniangravity-compute-potential"]], "gravity.NewtonianGravity.is_calculated": [[133, "gravity-newtoniangravity-is-calculated"]], "gravity.NewtonianGravity.model": [[134, "gravity-newtoniangravity-model"]], "gravity.NewtonianGravity.potential": [[135, "gravity-newtoniangravity-potential"]], "gravity.NewtonianGravity.reset": [[136, "gravity-newtoniangravity-reset"]], "gravity.QUMONDGravity": [[137, "gravity-qumondgravity"]], "gravity.QUMONDGravity.__init__": [[138, "gravity-qumondgravity-init"]], "gravity.QUMONDGravity.attrs": [[139, "gravity-qumondgravity-attrs"]], "gravity.QUMONDGravity.compute_mass": [[140, "gravity-qumondgravity-compute-mass"]], "gravity.QUMONDGravity.compute_potential": [[141, "gravity-qumondgravity-compute-potential"]], "gravity.QUMONDGravity.is_calculated": [[142, "gravity-qumondgravity-is-calculated"]], "gravity.QUMONDGravity.model": [[143, "gravity-qumondgravity-model"]], "gravity.QUMONDGravity.potential": [[144, "gravity-qumondgravity-potential"]], "gravity.QUMONDGravity.reset": [[145, "gravity-qumondgravity-reset"]], "ics": [[146, "module-ics"]], "ics.ClusterICs": [[147, "ics-clusterics"]], "ics.ClusterICs.__init__": [[148, "ics-clusterics-init"]], "ics.ClusterICs.basename": [[149, "ics-clusterics-basename"]], "ics.ClusterICs.center": [[150, "ics-clusterics-center"]], "ics.ClusterICs.compute_orbits": [[151, "ics-clusterics-compute-orbits"]], "ics.ClusterICs.create_dataset": [[152, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[153, "ics-clusterics-from-file"]], "ics.ClusterICs.mag_file": [[154, "ics-clusterics-mag-file"]], "ics.ClusterICs.num_halos": [[155, "ics-clusterics-num-halos"]], "ics.ClusterICs.profiles": [[156, "ics-clusterics-profiles"]], "ics.ClusterICs.r_max": [[157, "ics-clusterics-r-max"]], "ics.ClusterICs.resample_particle_ics": [[158, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[159, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[160, "ics-clusterics-to-file"]], "ics.ClusterICs.tot_np": [[161, "ics-clusterics-tot-np"]], "ics.ClusterICs.velocity": [[162, "ics-clusterics-velocity"]], "ics.compute_centers_for_binary": [[163, "ics-compute-centers-for-binary"]], "model": [[164, "module-model"]], "Galaxy Cluster Models": [[164, "galaxy-cluster-models"]], "model.ClusterModel": [[165, "model-clustermodel"]], "model.ClusterModel.__init__": [[166, "model-clustermodel-init"]], "model.ClusterModel.attrs": [[167, "model-clustermodel-attrs"]], "model.ClusterModel.check_dm_virial": [[168, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[169, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[170, "model-clustermodel-check-star-virial"]], "model.ClusterModel.create_dataset": [[171, "model-clustermodel-create-dataset"]], "model.ClusterModel.default_fields": [[172, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[173, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[174, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[175, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.from_arrays": [[176, "model-clustermodel-from-arrays"]], "development note": [[176, null], [213, null]], "model.ClusterModel.from_dens_and_entr": [[177, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[178, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[179, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[180, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[181, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[182, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[183, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[184, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.is_physical": [[185, "model-clustermodel-is-physical"]], "model.ClusterModel.keys": [[186, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[187, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[188, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[189, "model-clustermodel-num-elements"]], "model.ClusterModel.plot": [[190, "model-clustermodel-plot"]], "model.ClusterModel.pot": [[191, "model-clustermodel-pot"]], "model.ClusterModel.rebuild_physical": [[192, "model-clustermodel-rebuild-physical"]], "Method": [[192, "method"], [229, "method"]], "model.ClusterModel.set_field": [[193, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[194, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[195, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[196, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[197, "model-clustermodel-star-virial"]], "model.ClusterModel.virialization_method": [[198, "model-clustermodel-virialization-method"]], "model.ClusterModel.write_model_to_ascii": [[199, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[200, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[201, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[202, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[203, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.attrs": [[204, "model-hydrostaticequilibrium-attrs"]], "model.HydrostaticEquilibrium.check_dm_virial": [[205, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[206, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[207, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.create_dataset": [[208, "model-hydrostaticequilibrium-create-dataset"]], "model.HydrostaticEquilibrium.default_fields": [[209, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[210, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[211, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[212, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.from_arrays": [[213, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[214, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[215, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[216, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[217, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[218, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[219, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[220, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[221, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.is_physical": [[222, "model-hydrostaticequilibrium-is-physical"]], "model.HydrostaticEquilibrium.keys": [[223, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[224, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[225, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[226, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.plot": [[227, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.pot": [[228, "model-hydrostaticequilibrium-pot"]], "model.HydrostaticEquilibrium.rebuild_physical": [[229, "model-hydrostaticequilibrium-rebuild-physical"]], "model.HydrostaticEquilibrium.set_field": [[230, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[231, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[232, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[233, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[234, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.virialization_method": [[235, "model-hydrostaticequilibrium-virialization-method"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[236, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[237, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[238, "model-hydrostaticequilibrium-write-model-to-h5"]], "particles": [[239, "module-particles"]], "particles.ClusterParticles": [[240, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[241, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[242, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[243, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[244, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.fields": [[245, "particles-clusterparticles-fields"]], "particles.ClusterParticles.from_fields": [[246, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[247, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[248, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[249, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[250, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[251, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[252, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.particle_types": [[253, "particles-clusterparticles-particle-types"]], "particles.ClusterParticles.passive_scalars": [[254, "particles-clusterparticles-passive-scalars"]], "particles.ClusterParticles.set_field": [[255, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[256, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[257, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[258, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[259, "particles-clusterparticles-write-to-gadget-file"]], "particles.concat_clusters": [[260, "particles-concat-clusters"]], "particles.resample_clusters": [[261, "particles-resample-clusters"]], "radial_profiles": [[262, "module-radial_profiles"]], "Radial Profiles": [[262, "id1"], [348, "Radial-Profiles"], [357, "radial-profiles"]], "radial_profiles.RadialProfile": [[263, "radial-profiles-radialprofile"]], "info": [[263, null]], "radial_profiles.RadialProfile.__init__": [[264, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[265, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[266, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[267, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[268, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[269, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[270, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.plot": [[271, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[272, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[273, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[274, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[275, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[276, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[277, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[278, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[279, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[280, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[281, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[282, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[283, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[284, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[285, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[286, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[287, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[288, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[289, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[290, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[291, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[292, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[293, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[294, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[295, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[296, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[297, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[298, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[299, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[300, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[301, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[302, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[303, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[304, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[305, "radial-profiles-walker-entropy-profile"]], "relations": [[306, "module-relations"]], "Relations": [[306, "id1"]], "relations.convert_ne_to_density": [[307, "relations-convert-ne-to-density"]], "relations.f_gas": [[308, "relations-f-gas"]], "relations.m_bcg": [[309, "relations-m-bcg"]], "relations.m_sat": [[310, "relations-m-sat"]], "relations.r_bcg": [[311, "relations-r-bcg"]], "utils": [[312, "module-utils"]], "utils.build_yt_dataset_fields": [[313, "utils-build-yt-dataset-fields"]], "utils.ensure_list": [[314, "utils-ensure-list"]], "utils.ensure_ytarray": [[315, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[316, "utils-ensure-ytquantity"]], "utils.eprint": [[317, "utils-eprint"]], "utils.generate_particle_radii": [[318, "utils-generate-particle-radii"]], "utils.integrate": [[319, "utils-integrate"]], "utils.integrate_mass": [[320, "utils-integrate-mass"]], "utils.integrate_toinf": [[321, "utils-integrate-toinf"]], "utils.log_string": [[322, "utils-log-string"]], "utils.moving_average": [[323, "utils-moving-average"]], "utils.parse_prng": [[324, "utils-parse-prng"]], "utils.truncate_spline": [[325, "utils-truncate-spline"]], "virial": [[326, "module-virial"]], "virial.VirialEquilibrium": [[327, "virial-virialequilibrium"]], "Generating the Phase Space Density": [[327, "generating-the-phase-space-density"]], "virial.VirialEquilibrium.__init__": [[328, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[329, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.df": [[330, "virial-virialequilibrium-df"]], "virial.VirialEquilibrium.ee": [[331, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[332, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[333, "virial-virialequilibrium-generate-particles"]], "virial.VirialEquilibrium.model": [[334, "virial-virialequilibrium-model"]], "virial.VirialEquilibrium.num_elements": [[335, "virial-virialequilibrium-num-elements"]], "virial.VirialEquilibrium.ptype": [[336, "virial-virialequilibrium-ptype"]], "virial.VirialEquilibrium.sigma": [[337, "virial-virialequilibrium-sigma"]], "virial.VirialEquilibrium.type": [[338, "virial-virialequilibrium-type"]], "API": [[339, "api"]], "Setting Up Idealized Cluster Problems in Various Codes": [[340, "setting-up-idealized-cluster-problems-in-various-codes"]], "FLASH": [[340, "flash"]], "GAMER": [[340, "gamer"]], "Arepo": [[340, "arepo"]], "GIZMO": [[340, "gizmo"]], "Enzo": [[340, "enzo"]], "Ramses": [[340, "ramses"]], "Generating your ICs": [[340, "generating-your-ics"]], "Configuring RAMSES": [[340, "configuring-ramses"]], "Running the Simulation": [[340, "running-the-simulation"]], "Athena++": [[340, "athena"]], "Collections": [[341, "collections"]], "Available Datasets": [[341, "available-datasets"]], "Accessing Collections": [[341, "accessing-collections"]], "Built-In Collections": [[341, "built-in-collections"]], "Custom Collections": [[341, "custom-collections"]], "Examples": [[342, "examples"]], "API Guides": [[342, "api-guides"]], "Code Examples": [[342, "code-examples"]], "Generating 3D Cluster Fields": [[343, "generating-3d-cluster-fields"]], "Mathematical Overview": [[343, "mathematical-overview"]], "Initializing a Magnetic Field": [[343, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[343, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[343, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[343, "initializing-a-velocity-field"]], "Random Velocity Fields": [[343, "random-velocity-fields"]], "Radial Random Velocity Fields": [[343, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[343, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[343, "writing-a-field-out-to-disk"]], "Gravity Theories": [[344, "gravity-theories"]], "Available Gravity Theories": [[344, "available-gravity-theories"]], "MONDian Gravity": [[344, "mondian-gravity"]], "AQUAL": [[344, "aqual"]], "Implementation": [[344, "implementation"]], "QUMOND": [[344, "qumond"]], "Mathematical Note": [[344, null], [357, null]], "Example": [[344, null]], "References": [[344, "references"], [349, "References"], [357, "references"]], "cluster_generator": [[345, "cluster-generator"]], "Features": [[345, "features"]], "Resources": [[345, "resources"]], "Related Projects": [[345, "related-projects"]], "Indices and tables": [[345, "indices-and-tables"]], "Initial Conditions Generation": [[346, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[346, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[346, "clusterics-parameter-files"]], "Cluster Models": [[347, "cluster-models"]], "Cluster Models: Mathematical Overview": [[347, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[347, null]], "Newtonian Gravity": [[347, "newtonian-gravity"]], "MOND Gravity: AQUAL": [[347, "mond-gravity-aqual"]], "MOND Gravity: QUMOND": [[347, "mond-gravity-qumond"]], "Generating a model.ClusterModel Using Radial Profiles": [[347, "generating-a-model-clustermodel-using-radial-profiles"]], "ClusterModel from Gas Density and Gas Temperature Profiles": [[347, "clustermodel-from-gas-density-and-gas-temperature-profiles"]], "ClusterModel from Gas Density and Total Density Profiles": [[347, "clustermodel-from-gas-density-and-total-density-profiles"]], "ClusterModel from Gas Density and Gas Entropy Profiles": [[347, "clustermodel-from-gas-density-and-gas-entropy-profiles"]], "ClusterModel Without Gas": [[347, "clustermodel-without-gas"]], "Checking the Hydrostatic Equilibrium": [[347, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[347, "setting-a-magnetic-field-strength-profile"]], "Setting a Magnetic Field from \\beta": [[347, "setting-a-magnetic-field-from-beta"]], "Setting a Magnetic Field from plasma density": [[347, "setting-a-magnetic-field-from-plasma-density"]], "Adding Other Fields": [[347, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[347, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[347, null]], "Non-Physical Systems": [[347, "non-physical-systems"]], "Data Structures in cluster_generator": [[348, "Data-Structures-in-cluster_generator"]], "Data Structures": [[348, "Data-Structures"]], "Accessing and Using Existing Profiles": [[348, "Accessing-and-Using-Existing-Profiles"]], "Creating Profiles": [[348, "Creating-Profiles"]], "I/O Operations on RadialProfiles": [[348, "I/O-Operations-on-RadialProfiles"]], "Gravity": [[348, "Gravity"]], "ClusterModel": [[348, "ClusterModel"]], "VirialEquilibrium": [[348, "VirialEquilibrium"]], "Generating Particles": [[348, "Generating-Particles"]], "ClusterParticles": [[348, "ClusterParticles"]], "ClusterICs": [[348, "ClusterICs"]], "Inside ClusterICs": [[348, "Inside-ClusterICs"]], "Virialization": [[349, "Virialization"]], "Conents": [[349, "Conents"]], "Galactic Dynamics": [[349, "Galactic-Dynamics"]], "The Distribution Function": [[349, "The-Distribution-Function"]], "The Collisionless Boltzmann Equation": [[349, "The-Collisionless-Boltzmann-Equation"]], "The Jean\u2019s Equation": [[349, "The-Jean's-Equation"]], "The Jean\u2019s Theorem": [[349, "The-Jean's-Theorem"]], "The Eddington Formula": [[349, "The-Eddington-Formula"]], "The Local Maxwellian Approximation": [[349, "The-Local-Maxwellian-Approximation"]], "Virialization in cluster_generator": [[349, "Virialization-in-cluster_generator"]], "Advanced Use Cases": [[350, "Advanced-Use-Cases"]], "Feature Guide: Using Builtin Collections": [[351, "Feature-Guide:-Using-Builtin-Collections"]], "What Are Collections": [[351, "What-Are-Collections"]], "How Do I Access One?": [[351, "How-Do-I-Access-One?"]], "Getting Technical": [[351, "Getting-Technical"]], "Quickstart Guide: The Basics": [[352, "Quickstart-Guide:-The-Basics"]], "Building The Foundation": [[352, "Building-The-Foundation"]], "Raising The Frame": [[352, "Raising-The-Frame"]], "Finishing The House": [[352, "Finishing-The-House"]], "Quickstart Guide: Your First Simulation": [[353, "Quickstart-Guide:-Your-First-Simulation"]], "Quickstart Guide: Getting The Most Out of Cluster Generator": [[354, "Quickstart-Guide:-Getting-The-Most-Out-of-Cluster-Generator"]], "Getting Funky: MONDian Gravity": [[355, "Getting-Funky:-MONDian-Gravity"]], "Important Note": [[355, "Important-Note"]], "Getting Started With Gravity": [[355, "Getting-Started-With-Gravity"]], "Making Initial Conditions": [[355, "Making-Initial-Conditions"]], "Particles": [[356, "particles"]], "Generating Particles from ClusterModel Objects": [[356, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[356, "gas-particles"]], "Dark Matter and Star Particles": [[356, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[356, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[356, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[356, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[356, "the-clusterparticles-class"]], "ClusterParticles Operations": [[356, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[356, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[356, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[356, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[356, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[356, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[356, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[356, "clusterparticles-i-o"]], "Gadget-Like I/O": [[356, "gadget-like-i-o"]], "General Profiles": [[357, "general-profiles"]], "Constant Profile": [[357, "constant-profile"]], "Power-Law Profile": [[357, "power-law-profile"]], "Density and Mass Profiles": [[357, "density-and-mass-profiles"]], "NFW Profile": [[357, "nfw-profile"]], "\u201csuper-NFW\u201d Profile": [[357, "super-nfw-profile"]], "Truncated NFW Profile": [[357, "truncated-nfw-profile"]], "Hernquist Profile": [[357, "hernquist-profile"]], "Einasto Profile": [[357, "einasto-profile"]], "Vikhlinin et al. 2006 Density Profile": [[357, "vikhlinin-et-al-2006-density-profile"]], "Ascasibar & Markevitch 2006 Density Profile": [[357, "ascasibar-markevitch-2006-density-profile"]], "Temperature Profiles": [[357, "temperature-profiles"]], "Vikhlinin et al. 2006 Temperature Profile": [[357, "vikhlinin-et-al-2006-temperature-profile"]], "Ascasibar & Markevitch 2006 Temperature Profile": [[357, "ascasibar-markevitch-2006-temperature-profile"]], "Entropy Profiles": [[357, "entropy-profiles"]], "Baseline Entropy Profile": [[357, "baseline-entropy-profile"]]}, "indexentries": {"codes": [[1, "module-codes"]], "module": [[1, "module-codes"], [11, "module-collection"], [60, "module-fields"], [103, "module-gravity"], [146, "module-ics"], [164, "module-model"], [239, "module-particles"], [262, "module-radial_profiles"], [306, "module-relations"], [312, "module-utils"], [326, "module-virial"]], "setup_arepo_ics() (in module codes)": [[2, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[3, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[4, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[5, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[6, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[7, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[8, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[9, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[10, "codes.write_amr_particles"]], "collection": [[11, "module-collection"]], "ascasibar07 (class in collection)": [[12, "collection.Ascasibar07"]], "__init__() (collection.ascasibar07 method)": [[13, "collection.Ascasibar07.__init__"]], "description (collection.ascasibar07 attribute)": [[14, "collection.Ascasibar07.description"]], "load() (collection.ascasibar07 static method)": [[15, "collection.Ascasibar07.load"]], "load_method (collection.ascasibar07 attribute)": [[16, "collection.Ascasibar07.load_method"]], "load_model() (collection.ascasibar07 method)": [[17, "collection.Ascasibar07.load_model"]], "name (collection.ascasibar07 attribute)": [[18, "collection.Ascasibar07.name"]], "names (collection.ascasibar07 property)": [[19, "collection.Ascasibar07.names"]], "parameters (collection.ascasibar07 property)": [[20, "collection.Ascasibar07.parameters"]], "path (collection.ascasibar07 attribute)": [[21, "collection.Ascasibar07.path"]], "plot_summary() (collection.ascasibar07 method)": [[22, "collection.Ascasibar07.plot_summary"]], "profiles (collection.ascasibar07 property)": [[23, "collection.Ascasibar07.profiles"]], "clustercollection (class in collection)": [[24, "collection.ClusterCollection"]], "__init__() (collection.clustercollection method)": [[25, "collection.ClusterCollection.__init__"]], "description (collection.clustercollection attribute)": [[26, "collection.ClusterCollection.description"]], "load_method (collection.clustercollection attribute)": [[27, "collection.ClusterCollection.load_method"]], "load_model() (collection.clustercollection method)": [[28, "collection.ClusterCollection.load_model"]], "name (collection.clustercollection attribute)": [[29, "collection.ClusterCollection.name"]], "names (collection.clustercollection property)": [[30, "collection.ClusterCollection.names"]], "parameters (collection.clustercollection property)": [[31, "collection.ClusterCollection.parameters"]], "path (collection.clustercollection attribute)": [[32, "collection.ClusterCollection.path"]], "plot_summary() (collection.clustercollection method)": [[33, "collection.ClusterCollection.plot_summary"]], "profiles (collection.clustercollection property)": [[34, "collection.ClusterCollection.profiles"]], "sanderson10 (class in collection)": [[35, "collection.Sanderson10"]], "__init__() (collection.sanderson10 method)": [[36, "collection.Sanderson10.__init__"]], "description (collection.sanderson10 attribute)": [[37, "collection.Sanderson10.description"]], "load() (collection.sanderson10 static method)": [[38, "collection.Sanderson10.load"]], "load_method (collection.sanderson10 attribute)": [[39, "collection.Sanderson10.load_method"]], "load_model() (collection.sanderson10 method)": [[40, "collection.Sanderson10.load_model"]], "name (collection.sanderson10 attribute)": [[41, "collection.Sanderson10.name"]], "names (collection.sanderson10 property)": [[42, "collection.Sanderson10.names"]], "parameters (collection.sanderson10 property)": [[43, "collection.Sanderson10.parameters"]], "path (collection.sanderson10 attribute)": [[44, "collection.Sanderson10.path"]], "plot_summary() (collection.sanderson10 method)": [[45, "collection.Sanderson10.plot_summary"]], "profiles (collection.sanderson10 property)": [[46, "collection.Sanderson10.profiles"]], "vikhlinin06 (class in collection)": [[47, "collection.Vikhlinin06"]], "__init__() (collection.vikhlinin06 method)": [[48, "collection.Vikhlinin06.__init__"]], "description (collection.vikhlinin06 attribute)": [[49, "collection.Vikhlinin06.description"]], "load() (collection.vikhlinin06 static method)": [[50, "collection.Vikhlinin06.load"]], "load_method (collection.vikhlinin06 attribute)": [[51, "collection.Vikhlinin06.load_method"]], "load_model() (collection.vikhlinin06 method)": [[52, "collection.Vikhlinin06.load_model"]], "name (collection.vikhlinin06 attribute)": [[53, "collection.Vikhlinin06.name"]], "names (collection.vikhlinin06 property)": [[54, "collection.Vikhlinin06.names"]], "parameters (collection.vikhlinin06 property)": [[55, "collection.Vikhlinin06.parameters"]], "path (collection.vikhlinin06 attribute)": [[56, "collection.Vikhlinin06.path"]], "plot_summary() (collection.vikhlinin06 method)": [[57, "collection.Vikhlinin06.plot_summary"]], "profiles (collection.vikhlinin06 property)": [[58, "collection.Vikhlinin06.profiles"]], "get_collections() (in module collection)": [[59, "collection.get_collections"]], "fields": [[60, "module-fields"]], "clusterfield (class in fields)": [[61, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[62, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[63, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[64, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[65, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[66, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[67, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[68, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[69, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[70, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[71, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[72, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[73, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[74, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[75, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[76, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[77, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[78, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[79, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[80, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[81, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[82, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[83, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[84, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[85, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[86, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[87, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[88, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[89, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[90, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[91, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[92, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[93, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[94, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[95, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[96, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[97, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[98, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[99, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[100, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[101, "fields.parse_value"]], "rot_3d() (in module fields)": [[102, "fields.rot_3d"]], "gravity": [[103, "module-gravity"]], "aqualgravity (class in gravity)": [[104, "gravity.AQUALGravity"]], "__init__() (gravity.aqualgravity method)": [[105, "gravity.AQUALGravity.__init__"]], "attrs (gravity.aqualgravity attribute)": [[106, "gravity.AQUALGravity.attrs"]], "compute_mass() (gravity.aqualgravity class method)": [[107, "gravity.AQUALGravity.compute_mass"]], "compute_potential() (gravity.aqualgravity class method)": [[108, "gravity.AQUALGravity.compute_potential"]], "is_calculated (gravity.aqualgravity property)": [[109, "gravity.AQUALGravity.is_calculated"]], "model (gravity.aqualgravity attribute)": [[110, "gravity.AQUALGravity.model"]], "potential() (gravity.aqualgravity method)": [[111, "gravity.AQUALGravity.potential"]], "reset() (gravity.aqualgravity method)": [[112, "gravity.AQUALGravity.reset"]], "emondgravity (class in gravity)": [[113, "gravity.EMONDGravity"]], "__init__() (gravity.emondgravity method)": [[114, "gravity.EMONDGravity.__init__"]], "attrs (gravity.emondgravity attribute)": [[115, "gravity.EMONDGravity.attrs"]], "compute_mass() (gravity.emondgravity class method)": [[116, "gravity.EMONDGravity.compute_mass"]], "compute_potential() (gravity.emondgravity class method)": [[117, "gravity.EMONDGravity.compute_potential"]], "is_calculated (gravity.emondgravity property)": [[118, "gravity.EMONDGravity.is_calculated"]], "model (gravity.emondgravity attribute)": [[119, "gravity.EMONDGravity.model"]], "potential() (gravity.emondgravity method)": [[120, "gravity.EMONDGravity.potential"]], "reset() (gravity.emondgravity method)": [[121, "gravity.EMONDGravity.reset"]], "gravity (class in gravity)": [[122, "gravity.Gravity"]], "__init__() (gravity.gravity method)": [[123, "gravity.Gravity.__init__"]], "attrs (gravity.gravity attribute)": [[124, "gravity.Gravity.attrs"]], "is_calculated (gravity.gravity property)": [[125, "gravity.Gravity.is_calculated"]], "model (gravity.gravity attribute)": [[126, "gravity.Gravity.model"]], "reset() (gravity.gravity method)": [[127, "gravity.Gravity.reset"]], "newtoniangravity (class in gravity)": [[128, "gravity.NewtonianGravity"]], "__init__() (gravity.newtoniangravity method)": [[129, "gravity.NewtonianGravity.__init__"]], "attrs (gravity.newtoniangravity attribute)": [[130, "gravity.NewtonianGravity.attrs"]], "compute_mass() (gravity.newtoniangravity class method)": [[131, "gravity.NewtonianGravity.compute_mass"]], "compute_potential() (gravity.newtoniangravity class method)": [[132, "gravity.NewtonianGravity.compute_potential"]], "is_calculated (gravity.newtoniangravity property)": [[133, "gravity.NewtonianGravity.is_calculated"]], "model (gravity.newtoniangravity attribute)": [[134, "gravity.NewtonianGravity.model"]], "potential() (gravity.newtoniangravity method)": [[135, "gravity.NewtonianGravity.potential"]], "reset() (gravity.newtoniangravity method)": [[136, "gravity.NewtonianGravity.reset"]], "qumondgravity (class in gravity)": [[137, "gravity.QUMONDGravity"]], "__init__() (gravity.qumondgravity method)": [[138, "gravity.QUMONDGravity.__init__"]], "attrs (gravity.qumondgravity attribute)": [[139, "gravity.QUMONDGravity.attrs"]], "compute_mass() (gravity.qumondgravity class method)": [[140, "gravity.QUMONDGravity.compute_mass"]], "compute_potential() (gravity.qumondgravity class method)": [[141, "gravity.QUMONDGravity.compute_potential"]], "is_calculated (gravity.qumondgravity property)": [[142, "gravity.QUMONDGravity.is_calculated"]], "model (gravity.qumondgravity attribute)": [[143, "gravity.QUMONDGravity.model"]], "potential() (gravity.qumondgravity method)": [[144, "gravity.QUMONDGravity.potential"]], "reset() (gravity.qumondgravity method)": [[145, "gravity.QUMONDGravity.reset"]], "ics": [[146, "module-ics"]], "clusterics (class in ics)": [[147, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[148, "ics.ClusterICs.__init__"]], "basename (ics.clusterics attribute)": [[149, "ics.ClusterICs.basename"]], "center (ics.clusterics attribute)": [[150, "ics.ClusterICs.center"]], "compute_orbits() (ics.clusterics method)": [[151, "ics.ClusterICs.compute_orbits"]], "create_dataset() (ics.clusterics method)": [[152, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[153, "ics.ClusterICs.from_file"]], "mag_file (ics.clusterics attribute)": [[154, "ics.ClusterICs.mag_file"]], "num_halos (ics.clusterics attribute)": [[155, "ics.ClusterICs.num_halos"]], "profiles (ics.clusterics attribute)": [[156, "ics.ClusterICs.profiles"]], "r_max (ics.clusterics attribute)": [[157, "ics.ClusterICs.r_max"]], "resample_particle_ics() (ics.clusterics method)": [[158, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[159, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[160, "ics.ClusterICs.to_file"]], "tot_np (ics.clusterics attribute)": [[161, "ics.ClusterICs.tot_np"]], "velocity (ics.clusterics attribute)": [[162, "ics.ClusterICs.velocity"]], "compute_centers_for_binary() (in module ics)": [[163, "ics.compute_centers_for_binary"]], "model": [[164, "module-model"]], "clustermodel (class in model)": [[165, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[166, "model.ClusterModel.__init__"]], "attrs (model.clustermodel attribute)": [[167, "model.ClusterModel.attrs"]], "check_dm_virial() (model.clustermodel method)": [[168, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[169, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[170, "model.ClusterModel.check_star_virial"]], "create_dataset() (model.clustermodel method)": [[171, "model.ClusterModel.create_dataset"]], "default_fields (model.clustermodel attribute)": [[172, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[173, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[174, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[175, "model.ClusterModel.find_field_at_radius"]], "from_arrays() (model.clustermodel class method)": [[176, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[177, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[178, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[179, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[180, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[181, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[182, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[183, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[184, "model.ClusterModel.generate_tracer_particles"]], "is_physical() (model.clustermodel method)": [[185, "model.ClusterModel.is_physical"]], "keys() (model.clustermodel method)": [[186, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[187, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[188, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[189, "model.ClusterModel.num_elements"]], "plot() (model.clustermodel method)": [[190, "model.ClusterModel.plot"]], "pot (model.clustermodel property)": [[191, "model.ClusterModel.pot"]], "rebuild_physical() (model.clustermodel method)": [[192, "model.ClusterModel.rebuild_physical"]], "set_field() (model.clustermodel method)": [[193, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[194, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[195, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[196, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[197, "model.ClusterModel.star_virial"]], "virialization_method (model.clustermodel property)": [[198, "model.ClusterModel.virialization_method"]], "write_model_to_ascii() (model.clustermodel method)": [[199, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[200, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[201, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[202, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[203, "model.HydrostaticEquilibrium.__init__"]], "attrs (model.hydrostaticequilibrium attribute)": [[204, "model.HydrostaticEquilibrium.attrs"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[205, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[206, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[207, "model.HydrostaticEquilibrium.check_star_virial"]], "create_dataset() (model.hydrostaticequilibrium method)": [[208, "model.HydrostaticEquilibrium.create_dataset"]], "default_fields (model.hydrostaticequilibrium attribute)": [[209, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[210, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[211, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[212, "model.HydrostaticEquilibrium.find_field_at_radius"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[213, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[214, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[215, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[216, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[217, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[218, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[219, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[220, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[221, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "is_physical() (model.hydrostaticequilibrium method)": [[222, "model.HydrostaticEquilibrium.is_physical"]], "keys() (model.hydrostaticequilibrium method)": [[223, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[224, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[225, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[226, "model.HydrostaticEquilibrium.num_elements"]], "plot() (model.hydrostaticequilibrium method)": [[227, "model.HydrostaticEquilibrium.plot"]], "pot (model.hydrostaticequilibrium property)": [[228, "model.HydrostaticEquilibrium.pot"]], "rebuild_physical() (model.hydrostaticequilibrium method)": [[229, "model.HydrostaticEquilibrium.rebuild_physical"]], "set_field() (model.hydrostaticequilibrium method)": [[230, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[231, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[232, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[233, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[234, "model.HydrostaticEquilibrium.star_virial"]], "virialization_method (model.hydrostaticequilibrium property)": [[235, "model.HydrostaticEquilibrium.virialization_method"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[236, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[237, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[238, "model.HydrostaticEquilibrium.write_model_to_h5"]], "particles": [[239, "module-particles"]], "clusterparticles (class in particles)": [[240, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[241, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[242, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[243, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[244, "particles.ClusterParticles.drop_ptypes"]], "fields (particles.clusterparticles attribute)": [[245, "particles.ClusterParticles.fields"]], "from_fields() (particles.clusterparticles class method)": [[246, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[247, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[248, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[249, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[250, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[251, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[252, "particles.ClusterParticles.num_passive_scalars"]], "particle_types (particles.clusterparticles attribute)": [[253, "particles.ClusterParticles.particle_types"]], "passive_scalars (particles.clusterparticles attribute)": [[254, "particles.ClusterParticles.passive_scalars"]], "set_field() (particles.clusterparticles method)": [[255, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[256, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[257, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[258, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[259, "particles.ClusterParticles.write_to_gadget_file"]], "concat_clusters() (in module particles)": [[260, "particles.concat_clusters"]], "resample_clusters() (in module particles)": [[261, "particles.resample_clusters"]], "radial_profiles": [[262, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[263, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[264, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[265, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[266, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[267, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[268, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[269, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[270, "radial_profiles.RadialProfile.from_binary"]], "plot() (radial_profiles.radialprofile method)": [[271, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[272, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[273, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[274, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[275, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[276, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[277, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[278, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[279, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[280, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[281, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[282, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[283, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[284, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[285, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[286, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[287, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[288, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[289, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[290, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[291, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[292, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[293, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[294, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[295, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[296, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[297, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[298, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[299, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[300, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[301, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[302, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[303, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[304, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[305, "radial_profiles.walker_entropy_profile"]], "relations": [[306, "module-relations"]], "convert_ne_to_density() (in module relations)": [[307, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[308, "relations.f_gas"]], "m_bcg() (in module relations)": [[309, "relations.m_bcg"]], "m_sat() (in module relations)": [[310, "relations.m_sat"]], "r_bcg() (in module relations)": [[311, "relations.r_bcg"]], "utils": [[312, "module-utils"]], "build_yt_dataset_fields() (in module utils)": [[313, "utils.build_yt_dataset_fields"]], "ensure_list() (in module utils)": [[314, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[315, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[316, "utils.ensure_ytquantity"]], "eprint() (in module utils)": [[317, "utils.eprint"]], "generate_particle_radii() (in module utils)": [[318, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[319, "utils.integrate"]], "integrate_mass() (in module utils)": [[320, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[321, "utils.integrate_toinf"]], "log_string() (in module utils)": [[322, "utils.log_string"]], "moving_average() (in module utils)": [[323, "utils.moving_average"]], "parse_prng() (in module utils)": [[324, "utils.parse_prng"]], "truncate_spline() (in module utils)": [[325, "utils.truncate_spline"]], "virial": [[326, "module-virial"]], "virialequilibrium (class in virial)": [[327, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[328, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[329, "virial.VirialEquilibrium.check_virial"]], "df (virial.virialequilibrium property)": [[330, "virial.VirialEquilibrium.df"]], "ee (virial.virialequilibrium property)": [[331, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[332, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[333, "virial.VirialEquilibrium.generate_particles"]], "model (virial.virialequilibrium attribute)": [[334, "virial.VirialEquilibrium.model"]], "num_elements (virial.virialequilibrium attribute)": [[335, "virial.VirialEquilibrium.num_elements"]], "ptype (virial.virialequilibrium attribute)": [[336, "virial.VirialEquilibrium.ptype"]], "sigma (virial.virialequilibrium property)": [[337, "virial.VirialEquilibrium.sigma"]], "type (virial.virialequilibrium attribute)": [[338, "virial.VirialEquilibrium.type"]]}})