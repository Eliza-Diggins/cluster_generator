Search.setIndex({"docnames": ["Getting_Started", "_as_gen/codes", "_as_gen/codes.setup_arepo_ics", "_as_gen/codes.setup_art_ics", "_as_gen/codes.setup_athena_ics", "_as_gen/codes.setup_enzo_ics", "_as_gen/codes.setup_flash_ics", "_as_gen/codes.setup_gamer_ics", "_as_gen/codes.setup_gizmo_ics", "_as_gen/codes.setup_ramses_ics", "_as_gen/codes.write_amr_particles", "_as_gen/collection", "_as_gen/collection.Ascasibar07", "_as_gen/collection.Ascasibar07.__init__", "_as_gen/collection.Ascasibar07.description", "_as_gen/collection.Ascasibar07.load", "_as_gen/collection.Ascasibar07.load_method", "_as_gen/collection.Ascasibar07.load_model", "_as_gen/collection.Ascasibar07.name", "_as_gen/collection.Ascasibar07.names", "_as_gen/collection.Ascasibar07.parameters", "_as_gen/collection.Ascasibar07.path", "_as_gen/collection.Ascasibar07.plot_summary", "_as_gen/collection.Ascasibar07.profiles", "_as_gen/collection.ClusterCollection", "_as_gen/collection.ClusterCollection.__init__", "_as_gen/collection.ClusterCollection.description", "_as_gen/collection.ClusterCollection.load_method", "_as_gen/collection.ClusterCollection.load_model", "_as_gen/collection.ClusterCollection.name", "_as_gen/collection.ClusterCollection.names", "_as_gen/collection.ClusterCollection.parameters", "_as_gen/collection.ClusterCollection.path", "_as_gen/collection.ClusterCollection.plot_summary", "_as_gen/collection.ClusterCollection.profiles", "_as_gen/collection.Sanderson10", "_as_gen/collection.Sanderson10.__init__", "_as_gen/collection.Sanderson10.description", "_as_gen/collection.Sanderson10.load", "_as_gen/collection.Sanderson10.load_method", "_as_gen/collection.Sanderson10.load_model", "_as_gen/collection.Sanderson10.name", "_as_gen/collection.Sanderson10.names", "_as_gen/collection.Sanderson10.parameters", "_as_gen/collection.Sanderson10.path", "_as_gen/collection.Sanderson10.plot_summary", "_as_gen/collection.Sanderson10.profiles", "_as_gen/collection.Vikhlinin06", "_as_gen/collection.Vikhlinin06.__init__", "_as_gen/collection.Vikhlinin06.description", "_as_gen/collection.Vikhlinin06.load", "_as_gen/collection.Vikhlinin06.load_method", "_as_gen/collection.Vikhlinin06.load_model", "_as_gen/collection.Vikhlinin06.name", "_as_gen/collection.Vikhlinin06.names", "_as_gen/collection.Vikhlinin06.parameters", "_as_gen/collection.Vikhlinin06.path", "_as_gen/collection.Vikhlinin06.plot_summary", "_as_gen/collection.Vikhlinin06.profiles", "_as_gen/collection.get_collections", "_as_gen/fields", "_as_gen/fields.ClusterField", "_as_gen/fields.ClusterField.__init__", "_as_gen/fields.ClusterField.map_field_to_particles", "_as_gen/fields.ClusterField.units", "_as_gen/fields.ClusterField.write_file", "_as_gen/fields.GaussianRandomField", "_as_gen/fields.GaussianRandomField.__init__", "_as_gen/fields.GaussianRandomField.map_field_to_particles", "_as_gen/fields.GaussianRandomField.units", "_as_gen/fields.GaussianRandomField.write_file", "_as_gen/fields.RadialRandomMagneticField", "_as_gen/fields.RadialRandomMagneticField.__init__", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticField.units", "_as_gen/fields.RadialRandomMagneticField.write_file", "_as_gen/fields.RadialRandomMagneticVectorPotential", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RadialRandomMagneticVectorPotential.units", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file", "_as_gen/fields.RadialRandomVelocityField", "_as_gen/fields.RadialRandomVelocityField.__init__", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles", "_as_gen/fields.RadialRandomVelocityField.units", "_as_gen/fields.RadialRandomVelocityField.write_file", "_as_gen/fields.RandomMagneticField", "_as_gen/fields.RandomMagneticField.__init__", "_as_gen/fields.RandomMagneticField.map_field_to_particles", "_as_gen/fields.RandomMagneticField.units", "_as_gen/fields.RandomMagneticField.write_file", "_as_gen/fields.RandomMagneticVectorPotential", "_as_gen/fields.RandomMagneticVectorPotential.__init__", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles", "_as_gen/fields.RandomMagneticVectorPotential.units", "_as_gen/fields.RandomMagneticVectorPotential.write_file", "_as_gen/fields.RandomVelocityField", "_as_gen/fields.RandomVelocityField.__init__", "_as_gen/fields.RandomVelocityField.map_field_to_particles", "_as_gen/fields.RandomVelocityField.units", "_as_gen/fields.RandomVelocityField.write_file", "_as_gen/fields.parse_value", "_as_gen/fields.rot_3d", "_as_gen/gravity", "_as_gen/gravity.AQUALGravity", "_as_gen/gravity.AQUALGravity.__init__", "_as_gen/gravity.AQUALGravity.attrs", "_as_gen/gravity.AQUALGravity.compute_mass", "_as_gen/gravity.AQUALGravity.compute_potential", "_as_gen/gravity.AQUALGravity.is_calculated", "_as_gen/gravity.AQUALGravity.model", "_as_gen/gravity.AQUALGravity.potential", "_as_gen/gravity.AQUALGravity.potential_methods", "_as_gen/gravity.AQUALGravity.reset", "_as_gen/gravity.EMONDGravity", "_as_gen/gravity.EMONDGravity.__init__", "_as_gen/gravity.EMONDGravity.attrs", "_as_gen/gravity.EMONDGravity.compute_mass", "_as_gen/gravity.EMONDGravity.compute_potential", "_as_gen/gravity.EMONDGravity.is_calculated", "_as_gen/gravity.EMONDGravity.model", "_as_gen/gravity.EMONDGravity.potential", "_as_gen/gravity.EMONDGravity.potential_methods", "_as_gen/gravity.EMONDGravity.reset", "_as_gen/gravity.Gravity", "_as_gen/gravity.Gravity.__init__", "_as_gen/gravity.Gravity.attrs", "_as_gen/gravity.Gravity.is_calculated", "_as_gen/gravity.Gravity.model", "_as_gen/gravity.Gravity.potential_methods", "_as_gen/gravity.Gravity.reset", "_as_gen/gravity.NewtonianGravity", "_as_gen/gravity.NewtonianGravity.__init__", "_as_gen/gravity.NewtonianGravity.attrs", "_as_gen/gravity.NewtonianGravity.compute_mass", "_as_gen/gravity.NewtonianGravity.compute_potential", "_as_gen/gravity.NewtonianGravity.is_calculated", "_as_gen/gravity.NewtonianGravity.model", "_as_gen/gravity.NewtonianGravity.potential", "_as_gen/gravity.NewtonianGravity.potential_methods", "_as_gen/gravity.NewtonianGravity.reset", "_as_gen/gravity.QUMONDGravity", "_as_gen/gravity.QUMONDGravity.__init__", "_as_gen/gravity.QUMONDGravity.attrs", "_as_gen/gravity.QUMONDGravity.compute_mass", "_as_gen/gravity.QUMONDGravity.compute_potential", "_as_gen/gravity.QUMONDGravity.is_calculated", "_as_gen/gravity.QUMONDGravity.model", "_as_gen/gravity.QUMONDGravity.potential", "_as_gen/gravity.QUMONDGravity.potential_methods", "_as_gen/gravity.QUMONDGravity.reset", "_as_gen/ics", "_as_gen/ics.ClusterICs", "_as_gen/ics.ClusterICs.__init__", "_as_gen/ics.ClusterICs.basename", "_as_gen/ics.ClusterICs.center", "_as_gen/ics.ClusterICs.compute_orbits", "_as_gen/ics.ClusterICs.create_dataset", "_as_gen/ics.ClusterICs.from_file", "_as_gen/ics.ClusterICs.mag_file", "_as_gen/ics.ClusterICs.num_halos", "_as_gen/ics.ClusterICs.profiles", "_as_gen/ics.ClusterICs.r_max", "_as_gen/ics.ClusterICs.resample_particle_ics", "_as_gen/ics.ClusterICs.setup_particle_ics", "_as_gen/ics.ClusterICs.to_file", "_as_gen/ics.ClusterICs.tot_np", "_as_gen/ics.ClusterICs.velocity", "_as_gen/ics.compute_centers_for_binary", "_as_gen/model", "_as_gen/model.ClusterModel", "_as_gen/model.ClusterModel.__init__", "_as_gen/model.ClusterModel.attrs", "_as_gen/model.ClusterModel.check_dm_virial", "_as_gen/model.ClusterModel.check_hse", "_as_gen/model.ClusterModel.check_star_virial", "_as_gen/model.ClusterModel.create_dataset", "_as_gen/model.ClusterModel.default_fields", "_as_gen/model.ClusterModel.dm_virial", "_as_gen/model.ClusterModel.fields", "_as_gen/model.ClusterModel.find_field_at_radius", "_as_gen/model.ClusterModel.from_arrays", "_as_gen/model.ClusterModel.from_dens_and_entr", "_as_gen/model.ClusterModel.from_dens_and_tden", "_as_gen/model.ClusterModel.from_dens_and_temp", "_as_gen/model.ClusterModel.from_h5_file", "_as_gen/model.ClusterModel.generate_dm_particles", "_as_gen/model.ClusterModel.generate_gas_particles", "_as_gen/model.ClusterModel.generate_star_particles", "_as_gen/model.ClusterModel.generate_tracer_particles", "_as_gen/model.ClusterModel.is_physical", "_as_gen/model.ClusterModel.keys", "_as_gen/model.ClusterModel.mass_in_radius", "_as_gen/model.ClusterModel.no_gas", "_as_gen/model.ClusterModel.num_elements", "_as_gen/model.ClusterModel.plot", "_as_gen/model.ClusterModel.pot", "_as_gen/model.ClusterModel.rebuild_physical", "_as_gen/model.ClusterModel.set_field", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta", "_as_gen/model.ClusterModel.set_magnetic_field_from_density", "_as_gen/model.ClusterModel.set_rmax", "_as_gen/model.ClusterModel.star_virial", "_as_gen/model.ClusterModel.virialization_method", "_as_gen/model.ClusterModel.write_model_to_ascii", "_as_gen/model.ClusterModel.write_model_to_binary", "_as_gen/model.ClusterModel.write_model_to_h5", "_as_gen/model.HydrostaticEquilibrium", "_as_gen/model.HydrostaticEquilibrium.__init__", "_as_gen/model.HydrostaticEquilibrium.attrs", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial", "_as_gen/model.HydrostaticEquilibrium.check_hse", "_as_gen/model.HydrostaticEquilibrium.check_star_virial", "_as_gen/model.HydrostaticEquilibrium.create_dataset", "_as_gen/model.HydrostaticEquilibrium.default_fields", "_as_gen/model.HydrostaticEquilibrium.dm_virial", "_as_gen/model.HydrostaticEquilibrium.fields", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius", "_as_gen/model.HydrostaticEquilibrium.from_arrays", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp", "_as_gen/model.HydrostaticEquilibrium.from_h5_file", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles", "_as_gen/model.HydrostaticEquilibrium.is_physical", "_as_gen/model.HydrostaticEquilibrium.keys", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius", "_as_gen/model.HydrostaticEquilibrium.no_gas", "_as_gen/model.HydrostaticEquilibrium.num_elements", "_as_gen/model.HydrostaticEquilibrium.plot", "_as_gen/model.HydrostaticEquilibrium.pot", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical", "_as_gen/model.HydrostaticEquilibrium.set_field", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density", "_as_gen/model.HydrostaticEquilibrium.set_rmax", "_as_gen/model.HydrostaticEquilibrium.star_virial", "_as_gen/model.HydrostaticEquilibrium.virialization_method", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5", "_as_gen/particles", "_as_gen/particles.ClusterParticles", "_as_gen/particles.ClusterParticles.__init__", "_as_gen/particles.ClusterParticles.add_black_hole", "_as_gen/particles.ClusterParticles.add_offsets", "_as_gen/particles.ClusterParticles.drop_ptypes", "_as_gen/particles.ClusterParticles.fields", "_as_gen/particles.ClusterParticles.from_fields", "_as_gen/particles.ClusterParticles.from_file", "_as_gen/particles.ClusterParticles.from_gadget_file", "_as_gen/particles.ClusterParticles.from_h5_file", "_as_gen/particles.ClusterParticles.keys", "_as_gen/particles.ClusterParticles.make_radial_cut", "_as_gen/particles.ClusterParticles.num_passive_scalars", "_as_gen/particles.ClusterParticles.particle_types", "_as_gen/particles.ClusterParticles.passive_scalars", "_as_gen/particles.ClusterParticles.set_field", "_as_gen/particles.ClusterParticles.to_yt_dataset", "_as_gen/particles.ClusterParticles.write_particles", "_as_gen/particles.ClusterParticles.write_particles_to_h5", "_as_gen/particles.ClusterParticles.write_to_gadget_file", "_as_gen/particles.concat_clusters", "_as_gen/particles.resample_clusters", "_as_gen/radial_profiles", "_as_gen/radial_profiles.RadialProfile", "_as_gen/radial_profiles.RadialProfile.__init__", "_as_gen/radial_profiles.RadialProfile.add_core", "_as_gen/radial_profiles.RadialProfile.built_in", "_as_gen/radial_profiles.RadialProfile.builtin", "_as_gen/radial_profiles.RadialProfile.cutoff", "_as_gen/radial_profiles.RadialProfile.from_array", "_as_gen/radial_profiles.RadialProfile.from_binary", "_as_gen/radial_profiles.RadialProfile.plot", "_as_gen/radial_profiles.RadialProfile.to_binary", "_as_gen/radial_profiles.ad07_density_profile", "_as_gen/radial_profiles.ad07_temperature_profile", "_as_gen/radial_profiles.am06_density_profile", "_as_gen/radial_profiles.am06_temperature_profile", "_as_gen/radial_profiles.baseline_entropy_profile", "_as_gen/radial_profiles.beta_model_profile", "_as_gen/radial_profiles.broken_entropy_profile", "_as_gen/radial_profiles.constant_profile", "_as_gen/radial_profiles.convert_nfw_to_hernquist", "_as_gen/radial_profiles.cored_hernquist_density_profile", "_as_gen/radial_profiles.cored_snfw_density_profile", "_as_gen/radial_profiles.cored_snfw_mass_profile", "_as_gen/radial_profiles.cored_snfw_total_mass", "_as_gen/radial_profiles.einasto_density_profile", "_as_gen/radial_profiles.einasto_mass_profile", "_as_gen/radial_profiles.find_overdensity_radius", "_as_gen/radial_profiles.find_radius_mass", "_as_gen/radial_profiles.hernquist_density_profile", "_as_gen/radial_profiles.hernquist_mass_profile", "_as_gen/radial_profiles.nfw_density_profile", "_as_gen/radial_profiles.nfw_mass_profile", "_as_gen/radial_profiles.nfw_scale_density", "_as_gen/radial_profiles.power_law_profile", "_as_gen/radial_profiles.rescale_profile_by_mass", "_as_gen/radial_profiles.snfw_conc", "_as_gen/radial_profiles.snfw_density_profile", "_as_gen/radial_profiles.snfw_mass_profile", "_as_gen/radial_profiles.snfw_total_mass", "_as_gen/radial_profiles.tnfw_density_profile", "_as_gen/radial_profiles.tnfw_mass_profile", "_as_gen/radial_profiles.vikhlinin_density_profile", "_as_gen/radial_profiles.vikhlinin_temperature_profile", "_as_gen/radial_profiles.walker_entropy_profile", "_as_gen/relations", "_as_gen/relations.convert_ne_to_density", "_as_gen/relations.f_gas", "_as_gen/relations.m_bcg", "_as_gen/relations.m_sat", "_as_gen/relations.r_bcg", "_as_gen/utils", "_as_gen/utils.build_yt_dataset_fields", "_as_gen/utils.ensure_list", "_as_gen/utils.ensure_ytarray", "_as_gen/utils.ensure_ytquantity", "_as_gen/utils.eprint", "_as_gen/utils.generate_particle_radii", "_as_gen/utils.integrate", "_as_gen/utils.integrate_mass", "_as_gen/utils.integrate_toinf", "_as_gen/utils.log_string", "_as_gen/utils.monotone_interpolation", "_as_gen/utils.moving_average", "_as_gen/utils.parse_prng", "_as_gen/utils.time_limit", "_as_gen/utils.truncate_spline", "_as_gen/virial", "_as_gen/virial.VirialEquilibrium", "_as_gen/virial.VirialEquilibrium.__init__", "_as_gen/virial.VirialEquilibrium.check_virial", "_as_gen/virial.VirialEquilibrium.df", "_as_gen/virial.VirialEquilibrium.ee", "_as_gen/virial.VirialEquilibrium.ff", "_as_gen/virial.VirialEquilibrium.generate_particles", "_as_gen/virial.VirialEquilibrium.model", "_as_gen/virial.VirialEquilibrium.num_elements", "_as_gen/virial.VirialEquilibrium.ptype", "_as_gen/virial.VirialEquilibrium.sigma", "_as_gen/virial.VirialEquilibrium.type", "api", "codes", "collections", "examples", "fields", "gravity", "gravity_pages/AQUAL", "gravity_pages/EMOND", "gravity_pages/Newtonian", "gravity_pages/QUMOND", "index", "initial_conditions", "models", "notebooks/api_guides/1", "notebooks/api_guides/2", "notebooks/api_guides/3", "notebooks/api_guides/4", "notebooks/quick_notebooks/quickbook", "notebooks/quick_notebooks/quickbook2", "notebooks/quick_notebooks/quickbook3", "notebooks/quick_notebooks/quickbook4", "particles", "radial_profiles"], "filenames": ["Getting_Started.rst", "_as_gen/codes.rst", "_as_gen/codes.setup_arepo_ics.rst", "_as_gen/codes.setup_art_ics.rst", "_as_gen/codes.setup_athena_ics.rst", "_as_gen/codes.setup_enzo_ics.rst", "_as_gen/codes.setup_flash_ics.rst", "_as_gen/codes.setup_gamer_ics.rst", "_as_gen/codes.setup_gizmo_ics.rst", "_as_gen/codes.setup_ramses_ics.rst", "_as_gen/codes.write_amr_particles.rst", "_as_gen/collection.rst", "_as_gen/collection.Ascasibar07.rst", "_as_gen/collection.Ascasibar07.__init__.rst", "_as_gen/collection.Ascasibar07.description.rst", "_as_gen/collection.Ascasibar07.load.rst", "_as_gen/collection.Ascasibar07.load_method.rst", "_as_gen/collection.Ascasibar07.load_model.rst", "_as_gen/collection.Ascasibar07.name.rst", "_as_gen/collection.Ascasibar07.names.rst", "_as_gen/collection.Ascasibar07.parameters.rst", "_as_gen/collection.Ascasibar07.path.rst", "_as_gen/collection.Ascasibar07.plot_summary.rst", "_as_gen/collection.Ascasibar07.profiles.rst", "_as_gen/collection.ClusterCollection.rst", "_as_gen/collection.ClusterCollection.__init__.rst", "_as_gen/collection.ClusterCollection.description.rst", "_as_gen/collection.ClusterCollection.load_method.rst", "_as_gen/collection.ClusterCollection.load_model.rst", "_as_gen/collection.ClusterCollection.name.rst", "_as_gen/collection.ClusterCollection.names.rst", "_as_gen/collection.ClusterCollection.parameters.rst", "_as_gen/collection.ClusterCollection.path.rst", "_as_gen/collection.ClusterCollection.plot_summary.rst", "_as_gen/collection.ClusterCollection.profiles.rst", "_as_gen/collection.Sanderson10.rst", "_as_gen/collection.Sanderson10.__init__.rst", "_as_gen/collection.Sanderson10.description.rst", "_as_gen/collection.Sanderson10.load.rst", "_as_gen/collection.Sanderson10.load_method.rst", "_as_gen/collection.Sanderson10.load_model.rst", "_as_gen/collection.Sanderson10.name.rst", "_as_gen/collection.Sanderson10.names.rst", "_as_gen/collection.Sanderson10.parameters.rst", "_as_gen/collection.Sanderson10.path.rst", "_as_gen/collection.Sanderson10.plot_summary.rst", "_as_gen/collection.Sanderson10.profiles.rst", "_as_gen/collection.Vikhlinin06.rst", "_as_gen/collection.Vikhlinin06.__init__.rst", "_as_gen/collection.Vikhlinin06.description.rst", "_as_gen/collection.Vikhlinin06.load.rst", "_as_gen/collection.Vikhlinin06.load_method.rst", "_as_gen/collection.Vikhlinin06.load_model.rst", "_as_gen/collection.Vikhlinin06.name.rst", "_as_gen/collection.Vikhlinin06.names.rst", "_as_gen/collection.Vikhlinin06.parameters.rst", "_as_gen/collection.Vikhlinin06.path.rst", "_as_gen/collection.Vikhlinin06.plot_summary.rst", "_as_gen/collection.Vikhlinin06.profiles.rst", "_as_gen/collection.get_collections.rst", "_as_gen/fields.rst", "_as_gen/fields.ClusterField.rst", "_as_gen/fields.ClusterField.__init__.rst", "_as_gen/fields.ClusterField.map_field_to_particles.rst", "_as_gen/fields.ClusterField.units.rst", "_as_gen/fields.ClusterField.write_file.rst", "_as_gen/fields.GaussianRandomField.rst", "_as_gen/fields.GaussianRandomField.__init__.rst", "_as_gen/fields.GaussianRandomField.map_field_to_particles.rst", "_as_gen/fields.GaussianRandomField.units.rst", "_as_gen/fields.GaussianRandomField.write_file.rst", "_as_gen/fields.RadialRandomMagneticField.rst", "_as_gen/fields.RadialRandomMagneticField.__init__.rst", "_as_gen/fields.RadialRandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticField.units.rst", "_as_gen/fields.RadialRandomMagneticField.write_file.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.units.rst", "_as_gen/fields.RadialRandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RadialRandomVelocityField.rst", "_as_gen/fields.RadialRandomVelocityField.__init__.rst", "_as_gen/fields.RadialRandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RadialRandomVelocityField.units.rst", "_as_gen/fields.RadialRandomVelocityField.write_file.rst", "_as_gen/fields.RandomMagneticField.rst", "_as_gen/fields.RandomMagneticField.__init__.rst", "_as_gen/fields.RandomMagneticField.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticField.units.rst", "_as_gen/fields.RandomMagneticField.write_file.rst", "_as_gen/fields.RandomMagneticVectorPotential.rst", "_as_gen/fields.RandomMagneticVectorPotential.__init__.rst", "_as_gen/fields.RandomMagneticVectorPotential.map_field_to_particles.rst", "_as_gen/fields.RandomMagneticVectorPotential.units.rst", "_as_gen/fields.RandomMagneticVectorPotential.write_file.rst", "_as_gen/fields.RandomVelocityField.rst", "_as_gen/fields.RandomVelocityField.__init__.rst", "_as_gen/fields.RandomVelocityField.map_field_to_particles.rst", "_as_gen/fields.RandomVelocityField.units.rst", "_as_gen/fields.RandomVelocityField.write_file.rst", "_as_gen/fields.parse_value.rst", "_as_gen/fields.rot_3d.rst", "_as_gen/gravity.rst", "_as_gen/gravity.AQUALGravity.rst", "_as_gen/gravity.AQUALGravity.__init__.rst", "_as_gen/gravity.AQUALGravity.attrs.rst", "_as_gen/gravity.AQUALGravity.compute_mass.rst", "_as_gen/gravity.AQUALGravity.compute_potential.rst", "_as_gen/gravity.AQUALGravity.is_calculated.rst", "_as_gen/gravity.AQUALGravity.model.rst", "_as_gen/gravity.AQUALGravity.potential.rst", "_as_gen/gravity.AQUALGravity.potential_methods.rst", "_as_gen/gravity.AQUALGravity.reset.rst", "_as_gen/gravity.EMONDGravity.rst", "_as_gen/gravity.EMONDGravity.__init__.rst", "_as_gen/gravity.EMONDGravity.attrs.rst", "_as_gen/gravity.EMONDGravity.compute_mass.rst", "_as_gen/gravity.EMONDGravity.compute_potential.rst", "_as_gen/gravity.EMONDGravity.is_calculated.rst", "_as_gen/gravity.EMONDGravity.model.rst", "_as_gen/gravity.EMONDGravity.potential.rst", "_as_gen/gravity.EMONDGravity.potential_methods.rst", "_as_gen/gravity.EMONDGravity.reset.rst", "_as_gen/gravity.Gravity.rst", "_as_gen/gravity.Gravity.__init__.rst", "_as_gen/gravity.Gravity.attrs.rst", "_as_gen/gravity.Gravity.is_calculated.rst", "_as_gen/gravity.Gravity.model.rst", "_as_gen/gravity.Gravity.potential_methods.rst", "_as_gen/gravity.Gravity.reset.rst", "_as_gen/gravity.NewtonianGravity.rst", "_as_gen/gravity.NewtonianGravity.__init__.rst", "_as_gen/gravity.NewtonianGravity.attrs.rst", "_as_gen/gravity.NewtonianGravity.compute_mass.rst", "_as_gen/gravity.NewtonianGravity.compute_potential.rst", "_as_gen/gravity.NewtonianGravity.is_calculated.rst", "_as_gen/gravity.NewtonianGravity.model.rst", "_as_gen/gravity.NewtonianGravity.potential.rst", "_as_gen/gravity.NewtonianGravity.potential_methods.rst", "_as_gen/gravity.NewtonianGravity.reset.rst", "_as_gen/gravity.QUMONDGravity.rst", "_as_gen/gravity.QUMONDGravity.__init__.rst", "_as_gen/gravity.QUMONDGravity.attrs.rst", "_as_gen/gravity.QUMONDGravity.compute_mass.rst", "_as_gen/gravity.QUMONDGravity.compute_potential.rst", "_as_gen/gravity.QUMONDGravity.is_calculated.rst", "_as_gen/gravity.QUMONDGravity.model.rst", "_as_gen/gravity.QUMONDGravity.potential.rst", "_as_gen/gravity.QUMONDGravity.potential_methods.rst", "_as_gen/gravity.QUMONDGravity.reset.rst", "_as_gen/ics.rst", "_as_gen/ics.ClusterICs.rst", "_as_gen/ics.ClusterICs.__init__.rst", "_as_gen/ics.ClusterICs.basename.rst", "_as_gen/ics.ClusterICs.center.rst", "_as_gen/ics.ClusterICs.compute_orbits.rst", "_as_gen/ics.ClusterICs.create_dataset.rst", "_as_gen/ics.ClusterICs.from_file.rst", "_as_gen/ics.ClusterICs.mag_file.rst", "_as_gen/ics.ClusterICs.num_halos.rst", "_as_gen/ics.ClusterICs.profiles.rst", "_as_gen/ics.ClusterICs.r_max.rst", "_as_gen/ics.ClusterICs.resample_particle_ics.rst", "_as_gen/ics.ClusterICs.setup_particle_ics.rst", "_as_gen/ics.ClusterICs.to_file.rst", "_as_gen/ics.ClusterICs.tot_np.rst", "_as_gen/ics.ClusterICs.velocity.rst", "_as_gen/ics.compute_centers_for_binary.rst", "_as_gen/model.rst", "_as_gen/model.ClusterModel.rst", "_as_gen/model.ClusterModel.__init__.rst", "_as_gen/model.ClusterModel.attrs.rst", "_as_gen/model.ClusterModel.check_dm_virial.rst", "_as_gen/model.ClusterModel.check_hse.rst", "_as_gen/model.ClusterModel.check_star_virial.rst", "_as_gen/model.ClusterModel.create_dataset.rst", "_as_gen/model.ClusterModel.default_fields.rst", "_as_gen/model.ClusterModel.dm_virial.rst", "_as_gen/model.ClusterModel.fields.rst", "_as_gen/model.ClusterModel.find_field_at_radius.rst", "_as_gen/model.ClusterModel.from_arrays.rst", "_as_gen/model.ClusterModel.from_dens_and_entr.rst", "_as_gen/model.ClusterModel.from_dens_and_tden.rst", "_as_gen/model.ClusterModel.from_dens_and_temp.rst", "_as_gen/model.ClusterModel.from_h5_file.rst", "_as_gen/model.ClusterModel.generate_dm_particles.rst", "_as_gen/model.ClusterModel.generate_gas_particles.rst", "_as_gen/model.ClusterModel.generate_star_particles.rst", "_as_gen/model.ClusterModel.generate_tracer_particles.rst", "_as_gen/model.ClusterModel.is_physical.rst", "_as_gen/model.ClusterModel.keys.rst", "_as_gen/model.ClusterModel.mass_in_radius.rst", "_as_gen/model.ClusterModel.no_gas.rst", "_as_gen/model.ClusterModel.num_elements.rst", "_as_gen/model.ClusterModel.plot.rst", "_as_gen/model.ClusterModel.pot.rst", "_as_gen/model.ClusterModel.rebuild_physical.rst", "_as_gen/model.ClusterModel.set_field.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_beta.rst", "_as_gen/model.ClusterModel.set_magnetic_field_from_density.rst", "_as_gen/model.ClusterModel.set_rmax.rst", "_as_gen/model.ClusterModel.star_virial.rst", "_as_gen/model.ClusterModel.virialization_method.rst", "_as_gen/model.ClusterModel.write_model_to_ascii.rst", "_as_gen/model.ClusterModel.write_model_to_binary.rst", "_as_gen/model.ClusterModel.write_model_to_h5.rst", "_as_gen/model.HydrostaticEquilibrium.rst", "_as_gen/model.HydrostaticEquilibrium.__init__.rst", "_as_gen/model.HydrostaticEquilibrium.attrs.rst", "_as_gen/model.HydrostaticEquilibrium.check_dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.check_hse.rst", "_as_gen/model.HydrostaticEquilibrium.check_star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.create_dataset.rst", "_as_gen/model.HydrostaticEquilibrium.default_fields.rst", "_as_gen/model.HydrostaticEquilibrium.dm_virial.rst", "_as_gen/model.HydrostaticEquilibrium.fields.rst", "_as_gen/model.HydrostaticEquilibrium.find_field_at_radius.rst", "_as_gen/model.HydrostaticEquilibrium.from_arrays.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_entr.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_tden.rst", "_as_gen/model.HydrostaticEquilibrium.from_dens_and_temp.rst", "_as_gen/model.HydrostaticEquilibrium.from_h5_file.rst", "_as_gen/model.HydrostaticEquilibrium.generate_dm_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_gas_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_star_particles.rst", "_as_gen/model.HydrostaticEquilibrium.generate_tracer_particles.rst", "_as_gen/model.HydrostaticEquilibrium.is_physical.rst", "_as_gen/model.HydrostaticEquilibrium.keys.rst", "_as_gen/model.HydrostaticEquilibrium.mass_in_radius.rst", "_as_gen/model.HydrostaticEquilibrium.no_gas.rst", "_as_gen/model.HydrostaticEquilibrium.num_elements.rst", "_as_gen/model.HydrostaticEquilibrium.plot.rst", "_as_gen/model.HydrostaticEquilibrium.pot.rst", "_as_gen/model.HydrostaticEquilibrium.rebuild_physical.rst", "_as_gen/model.HydrostaticEquilibrium.set_field.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_beta.rst", "_as_gen/model.HydrostaticEquilibrium.set_magnetic_field_from_density.rst", "_as_gen/model.HydrostaticEquilibrium.set_rmax.rst", "_as_gen/model.HydrostaticEquilibrium.star_virial.rst", "_as_gen/model.HydrostaticEquilibrium.virialization_method.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_ascii.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_binary.rst", "_as_gen/model.HydrostaticEquilibrium.write_model_to_h5.rst", "_as_gen/particles.rst", "_as_gen/particles.ClusterParticles.rst", "_as_gen/particles.ClusterParticles.__init__.rst", "_as_gen/particles.ClusterParticles.add_black_hole.rst", "_as_gen/particles.ClusterParticles.add_offsets.rst", "_as_gen/particles.ClusterParticles.drop_ptypes.rst", "_as_gen/particles.ClusterParticles.fields.rst", "_as_gen/particles.ClusterParticles.from_fields.rst", "_as_gen/particles.ClusterParticles.from_file.rst", "_as_gen/particles.ClusterParticles.from_gadget_file.rst", "_as_gen/particles.ClusterParticles.from_h5_file.rst", "_as_gen/particles.ClusterParticles.keys.rst", "_as_gen/particles.ClusterParticles.make_radial_cut.rst", "_as_gen/particles.ClusterParticles.num_passive_scalars.rst", "_as_gen/particles.ClusterParticles.particle_types.rst", "_as_gen/particles.ClusterParticles.passive_scalars.rst", "_as_gen/particles.ClusterParticles.set_field.rst", "_as_gen/particles.ClusterParticles.to_yt_dataset.rst", "_as_gen/particles.ClusterParticles.write_particles.rst", "_as_gen/particles.ClusterParticles.write_particles_to_h5.rst", "_as_gen/particles.ClusterParticles.write_to_gadget_file.rst", "_as_gen/particles.concat_clusters.rst", "_as_gen/particles.resample_clusters.rst", "_as_gen/radial_profiles.rst", "_as_gen/radial_profiles.RadialProfile.rst", "_as_gen/radial_profiles.RadialProfile.__init__.rst", "_as_gen/radial_profiles.RadialProfile.add_core.rst", "_as_gen/radial_profiles.RadialProfile.built_in.rst", "_as_gen/radial_profiles.RadialProfile.builtin.rst", "_as_gen/radial_profiles.RadialProfile.cutoff.rst", "_as_gen/radial_profiles.RadialProfile.from_array.rst", "_as_gen/radial_profiles.RadialProfile.from_binary.rst", "_as_gen/radial_profiles.RadialProfile.plot.rst", "_as_gen/radial_profiles.RadialProfile.to_binary.rst", "_as_gen/radial_profiles.ad07_density_profile.rst", "_as_gen/radial_profiles.ad07_temperature_profile.rst", "_as_gen/radial_profiles.am06_density_profile.rst", "_as_gen/radial_profiles.am06_temperature_profile.rst", "_as_gen/radial_profiles.baseline_entropy_profile.rst", "_as_gen/radial_profiles.beta_model_profile.rst", "_as_gen/radial_profiles.broken_entropy_profile.rst", "_as_gen/radial_profiles.constant_profile.rst", "_as_gen/radial_profiles.convert_nfw_to_hernquist.rst", "_as_gen/radial_profiles.cored_hernquist_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_density_profile.rst", "_as_gen/radial_profiles.cored_snfw_mass_profile.rst", "_as_gen/radial_profiles.cored_snfw_total_mass.rst", "_as_gen/radial_profiles.einasto_density_profile.rst", "_as_gen/radial_profiles.einasto_mass_profile.rst", "_as_gen/radial_profiles.find_overdensity_radius.rst", "_as_gen/radial_profiles.find_radius_mass.rst", "_as_gen/radial_profiles.hernquist_density_profile.rst", "_as_gen/radial_profiles.hernquist_mass_profile.rst", "_as_gen/radial_profiles.nfw_density_profile.rst", "_as_gen/radial_profiles.nfw_mass_profile.rst", "_as_gen/radial_profiles.nfw_scale_density.rst", "_as_gen/radial_profiles.power_law_profile.rst", "_as_gen/radial_profiles.rescale_profile_by_mass.rst", "_as_gen/radial_profiles.snfw_conc.rst", "_as_gen/radial_profiles.snfw_density_profile.rst", "_as_gen/radial_profiles.snfw_mass_profile.rst", "_as_gen/radial_profiles.snfw_total_mass.rst", "_as_gen/radial_profiles.tnfw_density_profile.rst", "_as_gen/radial_profiles.tnfw_mass_profile.rst", "_as_gen/radial_profiles.vikhlinin_density_profile.rst", "_as_gen/radial_profiles.vikhlinin_temperature_profile.rst", "_as_gen/radial_profiles.walker_entropy_profile.rst", "_as_gen/relations.rst", "_as_gen/relations.convert_ne_to_density.rst", "_as_gen/relations.f_gas.rst", "_as_gen/relations.m_bcg.rst", "_as_gen/relations.m_sat.rst", "_as_gen/relations.r_bcg.rst", "_as_gen/utils.rst", "_as_gen/utils.build_yt_dataset_fields.rst", "_as_gen/utils.ensure_list.rst", "_as_gen/utils.ensure_ytarray.rst", "_as_gen/utils.ensure_ytquantity.rst", "_as_gen/utils.eprint.rst", "_as_gen/utils.generate_particle_radii.rst", "_as_gen/utils.integrate.rst", "_as_gen/utils.integrate_mass.rst", "_as_gen/utils.integrate_toinf.rst", "_as_gen/utils.log_string.rst", "_as_gen/utils.monotone_interpolation.rst", "_as_gen/utils.moving_average.rst", "_as_gen/utils.parse_prng.rst", "_as_gen/utils.time_limit.rst", "_as_gen/utils.truncate_spline.rst", "_as_gen/virial.rst", "_as_gen/virial.VirialEquilibrium.rst", "_as_gen/virial.VirialEquilibrium.__init__.rst", "_as_gen/virial.VirialEquilibrium.check_virial.rst", "_as_gen/virial.VirialEquilibrium.df.rst", "_as_gen/virial.VirialEquilibrium.ee.rst", "_as_gen/virial.VirialEquilibrium.ff.rst", "_as_gen/virial.VirialEquilibrium.generate_particles.rst", "_as_gen/virial.VirialEquilibrium.model.rst", "_as_gen/virial.VirialEquilibrium.num_elements.rst", "_as_gen/virial.VirialEquilibrium.ptype.rst", "_as_gen/virial.VirialEquilibrium.sigma.rst", "_as_gen/virial.VirialEquilibrium.type.rst", "api.rst", "codes.rst", "collections.rst", "examples.rst", "fields.rst", "gravity.rst", "gravity_pages/AQUAL.rst", "gravity_pages/EMOND.rst", "gravity_pages/Newtonian.rst", "gravity_pages/QUMOND.rst", "index.rst", "initial_conditions.rst", "models.rst", "notebooks/api_guides/1.ipynb", "notebooks/api_guides/2.ipynb", "notebooks/api_guides/3.ipynb", "notebooks/api_guides/4.ipynb", "notebooks/quick_notebooks/quickbook.ipynb", "notebooks/quick_notebooks/quickbook2.ipynb", "notebooks/quick_notebooks/quickbook3.ipynb", "notebooks/quick_notebooks/quickbook4.ipynb", "particles.rst", "radial_profiles.rst"], "titles": ["Quickstart Guide", "codes", "codes.setup_arepo_ics", "codes.setup_art_ics", "codes.setup_athena_ics", "codes.setup_enzo_ics", "codes.setup_flash_ics", "codes.setup_gamer_ics", "codes.setup_gizmo_ics", "codes.setup_ramses_ics", "codes.write_amr_particles", "collection", "collection.Ascasibar07", "collection.Ascasibar07.__init__", "collection.Ascasibar07.description", "collection.Ascasibar07.load", "collection.Ascasibar07.load_method", "collection.Ascasibar07.load_model", "collection.Ascasibar07.name", "collection.Ascasibar07.names", "collection.Ascasibar07.parameters", "collection.Ascasibar07.path", "collection.Ascasibar07.plot_summary", "collection.Ascasibar07.profiles", "collection.ClusterCollection", "collection.ClusterCollection.__init__", "collection.ClusterCollection.description", "collection.ClusterCollection.load_method", "collection.ClusterCollection.load_model", "collection.ClusterCollection.name", "collection.ClusterCollection.names", "collection.ClusterCollection.parameters", "collection.ClusterCollection.path", "collection.ClusterCollection.plot_summary", "collection.ClusterCollection.profiles", "collection.Sanderson10", "collection.Sanderson10.__init__", "collection.Sanderson10.description", "collection.Sanderson10.load", "collection.Sanderson10.load_method", "collection.Sanderson10.load_model", "collection.Sanderson10.name", "collection.Sanderson10.names", "collection.Sanderson10.parameters", "collection.Sanderson10.path", "collection.Sanderson10.plot_summary", "collection.Sanderson10.profiles", "collection.Vikhlinin06", "collection.Vikhlinin06.__init__", "collection.Vikhlinin06.description", "collection.Vikhlinin06.load", "collection.Vikhlinin06.load_method", "collection.Vikhlinin06.load_model", "collection.Vikhlinin06.name", "collection.Vikhlinin06.names", "collection.Vikhlinin06.parameters", "collection.Vikhlinin06.path", "collection.Vikhlinin06.plot_summary", "collection.Vikhlinin06.profiles", "collection.get_collections", "fields", "fields.ClusterField", "fields.ClusterField.__init__", "fields.ClusterField.map_field_to_particles", "fields.ClusterField.units", "fields.ClusterField.write_file", "fields.GaussianRandomField", "fields.GaussianRandomField.__init__", "fields.GaussianRandomField.map_field_to_particles", "fields.GaussianRandomField.units", "fields.GaussianRandomField.write_file", "fields.RadialRandomMagneticField", "fields.RadialRandomMagneticField.__init__", "fields.RadialRandomMagneticField.map_field_to_particles", "fields.RadialRandomMagneticField.units", "fields.RadialRandomMagneticField.write_file", "fields.RadialRandomMagneticVectorPotential", "fields.RadialRandomMagneticVectorPotential.__init__", "fields.RadialRandomMagneticVectorPotential.map_field_to_particles", "fields.RadialRandomMagneticVectorPotential.units", "fields.RadialRandomMagneticVectorPotential.write_file", "fields.RadialRandomVelocityField", "fields.RadialRandomVelocityField.__init__", "fields.RadialRandomVelocityField.map_field_to_particles", "fields.RadialRandomVelocityField.units", "fields.RadialRandomVelocityField.write_file", "fields.RandomMagneticField", "fields.RandomMagneticField.__init__", "fields.RandomMagneticField.map_field_to_particles", "fields.RandomMagneticField.units", "fields.RandomMagneticField.write_file", "fields.RandomMagneticVectorPotential", "fields.RandomMagneticVectorPotential.__init__", "fields.RandomMagneticVectorPotential.map_field_to_particles", "fields.RandomMagneticVectorPotential.units", "fields.RandomMagneticVectorPotential.write_file", "fields.RandomVelocityField", "fields.RandomVelocityField.__init__", "fields.RandomVelocityField.map_field_to_particles", "fields.RandomVelocityField.units", "fields.RandomVelocityField.write_file", "fields.parse_value", "fields.rot_3d", "gravity", "gravity.AQUALGravity", "gravity.AQUALGravity.__init__", "gravity.AQUALGravity.attrs", "gravity.AQUALGravity.compute_mass", "gravity.AQUALGravity.compute_potential", "gravity.AQUALGravity.is_calculated", "gravity.AQUALGravity.model", "gravity.AQUALGravity.potential", "gravity.AQUALGravity.potential_methods", "gravity.AQUALGravity.reset", "gravity.EMONDGravity", "gravity.EMONDGravity.__init__", "gravity.EMONDGravity.attrs", "gravity.EMONDGravity.compute_mass", "gravity.EMONDGravity.compute_potential", "gravity.EMONDGravity.is_calculated", "gravity.EMONDGravity.model", "gravity.EMONDGravity.potential", "gravity.EMONDGravity.potential_methods", "gravity.EMONDGravity.reset", "gravity.Gravity", "gravity.Gravity.__init__", "gravity.Gravity.attrs", "gravity.Gravity.is_calculated", "gravity.Gravity.model", "gravity.Gravity.potential_methods", "gravity.Gravity.reset", "gravity.NewtonianGravity", "gravity.NewtonianGravity.__init__", "gravity.NewtonianGravity.attrs", "gravity.NewtonianGravity.compute_mass", "gravity.NewtonianGravity.compute_potential", "gravity.NewtonianGravity.is_calculated", "gravity.NewtonianGravity.model", "gravity.NewtonianGravity.potential", "gravity.NewtonianGravity.potential_methods", "gravity.NewtonianGravity.reset", "gravity.QUMONDGravity", "gravity.QUMONDGravity.__init__", "gravity.QUMONDGravity.attrs", "gravity.QUMONDGravity.compute_mass", "gravity.QUMONDGravity.compute_potential", "gravity.QUMONDGravity.is_calculated", "gravity.QUMONDGravity.model", "gravity.QUMONDGravity.potential", "gravity.QUMONDGravity.potential_methods", "gravity.QUMONDGravity.reset", "ics", "ics.ClusterICs", "ics.ClusterICs.__init__", "ics.ClusterICs.basename", "ics.ClusterICs.center", "ics.ClusterICs.compute_orbits", "ics.ClusterICs.create_dataset", "ics.ClusterICs.from_file", "ics.ClusterICs.mag_file", "ics.ClusterICs.num_halos", "ics.ClusterICs.profiles", "ics.ClusterICs.r_max", "ics.ClusterICs.resample_particle_ics", "ics.ClusterICs.setup_particle_ics", "ics.ClusterICs.to_file", "ics.ClusterICs.tot_np", "ics.ClusterICs.velocity", "ics.compute_centers_for_binary", "model", "model.ClusterModel", "model.ClusterModel.__init__", "model.ClusterModel.attrs", "model.ClusterModel.check_dm_virial", "model.ClusterModel.check_hse", "model.ClusterModel.check_star_virial", "model.ClusterModel.create_dataset", "model.ClusterModel.default_fields", "model.ClusterModel.dm_virial", "model.ClusterModel.fields", "model.ClusterModel.find_field_at_radius", "model.ClusterModel.from_arrays", "model.ClusterModel.from_dens_and_entr", "model.ClusterModel.from_dens_and_tden", "model.ClusterModel.from_dens_and_temp", "model.ClusterModel.from_h5_file", "model.ClusterModel.generate_dm_particles", "model.ClusterModel.generate_gas_particles", "model.ClusterModel.generate_star_particles", "model.ClusterModel.generate_tracer_particles", "model.ClusterModel.is_physical", "model.ClusterModel.keys", "model.ClusterModel.mass_in_radius", "model.ClusterModel.no_gas", "model.ClusterModel.num_elements", "model.ClusterModel.plot", "model.ClusterModel.pot", "model.ClusterModel.rebuild_physical", "model.ClusterModel.set_field", "model.ClusterModel.set_magnetic_field_from_beta", "model.ClusterModel.set_magnetic_field_from_density", "model.ClusterModel.set_rmax", "model.ClusterModel.star_virial", "model.ClusterModel.virialization_method", "model.ClusterModel.write_model_to_ascii", "model.ClusterModel.write_model_to_binary", "model.ClusterModel.write_model_to_h5", "model.HydrostaticEquilibrium", "model.HydrostaticEquilibrium.__init__", "model.HydrostaticEquilibrium.attrs", "model.HydrostaticEquilibrium.check_dm_virial", "model.HydrostaticEquilibrium.check_hse", "model.HydrostaticEquilibrium.check_star_virial", "model.HydrostaticEquilibrium.create_dataset", "model.HydrostaticEquilibrium.default_fields", "model.HydrostaticEquilibrium.dm_virial", "model.HydrostaticEquilibrium.fields", "model.HydrostaticEquilibrium.find_field_at_radius", "model.HydrostaticEquilibrium.from_arrays", "model.HydrostaticEquilibrium.from_dens_and_entr", "model.HydrostaticEquilibrium.from_dens_and_tden", "model.HydrostaticEquilibrium.from_dens_and_temp", "model.HydrostaticEquilibrium.from_h5_file", "model.HydrostaticEquilibrium.generate_dm_particles", "model.HydrostaticEquilibrium.generate_gas_particles", "model.HydrostaticEquilibrium.generate_star_particles", "model.HydrostaticEquilibrium.generate_tracer_particles", "model.HydrostaticEquilibrium.is_physical", "model.HydrostaticEquilibrium.keys", "model.HydrostaticEquilibrium.mass_in_radius", "model.HydrostaticEquilibrium.no_gas", "model.HydrostaticEquilibrium.num_elements", "model.HydrostaticEquilibrium.plot", "model.HydrostaticEquilibrium.pot", "model.HydrostaticEquilibrium.rebuild_physical", "model.HydrostaticEquilibrium.set_field", "model.HydrostaticEquilibrium.set_magnetic_field_from_beta", "model.HydrostaticEquilibrium.set_magnetic_field_from_density", "model.HydrostaticEquilibrium.set_rmax", "model.HydrostaticEquilibrium.star_virial", "model.HydrostaticEquilibrium.virialization_method", "model.HydrostaticEquilibrium.write_model_to_ascii", "model.HydrostaticEquilibrium.write_model_to_binary", "model.HydrostaticEquilibrium.write_model_to_h5", "particles", "particles.ClusterParticles", "particles.ClusterParticles.__init__", "particles.ClusterParticles.add_black_hole", "particles.ClusterParticles.add_offsets", "particles.ClusterParticles.drop_ptypes", "particles.ClusterParticles.fields", "particles.ClusterParticles.from_fields", "particles.ClusterParticles.from_file", "particles.ClusterParticles.from_gadget_file", "particles.ClusterParticles.from_h5_file", "particles.ClusterParticles.keys", "particles.ClusterParticles.make_radial_cut", "particles.ClusterParticles.num_passive_scalars", "particles.ClusterParticles.particle_types", "particles.ClusterParticles.passive_scalars", "particles.ClusterParticles.set_field", "particles.ClusterParticles.to_yt_dataset", "particles.ClusterParticles.write_particles", "particles.ClusterParticles.write_particles_to_h5", "particles.ClusterParticles.write_to_gadget_file", "particles.concat_clusters", "particles.resample_clusters", "radial_profiles", "radial_profiles.RadialProfile", "radial_profiles.RadialProfile.__init__", "radial_profiles.RadialProfile.add_core", "radial_profiles.RadialProfile.built_in", "radial_profiles.RadialProfile.builtin", "radial_profiles.RadialProfile.cutoff", "radial_profiles.RadialProfile.from_array", "radial_profiles.RadialProfile.from_binary", "radial_profiles.RadialProfile.plot", "radial_profiles.RadialProfile.to_binary", "radial_profiles.ad07_density_profile", "radial_profiles.ad07_temperature_profile", "radial_profiles.am06_density_profile", "radial_profiles.am06_temperature_profile", "radial_profiles.baseline_entropy_profile", "radial_profiles.beta_model_profile", "radial_profiles.broken_entropy_profile", "radial_profiles.constant_profile", "radial_profiles.convert_nfw_to_hernquist", "radial_profiles.cored_hernquist_density_profile", "radial_profiles.cored_snfw_density_profile", "radial_profiles.cored_snfw_mass_profile", "radial_profiles.cored_snfw_total_mass", "radial_profiles.einasto_density_profile", "radial_profiles.einasto_mass_profile", "radial_profiles.find_overdensity_radius", "radial_profiles.find_radius_mass", "radial_profiles.hernquist_density_profile", "radial_profiles.hernquist_mass_profile", "radial_profiles.nfw_density_profile", "radial_profiles.nfw_mass_profile", "radial_profiles.nfw_scale_density", "radial_profiles.power_law_profile", "radial_profiles.rescale_profile_by_mass", "radial_profiles.snfw_conc", "radial_profiles.snfw_density_profile", "radial_profiles.snfw_mass_profile", "radial_profiles.snfw_total_mass", "radial_profiles.tnfw_density_profile", "radial_profiles.tnfw_mass_profile", "radial_profiles.vikhlinin_density_profile", "radial_profiles.vikhlinin_temperature_profile", "radial_profiles.walker_entropy_profile", "relations", "relations.convert_ne_to_density", "relations.f_gas", "relations.m_bcg", "relations.m_sat", "relations.r_bcg", "utils", "utils.build_yt_dataset_fields", "utils.ensure_list", "utils.ensure_ytarray", "utils.ensure_ytquantity", "utils.eprint", "utils.generate_particle_radii", "utils.integrate", "utils.integrate_mass", "utils.integrate_toinf", "utils.log_string", "utils.monotone_interpolation", "utils.moving_average", "utils.parse_prng", "utils.time_limit", "utils.truncate_spline", "virial", "virial.VirialEquilibrium", "virial.VirialEquilibrium.__init__", "virial.VirialEquilibrium.check_virial", "virial.VirialEquilibrium.df", "virial.VirialEquilibrium.ee", "virial.VirialEquilibrium.ff", "virial.VirialEquilibrium.generate_particles", "virial.VirialEquilibrium.model", "virial.VirialEquilibrium.num_elements", "virial.VirialEquilibrium.ptype", "virial.VirialEquilibrium.sigma", "virial.VirialEquilibrium.type", "API", "Setting Up Idealized Cluster Problems in Various Codes", "Collections", "Examples", "Generating 3D Cluster Fields", "Gravity Theories", "AQUAL Gravity", "EMOND Gravity", "Newtonian Gravity", "QUMOND Gravity", "cluster_generator", "Initial Conditions Generation", "Cluster Models", "Data Structures in cluster_generator", "Virialization", "Advanced Use Cases", "Feature Guide: Using Builtin Collections", "Quickstart Guide: The Basics", "Quickstart Guide: Your First Simulation", "Quickstart Guide: Getting The Most Out of Cluster Generator", "Getting Funky: MONDian Gravity", "Particles", "Radial Profiles"], "terms": {"galaxi": [0, 28, 40, 267, 280, 281, 282, 308, 309, 334, 348, 351, 356, 358, 359, 360, 362, 363, 368], "cluster": [0, 4, 5, 6, 7, 8, 9, 11, 16, 17, 19, 24, 27, 28, 30, 39, 40, 42, 51, 52, 54, 168, 170, 176, 193, 213, 230, 245, 247, 248, 252, 265, 267, 278, 279, 280, 281, 282, 308, 309, 313, 333, 334, 336, 348, 351, 356, 360, 362, 363, 366, 367, 368], "ar": [0, 6, 9, 23, 25, 34, 46, 58, 65, 70, 75, 80, 85, 90, 95, 100, 101, 102, 124, 132, 134, 157, 168, 170, 183, 193, 204, 220, 230, 241, 245, 247, 248, 259, 267, 334, 336, 347, 348, 349, 350, 351, 354, 356, 358, 359, 360, 363, 364, 365, 366, 367, 368], "largest": 0, "gravitation": 0, "bound": 0, "object": [0, 4, 5, 6, 7, 8, 9, 59, 63, 68, 73, 78, 83, 88, 93, 98, 107, 108, 109, 111, 117, 118, 119, 121, 127, 132, 135, 136, 138, 144, 145, 146, 152, 169, 170, 172, 179, 184, 186, 187, 188, 196, 209, 216, 221, 223, 224, 225, 233, 249, 265, 267, 268, 272, 273, 275, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 334, 340, 341, 348, 350, 351, 359, 360, 362, 363, 366, 368], "univers": [0, 286, 334, 336, 360], "current": [0, 347, 354, 358, 360, 362], "endpoint": 0, "process": [0, 132, 163, 245, 334, 347, 348, 351, 359, 360, 362], "cosmolog": [0, 347], "structur": [0, 25, 267, 349, 350, 358, 363], "format": [0, 10, 25, 65, 70, 75, 80, 85, 90, 95, 100, 158, 264, 293, 294, 299, 348, 356, 358, 363, 367], "made": [0, 101, 359, 363, 366, 368], "dark": [0, 6, 7, 186, 223, 247, 278, 340, 347, 358, 359], "matter": [0, 6, 7, 186, 223, 247, 278, 340, 347, 358, 359], "dm": [0, 152, 245, 358, 359, 362, 363, 366, 367, 368], "hot": [0, 366], "magnet": [0, 7, 60, 152, 159, 199, 200, 236, 237, 347, 359], "x": [0, 102, 152, 156, 168, 319, 321, 328, 332, 334, 348, 356, 358, 359, 360, 362, 366, 367, 368], "rai": [0, 348, 356, 366, 368], "emit": 0, "ga": [0, 7, 63, 68, 73, 78, 83, 88, 93, 98, 152, 163, 164, 182, 183, 184, 187, 193, 219, 220, 221, 224, 230, 245, 278, 279, 348, 350, 359, 362, 363, 366, 368], "known": [0, 348, 352, 353, 354, 355, 358, 362], "intraclust": [0, 358], "medium": [0, 358], "icm": [0, 358, 362], "constitu": [0, 17, 22, 33, 45, 52, 57, 334], "For": [0, 157, 176, 213, 277, 348, 351, 356, 359, 360, 362, 363, 366, 367], "mani": [0, 358, 360, 363, 366], "applic": [0, 350, 360], "especi": 0, "those": [0, 205, 242, 349, 360, 362, 367], "focus": [0, 359, 363], "properti": [0, 19, 20, 23, 30, 31, 34, 42, 43, 46, 54, 55, 58, 64, 69, 74, 79, 84, 89, 94, 99, 109, 119, 127, 136, 146, 178, 196, 202, 203, 205, 215, 233, 239, 240, 242, 257, 337, 338, 339, 344, 359, 360, 362, 367, 368], "can": [0, 152, 157, 169, 170, 176, 177, 197, 199, 200, 205, 213, 214, 234, 236, 237, 242, 248, 264, 300, 334, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368], "approxim": [0, 156, 334, 359], "roughli": 0, "spheric": [0, 334, 350, 352, 353, 354, 355, 360, 367, 368], "symmetr": [0, 360, 367], "thi": [0, 6, 7, 9, 14, 18, 23, 26, 29, 34, 37, 41, 46, 49, 53, 58, 63, 68, 73, 78, 83, 88, 93, 98, 108, 111, 118, 121, 124, 131, 132, 134, 135, 138, 145, 148, 152, 157, 164, 170, 176, 181, 186, 187, 188, 195, 197, 205, 213, 218, 223, 224, 225, 232, 234, 242, 245, 247, 248, 258, 270, 274, 277, 302, 308, 311, 323, 324, 325, 326, 332, 334, 336, 338, 340, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368], "i": [0, 6, 7, 9, 14, 18, 25, 26, 29, 37, 41, 49, 53, 101, 108, 111, 118, 121, 124, 131, 132, 134, 135, 138, 145, 148, 152, 156, 164, 168, 169, 170, 174, 176, 186, 187, 188, 190, 197, 198, 200, 211, 213, 223, 224, 225, 227, 234, 235, 237, 245, 247, 260, 268, 270, 273, 275, 277, 278, 291, 292, 299, 300, 312, 323, 324, 325, 326, 334, 336, 338, 340, 347, 348, 350, 351, 354, 356, 358, 360, 363, 364, 365, 366, 368], "often": [0, 360, 362, 366, 368], "done": [0, 170, 275, 347, 348, 350, 358, 359, 360, 362, 363, 364, 365], "us": [0, 6, 7, 9, 16, 17, 27, 28, 39, 40, 51, 52, 63, 68, 73, 78, 83, 88, 93, 98, 107, 117, 134, 144, 156, 157, 163, 164, 170, 176, 182, 183, 184, 193, 195, 197, 204, 205, 213, 219, 220, 221, 230, 232, 234, 241, 242, 245, 247, 248, 260, 264, 267, 274, 275, 276, 293, 294, 299, 300, 334, 336, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 360, 363, 366, 367, 368], "standard": [0, 267, 347, 351, 354, 359, 360, 363, 368], "radial": [0, 183, 193, 199, 200, 220, 230, 236, 237, 256, 268, 274, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 324, 325, 326, 336, 356, 357, 362, 363, 367], "profil": [0, 7, 20, 22, 28, 31, 33, 40, 43, 45, 55, 57, 152, 153, 163, 164, 180, 182, 183, 184, 193, 197, 199, 200, 217, 219, 220, 221, 230, 234, 236, 237, 268, 269, 270, 273, 274, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 323, 324, 325, 326, 334, 336, 348, 352, 353, 354, 355, 356, 357, 360, 362, 363, 366, 367], "variou": [0, 152, 348, 356, 358, 359, 362, 367, 368], "physic": [0, 190, 197, 227, 234, 348, 356, 359, 362, 363, 366, 368], "well": [0, 197, 234, 348, 359, 362, 363, 368], "assum": [0, 101, 199, 200, 236, 237, 247, 248, 334, 350, 354, 358, 360, 362, 363, 367], "hydrostat": [0, 163, 174, 183, 187, 211, 220, 224, 359, 363, 366, 367, 368], "virial": [0, 169, 186, 188, 203, 223, 225, 240, 282, 348, 349, 358, 359, 362, 363, 366, 368], "equilibrium": [0, 174, 183, 186, 187, 188, 204, 206, 211, 220, 223, 224, 225, 241, 243, 334, 340, 345, 359, 363, 366, 368], "These": [0, 108, 118, 124, 132, 135, 145, 169, 170, 184, 221, 245, 265, 336, 347, 348, 349, 351, 358, 359, 366, 367, 368], "model": [0, 11, 17, 28, 40, 52, 104, 105, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 127, 130, 131, 132, 135, 136, 138, 140, 141, 142, 144, 145, 146, 148, 150, 152, 164, 252, 265, 283, 290, 305, 308, 318, 334, 335, 342, 348, 350, 351, 356, 359, 360, 362, 363, 366, 367, 368], "semi": [0, 351], "analyt": [0, 334, 352, 353, 354, 355, 358, 360, 366, 367], "studi": [0, 356, 358, 359, 362], "ideal": [0, 334, 358, 360, 367], "n": [0, 278, 280, 288, 289, 291, 292, 302, 303, 304, 322, 329, 347, 350, 351, 356, 359, 360, 362, 366, 368], "bodi": [0, 156, 347, 356, 360], "magneto": [0, 350], "hydrodynam": [0, 347, 350, 356], "simul": [0, 151, 152, 156, 245, 264, 334, 350, 356, 357, 358, 359, 360, 362, 363, 366], "whether": [0, 204, 206, 241, 243, 264], "singl": [0, 164, 248, 253, 347, 348, 350, 357, 358, 362, 367], "merger": [0, 347, 350, 357, 363], "between": [0, 156, 168, 276, 311, 313, 336, 348, 356, 358, 359, 367], "two": [0, 156, 164, 168, 347, 348, 351, 354, 358, 359, 363, 366, 367], "more": [0, 152, 164, 182, 183, 193, 219, 220, 230, 248, 332, 348, 349, 350, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368], "purpos": [0, 132, 348, 359, 360], "cluster_gener": [0, 1, 10, 103, 124, 174, 204, 205, 206, 211, 241, 242, 243, 268, 317, 334, 347, 348, 349, 350, 357, 358, 362, 363, 366, 367, 368], "which": [0, 7, 10, 17, 28, 40, 52, 63, 68, 73, 78, 83, 88, 93, 98, 101, 102, 108, 118, 132, 135, 145, 148, 152, 156, 157, 163, 168, 170, 176, 181, 182, 184, 186, 187, 188, 190, 195, 198, 200, 213, 218, 219, 221, 223, 224, 225, 227, 232, 235, 237, 245, 247, 248, 264, 267, 270, 273, 299, 300, 323, 324, 325, 326, 332, 334, 336, 340, 347, 348, 350, 351, 354, 356, 358, 359, 360, 362, 363, 366, 367, 368], "gener": [0, 4, 5, 6, 7, 8, 9, 22, 28, 33, 40, 45, 57, 164, 169, 170, 174, 181, 186, 187, 188, 193, 195, 197, 204, 205, 206, 211, 218, 223, 224, 225, 230, 232, 234, 241, 242, 243, 245, 252, 273, 274, 323, 333, 340, 348, 349, 356, 360, 362, 363, 366], "input": [0, 290, 301, 305, 336, 347, 348, 350, 367], "produc": [0, 174, 211, 358, 362, 363], "distribut": [0, 6, 245, 248, 278, 279, 323, 334, 336, 347, 356, 357, 358, 367, 368], "star": [0, 6, 7, 152, 188, 225, 245, 340, 347, 358, 359], "particl": [0, 6, 7, 9, 10, 63, 68, 73, 78, 83, 88, 93, 98, 152, 163, 164, 166, 169, 186, 187, 188, 223, 224, 225, 323, 334, 336, 340, 343, 347, 357, 358, 360, 362, 363, 366], "There": [0, 170, 348, 351, 354, 358, 359, 363, 368], "also": [0, 7, 65, 70, 75, 80, 85, 90, 95, 100, 334, 347, 351, 356, 358, 359, 360, 362, 363, 366, 367], "abil": 0, "creat": [0, 6, 7, 9, 63, 68, 73, 78, 83, 88, 93, 98, 157, 176, 213, 261, 276, 347, 351, 357, 358, 363, 366, 367, 368], "veloc": [0, 152, 153, 156, 157, 163, 164, 176, 186, 188, 213, 223, 225, 247, 248, 265, 266, 318, 334, 340, 357, 358, 359, 360, 362, 363], "field": [0, 7, 17, 23, 34, 46, 52, 58, 107, 108, 109, 111, 113, 117, 118, 119, 121, 123, 127, 130, 134, 135, 136, 138, 140, 144, 145, 146, 148, 150, 152, 157, 159, 163, 169, 170, 171, 176, 177, 180, 181, 194, 195, 197, 198, 199, 200, 205, 207, 208, 213, 214, 217, 218, 231, 232, 234, 235, 236, 237, 242, 245, 246, 251, 260, 264, 342, 347, 348, 351, 354, 359, 360, 363, 366], "three": [0, 157, 164, 176, 213, 347, 350, 367], "dimens": [0, 62, 67, 72, 77, 82, 87, 92, 97, 157, 176, 213], "base": [0, 24, 60, 124, 152, 169, 186, 187, 188, 223, 224, 225, 265, 340, 347, 354, 356, 358, 359, 363, 366, 367], "": [0, 108, 109, 113, 118, 119, 123, 127, 130, 135, 136, 140, 145, 146, 150, 204, 241, 245, 248, 282, 297, 298, 313, 334, 336, 342, 347, 348, 350, 351, 356, 358, 359, 362, 363, 366, 368], "final": [0, 101, 132, 323, 347, 351, 358, 359, 367, 368], "set": [0, 6, 7, 9, 59, 63, 68, 73, 78, 83, 88, 93, 98, 164, 186, 187, 188, 198, 199, 200, 223, 224, 225, 235, 236, 237, 247, 256, 258, 260, 261, 340, 348, 350, 351, 357, 359, 362, 363, 366, 367, 368], "up": [0, 6, 152, 164, 348, 357, 359, 364, 365, 366, 367, 368], "initi": [0, 7, 13, 25, 36, 48, 60, 132, 151, 152, 154, 158, 163, 164, 165, 170, 181, 185, 197, 218, 222, 234, 244, 264, 271, 334, 347, 348, 349, 356, 358, 359, 360, 362, 363, 367], "condit": [0, 7, 151, 152, 154, 158, 163, 164, 165, 170, 244, 264, 334, 347, 349, 350, 354, 356, 358, 359, 360, 362, 363, 367], "number": [0, 17, 22, 28, 33, 40, 45, 52, 57, 62, 67, 72, 77, 82, 87, 92, 97, 152, 156, 157, 160, 166, 170, 176, 181, 182, 183, 184, 186, 187, 188, 193, 194, 213, 218, 219, 220, 221, 223, 224, 225, 230, 231, 245, 257, 260, 276, 312, 323, 340, 342, 349, 359, 362, 363, 367], "code": [0, 156, 164, 350, 351, 356, 359, 360, 362, 363, 366, 367], "astrophys": [0, 356, 368], "commmun": 0, "The": [0, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 108, 110, 112, 117, 118, 120, 124, 128, 132, 135, 137, 139, 144, 145, 147, 148, 149, 152, 154, 156, 157, 159, 162, 163, 165, 167, 168, 169, 170, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 245, 247, 249, 250, 252, 253, 256, 257, 258, 260, 261, 262, 264, 265, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 323, 324, 325, 326, 332, 334, 336, 338, 340, 341, 342, 345, 347, 348, 350, 351, 354, 356, 357, 358, 359, 362, 366, 368], "obtain": [0, 14, 16, 18, 26, 27, 29, 37, 39, 41, 49, 51, 53, 334, 347, 358, 360, 362], "python": [0, 348, 356], "version": [0, 197, 234, 275, 368], "3": [0, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 102, 152, 157, 174, 176, 200, 211, 213, 237, 248, 265, 280, 283, 297, 298, 306, 307, 308, 334, 336, 348, 351, 358, 359, 360, 362, 363, 366, 367, 368], "8": [0, 199, 200, 236, 237, 334, 359, 360, 362, 363, 366, 367, 368], "instal": [0, 347, 356, 363], "instruct": 0, "provid": [0, 107, 108, 117, 118, 134, 135, 144, 145, 245, 267, 276, 311, 334, 347, 348, 351, 356, 358, 359, 360, 362, 363, 366, 367, 368], "below": [0, 347, 358, 359], "featur": [0, 347, 349, 359, 363], "yet": [0, 6, 7, 352, 353, 355, 358, 359, 364, 365], "avail": [0, 19, 30, 42, 54, 59, 112, 139, 149, 186, 187, 188, 223, 224, 225, 250, 340, 347, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 366, 368], "To": [0, 174, 197, 211, 234, 334, 348, 351, 354, 356, 358, 359, 360, 362, 363, 367, 368], "librari": [0, 1, 275, 348, 356, 359, 360, 362, 363, 366], "directli": [0, 108, 111, 118, 121, 124, 135, 138, 145, 347, 348, 351, 358, 359, 362, 363, 366], "option": [0, 6, 7, 9, 10, 17, 22, 28, 33, 40, 45, 52, 57, 59, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 102, 132, 156, 157, 165, 168, 170, 176, 183, 185, 186, 187, 188, 193, 199, 200, 204, 206, 213, 220, 222, 223, 224, 225, 230, 236, 237, 241, 243, 245, 247, 248, 253, 256, 260, 261, 262, 264, 272, 276, 278, 293, 294, 299, 313, 323, 334, 340, 347, 350, 351, 358, 359, 362, 363, 366, 367], "If": [0, 6, 7, 9, 101, 111, 121, 132, 138, 148, 164, 165, 176, 185, 186, 187, 188, 205, 213, 222, 223, 224, 225, 242, 247, 248, 253, 256, 260, 261, 268, 293, 294, 299, 308, 334, 336, 340, 348, 349, 350, 351, 354, 356, 358, 359, 360, 364, 365, 366, 367, 368], "you": [0, 108, 111, 118, 121, 132, 135, 138, 145, 186, 187, 188, 205, 223, 224, 225, 242, 340, 347, 348, 349, 351, 356, 359, 360, 362, 363, 364, 365, 366, 367, 368], "have": [0, 6, 7, 9, 63, 68, 73, 78, 83, 88, 93, 98, 108, 111, 118, 121, 132, 135, 138, 145, 164, 169, 186, 187, 188, 223, 224, 225, 277, 340, 347, 348, 350, 351, 356, 358, 359, 360, 362, 363, 366, 367, 368], "github": [0, 356], "url": 0, "follow": [0, 336, 347, 348, 351, 356, 358, 359, 360, 362, 363], "your": [0, 132, 157, 176, 213, 348, 350, 356, 358, 359, 360, 362, 363, 366], "prefer": [0, 277, 366], "environ": 0, "venv": 0, "local": [0, 334, 359], "etc": [0, 197, 234, 253, 348, 358, 359, 363, 366, 367], "call": [0, 108, 118, 124, 135, 145, 156, 197, 234, 348, 351, 358, 359, 360, 363, 366], "git": 0, "http": [0, 313], "www": 0, "com": [0, 359], "eliza": 0, "diggin": 0, "repositori": [0, 356], "without": [0, 132, 193, 230, 352, 353, 354, 355, 362, 366], "clone": 0, "re": [0, 6, 7, 9, 197, 234, 336, 348, 351, 356, 359, 360, 363, 366], "interest": [0, 359, 360, 362, 363, 366, 368], "instead": [0, 124, 170, 174, 211, 270, 324, 325, 326, 358, 359, 360, 366, 368], "do": [0, 132, 197, 234, 347, 348, 350, 356, 358, 359, 360, 363, 366, 367], "first": [0, 168, 323, 347, 351, 354, 358, 359, 360, 362, 363, 366, 367, 368], "make": [0, 163, 197, 198, 234, 235, 256, 260, 276, 348, 351, 359, 360, 362, 363], "sure": [0, 198, 235, 260, 347, 351, 359, 363], "navig": 0, "directori": [0, 347, 356, 359], "where": [0, 152, 168, 205, 242, 291, 292, 336, 348, 358, 359, 360, 367, 368], "want": [0, 205, 242, 348, 349, 350, 356, 358, 359, 362, 363, 366, 367, 368], "appear": [0, 362, 363], "onc": [0, 347, 351, 358, 359, 362, 363, 367], "ha": [0, 109, 119, 127, 136, 146, 148, 156, 163, 198, 235, 260, 267, 268, 299, 300, 347, 348, 350, 354, 358, 359, 360, 362, 363, 366, 367, 368], "been": [0, 6, 7, 9, 163, 352, 353, 354, 355, 358, 359], "chang": [0, 63, 68, 73, 78, 83, 88, 93, 98, 156, 347, 359, 362, 366], "so": [0, 168, 170, 197, 204, 234, 241, 265, 268, 300, 350, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367], "insid": [0, 270, 351], "same": [0, 10, 15, 38, 50, 65, 70, 75, 80, 85, 90, 95, 100, 165, 186, 187, 188, 204, 205, 206, 223, 224, 225, 241, 242, 243, 245, 260, 262, 265, 268, 340, 347, 351, 358, 362, 366, 367], "setup": [0, 6, 7, 151, 347, 359, 363], "py": [0, 317, 351, 358, 359, 360, 362, 366], "script": [0, 360], "Then": [0, 334, 336, 350, 360], "run": [0, 324, 325, 326, 357, 359, 363], "command": 0, "site": [0, 360], "place": [0, 157, 176, 213, 347, 348, 356, 359, 367], "e": [0, 245, 268, 270, 288, 289, 294, 302, 303, 304, 306, 307, 312, 334, 336, 350, 359, 360, 363, 366, 367, 368], "develop": [0, 349, 356, 366], "mode": [0, 347, 351], "edit": 0, "import": [0, 174, 204, 205, 206, 211, 241, 242, 243, 351, 358, 359, 360, 362, 363, 367, 368], "test": [0, 174, 186, 187, 188, 204, 205, 206, 211, 223, 224, 225, 241, 242, 243, 340, 363], "ve": [0, 348, 359, 360, 362, 363, 366], "project": [0, 359, 360, 363], "simpli": [0, 101, 134, 348, 351, 354, 358, 359, 360, 363, 367], "show": [0, 349, 359, 360, 362, 363, 366], "compat": 0, "requir": [0, 134, 186, 187, 188, 223, 224, 225, 277, 336, 340, 347, 350, 358, 359, 360, 363, 367], "unyt": [0, 367], "quantiti": [0, 101, 157, 174, 197, 211, 234, 336, 359, 363, 367, 368], "manipul": [0, 334, 360], "numpi": [0, 174, 211, 248, 323, 336, 339, 359, 362, 367], "numer": [0, 336, 358, 367], "oper": 0, "scipi": [0, 274], "interpol": [0, 63, 68, 73, 78, 83, 88, 93, 98, 274, 350, 351], "curv": 0, "fit": [0, 23, 34, 46, 58, 334, 348, 356, 362], "h5py": 0, "h5": [0, 152, 204, 205, 206, 241, 242, 243, 347, 350, 359, 360, 362, 363, 366, 367], "file": [0, 6, 7, 9, 10, 14, 16, 18, 21, 25, 26, 27, 29, 32, 37, 39, 41, 44, 49, 51, 53, 56, 65, 70, 75, 80, 85, 90, 95, 100, 152, 159, 161, 163, 165, 185, 204, 205, 206, 222, 241, 242, 243, 252, 253, 262, 264, 275, 277, 347, 348, 351, 359, 360, 362, 363, 366, 367], "interact": [0, 348, 358, 359, 360, 362, 363, 366], "tqdm": 0, "progress": [0, 334], "bar": [0, 334], "ruamel": 0, "yaml": [0, 21, 25, 32, 44, 56, 158, 348, 359], "support": [0, 347, 366], "dill": 0, "serial": [0, 275, 277, 359], "halo": [0, 152, 156, 160, 286, 293, 294, 299, 334, 347, 348, 358, 359, 362, 363, 367, 368], "spinner": [0, 108, 118, 135, 145, 351, 363, 366], "panda": 0, "dataset": [0, 12, 14, 17, 18, 19, 20, 23, 26, 28, 29, 30, 31, 34, 35, 37, 40, 41, 42, 43, 46, 47, 49, 52, 53, 54, 55, 58, 157, 176, 213, 261, 356, 359, 362, 363], "automat": [0, 358, 359, 360], "detail": [0, 182, 183, 193, 219, 220, 230, 356, 359, 362, 363, 367], "varieti": [0, 267, 311, 349, 351, 356, 358, 359, 363], "addit": [0, 17, 22, 28, 33, 40, 45, 52, 57, 62, 67, 72, 77, 82, 87, 92, 97, 106, 107, 108, 116, 117, 118, 124, 126, 132, 133, 134, 135, 143, 144, 145, 152, 170, 172, 181, 182, 183, 184, 193, 209, 218, 219, 220, 221, 230, 267, 348, 351, 354, 358, 359, 363, 367], "veri": [0, 359, 360, 362, 366, 367], "interfac": [0, 245, 356, 359], "util": [0, 1, 174, 204, 205, 206, 211, 241, 242, 243, 359, 362, 363, 366], "cgp": [0, 351, 354, 356], "though": [0, 359], "we": [0, 157, 174, 176, 197, 211, 213, 234, 323, 334, 336, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 364, 365, 366, 367], "recommend": [0, 347, 356, 367], "maxim": [0, 152, 162, 185, 222, 358, 359, 362, 368], "yt": [0, 157, 176, 213, 261, 293, 294, 299, 359, 360, 362, 363, 366], "memori": [0, 157, 176, 213, 261], "3d": [0, 60, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 157, 176, 213, 367], "grid": [0, 62, 67, 72, 77, 82, 87, 92, 97, 157, 176, 213, 318, 347, 350, 363], "ic": [0, 2, 3, 4, 5, 6, 7, 8, 9, 359, 362, 363, 367], "plot": [0, 22, 33, 45, 57, 359, 360, 362, 363, 366, 367], "measur": [0, 359], "complet": [0, 152, 336, 348, 356, 359, 363], "other": [0, 60, 267, 347, 351, 357, 359, 363, 366], "pre": [0, 270, 356, 358], "task": [0, 60, 267, 349, 356, 357, 360], "pyxsim": [0, 356], "photon": [0, 356], "list": [0, 59, 152, 156, 161, 205, 242, 245, 248, 249, 253, 256, 261, 265, 348, 356, 358, 359, 363], "analyz": 0, "spectra": 0, "pass": [0, 17, 22, 28, 33, 40, 45, 52, 57, 108, 111, 118, 121, 124, 132, 134, 135, 138, 145, 156, 170, 181, 182, 183, 184, 193, 218, 219, 220, 221, 230, 268, 348, 351, 359], "an": [0, 10, 25, 65, 70, 75, 80, 85, 90, 95, 100, 101, 102, 108, 118, 135, 145, 152, 156, 157, 174, 176, 190, 198, 204, 206, 211, 213, 227, 235, 241, 243, 245, 252, 260, 261, 262, 264, 265, 274, 276, 286, 293, 294, 297, 298, 299, 302, 312, 323, 334, 336, 347, 348, 350, 351, 356, 358, 359, 360, 362, 363, 367, 368], "instrument": [0, 356], "mock": [0, 356], "observ": [0, 348, 356, 362, 366, 368], "sox": [0, 356], "complement": 0, "allow": [0, 156, 162, 186, 187, 188, 223, 224, 225, 334, 340, 348, 351, 358, 359, 360, 362, 363, 367], "user": [0, 152, 205, 242, 245, 347, 348, 349, 354, 356, 359, 362, 363, 366, 367], "convert": [0, 101, 197, 204, 206, 234, 241, 243, 260, 312, 356, 358, 359, 363], "begin": [0, 157, 176, 213, 348, 358, 360], "section": [0, 291, 292, 347, 358, 359, 363], "look": [0, 336, 348, 356, 359, 360, 362, 363, 366], "note": [0, 7, 134, 170, 174, 185, 197, 211, 222, 234, 245, 270, 273, 274, 275, 323, 324, 325, 326, 334, 336, 358, 359, 360, 362, 363], "convent": [0, 351, 363], "here": [0, 197, 234, 291, 292, 338, 348, 351, 356, 358, 359, 363, 366], "familiar": [0, 349], "page": [0, 351, 356, 358, 359, 363], "read": [0, 7, 10, 158, 185, 222, 252, 253, 347, 348, 359, 367], "through": [0, 17, 22, 28, 33, 40, 45, 52, 57, 132, 170, 184, 221, 267, 347, 359, 360, 362, 366], "our": [0, 356, 359, 360, 362, 363, 364, 365, 366, 367], "feet": 0, "wet": 0, "length": [0, 65, 70, 75, 80, 85, 90, 95, 100, 156, 245, 265, 278, 279, 358], "10": [0, 328, 359, 362, 363, 366, 367], "minut": 0, "basic": [0, 317, 348, 356, 359, 360], "understand": [0, 359, 360], "its": [0, 181, 185, 218, 222, 270, 323, 348, 350, 359, 360, 362, 363, 368], "capabl": [0, 347], "suitabl": 0, "time": [0, 156, 186, 187, 188, 223, 224, 225, 286, 334, 340, 350, 358, 360], "20": [0, 336, 348, 359, 360, 366], "know": [0, 360, 362, 363, 366], "actual": [0, 25, 348, 359, 360, 362, 363, 366], "scienc": [0, 348, 366], "refer": [0, 157, 176, 213, 283, 290, 295, 305, 336, 356, 358, 362, 366], "entir": [0, 334, 354, 358, 359, 360, 362], "rams": [0, 1, 9, 10, 356, 363, 366], "exampl": [0, 174, 181, 204, 205, 206, 211, 218, 241, 242, 243, 348, 351, 356, 358, 359, 360, 362, 363, 367, 368], "40": [0, 348, 359, 362], "most": [0, 348, 350, 358, 359, 360, 362, 363, 366], "out": [0, 186, 187, 188, 223, 224, 225, 336, 340, 347, 359, 360, 362, 367], "feel": [0, 364, 365], "like": [0, 62, 67, 72, 77, 82, 87, 92, 97, 163, 168, 245, 247, 248, 256, 274, 323, 324, 325, 326, 347, 356, 359, 360, 363, 366], "rope": [0, 363], "give": [0, 156, 348, 358, 359, 364, 365], "some": [0, 163, 200, 237, 245, 301, 347, 348, 350, 351, 356, 357, 359, 360, 362, 363, 366, 368], "deeper": [0, 360], "insight": 0, "function": [0, 1, 11, 22, 23, 33, 34, 45, 46, 57, 58, 60, 134, 151, 174, 211, 244, 245, 267, 268, 274, 311, 317, 323, 324, 325, 326, 331, 332, 334, 336, 347, 348, 350, 351, 358, 359, 362, 363, 366, 367, 368], "teach": 0, "advanc": [0, 349, 362], "resourc": 0, "altern": [0, 356, 367], "method": [0, 12, 15, 16, 24, 27, 35, 38, 39, 47, 50, 51, 61, 66, 71, 76, 81, 86, 91, 96, 104, 108, 111, 112, 114, 118, 121, 124, 131, 132, 135, 138, 139, 141, 145, 149, 152, 157, 170, 176, 181, 185, 203, 207, 213, 218, 222, 240, 245, 267, 268, 334, 336, 348, 350, 358, 359, 360, 362, 363, 366, 367], "save": [0, 59, 275, 359, 362, 363, 366], "access": [0, 177, 214, 351, 356, 360], "collect": [0, 349, 356], "funki": 0, "mondian": [0, 351, 356], "graviti": [0, 17, 28, 40, 52, 170, 171, 174, 181, 182, 183, 184, 193, 204, 205, 206, 207, 208, 211, 218, 219, 220, 221, 230, 241, 242, 243, 334, 347, 348, 356, 360, 362, 363], "readi": [0, 348, 357, 359, 360, 363], "jump": 0, "down": [0, 170, 360], "rabbit": 0, "hole": [0, 247], "how": [0, 7, 349, 351, 356, 358, 359, 360, 363, 366, 367], "theori": [0, 17, 28, 40, 52, 103, 124, 170, 183, 193, 220, 230, 334, 356, 358, 359, 360, 366], "built": [0, 112, 139, 149, 272, 351, 356, 358, 359, 362, 363, 366], "alreadi": [0, 6, 7, 9, 109, 111, 119, 121, 127, 136, 138, 146, 148, 260, 349, 350, 351, 358, 359, 360, 362, 367], "somewhat": [0, 349, 366], "someth": [0, 358, 359, 360], "littl": [0, 359, 364, 365, 366], "depth": [0, 359], "mai": [0, 134, 169, 300, 324, 325, 326, 334, 336, 350, 358, 359, 360, 362, 363, 366, 367, 368], "concret": [0, 359], "core": [0, 267, 270, 278, 279, 280, 281, 283, 287, 288, 289, 290, 308, 351, 356, 358, 359, 363, 368], "aspect": [0, 356], "best": [0, 280, 281, 350, 356, 359, 360, 362, 363], "see": [0, 182, 183, 193, 197, 219, 220, 230, 234, 336, 347, 348, 349, 351, 356, 358, 359, 360, 362, 363, 366, 367, 368], "discuss": [0, 336, 347, 358, 359, 360, 362], "help": [0, 348, 366], "mathemat": [0, 359, 360], "background": [0, 347, 360], "overview": 0, "all": [0, 7, 22, 33, 45, 57, 59, 157, 166, 176, 190, 197, 205, 213, 227, 234, 242, 248, 249, 253, 256, 261, 265, 268, 347, 348, 356, 358, 359, 360, 362, 363, 366, 367, 368], "need": [0, 6, 7, 300, 347, 348, 350, 351, 356, 358, 359, 360, 362, 363, 366, 367, 368], "howev": [0, 277, 334, 347, 350, 358, 360, 363, 366], "analysi": 0, "check": [0, 169, 174, 190, 198, 211, 227, 235, 260, 336, 348, 359, 360, 362, 363, 366], "equilibria": 0, "dimension": [0, 334, 350], "one": [0, 28, 40, 124, 156, 164, 186, 187, 188, 195, 223, 224, 225, 232, 248, 268, 270, 276, 293, 294, 299, 300, 334, 336, 340, 347, 348, 350, 351, 357, 358, 359, 360, 362, 363, 366, 367, 368], "step": [0, 6, 7, 347, 351, 359, 360], "individu": [0, 169, 324, 325, 326, 359, 362], "handi": 0, "tool": [0, 333, 356, 360], "document": [0, 182, 183, 193, 219, 220, 230, 348, 352, 353, 355, 356, 358, 359, 363, 364, 365, 366], "popular": 0, "problem": [0, 341, 362, 366, 367], "given": [0, 7, 152, 163, 168, 247, 248, 271, 286, 291, 292, 293, 294, 299, 302, 350, 358, 359, 360, 367, 368], "throughout": [0, 358], "text": [0, 197, 204, 234, 241, 336, 356, 359, 363, 366], "fulli": [0, 108, 118, 124, 135, 145, 169, 347, 348, 351, 359, 363], "work": [0, 280, 281, 334, 347, 350, 360, 362, 364, 365, 366], "finish": [0, 17, 28, 40, 52, 265, 359], "system": [0, 17, 28, 40, 52, 108, 118, 135, 145, 156, 186, 187, 188, 197, 223, 224, 225, 234, 256, 265, 333, 334, 336, 340, 349, 351, 356, 359, 360, 363, 366, 367, 368], "design": [0, 356, 366, 368], "appropri": [0, 198, 235, 260, 274], "scale": [0, 174, 211, 278, 279, 280, 281, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 332, 368], "rm": [0, 367, 368], "kpc": [0, 62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 156, 157, 168, 176, 183, 186, 187, 188, 193, 195, 213, 220, 223, 224, 225, 230, 232, 247, 248, 256, 261, 264, 270, 273, 274, 276, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 336, 340, 348, 359, 362, 363, 366, 367, 368], "myr": [0, 156, 247, 248, 359, 363, 367], "mass": [0, 107, 117, 134, 144, 156, 157, 164, 183, 193, 220, 230, 247, 267, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 303, 304, 305, 307, 312, 323, 324, 325, 326, 348, 351, 352, 353, 355, 358, 359, 362, 363, 366, 367], "m_": [0, 134, 323, 354, 358, 362, 363, 367, 368], "odot": [0, 362, 363, 367, 368], "densiti": [0, 157, 163, 164, 177, 182, 183, 184, 187, 193, 197, 200, 214, 219, 220, 221, 224, 230, 234, 237, 245, 267, 278, 279, 280, 283, 286, 287, 288, 291, 293, 294, 295, 297, 298, 299, 300, 301, 303, 306, 307, 308, 312, 325, 336, 348, 351, 352, 353, 354, 355, 359, 360, 362, 363, 366, 367], "pressur": [0, 157, 177, 199, 214, 236, 348, 358, 359, 362, 363, 366], "specif": [0, 1, 245, 275, 349, 356, 358, 362, 363, 366, 367], "energi": [0, 163, 164, 187, 224, 334, 336, 359, 360, 362, 367], "gravit": [0, 103, 108, 111, 118, 121, 135, 138, 145, 156, 186, 187, 188, 197, 223, 224, 225, 234, 247, 340, 348, 351, 354, 356, 358, 359, 360, 362, 363, 366, 367], "potenti": [0, 6, 7, 65, 70, 75, 80, 85, 90, 95, 100, 108, 109, 112, 118, 119, 127, 135, 136, 139, 145, 146, 149, 179, 186, 187, 188, 196, 216, 223, 224, 225, 233, 247, 334, 336, 338, 340, 347, 348, 351, 352, 353, 355, 358, 359, 360, 362, 363, 366, 367], "straighforwardli": 0, "deriv": [0, 172, 209, 336, 350, 358, 360, 363, 367, 368], "arrai": [0, 62, 67, 72, 77, 82, 87, 92, 97, 101, 148, 152, 168, 174, 176, 190, 194, 198, 211, 213, 227, 231, 235, 245, 247, 248, 256, 260, 274, 323, 324, 325, 326, 329, 336, 339, 351, 359, 363, 367], "scalar": [0, 257, 259, 260, 351, 367], "unless": [0, 354, 358, 363], "otherwis": [0, 109, 119, 127, 136, 146, 190, 199, 200, 227, 236, 237, 367], "specifi": [0, 28, 40, 102, 176, 186, 187, 188, 205, 213, 223, 224, 225, 242, 245, 271, 340, 351, 354, 358, 359, 362, 366, 367], "docstr": 0, "what": [0, 358, 359, 360, 363, 366], "mean": [0, 157, 176, 186, 187, 188, 213, 223, 224, 225, 248, 278, 312, 340, 348, 358, 360, 363, 366], "practic": [0, 358, 362], "suppli": [0, 186, 187, 188, 223, 224, 225, 293, 294, 299, 334, 340, 358, 359, 363, 367], "abov": [0, 334, 336, 348, 350, 358, 360, 362, 363, 367], "type": [0, 17, 22, 28, 33, 40, 45, 52, 57, 59, 63, 68, 73, 78, 83, 88, 93, 98, 101, 107, 108, 111, 113, 117, 118, 121, 123, 130, 134, 135, 138, 140, 144, 145, 148, 150, 152, 156, 163, 174, 181, 182, 184, 186, 188, 193, 195, 197, 205, 211, 218, 219, 221, 223, 225, 230, 232, 234, 242, 245, 248, 249, 253, 256, 258, 260, 261, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 313, 323, 324, 325, 326, 334, 335, 336, 340, 343, 347, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363], "g": [0, 134, 282, 294, 334, 350, 354, 358, 359, 360, 366], "posit": [0, 164, 168, 186, 187, 188, 223, 224, 225, 247, 248, 323, 340, 350, 359, 360, 362, 363], "attach": [0, 106, 110, 116, 120, 124, 126, 128, 132, 133, 137, 143, 147, 148, 267, 359, 362], "intern": [0, 359], "befor": [0, 204, 206, 241, 243, 347, 360, 363], "perform": [0, 256, 347, 357, 367], "ani": [0, 134, 156, 181, 197, 205, 218, 234, 242, 259, 270, 336, 347, 349, 356, 358, 359, 360, 362, 363, 366, 367, 368], "calcul": [0, 109, 119, 127, 136, 146, 156, 168, 302, 336, 348, 351, 359, 367], "return": [0, 17, 22, 28, 33, 40, 45, 52, 57, 59, 101, 102, 107, 108, 109, 111, 113, 117, 118, 119, 121, 123, 127, 130, 134, 135, 136, 138, 140, 144, 145, 146, 148, 150, 156, 174, 181, 182, 184, 186, 188, 190, 193, 195, 197, 205, 211, 218, 219, 221, 223, 225, 227, 230, 232, 234, 242, 249, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 313, 323, 324, 325, 326, 332, 336, 340, 351, 358, 359, 360, 362, 366, 367], "output": [0, 156, 163, 205, 242, 366], "usual": [0, 200, 237, 359, 366], "sometim": 0, "cm": [0, 282], "temperatur": [0, 157, 177, 184, 197, 214, 221, 234, 267, 278, 279, 280, 281, 300, 309, 348, 359, 362, 363, 366], "kev": [0, 184, 221, 278, 279, 281, 282, 309, 348, 362, 363, 366], "entropi": [0, 182, 197, 219, 234, 267, 282, 300, 356, 359, 363], "2": [0, 102, 112, 134, 139, 149, 168, 199, 200, 236, 237, 276, 282, 291, 292, 334, 336, 347, 348, 351, 352, 353, 354, 355, 358, 359, 360, 362, 363, 366, 367, 368], "implement": [1, 11, 103, 104, 114, 124, 131, 134, 141, 270, 350, 351, 354, 356, 358, 359, 360, 362, 366], "statu": [1, 190, 227], "inform": [1, 158, 165, 356, 358, 359, 360, 367, 368], "full": [1, 108, 118, 135, 145, 350, 351, 359], "boxsiz": [2, 245], "nx": 2, "ic_fil": 2, "overwrit": [2, 10, 65, 70, 75, 80, 85, 90, 95, 100, 165, 204, 205, 206, 241, 242, 243, 262, 263, 264, 359, 362, 363, 366, 367], "fals": [2, 6, 7, 9, 10, 61, 62, 65, 66, 67, 70, 75, 80, 81, 82, 85, 90, 95, 96, 97, 100, 108, 109, 111, 118, 119, 121, 127, 135, 136, 138, 145, 146, 148, 164, 165, 186, 187, 188, 204, 205, 206, 223, 224, 225, 241, 242, 243, 247, 260, 262, 263, 264, 336, 340, 348, 351, 359, 363, 366], "regenerate_particl": [2, 6, 7, 9, 164], "prng": [2, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 164, 186, 187, 188, 189, 223, 224, 225, 226, 323, 330, 340], "none": [2, 17, 22, 33, 45, 52, 57, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 107, 108, 111, 113, 117, 118, 121, 123, 130, 134, 135, 138, 140, 144, 145, 150, 152, 153, 157, 163, 164, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 197, 205, 206, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 234, 242, 243, 247, 248, 249, 252, 253, 254, 256, 260, 261, 266, 268, 269, 276, 277, 293, 294, 299, 308, 322, 323, 324, 334, 335, 340, 351, 358, 359, 360, 362], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 24, 25, 28, 33, 35, 36, 38, 47, 48, 50, 52, 59, 61, 62, 63, 65, 66, 67, 71, 72, 76, 81, 82, 86, 87, 91, 96, 97, 101, 102, 104, 105, 107, 108, 111, 114, 115, 117, 118, 121, 124, 125, 130, 131, 132, 134, 135, 138, 141, 142, 144, 145, 148, 152, 153, 156, 157, 158, 163, 164, 165, 168, 170, 171, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 340, 351, 356, 367], "paramet": [4, 5, 6, 7, 8, 9, 10, 17, 25, 28, 40, 52, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 101, 102, 107, 108, 111, 117, 118, 121, 124, 132, 134, 135, 138, 144, 145, 148, 152, 156, 157, 163, 165, 168, 170, 176, 181, 182, 183, 184, 185, 186, 187, 188, 193, 195, 199, 200, 204, 205, 206, 213, 218, 219, 220, 221, 222, 223, 224, 225, 230, 232, 236, 237, 241, 242, 243, 245, 247, 248, 249, 252, 253, 256, 260, 261, 262, 264, 265, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 323, 332, 334, 336, 340, 348, 351, 358, 359, 360, 362, 363, 366, 367, 368], "athena": [4, 350, 356], "from": [4, 5, 6, 7, 8, 9, 12, 14, 16, 18, 20, 26, 27, 29, 31, 35, 37, 39, 41, 43, 47, 49, 51, 53, 55, 101, 107, 108, 117, 118, 124, 135, 144, 145, 156, 157, 158, 163, 164, 168, 169, 172, 174, 181, 182, 184, 185, 195, 199, 204, 205, 206, 209, 211, 218, 219, 221, 222, 232, 236, 241, 242, 243, 245, 249, 252, 253, 256, 265, 271, 275, 278, 279, 293, 294, 299, 302, 308, 309, 313, 323, 334, 336, 347, 348, 351, 352, 353, 354, 355, 356, 359, 360, 362, 363, 366, 368], "enzo": [5, 356], "use_particl": 6, "true": [6, 7, 9, 10, 108, 109, 111, 118, 119, 121, 127, 135, 136, 138, 145, 146, 148, 165, 186, 187, 188, 190, 199, 200, 204, 205, 206, 223, 224, 225, 227, 236, 237, 241, 242, 243, 247, 260, 322, 336, 340, 348, 351, 358, 359, 362, 363, 366, 367], "flash": [6, 10, 350, 356], "par": 6, "line": [6, 7, 347, 360, 366], "galaxyclustermerg": [6, 347], "thei": [6, 7, 63, 68, 73, 78, 83, 88, 93, 98, 248, 265, 348, 358, 359, 360, 362, 363, 366, 367], "gamer": [6, 7, 10, 350, 356], "boolean": [6, 7, 9, 10, 65, 70, 75, 80, 85, 90, 95, 100, 165, 186, 187, 188, 199, 200, 204, 206, 223, 224, 225, 236, 237, 241, 243, 247, 260, 262, 264, 340, 367], "default": [6, 7, 9, 10, 17, 52, 59, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 101, 131, 156, 157, 165, 168, 176, 177, 186, 187, 188, 195, 199, 200, 204, 206, 213, 214, 223, 224, 225, 232, 236, 237, 241, 243, 247, 248, 256, 260, 262, 264, 276, 278, 293, 294, 299, 308, 313, 334, 340, 348, 350, 354, 359, 362, 363, 366, 367], "being": [6, 9, 107, 117, 144, 157, 170, 176, 213, 348, 358, 359, 362, 363, 367], "flag": [6, 7, 9], "use_trac": 7, "input_testprob": 7, "clustermerg": [7, 347], "new": [7, 63, 68, 73, 78, 83, 88, 93, 98, 148, 197, 234, 248, 268, 332, 350, 351, 356, 358, 359, 366], "cg": [7, 204, 205, 206, 241, 242, 243, 359, 360, 362, 363, 366, 367, 368], "unit": [7, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 101, 184, 199, 200, 204, 206, 221, 236, 237, 241, 243, 247, 248, 256, 260, 264, 274, 313, 320, 321, 348, 350, 363, 366, 367, 368], "present": [7, 351, 359, 362], "about": [7, 102, 332, 351, 358, 359, 363, 366], "should": [7, 108, 118, 124, 132, 135, 145, 152, 181, 205, 218, 242, 245, 248, 265, 273, 275, 277, 299, 347, 348, 351, 354, 358, 359, 360, 362, 363, 366, 367], "name": [7, 10, 17, 23, 28, 34, 40, 46, 52, 58, 65, 70, 75, 80, 85, 90, 95, 100, 152, 154, 163, 165, 185, 198, 204, 205, 206, 222, 235, 241, 242, 243, 245, 252, 253, 260, 262, 264, 268, 269, 271, 348, 351, 352, 353, 354, 355, 358, 359, 362, 366, 367], "interpret": 7, "tracer": 7, "add": [7, 62, 63, 67, 68, 72, 73, 77, 78, 82, 83, 87, 88, 92, 93, 97, 98, 247, 248, 260, 267, 270, 347, 354, 358, 359], "gizmo": [8, 253, 356, 367], "func": 8, "output_filenam": [10, 204, 205, 206, 241, 242, 243, 262, 263], "ptype": [10, 63, 68, 73, 78, 83, 88, 93, 98, 245, 248, 249, 252, 253, 254, 256, 260, 261, 334, 335, 350, 359, 360, 367], "ptype_num": 10, "in_cg": [10, 204, 205, 206, 241, 242, 243], "hdf5": [10, 65, 70, 75, 80, 85, 90, 95, 100, 163, 185, 206, 222, 243, 252, 262, 264, 347, 358, 367], "write": [10, 65, 70, 75, 80, 85, 90, 95, 100, 165, 204, 205, 206, 241, 242, 243, 262, 264, 336, 359, 364, 365, 366, 367], "clusterparticl": [10, 63, 68, 73, 78, 83, 88, 93, 98, 186, 188, 223, 225, 265, 340, 350], "instanc": [10, 12, 13, 23, 25, 28, 34, 35, 36, 40, 46, 47, 48, 58, 106, 108, 110, 113, 116, 118, 120, 123, 124, 126, 128, 130, 132, 133, 135, 137, 138, 140, 143, 145, 147, 148, 150, 185, 190, 197, 222, 227, 234, 265, 268, 275, 276, 277, 347, 348, 351, 358, 359, 360, 362, 363, 367], "written": [10, 65, 70, 75, 80, 85, 90, 95, 100, 348, 350, 352, 353, 355, 358, 359, 364, 365, 366, 367], "string": [10, 63, 65, 68, 70, 73, 75, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 152, 163, 165, 185, 195, 204, 206, 222, 232, 241, 243, 248, 252, 253, 256, 260, 261, 262, 264, 334, 348], "exist": [10, 65, 70, 75, 80, 85, 90, 95, 100, 108, 111, 118, 121, 135, 138, 145, 204, 205, 206, 241, 242, 243, 260, 262, 264, 270, 350, 351, 367], "class": [11, 12, 24, 35, 47, 60, 61, 66, 71, 76, 81, 86, 91, 96, 103, 104, 108, 111, 114, 118, 121, 124, 131, 132, 135, 138, 141, 145, 151, 152, 169, 170, 181, 207, 218, 244, 245, 267, 268, 333, 334, 348, 351, 352, 353, 354, 355, 357, 358, 359, 362, 363, 366, 368], "except": [11, 156, 317, 347, 368], "clustercollect": [12, 20, 35, 43, 47, 55, 59, 348], "repres": [12, 35, 47, 278, 279, 323, 347, 360, 363, 366, 368], "ascasibar": [12, 278, 279, 280, 281, 348, 356], "diego": [12, 278, 279, 348], "2008mnra": [12, 278, 279, 348], "383": [12, 278, 279, 348], "369a": [12, 278, 279, 348], "attribut": [12, 24, 35, 47, 61, 66, 71, 76, 81, 86, 91, 96, 104, 106, 107, 108, 114, 116, 117, 118, 124, 126, 131, 133, 134, 135, 141, 143, 144, 145, 152, 170, 172, 181, 182, 183, 185, 193, 205, 207, 209, 218, 219, 220, 222, 230, 242, 245, 268, 334, 347, 348, 351, 358, 359, 360, 362], "data": [14, 16, 18, 25, 26, 27, 29, 37, 39, 41, 49, 51, 53, 134, 152, 156, 250, 253, 265, 347, 348, 349, 358, 360, 362, 363], "static": [15, 38, 50, 132, 360], "__init__": [15, 38, 50, 351, 359, 360], "load": [16, 17, 27, 28, 39, 40, 51, 52, 275, 348, 358, 359, 360, 362, 363], "model_nam": [17, 28, 40, 52], "r_min": [17, 28, 40, 52, 185, 195, 205, 206, 222, 232, 242, 243, 362], "r_max": [17, 28, 40, 52, 66, 67, 71, 72, 76, 77, 81, 82, 152, 153, 185, 186, 187, 188, 189, 195, 201, 205, 206, 222, 223, 224, 225, 226, 232, 238, 242, 243, 256, 323, 340, 359, 362, 366, 367], "num_point": [17, 28, 40, 52, 182, 183, 184, 193, 219, 220, 221, 230, 276, 359, 366], "1000": [17, 28, 40, 52, 183, 184, 193, 220, 221, 230, 276, 336, 359, 360, 362, 363, 367, 368], "newtonian": [17, 28, 40, 52, 131, 170, 171, 174, 182, 183, 184, 193, 204, 205, 206, 207, 208, 211, 219, 220, 221, 230, 241, 242, 243, 334, 348, 352, 353, 355, 356, 359, 360, 362, 363, 366], "kwarg": [17, 22, 28, 33, 40, 45, 52, 57, 104, 105, 114, 115, 124, 125, 131, 132, 141, 142, 157, 170, 171, 172, 176, 181, 182, 183, 184, 193, 195, 207, 208, 209, 213, 218, 219, 220, 221, 230, 232, 274, 276, 322, 331, 351, 359, 360, 362, 366], "str": [17, 25, 28, 40, 52, 101, 152, 170, 181, 182, 183, 184, 193, 205, 218, 219, 220, 221, 230, 242, 245, 275, 277, 334], "float": [17, 22, 28, 33, 40, 45, 52, 57, 102, 152, 156, 157, 168, 176, 182, 183, 184, 185, 186, 187, 188, 193, 195, 199, 200, 205, 213, 219, 220, 221, 222, 223, 224, 225, 230, 232, 236, 237, 242, 245, 247, 256, 261, 264, 270, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 323, 332, 336, 340], "minimum": [17, 22, 28, 33, 40, 45, 52, 57, 157, 176, 182, 183, 184, 185, 193, 195, 205, 213, 219, 220, 221, 222, 230, 232, 242, 247, 276, 309, 367], "radiu": [17, 22, 28, 33, 40, 45, 52, 57, 112, 134, 139, 149, 152, 162, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 205, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 232, 242, 256, 270, 273, 276, 278, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 323, 332, 336, 340, 351, 352, 353, 354, 355, 359, 362, 363, 366, 368], "rmin": [17, 22, 33, 45, 52, 57, 182, 183, 184, 193, 195, 219, 220, 221, 230, 232, 276, 358, 359, 366], "maximum": [17, 22, 28, 33, 40, 45, 52, 57, 156, 182, 183, 184, 186, 187, 188, 193, 195, 205, 219, 220, 221, 223, 224, 225, 230, 232, 242, 256, 276, 323, 340, 359, 363, 367], "r_det": [17, 52, 336, 362], "int": [17, 22, 28, 33, 40, 45, 52, 57, 102, 152, 156, 157, 170, 176, 182, 184, 213, 219, 221, 245, 273, 278, 323, 334, 336, 360, 367], "point": [17, 22, 25, 28, 33, 40, 45, 52, 57, 156, 182, 183, 184, 193, 219, 220, 221, 230, 276, 349, 358, 359, 360, 362], "clustermodel": [17, 28, 40, 52, 109, 113, 119, 123, 124, 127, 130, 132, 136, 138, 140, 146, 150, 169, 218, 219, 220, 221, 222, 227, 230, 233, 234, 265, 334, 348, 351, 360, 362, 363, 366], "dictionari": [20, 23, 31, 34, 43, 46, 55, 58, 166, 170, 184, 205, 221, 242, 348, 359, 362], "underli": [20, 21, 25, 31, 32, 43, 44, 55, 56, 265, 356, 358, 359, 360, 367], "each": [20, 31, 43, 55, 62, 67, 72, 77, 82, 87, 92, 97, 152, 157, 186, 187, 188, 194, 223, 224, 225, 231, 245, 265, 267, 323, 324, 325, 326, 340, 347, 348, 350, 352, 353, 354, 355, 356, 358, 359, 360, 362, 363, 366, 367], "0": [22, 33, 45, 57, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 152, 153, 156, 157, 168, 174, 176, 197, 200, 211, 213, 234, 237, 247, 256, 270, 278, 284, 293, 294, 299, 313, 328, 334, 336, 338, 348, 350, 358, 359, 360, 362, 363, 366, 367, 368], "1": [22, 33, 45, 57, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 102, 112, 139, 149, 156, 186, 187, 188, 189, 223, 224, 225, 226, 270, 273, 283, 295, 310, 334, 336, 340, 348, 351, 352, 353, 354, 355, 358, 359, 360, 362, 363, 366, 367, 368], "rmax": [22, 33, 45, 57, 118, 182, 183, 184, 193, 195, 219, 220, 221, 230, 232, 276, 324, 358, 359, 362, 366], "5000": [22, 33, 45, 57, 359, 360, 362, 366, 367], "npoint": [22, 33, 45, 57], "galleri": [22, 33, 45, 57, 349], "param": [22, 33, 45, 57, 101, 324, 325, 326, 348], "includ": [22, 33, 45, 57, 134, 152, 160, 170, 177, 181, 204, 214, 218, 241, 245, 259, 323, 347, 348, 350, 351, 354, 356, 359, 362], "kei": [22, 23, 33, 34, 45, 46, 57, 58, 134, 152, 170, 181, 218, 245, 348, 359, 360], "word": [22, 33, 45, 57], "argument": [22, 33, 45, 57, 132, 247, 348, 350, 359, 360, 366], "dict": [22, 33, 45, 57, 107, 108, 117, 118, 132, 134, 135, 144, 145, 152, 170, 181, 182, 183, 193, 218, 219, 220, 230, 245, 351, 359], "radial_profil": [23, 34, 46, 58, 358, 359, 363, 368], "radialprofil": [23, 34, 46, 58, 183, 193, 220, 230, 267, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 358, 363, 368], "correspond": [23, 34, 46, 58, 273, 274, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 341, 348, 350, 358, 360, 362, 367], "relev": [23, 34, 46, 58, 148, 359], "path": [24, 25, 152, 204, 205, 206, 241, 242, 243, 347, 348, 359], "represent": [24, 28, 40, 170, 359], "contain": [25, 152, 166, 169, 174, 181, 211, 218, 268, 270, 347, 348, 349, 356, 358, 359, 362, 363, 366, 367, 368], "rais": [25, 351], "yamlerror": 25, "occur": [25, 148, 156, 190, 227, 356, 359, 362], "error": [25, 336, 362], "filenotfounderror": 25, "fail": [25, 334, 336, 351, 359], "real": [25, 348, 362], "collectionserror": 25, "miss": [25, 348, 362, 363], "part": [25, 163, 350, 356, 359, 360, 362, 363, 366, 367], "sampl": [28, 40, 170, 182, 184, 186, 187, 188, 219, 221, 223, 224, 225, 265, 323, 340, 342, 348, 358, 359, 360, 368], "A": [35, 47, 156, 183, 186, 187, 188, 193, 220, 223, 224, 225, 230, 248, 276, 283, 285, 287, 288, 289, 291, 292, 295, 296, 300, 303, 304, 306, 307, 308, 309, 310, 313, 340, 348, 350, 351, 359, 363, 367, 368], "j": [35, 288, 289, 297, 298, 302, 303, 304, 336, 348, 360, 368], "r": [35, 134, 176, 180, 213, 217, 270, 273, 274, 283, 300, 323, 332, 334, 336, 338, 348, 350, 351, 354, 358, 359, 360, 362, 363, 366, 367, 368], "sanderson": [35, 348], "t": [35, 156, 278, 279, 282, 348, 352, 353, 354, 355, 358, 359, 360, 363, 366, 368], "ponman": [35, 348], "2010mnra": [35, 351], "402": 35, "65": 35, "vikhlinin10": 38, "vikhlinin": [47, 308, 309, 313, 348, 356, 362], "et": [47, 291, 292, 308, 309, 313, 348, 356, 362], "al": [47, 291, 292, 308, 309, 313, 348, 356, 359, 362], "2006apj": [47, 348, 362], "640": [47, 308, 309, 348, 362, 368], "691v": [47, 348, 362], "left_edg": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 157, 176, 213, 366], "right_edg": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "ddim": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "pad": [61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "vector_potenti": [61, 62, 66, 67, 72, 77, 82, 87, 92, 97], "divergence_clean": [61, 62, 66, 67, 72, 77, 81, 82, 87, 92, 96, 97], "lower": [62, 67, 72, 77, 82, 87, 92, 97], "edg": [62, 67, 72, 77, 82, 87, 92, 97, 157, 176, 213], "box": [62, 67, 72, 77, 82, 87, 92, 97, 157, 176, 213, 264, 367], "upper": [62, 67, 72, 77, 82, 87, 92, 97], "ax": [62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 195, 232, 276, 359, 362, 363, 366, 367], "amount": [62, 67, 72, 77, 82, 87, 92, 97, 367], "boundari": [62, 67, 72, 77, 82, 87, 92, 97, 352, 353, 354, 355], "cluster_particl": [63, 68, 73, 78, 83, 88, 93, 98], "map": [63, 68, 73, 78, 83, 88, 93, 98, 367], "tri": [63, 68, 73, 78, 83, 88, 93, 98, 362], "linear": [63, 68, 73, 78, 83, 88, 93, 98, 350, 351, 362, 363, 366], "ad": [63, 68, 73, 78, 83, 88, 93, 98, 157, 164, 248, 260, 270, 356, 359, 363, 368], "almost": [63, 68, 73, 78, 83, 88, 93, 98, 108, 118, 135, 145, 351, 362], "alwai": [63, 68, 73, 78, 83, 88, 93, 98, 108, 118, 135, 145, 351, 359, 363, 364, 365, 366], "case": [63, 68, 73, 78, 83, 88, 93, 98, 108, 118, 135, 145, 163, 195, 205, 232, 242, 247, 311, 334, 338, 349, 351, 356, 358, 359, 360, 362, 363, 367], "impli": [63, 68, 73, 78, 83, 88, 93, 98, 358], "remain": [63, 68, 73, 78, 83, 88, 93, 98, 334], "galact": [63, 68, 73, 78, 83, 88, 93, 98, 336], "filenam": [65, 70, 75, 80, 85, 90, 95, 100, 158, 163, 165, 185, 205, 222, 242, 252, 253, 254, 275, 277], "length_unit": [65, 70, 75, 80, 85, 90, 95, 100], "field_unit": [65, 70, 75, 80, 85, 90, 95, 100], "coordin": [65, 70, 75, 80, 85, 90, 95, 100, 157, 176, 213, 248, 256, 334, 360], "cell": [65, 70, 75, 80, 85, 90, 95, 100, 157, 163, 176, 213, 347, 350, 360, 366], "along": [65, 70, 75, 80, 85, 90, 95, 100, 168, 290, 305, 347], "differ": [65, 70, 75, 80, 85, 90, 95, 100, 124, 336, 348, 349, 351, 356, 358, 359, 363, 366, 367], "affect": [65, 70, 75, 80, 85, 90, 95, 100], "l_min": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "l_max": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "alpha": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97, 174, 211, 270, 278, 279, 282, 284, 300, 308, 310, 348, 358, 362, 368], "6666666666666665": [66, 67, 71, 72, 76, 77, 81, 82, 86, 87, 91, 92, 96, 97], "g_rm": [66, 67], "ctr1": [66, 67, 71, 72, 76, 77, 81, 82], "ctr2": [66, 67, 71, 72, 76, 77, 81, 82], "ctr3": [66, 67, 71, 72, 76, 77, 81, 82], "r1": [66, 67], "r2": [66, 67], "r3": [66, 67], "g1": [66, 67], "g2": [66, 67], "g3": [66, 67], "profile1": [71, 72, 76, 77, 81, 82, 359], "profile2": [71, 72, 76, 77, 81, 82, 359], "profile3": [71, 72, 76, 77, 81, 82], "b_rm": [86, 87, 91, 92], "v_rm": [96, 97], "valu": [101, 180, 181, 198, 217, 218, 235, 245, 247, 260, 274, 278, 279, 285, 293, 300, 332, 348, 350, 352, 353, 354, 355, 358, 359, 360, 366, 367, 368], "default_unit": 101, "pars": 101, "correct": [101, 197, 234, 245, 347, 348, 354, 358, 360], "unyt_arrai": [101, 108, 118, 134, 135, 145, 152, 170, 176, 181, 182, 184, 190, 198, 213, 218, 219, 221, 227, 235, 248, 260, 265, 334, 351, 358, 359], "tupl": [101, 157, 176, 195, 213, 232, 245, 265], "form": [101, 184, 221, 265, 273, 291, 292, 334, 358, 360], "v_arrai": 101, "v_unit": 101, "convers": [101, 359, 360], "axi": 102, "gx": 102, "gy": 102, "gz": 102, "ang": 102, "rotat": 102, "vector": [102, 174, 211, 358, 367], "angl": 102, "around": [102, 359, 363], "compon": [102, 348, 350, 356, 358, 359, 362, 363, 367], "y": [102, 156, 168, 280, 281, 328, 348, 359, 368], "z": [102, 156, 168, 293, 294, 299, 358, 359, 362, 363, 366, 368], "over": [102, 324, 325, 326, 358, 360, 362, 363, 367], "aqual": [104, 170, 351, 356, 360], "aquadrat": [104, 351], "lagrangian": [104, 351, 360], "formul": [104, 114], "mond": [104, 114, 347, 351, 360, 366], "newtoniangrav": [104, 114, 124, 141, 351, 352, 353, 354, 355, 359], "qumondgrav": [104, 114, 124, 131, 351], "emondgrav": [104, 124, 131, 141, 351], "classmethod": [107, 108, 117, 118, 134, 135, 144, 145, 158, 181, 182, 183, 184, 185, 193, 218, 219, 220, 221, 222, 230, 251, 252, 253, 254, 271, 274, 275, 351, 359], "attr": [107, 108, 117, 118, 124, 132, 134, 135, 144, 145, 170, 182, 183, 184, 193, 205, 219, 220, 221, 230, 242, 351, 359, 362, 366], "comput": [107, 108, 111, 117, 118, 121, 134, 135, 138, 144, 145, 148, 156, 182, 184, 186, 187, 188, 219, 221, 223, 224, 225, 293, 294, 299, 324, 325, 326, 336, 340, 348, 350, 351, 358, 359, 360, 362, 363, 366, 367], "dynam": [107, 117, 134, 144, 156, 334, 336, 351, 356, 358, 359, 362, 363, 366, 367, 368], "associ": [107, 109, 117, 119, 127, 134, 136, 144, 146, 172, 179, 209, 216, 258, 359], "result": [107, 117, 134, 144, 156, 168, 324, 325, 326, 336, 350, 358, 359, 360, 362, 367], "np": [107, 117, 144, 148, 156, 174, 211, 358, 359, 362, 367], "ndarrai": [107, 117, 144, 148, 156, 358, 359], "It": [108, 118, 135, 145, 347, 348, 351, 358, 359, 360, 362, 363, 367, 368], "ill": [108, 118, 135, 145, 351, 358], "advis": [108, 118, 135, 145, 351], "activ": [108, 118, 135, 145, 351], "self": [108, 118, 135, 145, 170, 181, 184, 205, 218, 221, 242, 245, 265, 339, 351, 358, 359, 362, 363], "reserv": [108, 118, 135, 145, 351], "when": [108, 118, 135, 145, 156, 157, 197, 234, 276, 293, 294, 299, 334, 336, 351, 356, 359, 360, 363, 366, 368], "undesir": [108, 118, 135, 145, 351], "construct": [108, 118, 124, 135, 145, 182, 183, 219, 220, 334, 345, 348, 351, 356, 358, 359, 360, 362, 363, 366], "would": [108, 118, 135, 145, 205, 242, 351, 359], "match": [108, 118, 135, 145, 348, 351, 358, 359, 362], "were": [108, 118, 135, 145, 351, 359, 362, 368], "realiz": [108, 118, 135, 145, 169, 348, 351, 358, 359, 363, 366], "bool": [108, 109, 111, 118, 119, 121, 127, 135, 136, 138, 145, 146, 148, 190, 205, 227, 242, 336, 351, 359], "disabl": [108, 118, 135, 145, 351], "determin": [109, 119, 127, 136, 146, 168, 174, 211, 245, 247, 323, 334, 348, 358, 359, 360, 363, 366, 367, 368], "had": [109, 119, 127, 136, 146], "gravitational_potenti": [109, 119, 127, 136, 146, 177, 214, 351, 359, 363], "popul": [109, 119, 127, 136, 146, 359], "rtype": [109, 119, 127, 136, 146], "forc": [111, 121, 138, 148, 351, 359, 360, 362], "compute_potenti": [111, 121, 138, 186, 187, 188, 223, 224, 225, 340, 351, 367], "onli": [111, 121, 138, 186, 187, 188, 205, 223, 224, 225, 242, 334, 336, 340, 351, 356, 359, 360, 362, 363, 366, 367], "better": [111, 121, 138, 351, 359, 362], "approach": [111, 121, 138, 197, 234, 334, 336, 351, 354, 356, 358, 359, 360], "recomput": [111, 121, 138, 197, 234, 351, 358, 359], "even": [111, 121, 138, 148, 334, 351, 358, 359, 360, 367], "_calcpo_gf": [112, 139, 149, 351, 352, 353, 354, 355], "gravitational_field": [112, 134, 139, 149, 177, 214, 351, 359, 363], "_calcpo_drm": [112, 139, 149, 351, 352, 353, 354, 355], "total_dens": [112, 139, 149, 177, 183, 193, 214, 220, 230, 351, 359, 362, 363, 366], "total_mass": [112, 139, 149, 177, 214, 351, 359, 363], "solv": [112, 139, 149, 350, 351, 352, 353, 354, 355, 367], "gravitation_potenti": [113, 123, 130, 140, 150], "extend": 114, "aqualgrav": [114, 118, 124, 131, 141, 145, 351], "typic": [124, 186, 187, 188, 223, 224, 225, 334, 336, 340, 357, 358, 360, 363, 368], "select": [124, 299, 363], "modul": [124, 156, 244, 311, 317, 351, 356, 359, 362, 366], "store": [124, 348, 359], "probabl": [132, 323, 360, 366, 367], "serv": 132, "keyword": [132, 360, 366], "transfer": 132, "mathrm": [134, 323, 354, 358, 360, 362, 363, 367, 368], "dyn": [134, 354, 358, 359, 362, 366], "frac": [134, 174, 211, 270, 273, 323, 334, 336, 354, 358, 360, 367, 368], "nabla": [134, 174, 211, 334, 350, 358, 360], "phi": [134, 174, 211, 334, 336, 338, 354, 358, 360, 367], "connect": [138, 351], "compute_mass": [138, 351, 359], "qumond": [141, 170, 351, 356, 360, 366], "solut": [148, 358, 359, 360, 362, 368], "poisson": [148, 351, 354, 358, 359, 360], "equat": [148, 302, 334, 336, 351, 354, 358, 359, 367], "manag": [151, 244, 348, 359], "basenam": [152, 153, 359], "num_halo": [152, 153, 359], "center": [152, 153, 168, 248, 256, 265, 266, 318, 359, 362, 367], "num_particl": [152, 153, 186, 187, 188, 189, 223, 224, 225, 226, 323, 340, 359, 362, 366, 367], "mag_fil": [152, 153, 359], "particle_fil": [152, 153, 359], "20000": [152, 153, 367], "side": [152, 157, 176, 213, 261, 359], "less": [152, 358, 366], "arbitrari": [152, 359, 363], "m": [152, 280, 281, 282, 288, 289, 291, 292, 293, 297, 298, 303, 304, 306, 307, 323, 348, 358, 359, 367, 368], "permit": 152, "t_max": 156, "max_step": 156, "dx_max": 156, "n_iter": 156, "10000": [156, 358, 359, 360, 362, 363, 366, 367], "softening_length": 156, "collision_dist": 156, "100": [156, 313, 358, 359, 363, 367, 368], "orbit": 156, "behavior": [156, 273, 348, 356, 358, 359, 362, 363, 366], "idea": [156, 363, 367], "timestep": 156, "distanc": [156, 168, 336], "per": [156, 157], "reduc": [156, 356, 360], "loss": 156, "accuraci": [156, 367], "close": [156, 366], "anoth": [156, 268, 358, 359, 366, 368], "iter": 156, "soften": 156, "stop": [156, 336, 359], "indic": [156, 248, 260, 358, 359, 360], "collis": 156, "locat": [156, 322, 347], "shape": [156, 260, 367], "time_index": 156, "dx": [156, 332], "dy": 156, "dz": 156, "ddx": 156, "acceler": [156, 352, 353, 354, 355, 358, 366], "ddy": 156, "ddz": 156, "return_cod": 156, "exit": 156, "cython": [156, 359, 360], "err": 156, "warn": [156, 185, 222, 348, 351, 359, 362, 366, 367], "dure": [156, 245, 358, 359], "execut": [156, 356], "simplenamespac": 156, "domain_dimens": [157, 176, 213, 318, 359, 360, 362], "box_siz": [157, 176, 213, 245, 261, 264, 359, 367], "intens": [157, 176, 213], "suggest": [157, 176, 213, 280, 281, 356], "conserv": [157, 176, 213, 358], "choic": [157, 176, 213, 362, 368], "domain": [157, 176, 190, 213, 227, 261, 358, 360, 362, 363], "size": [157, 176, 181, 198, 213, 218, 235, 260, 362], "order": [157, 176, 213, 338, 359, 362, 363], "avoid": [157, 176, 213], "oom": [157, 176, 213], "issu": [157, 176, 185, 213, 222, 336, 349, 356, 366], "500": [157, 176, 213, 358, 359, 366, 367], "take": [157, 176, 213, 270, 332, 348, 350, 358, 359, 360, 362, 363], "appox": [157, 176, 213], "3gb": [157, 176, 213], "uniformli": [157, 176, 213, 323], "multipl": [157, 366, 367], "volum": 157, "wherea": 157, "weight": [157, 164, 360], "array_lik": [157, 176, 213], "left": [157, 176, 213, 270, 273, 332, 334, 354, 358, 359, 360, 366, 367, 368], "passive_scalar": [163, 260, 266, 367], "gadget": [163, 245, 253, 264, 347], "relax": [163, 348, 368], "glass": 163, "meshrelax": 163, "arepo": [163, 253, 356, 367], "resampl": 163, "thermal": [163, 164, 199, 236, 358, 359, 362], "onto": [163, 350, 359, 362], "rel": [164, 174, 176, 211, 213, 334, 336, 338, 356, 358, 359, 360, 362, 363, 366, 367], "sph": 164, "routin": 164, "either": [164, 253, 264, 334, 348, 350, 359, 367], "combin": [164, 265, 348, 360, 367, 368], "togeth": [164, 265, 363, 367], "than": [164, 270, 366], "overlap": 164, "them": [164, 169, 359, 363, 366, 367], "total": [166, 183, 193, 220, 230, 287, 288, 289, 290, 291, 292, 295, 296, 301, 303, 304, 305, 348, 352, 353, 354, 355, 359, 363, 366, 367, 368], "d": [168, 174, 211, 270, 297, 298, 334, 336, 354, 358, 359, 360, 362, 367, 368], "b": [168, 199, 200, 236, 237, 287, 309, 310, 348, 350, 362, 368], "common": [168, 348, 358, 363], "central": [168, 200, 237, 282, 368], "separ": 168, "direct": [168, 339, 356, 359, 360, 367], "sep_x": 168, "sqrt": [168, 334, 336, 360, 367], "impact": [168, 362, 368], "center1": [168, 359], "5": [168, 273, 348, 358, 359, 360, 362, 363, 366, 367, 368], "center2": [168, 359], "hse": [169, 174, 211, 265, 266, 358, 359, 363, 366], "comprehens": [170, 356, 359, 363], "accur": [170, 359], "predic": [170, 363], "fix": [170, 197, 234, 358, 362], "radii": [170, 186, 187, 188, 190, 223, 224, 225, 227, 266, 274, 323, 324, 325, 326, 336, 340, 358, 362, 366, 367, 368], "num_el": [170, 358], "element": [170, 181, 194, 218, 231, 248, 265, 342, 362], "equival": [170, 181, 218, 254, 332, 358, 360, 366], "appli": [170, 334, 352, 353, 354, 355, 358, 360], "becom": [170, 184, 221, 332, 334, 358, 359, 360, 362, 368], "incorpor": [170, 184, 221, 347], "__getitem__": [170, 245], "__contains__": 170, "alias": 170, "__setitem__": [170, 245], "index": [170, 245, 270, 278, 291, 292, 300, 356, 359, 368], "assign": [170, 350, 359, 360, 362, 363, 367], "cannot": [170, 185, 222, 362], "set_field": [170, 358, 359, 367], "deviat": [174, 211, 358, 359, 363], "chk": [174, 211, 336, 359], "recal": [174, 211, 358, 360], "gamma": [174, 211, 308, 348, 358, 362, 368], "defin": [174, 211, 256, 257, 299, 323, 348, 358, 363, 366, 367], "p": [174, 211, 306, 307, 348, 358, 359, 360, 362, 366, 367, 368], "rho_g": [174, 211, 348, 354, 358, 366], "thu": [174, 211, 334, 350, 358, 360, 367, 368], "invari": [174, 211], "report": [174, 211], "generate_model": [174, 204, 205, 206, 211, 241, 242, 243], "assert_almost_equ": [174, 211], "mdl": [174, 204, 205, 206, 211, 241, 242, 243], "amax": [174, 211, 362], "decim": [174, 211], "frame": [176, 213, 367], "must": [176, 181, 184, 197, 213, 218, 221, 234, 245, 268, 347, 348, 358, 359, 360, 367], "1x3": [176, 213], "gas_mass": [177, 214, 359, 363], "dark_matter_mass": [177, 214, 359, 363], "dark_matter_dens": [177, 214, 359, 363, 366, 367], "stellar_dens": [177, 182, 183, 184, 193, 214, 219, 220, 221, 230, 358, 359, 363, 366], "stellar_mass": [177, 214, 359], "find": [180, 217, 290, 293, 294, 305, 334, 351, 356, 358, 359, 360, 363, 366, 367], "alon": [181, 218], "consist": [181, 218, 265, 277, 358, 359, 360, 362, 363, 367], "definit": [181, 218, 336], "assess": [181, 218], "from_dens_and_tden": [181, 218, 358, 359, 363, 366], "from_dens_and_temp": [181, 218, 348, 358, 359, 362], "from_dens_and_entr": [181, 218, 358], "from_h5_fil": [181, 218, 358, 360], "callabl": [182, 184, 219, 221, 268, 274, 324, 325, 326, 332, 359, 363], "stellar": [182, 183, 184, 193, 219, 220, 221, 230, 334, 343, 358, 367, 368], "describ": [183, 193, 220, 230, 351, 359, 360, 362, 367, 368], "desir": [183, 193, 220, 230, 245, 265, 323, 359, 367], "integ": [183, 186, 187, 188, 193, 220, 223, 224, 225, 230, 276, 340], "evalu": [183, 193, 220, 230], "seek": [185, 222], "both": [185, 222, 278, 279, 334, 360, 366, 367], "pkl": [185, 222], "later": [185, 222, 350, 363, 367], "found": [185, 222, 358, 359, 363, 366], "lose": [185, 205, 222, 242], "sub_sampl": [186, 187, 188, 189, 223, 224, 225, 226, 340], "within": [186, 187, 188, 223, 224, 225, 264, 301, 313, 323, 336, 340, 349, 352, 353, 354, 355, 362, 367, 368], "sub": [186, 187, 188, 223, 224, 225, 340], "uniqu": [186, 187, 188, 223, 224, 225, 340, 367], "repeat": [186, 187, 188, 223, 224, 225, 340], "fill": [186, 187, 188, 223, 224, 225, 340], "randomst": [186, 187, 188, 223, 224, 225, 323, 340], "pseudo": [186, 187, 188, 223, 224, 225, 278, 279, 323, 340], "random": [186, 187, 188, 223, 224, 225, 323, 340, 367], "reason": [186, 187, 188, 223, 224, 225, 340, 358, 359], "seed": [186, 187, 188, 223, 224, 225, 340], "viabl": [190, 227, 334, 358, 360], "non": [190, 197, 227, 234, 334, 348, 360, 362, 363, 366], "fig": [195, 232, 276, 359, 362, 363, 366, 367], "v": [195, 232, 334, 336, 350, 358, 360, 362, 367, 368], "matplotlib": [195, 232, 276, 359, 362, 363, 366, 367], "figur": [195, 232, 276, 362, 366], "constrain": [197, 234, 350], "itself": [197, 234, 260, 359, 360], "procedur": [197, 234, 348, 350, 358, 359], "accomplish": [197, 234, 349], "rho_i": [197, 234], "therefor": [197, 234, 334, 336, 354, 358, 363, 366], "substitut": [197, 234], "rho": [197, 234, 334, 336, 354, 358, 359, 360, 367], "_i": [197, 234], "depend": [197, 234, 334, 350, 358, 359, 360], "after": [197, 234, 347, 358, 359, 360, 367], "stage": [197, 234, 350, 360], "manual": [197, 205, 234, 242, 358, 359, 362], "beta": [199, 236, 283, 308, 348, 362, 368], "gaussian": [199, 200, 236, 237, 334, 358, 360], "plasma": [199, 236], "p_th": [199, 236], "p_b": [199, 200, 236, 237], "lorentz": [199, 200, 236, 237], "heavisid": [199, 200, 236, 237], "dimensionless": [199, 200, 236, 237, 278, 279], "ratio": [199, 236, 278], "pi": [199, 200, 236, 237, 334, 336, 354, 359, 360, 367, 368], "b0": [200, 237, 367], "eta": [200, 237, 354, 358], "6666666666666666": [200, 237], "proport": [200, 237, 358], "power": [200, 237, 270, 291, 292, 300, 332, 358, 362], "strength": [200, 237], "gauss": [200, 237], "ascii": [204, 241, 358], "astropi": [204, 241], "qtabl": [204, 241], "tempfil": [204, 205, 206, 241, 242, 243], "temporarydirectori": [204, 205, 206, 241, 242, 243], "temp_dir": [204, 205, 206, 241, 242, 243], "o": [204, 205, 206, 241, 242, 243, 362, 363], "join": [204, 205, 206, 241, 242, 243, 363], "fields_to_writ": [205, 242], "unformat": [205, 242], "fortran": [205, 242], "binari": [205, 242, 277, 347, 358, 363], "But": [205, 242, 359], "why": [205, 242, 359, 360, 363], "fortan": [205, 242], "proceedur": [205, 242], "metadata": [205, 242], "As": [205, 242, 358, 359, 362, 366, 368], "upon": [205, 242], "reopen": [205, 242], "particle_typ": [245, 246], "black_hol": 245, "1d": [245, 350, 363], "particle_mass": [245, 359, 360, 362, 367], "implicitli": 245, "similarli": [245, 358], "alia": 245, "bh_mass": 247, "po": [247, 367], "vel": [247, 367], "use_pot_min": [247, 367], "black": 247, "solar": [247, 363], "ignor": [247, 358, 360], "r_ctr": [248, 367], "v_ctr": [248, 367], "offset": [248, 359], "bulk": [248, 367], "normal": [248, 367, 368], "circumst": 248, "drop": [249, 280, 281], "remov": [249, 256, 350, 351, 358], "relat": [250, 358, 363, 368], "snapshot": [253, 367], "cl": [254, 351, 359, 366], "from_fil": [254, 367], "cut": [256, 273, 359, 362], "outsid": [256, 358, 362], "certain": [256, 300, 367], "export": [256, 261], "passiv": [257, 259, 260, 367], "updat": 260, "preserv": [260, 332, 350], "width": [261, 264, 308, 309, 366, 367], "ic_filenam": 264, "dtype": [264, 359], "float32": 264, "cubic": [264, 367], "datatyp": [264, 359], "float64": [264, 359], "concaten": [265, 359, 362, 367], "joint": 265, "group": [265, 362], "instanti": [267, 359, 368], "wrapper": [267, 348, 359, 362, 363, 368], "lambda": [267, 268, 348, 359, 363], "cumul": [267, 323, 324, 325, 326], "alter": [267, 270, 362, 367], "truncat": [267, 273, 306, 307, 332, 359, 362, 363, 366], "previou": [268, 358], "r_core": 270, "low": [270, 348], "exponenti": 270, "f": [270, 275, 277, 278, 297, 298, 332, 334, 336, 351, 359, 360, 362, 363, 366, 367, 368], "exp": [270, 273, 334, 359, 360, 368], "r_": [270, 273, 284, 286, 291, 292, 297, 298, 300, 306, 307, 308, 348, 354, 362, 368], "right": [270, 273, 334, 354, 358, 359, 360, 363, 367, 368], "caus": [270, 273, 332, 368], "cuspi": [270, 368], "dr": [270, 334, 354, 358, 360], "_": [270, 336, 359, 360, 362, 363, 367], "grow": 270, "faster": [270, 273, 359, 368], "term": [270, 368], "go": [270, 273, 348, 359, 360, 362, 363, 366], "limit": [270, 362, 366, 367], "arg": [271, 331, 360], "constant_profil": [272, 356, 359, 368], "power_law_profil": [272, 356, 359, 368], "beta_model_profil": [272, 356, 359], "hernquist_density_profil": [272, 356, 359, 363], "cored_hernquist_density_profil": [272, 356, 359], "hernquist_mass_profil": [272, 356, 359], "nfw_density_profil": [272, 356, 359, 368], "nfw_mass_profil": [272, 356, 359, 368], "tnfw_density_profil": [272, 356, 359, 363, 366], "tnfw_mass_profil": [272, 356, 359, 363, 366], "snfw_density_profil": [272, 356, 358, 359, 368], "snfw_mass_profil": [272, 356, 358, 359, 368], "cored_snfw_density_profil": [272, 356, 359], "cored_snfw_mass_profil": [272, 356, 359], "cored_snfw_total_mass": [272, 359], "einasto_density_profil": [272, 356, 359], "einasto_mass_profil": [272, 356, 359], "am06_density_profil": [272, 281, 356, 359], "vikhlinin_density_profil": [272, 356, 358, 359, 363, 366], "vikhlinin_temperature_profil": [272, 356, 358, 359], "am06_temperature_profil": [272, 280, 356, 359], "baseline_entropy_profil": [272, 356, 359], "broken_entropy_profil": [272, 356, 359], "walker_entropy_profil": [272, 356, 359], "rescale_profile_by_mass": [272, 358, 359, 363, 366], "r_cut": 273, "k": [273, 350, 359, 362, 368], "beyond": [273, 362, 367, 368], "domin": 273, "rate": [273, 332], "higher": [273, 332], "zero": [273, 350, 352, 353, 354, 355, 358, 359, 362, 367], "achiev": [273, 362], "multipli": 273, "factor": [273, 358, 368], "2k": 273, "f_r": 274, "univariatesplin": 274, "continu": [274, 332, 359], "spectrum": 274, "disk": [275, 359, 367], "open": [275, 359], "valid": [275, 334, 351, 360], "rp": [275, 277], "pickl": 275, "lw": [276, 367], "quick": [276, 360, 363, 367], "logspac": 276, "send": 277, "extens": [277, 351, 358], "t0": [278, 279, 348, 362], "4": [278, 334, 336, 348, 354, 358, 359, 360, 362, 363, 366, 367, 368], "mu": [278, 358, 366], "6": [278, 334, 358, 359, 360, 362, 363, 368], "omega_b": 278, "048": 278, "omega_dm": 278, "262": 278, "polytrop": [278, 279], "degre": [278, 279, 360], "cool": [278, 279, 280, 281, 309, 347, 368], "a_c": [278, 279, 280, 281, 368], "fraction": [278, 323, 363, 368], "molecular": [278, 312, 358], "cosmic": 278, "baryon": [278, 358], "rho_0": [280, 308, 362, 368], "c": [280, 281, 297, 298, 309, 348, 362, 363, 368], "markevitch": [280, 281, 356], "2006": [280, 281, 308, 309, 348, 356, 362], "apj": [280, 281, 287, 295, 296, 297, 298, 308, 309, 313, 368], "650": [280, 281, 368], "102": [280, 281, 363, 368], "concert": [280, 281], "msun": [280, 283, 286, 287, 288, 289, 290, 295, 296, 297, 298, 301, 303, 304, 305, 306, 307, 308, 313, 348, 359, 367, 368], "t_0": [281, 309, 368], "k_0": [282, 284, 368], "k_200": 282, "r_200": [282, 286, 310], "baselin": 282, "voit": 282, "kai": 282, "bryan": 282, "l": [282, 287, 288, 289, 295, 296, 302, 303, 304, 336, 359, 360, 368], "2005": 282, "mnra": [282, 288, 289, 302, 303, 304, 368], "364": 282, "909": 282, "floor": 282, "logarithm": [282, 291, 292, 308, 309, 368], "slope": [282, 291, 292, 308, 309, 332, 362, 368], "rho_c": 283, "r_c": [283, 288, 289, 290, 308, 348, 362, 368], "cavalier": [283, 368], "fusco": [283, 368], "femiano": [283, 368], "1976": 283, "49": [283, 366], "137": 283, "k_scale": [284, 310], "const": 285, "constant": [285, 334, 351, 358, 360, 367], "m_200": 286, "conc": [286, 299, 358, 359, 363, 368], "m200": [286, 294, 358, 359, 363, 366], "r200": [286, 294, 316, 358, 359, 363, 366], "concentr": [286, 299, 302, 363, 368], "nfw": [286, 288, 289, 290, 297, 298, 299, 302, 303, 304, 305, 306, 307, 356, 366], "hernquist": [286, 287, 295, 296, 348, 356, 363], "overdens": [286, 293, 294, 299], "200": [286, 299, 358, 359, 363, 366, 367, 368], "critic": [286, 293, 294, 299], "m_0": [287, 295, 296], "1990": [287, 295, 296], "356": [287, 295, 296, 368], "359": [287, 295, 296, 368], "super": [288, 289, 290, 303, 304, 305, 351, 359], "lillei": [288, 289, 302, 303, 304, 368], "wyn": [288, 289, 302, 303, 304, 368], "evan": [288, 289, 302, 303, 304, 368], "sander": [288, 289, 302, 303, 304, 368], "2018": [288, 289, 302, 303, 304, 368], "sai": [290, 305, 358], "m200c": [290, 305], "r200c": [290, 302, 305], "law": [291, 292, 300, 332, 358, 362], "retana": [291, 292], "montenegro": [291, 292], "2012": [291, 292], "540": [291, 292, 359], "a70": [291, 292], "invers": [291, 292, 323, 360], "delta": [293, 294, 299, 358, 359, 363, 366, 368], "cosmo": [293, 294, 299, 363], "enclos": 293, "redshift": [293, 294, 299, 348, 363, 366], "cosmologi": [293, 294, 299, 363], "m_r": 294, "rho_": [297, 298, 306, 307, 358, 366, 368], "navarro": [297, 298, 368], "frenk": [297, 298, 368], "white": [297, 298, 368], "1996": [297, 298, 368], "462": [297, 298, 368], "563": [297, 298, 368], "whatev": [300, 359], "els": [300, 351, 359, 360], "rescal": [301, 363], "conc_nfw": 302, "snfw": [302, 368], "come": [302, 347, 359, 360], "31": [302, 359, 362, 363], "r_t": [306, 307, 309, 332, 348, 368], "tnfw": [306, 307, 368], "baltz": [306, 307], "marshal": [306, 307], "oguri": [306, 307], "2009": [306, 307, 313], "jcap": [306, 307], "015": [306, 307], "epsilon": [308, 348, 362, 368], "modifi": [308, 351, 358, 360, 368], "kravtsov": [308, 309, 368], "forman": [308, 309, 368], "w": [308, 309, 368], "691": [308, 309, 368], "inner": [308, 309, 362], "middl": 308, "outer": [308, 309, 366], "control": 308, "transit": [308, 309, 332, 362], "t_min": [309, 348], "r_cool": [309, 348, 362], "a_cool": [309, 348, 362], "region": [309, 358, 366], "empir": 311, "variabl": [311, 358], "ne": 312, "electron": 312, "n_e": [312, 358], "math": [312, 336, 360], "ho_": 312, "mu_e": 312, "m500": [313, 314, 315, 358, 359, 366], "hubbl": 313, "7": [313, 348, 359, 360, 362, 363, 366, 368], "relationship": [313, 358], "mga": 313, "mtot": 313, "r500": [313, 358, 359], "692": 313, "1033": 313, "ui": 313, "adsab": 313, "harvard": 313, "edu": 313, "ab": 313, "2009apj": 313, "1033v": 313, "km": [313, 350], "mpc": 313, "packag": [317, 356, 358, 359, 360, 363, 366], "arr": 320, "messag": [322, 327], "frmt": 322, "subject": [323, 354, 360], "len": [323, 359], "Will": 323, "own": [323, 348, 350, 359, 360, 362, 363], "reli": [323, 358], "p_r": 323, "max": [323, 354], "u": [323, 348, 359, 360, 363, 364, 365, 366, 367], "rr": [324, 325, 326, 359], "costli": [324, 325, 326], "larg": [324, 325, 326, 332, 336, 348, 358, 359, 362, 366, 367, 368], "becaus": [324, 325, 326, 334, 336, 358, 359, 360, 362, 363, 366], "increment": [324, 325, 326], "integr": [325, 326, 334, 336, 352, 353, 354, 355, 359, 360, 362, 363, 366, 367], "inf": 326, "buffer": 328, "rtol": [328, 336], "001": 328, "max_execution_tim": 331, "rac": 332, "ight": 332, "df": [332, 334, 335, 339, 360], "yield": [332, 334, 358, 360], "monoton": 332, "interpolatedunivariatesplin": [332, 359], "quickli": 332, "dark_matt": [334, 335, 343, 359, 360, 362, 363], "sigma2": [334, 335], "eddington": [334, 335, 336, 348, 359, 362, 363, 366], "necessari": [334, 347, 350, 351, 356, 358, 359, 360, 366, 368], "facilit": [334, 348, 356, 359, 366], "edington": 334, "formula": [334, 336, 358, 359, 368], "lma": [334, 359, 360], "thought": [334, 358], "occupi": 334, "textbf": [334, 336, 360], "dot": [334, 360], "regardless": [334, 358, 360], "liouvil": [334, 360], "theorem": [334, 336], "collisionless": [334, 367], "boltzmann": 334, "jean": [334, 336], "question": [334, 350, 359], "wai": [334, 347, 348, 350, 358, 359, 362, 363, 367], "steadi": [334, 360], "state": [334, 360], "integrand": 334, "invert": [334, 358, 360, 367], "abel": [334, 348, 360, 367], "happen": [334, 360, 363], "consid": [334, 358, 360], "rh": [334, 360], "expand": [334, 360], "trivial": [334, 358, 360], "differenti": [334, 358, 360, 367], "In": [334, 338, 350, 358, 359, 360, 362, 363, 366, 367], "stipul": [334, 360], "angular": [334, 360, 367], "momentum": [334, 358, 360, 367], "irrot": [334, 360], "simplifi": [334, 360], "notat": [334, 360], "denot": [334, 360], "psi": [334, 336, 338, 358, 360, 367], "phi_0": [334, 336, 338, 354], "mathcal": [334, 336, 359, 360], "int_0": [334, 336, 354, 360, 367], "blinnei": [334, 360], "tremain": [334, 336, 360], "maxwellian": [334, 359], "while": [334, 360, 363, 364, 365], "badli": [334, 360], "behav": [334, 360, 362], "estim": [334, 360], "nonetheless": [334, 358, 359, 360, 362], "symmetri": [334, 350, 360, 367], "partial": [334, 358, 360], "sigma_r": [334, 359, 360], "sigma": [334, 360], "2_": [334, 360], "theta": [334, 360, 367], "stress": [334, 360], "tensor": [334, 336, 360], "isotrop": [334, 336, 360, 367], "dispers": [334, 336, 360], "rho_h": [334, 360, 368], "int_r": [334, 354, 360], "infti": [334, 354, 358, 360, 368], "abl": [334, 360], "speed": [334, 360, 367], "v_r": 334, "01": [336, 359, 360, 362], "under": [336, 359, 360, 368], "just": [336, 348, 359, 360, 363, 366], "toler": [336, 362], "exce": 336, "enforc": [336, 358, 366], "basi": [336, 359], "let": [336, 348, 358, 359, 360, 362, 363, 366], "invok": 336, "acknowledg": 336, "furthermor": [336, 356, 358, 360], "due": [336, 350, 360, 366, 367], "assumpt": [336, 356, 358], "binnei": [336, 360], "2011": [336, 360], "vol": [336, 360], "princeton": [336, 360], "press": [336, 360], "decreas": 338, "revers": 339, "inherit": [342, 348, 359], "rigidgrav": 347, "rigid": 347, "selfgrav": 347, "inclus": 347, "tangl": 347, "john": 347, "zuhon": 347, "request": [347, 362], "who": [347, 349], "licens": 347, "copi": [347, 356], "tripl": 347, "makefil": 347, "simu_opt": 347, "dmodel": 347, "hydro": [347, 350, 358], "dgraviti": 347, "dparticl": 347, "dncomp_passive_us": 347, "merger_coll_numhalo": 347, "merger_coll_usemet": 347, "dmhd": 347, "deo": 347, "eos_gamma": 347, "dpar_natt_us": 347, "dgpu": 347, "dload_bal": 347, "hilbert": 347, "dopenmp": 347, "dsupport_hdf5": 347, "proper": [347, 351], "add_background_grid": 347, "config": 347, "enabl": 347, "sh": 347, "soon": [347, 352, 353, 355, 362], "adapt": 347, "mesh": [347, 359, 362], "refin": 347, "amr": [347, 350, 359], "radi": 347, "agn": 347, "feedback": 347, "host": 347, "raymond": [347, 366], "patch": [347, 366], "guid": [347, 356, 359, 360, 366], "ins": [347, 362], "whichev": [347, 358], "pleas": [347, 349, 364, 365], "setup_ramses_": [347, 363], "intend": [347, 362], "mergerconfig": 347, "txt": [347, 363], "halo_": 347, "_part": 347, "_prof": 347, "unavail": 347, "cluster_merg": 347, "namelist": 347, "product": 348, "methodologi": 348, "chandra": [348, 356, 362, 368], "vikhlinin06": [348, 362], "phenomenolog": 348, "public": 348, "ascasibar07": 348, "13": [348, 359, 362], "9": [348, 359, 362, 363], "sanderson10": 348, "easiest": 348, "sever": [348, 359, 366, 367], "seen": [348, 359, 362, 363], "print": [348, 359, 360, 362, 363, 366], "a133": [348, 362], "a262": [348, 362], "a383": [348, 362], "a478": [348, 362], "a907": [348, 362], "a1413": [348, 362], "a1795": [348, 362], "a1991": [348, 362], "a2029": [348, 362], "a2390": [348, 362], "rx": [348, 362], "j1159": [348, 362], "5531": [348, 362], "mkw": [348, 362], "usgc": [348, 362], "s152": [348, 362], "load_model": [348, 362], "info": [348, 351, 359, 360, 362, 363, 366], "2023": [348, 359, 360, 362, 363, 366], "09": [348, 359, 360, 363, 366], "11": [348, 359, 362, 363], "08": [348, 359, 362], "53": [348, 362], "510": 348, "519": [348, 362], "mon": 348, "sep": [348, 363], "917": 348, "from_scratch": [348, 363], "923": 348, "55": 348, "And": [348, 363], "got": [348, 359, 360, 362, 366], "bit": [348, 359, 362], "intric": 348, "still": [348, 359], "everi": [348, 356, 359, 363], "hous": 348, "bear": 348, "io": [348, 359], "doe": [348, 358, 359, 360, 362, 366, 367], "templat": 348, "global": [348, 360], "wide": [348, 356, 358, 359, 368], "regard": [348, 358, 359], "referenc": [348, 360], "first_profil": 348, "builtin": [348, 349, 359], "is_custom": 348, "express": [348, 359, 360, 367], "rho0": 348, "null": 348, "second_profil": 348, "multilin": 348, "readabl": 348, "exec": 348, "descript": [348, 358, 362], "paper": [348, 356, 362], "load_method": [348, 362], "csv": 348, "load_from_fil": 348, "extra_clust": 348, "Not": [348, 358, 360, 362], "desc": 348, "cute": 348, "notic": [349, 358, 359, 360, 362, 363, 366], "breakag": 349, "notifi": 349, "aim": [349, 358, 360, 368], "nut": [349, 360], "bolt": [349, 360], "accord": 350, "complex": [350, 358, 359, 360, 363], "turbul": 350, "fashion": 350, "uniform": [350, 367], "natur": 350, "bf": [350, 358, 367], "tild": 350, "v_x": 350, "v_1": 350, "u_1": 350, "iN": 350, "u_2": 350, "v_y": 350, "v_2": 350, "u_3": 350, "u_4": 350, "v_z": 350, "v_3": 350, "u_5": 350, "u_6": 350, "special": [350, 360], "handl": 350, "constraint": 350, "cdot": [350, 358, 360], "least": [350, 358], "diverg": [350, 358, 367, 368], "space": [350, 360, 367], "subtract": 350, "off": [350, 359, 360, 363, 366, 368], "parallel": 350, "hat": 350, "machin": 350, "precis": 350, "linearli": 350, "free": 350, "small": [350, 358, 362], "mhd": 350, "clean": 350, "substanti": 350, "concern": 350, "transport": 350, "evolv": 350, "transform": 350, "clusterfield": 350, "map_field_to_particl": 350, "vfield": 350, "write_to_h5": 350, "bfield": 350, "On": 351, "brief": 351, "summari": 351, "goe": [351, 359], "classic": [351, 352, 353, 354, 355, 360], "1984apj": 351, "286": 351, "7b": 351, "403": [351, 366], "886m": 351, "emond": 351, "simpl": [351, 356, 360, 363], "exact": [351, 366], "_templat": 351, "boiler": 351, "plate": 351, "addition": 351, "configur": [351, 357, 358, 359], "classnam": [351, 359], "_classnam": [351, 359], "potential_method": 351, "def": [351, 359], "attent": [351, 363], "meth": [351, 358], "mylog": [351, 359], "__repr__": [351, 359], "is_calcul": [351, 359], "pull": [351, 359, 363], "_choose_potential_method": 351, "valueerror": 351, "eprint": 351, "getattr": [351, 359, 362], "renam": 351, "header": 351, "respect": [351, 359, 363, 367], "solver": [352, 353, 354, 355, 359, 366], "rank": [352, 353, 354, 355], "gf": [352, 353, 354, 355], "infin": [352, 353, 354, 355, 368], "drm": [352, 353, 354, 355], "shell": [352, 353, 354, 355], "boundaryi": [352, 353, 354, 355], "infinit": [352, 353, 354, 355, 367], "uh": [352, 353, 355, 364, 365], "oh": [352, 353, 355, 364, 365], "hasn": [352, 353, 355], "ll": [352, 353, 355, 359, 364, 365, 366], "get": [352, 353, 355, 356, 357, 358, 359, 360, 363, 364, 367], "pure": 354, "relativist": 354, "effect": 354, "primari": [354, 366], "possibl": [354, 356, 358, 359, 360], "attempt": 354, "int_": [354, 358], "nabla_": 354, "xi": [354, 358], "accru": 354, "gm": 354, "gaug": 354, "previous": 354, "readili": 354, "fall": [354, 368], "back": [354, 359], "secondari": 354, "techniqu": 354, "2kt": 354, "gm_p": 354, "ln": [354, 358, 368], "cross": 356, "platform": 356, "intent": [356, 359, 363], "vast": [356, 358], "major": [356, 358, 359, 362], "headach": 356, "softwar": [356, 359, 360, 366], "gcp": 356, "goal": 356, "promot": 356, "modularli": 356, "easi": [356, 359, 363, 366], "meet": 356, "particular": [356, 362, 363], "scientif": [356, 362], "start": [356, 359, 362, 363], "build": [356, 362, 366], "scratch": 356, "doc": [356, 359], "encount": 356, "bug": 356, "failur": 356, "submit": 356, "visit": 356, "cored_hernquist_mass_profil": 356, "einasto": 356, "high": 356, "qualiti": [356, 362, 363], "capac": 356, "catalog": 356, "explor": [356, 359, 362, 366], "end": [356, 363], "literatur": [356, 360, 368], "quickstart": 356, "learn": [356, 358], "offer": 356, "experi": 356, "past": 356, "explain": 356, "backbon": 356, "api": [356, 358, 359, 362, 363], "deep": [356, 358], "dive": 356, "contribut": [356, 358, 362], "hint": 356, "might": [356, 359], "synthet": 356, "event": 356, "observatori": 356, "easili": [356, 358, 360, 367], "much": [356, 358, 359, 363, 367], "eas": [356, 366], "coupl": 356, "turn": [356, 362, 363, 366], "count": 356, "realist": 356, "xmm": 356, "newton": 356, "nustar": 356, "search": 356, "spatial": 357, "hold": [358, 359], "intial": 358, "protocol": 358, "fluid": 358, "obei": 358, "euler": 358, "viscos": 358, "context": [358, 360, 362, 368], "k_b": 358, "m_p": 358, "recogn": 358, "gasseou": 358, "worth": [358, 359, 360, 362, 363], "remaind": 358, "sim": [358, 368], "theoret": 358, "gm_": 358, "asymptot": 358, "stabl": 358, "a_0": [358, 366], "similar": [358, 363, 368], "taken": 358, "stabil": [358, 360], "regim": 358, "approx": 358, "2r": 358, "situat": 358, "nu": [358, 360], "solvabl": 358, "implicit": 358, "dmr": 358, "summar": 358, "tabl": [358, 362], "from_arrai": [358, 359], "grav": 358, "t_g": 358, "chosen": [358, 360, 363], "via": [358, 367], "incompress": [358, 360], "bari": 358, "difficult": [358, 362], "effici": 358, "r_0": 358, "exactli": [358, 359, 367], "accept": [358, 367], "no_ga": 358, "syntact": 358, "success": 358, "algorithm": [358, 362], "wa": [358, 360, 362, 367], "check_hs": [358, 359, 363], "clearli": [358, 359], "successfulli": [358, 360, 363], "equilibr": [358, 359, 363], "plai": [358, 359, 360], "role": 358, "ioniz": 358, "set_magnetic_field_from_beta": [358, 359], "p_": 358, "commonli": 358, "expon": 358, "choos": [358, 367], "set_magnetic_field_from_dens": [358, 359], "awar": 358, "slow": 358, "worthwhil": 358, "consult": 358, "write_model_to_ascii": 358, "write_model_to_h5": [358, 359, 362, 363, 366], "write_model_to_binari": 358, "confirm": [358, 362], "patholog": 358, "incomplet": 358, "interfer": 358, "prevent": [358, 359, 362, 363], "Such": 358, "immedi": [358, 359], "implic": 358, "find_overdensity_radiu": [358, 359, 363, 366], "snfw_total_mass": [358, 359], "find_radius_mass": [358, 359, 363, 366], "5e15": [358, 359], "rhot": [358, 359, 363], "mt": [358, 359, 363], "f_g": [358, 359, 363, 366], "12": [358, 359, 362], "rhog": [358, 359, 363], "67": [358, 359, 363, 366], "temp": 358, "42": [358, 362, 363], "02": [358, 359, 360, 362], "00": 358, "350": [358, 362], "19": [358, 359, 362], "short": 358, "answer": 358, "noth": 358, "At": [358, 359, 360], "until": 358, "is_phys": [358, 359, 362, 363, 366], "35": [358, 359, 362, 366], "rebuild_phys": [358, 362], "newli": 358, "origin": [358, 359, 367, 368], "m2": 358, "pleasant": 358, "reach": [358, 362], "require_phys": 358, "magenta": 358, "restrict": [358, 362], "viabil": 358, "forest": 358, "green": [358, 359], "leav": 358, "teal": 358, "rebuild": [358, 362], "quickguid": 359, "shown": 359, "lot": [359, 362, 363], "bell": 359, "whistl": 359, "confus": [359, 360], "usag": [359, 363], "custom": 359, "ones": [359, 367], "pyplot": [359, 362, 363, 366, 367], "plt": [359, 362, 363, 366, 367], "25": [359, 362], "39": [359, 360, 362, 363, 366], "profile_exampl": 359, "1e7": 359, "other_profile_exampl": 359, "built_in": 359, "sum": 359, "behind": [359, 363], "scene": [359, 363], "few": [359, 362, 366], "add_cor": [359, 363], "cutoff": [359, 363], "subplot": [359, 362, 363, 366, 367], "color": [359, 360, 362, 366], "t_profil": 359, "800": [359, 362], "red": [359, 362], "c_profil": 359, "50": [359, 362, 367], "okai": [359, 360, 362, 363, 366], "my": [359, 362, 363], "raw": 359, "profile_1": [359, 360], "sine": 359, "geomspac": 359, "profile_2": 359, "cosin": 359, "last": [359, 360, 366], "root": 359, "elsewher": 359, "doesn": 359, "to_binari": [359, 363], "from_binari": 359, "arbitrarili": 359, "next": [359, 363, 367], "tour": 359, "la": 359, "talk": [359, 366], "pretti": [359, 362], "useless": 359, "reset": [359, 360], "modular": [359, 366], "log": [359, 363, 366], "saniti": 359, "debug": 359, "tdens_func": 359, "gpot_profil": 359, "gpot1": 359, "gpot2": 359, "convert_to_unit": [359, 366], "log_str": 359, "comp": [359, 362], "stream": 359, "sy": 359, "stderr": 359, "h": [359, 360, 363, 368], "_val": 359, "succe": 359, "dev": 359, "theorist": 359, "contributor": 359, "secondli": 359, "plain": 359, "sens": [359, 360, 363], "fanci": [359, 363], "again": [359, 362], "label": [359, 367], "distinguish": 359, "satisfi": [359, 360], "interphas": 359, "fact": [359, 360, 363], "basic_model": [359, 363], "27": [359, 360], "16": [359, 360, 368], "547": 359, "655": 359, "659": 359, "52": 359, "938": 359, "26": [359, 362], "04": [359, 362], "788": 359, "37": 359, "710": 359, "now": [359, 360, 362, 363, 366, 367, 368], "hood": [359, 360], "everyth": 359, "odict_kei": 359, "gas_fract": [359, 363], "electron_number_dens": [359, 363], "ask": 359, "aren": [359, 360], "dm_virial": [359, 360], "star_viri": 359, "shortli": 359, "introduc": [359, 368], "asid": 359, "thing": [359, 360, 362, 363, 366], "One": [359, 360, 366, 367], "737": 359, "33609e": 359, "07": [359, 362, 366], "That": 359, "000": 359, "neg": [359, 363], "sun": [359, 363], "aug": [359, 362], "luster_gener": [359, 362, 363], "protect": 359, "_virial": [359, 360], "_dm_virial": [359, 360], "lt": [359, 360, 363], "0x7f297d4857c0": 359, "gt": [359, 360, 363, 366], "did": 359, "moment": [359, 360], "essenti": [359, 362, 363], "organiz": 359, "virialization_method": 359, "explan": 359, "main": 359, "mention": [359, 363, 367], "gone": 359, "magic": 359, "ahead": 359, "try": [359, 364, 365], "14": [359, 362], "generate_dm_particl": [359, 367], "1_000_000": [359, 362, 366, 367], "28": [359, 362], "05": [359, 360], "549": 359, "1000000": [359, 362, 367], "553": 359, "850": 359, "notebook": [359, 363], "awhil": 359, "bread": 359, "butter": 359, "discret": 359, "awai": 359, "15": [359, 362], "million": [359, 360], "field_nam": 359, "defaultdict": 359, "particle_posit": [359, 367], "particle_veloc": [359, 367], "bore": 359, "Its": [359, 362], "realli": [359, 363, 366], "17": [359, 362], "gas_particl": [359, 367], "generate_gas_particl": [359, 367], "914": 359, "916": [359, 362, 363], "166": 359, "973": [359, 362], "thermal_energi": [359, 362, 367], "don": [359, 363], "rest": [359, 366], "write_particl": [359, 367], "write_particles_to_h5": 359, "write_to_gadget_fil": [359, 367], "make_radial_cut": [359, 362, 367], "add_offset": [359, 360, 362, 367], "add_black_hol": [359, 367], "18": [359, 362], "4000": [359, 362], "move": 359, "bix": 359, "to_yt_dataset": [359, 360, 362], "8000": [359, 362], "209": 359, "current_tim": [359, 360, 362], "211": [359, 362], "214": 359, "domain_left_edg": [359, 360, 362], "215": [359, 363], "domain_right_edg": [359, 360, 362], "217": 359, "cosmological_simul": [359, 360, 362], "sort": [359, 362], "phase": [359, 360, 367], "diagram": 359, "field_list": 359, "p1": 359, "particleplot": [359, 360, 362], "particle_position_x": [359, 360, 362], "particle_position_i": [359, 360, 362], "226": 359, "alloc": [359, 360, 362], "949e": 359, "particle_position_z": 359, "particle_velocity_x": 359, "particle_velocity_i": 359, "particle_velocity_z": 359, "nbodi": 359, "026": 359, "xlim": [359, 362], "000000": [359, 362], "028": 359, "ylim": [359, 362], "031": 359, "032": 359, "037": 359, "splat": [359, 362], "ngp": [359, 362], "set_cmap": [359, 362, 366], "kama": [359, 362], "21": 359, "ds2": 359, "p2": 359, "phaseplot": 359, "weight_field": [359, 362], "set_unit": 359, "623": 359, "625": 359, "627": 359, "629": 359, "631": 359, "634": 359, "22e": 359, "22": 359, "gas_particles_1": 359, "100_000": [359, 360, 363], "gas_particles_2": 359, "dm_particl": [359, 367], "192": 359, "100000": [359, 360, 363], "193": 359, "418": 359, "421": 359, "422": 359, "448": 359, "654": 359, "657": 359, "705": 359, "23": [359, 363, 366], "concat_clust": 359, "big_system": 359, "194": 359, "24": 359, "16000": 359, "362": 359, "365": [359, 362], "368": 359, "370": 359, "372": 359, "particle_on": 359, "386": 359, "3e": 359, "810": 359, "812": 359, "815": 359, "817": 359, "820": 359, "698": 359, "700": 359, "703": [359, 366], "704": [359, 366], "707": 359, "circl": 359, "speak": 359, "duper": 359, "amaz": 359, "smash": 359, "frontend": [359, 363], "dig": 359, "844": 359, "012": 359, "500000": 359, "link": 359, "regener": [359, 360], "33": 359, "to_fil": 359, "basic_": 359, "num_dm_particl": 359, "num_star_particl": 359, "velocity1": 359, "velocity2": 359, "involv": 359, "act": [359, 360], "book": 359, "tricki": 360, "busi": 360, "imposs": 360, "undertak": 360, "second": [360, 363, 367, 368], "__": 360, "review": 360, "tenant": 360, "ensembl": 360, "nbsphinx": 360, "span": 360, "principl": 360, "unfortun": 360, "strategi": 360, "consider": 360, "statist": 360, "mechan": 360, "neighborhood": 360, "intuit": 360, "flow": 360, "dd": 360, "dt": 360, "sum_": 360, "2n_": 360, "dim": 360, "x_j": 360, "_j": 360, "hamiltonian": 360, "bracket": 360, "summat": 360, "think": 360, "statement": 360, "vlasov": 360, "extrem": [360, 363], "benefit": 360, "cbe": 360, "long": [360, 363, 367], "importantli": 360, "manifest": 360, "By": [360, 367], "v_j": 360, "sum_i": 360, "v_i": 360, "x_i": 360, "sigma_": 360, "ij": 360, "convei": 360, "multi": 360, "motion": 360, "isn": [360, 363], "troublesom": 360, "fortun": 360, "onlyon": 360, "_0": [360, 367], "energyto": 360, "relianc": 360, "30": [360, 362, 363], "458": 360, "virialequilibrium": 360, "0x7f5675f5d220": 360, "privat": 360, "technic": 360, "0x7f5675f5d7f0": 360, "yipe": 360, "generate_particl": 360, "32": [360, 363], "615": [360, 366], "617": 360, "628": 360, "pdf": 360, "cummul": 360, "quit": 360, "661": 360, "664": 360, "706": 360, "03": [360, 362], "056": 360, "057": 360, "059": 360, "061": 360, "062": 360, "069": 360, "1e": 360, "typeerror": [360, 366], "traceback": [360, 366], "recent": [360, 366], "34": [360, 362, 366], "virtualenv": 360, "lib": 360, "python3": 360, "visual": 360, "particle_plot": 360, "782": 360, "x_field": 360, "y_field": 360, "z_field": 360, "778": [360, 363], "break": 360, "780": 360, "781": 360, "particleprojectionplot": 360, "784": 360, "plotwindow": 360, "style": [360, 363, 366], "785": 360, "particlephaseplot": [360, 362], "786": 360, "787": 360, "unexpect": 360, "replic": [362, 368], "inquiri": 362, "assist": 362, "replica": 362, "cluster_modul": 362, "briefli": 362, "observation": 362, "get_collect": 362, "hopefulli": 362, "29": 362, "384": 362, "enumer": 362, "backend": 362, "evid": 362, "beauti": 362, "entri": 362, "obj": [362, 366], "pprint": 362, "61": 362, "tmin": 362, "9747": 362, "88": 362, "526": 362, "943": 362, "94": 362, "57": [362, 363], "1100": 362, "1239": 362, "188839": 362, "rt": [362, 363], "1420": 362, "0569": 362, "5488": 362, "712": 362, "345": 362, "76": 362, "70": [362, 368], "450": 362, "91429": 362, "0162": 362, "78": 362, "585": 362, "013": 362, "44": 362, "577": 362, "767": 362, "112": 362, "81": 362, "408": 362, "290021": 362, "3030": 362, "1883": 362, "799": 362, "wed": 362, "392": 362, "394": 362, "figsiz": [362, 366, 367], "set_yscal": [362, 366], "set_ylim": 362, "set_xlim": 362, "set_ylabel": [362, 366, 367], "set_xlabel": [362, 366, 367], "fun": [362, 366], "collections_model": 362, "collections_exampl": 362, "setup_particle_": 362, "109": 362, "142": 362, "167": 362, "38": [362, 363, 366], "652": 362, "45": 362, "212": 362, "426": 362, "758": 362, "47": 362, "825": 362, "2000": 362, "51": 362, "511": 362, "515": 362, "522": 362, "525": 362, "528": 362, "2e": 362, "06": 362, "272": 362, "277": 362, "283": 362, "285": 362, "298": 362, "topic": 362, "prepar": 362, "minim": [362, 368], "amin": 362, "bin": 362, "ouput": 362, "chane": 362, "56": 362, "862": 362, "405": 362, "407": 362, "home": 362, "ediggin": 362, "198": 362, "integrationwarn": 362, "occurr": 362, "roundoff": 362, "detect": 362, "underestim": 362, "ret": 362, "quad": 362, "vline": 362, "ymin": 362, "1e2": 362, "ymax": 362, "1e13": 362, "weirdli": 362, "rang": 362, "never": 362, "force_fix": 362, "tag": [362, 367], "artifici": 362, "force_radiu": 362, "mirror": 362, "model_fix": 362, "803": 362, "338": 362, "339": 362, "clustermod": 362, "uster_gener": 362, "941": 362, "fresh": 362, "992": 362, "converg": 362, "extrapol": 362, "full_output": 362, "960": 362, "153": 362, "add_subplot": 362, "111": 362, "sensibl": 362, "far": [362, 363], "neglig": 362, "anywai": 362, "46": 362, "968": 362, "088": 362, "149": 362, "229": 362, "231": 362, "336": 362, "48": 362, "208": 362, "106": 362, "310": 362, "436": 362, "446": 362, "464": 362, "468": 362, "475": 362, "538": 362, "665e": 362, "961": 362, "964": 362, "976": 362, "007": 362, "36": [362, 366], "big": 363, "underpin": 363, "example_profil": 363, "1e10": 363, "300": [363, 367], "74": 363, "60387957432596": 363, "whole": 363, "rememb": 363, "ed": 363, "won": 363, "alert": [363, 366], "colossu": 363, "ccosmo": 363, "setcosmologi": 363, "planck18": 363, "hubble_const": 363, "omega_matt": 363, "om0": 363, "omega_lambda": 363, "ode0": 363, "546": [363, 366], "1e15": [363, 366], "modeldiemer19": 363, "nfw_scale_dens": [363, 366, 368], "ylabel": 363, "session": 363, "115": [363, 366], "r2500": 363, "2500": [363, 366], "1e1": 363, "1e4": 363, "jupyt": 363, "render": 363, "properli": 363, "cgparam": [363, 366], "15000": [363, 366], "876": 363, "878": 363, "101": 363, "pictur": 363, "perspect": 363, "pai": 363, "account": 363, "pertin": 363, "takeawai": 363, "machineri": 363, "advantag": 363, "yscale": 363, "good": [363, 367], "545": 363, "00110331": 363, "intrins": 363, "lead": 363, "ic_exampl": 363, "695": 363, "0x7f90bef59fd0": 363, "accomod": 363, "scenario": 363, "create_dataset": [363, 366], "front": [363, 368], "729": 363, "755": 363, "915": 363, "944": 363, "merger_config": 363, "yourself": [364, 365], "contact": [364, 365], "awesom": 366, "walk": 366, "further": [366, 367], "team": 366, "arcan": 366, "themselv": 366, "hard": 366, "workflow": 366, "probe": 366, "stuff": 366, "shouldn": 366, "action": 366, "r200_1": 366, "r_s1": 366, "rho_s1": 366, "r_t1": 366, "mt_1": 366, "r500_1": 366, "m500_1": 366, "r2500_1": 366, "m2500_1": 366, "rhot_1": 366, "rhog_1": 366, "model_newtonian": 366, "hydrostaticequilibrium": 366, "398": 366, "843": 366, "612": 366, "609": 366, "mp": [366, 368], "610": 366, "_from_scratch": 366, "613": 366, "614": 366, "616": 366, "model_mond": 366, "clear": 366, "glare": 366, "interp_funct": 366, "expect": 366, "didn": 366, "went": 366, "compar": 366, "gridspec_kw": 366, "wspace": 366, "hspace": 366, "zip": 366, "ravel": 366, "darkblu": 366, "forestgreen": 366, "dramat": 366, "larger": 366, "increas": [366, 368], "maintain": 366, "q": 366, "unlik": 366, "proced": 366, "mond_model": 366, "newtonian_model": 366, "mond_ic": 366, "newt_ic": 366, "mond_part": 366, "256": 366, "newt_part": 366, "sliceplot": 366, "kt": 366, "set_log": 366, "draw": 367, "tot": 367, "sinc": 367, "tangenti": 367, "number_of_particl": 367, "latter": 367, "magnetic_field": 367, "hand": 367, "equal": 367, "creation": 367, "n_ga": 367, "isotropi": 367, "dv": 367, "2dv": 367, "net": 367, "cal": 367, "integrel": 367, "pair": 367, "reject": 367, "check_dm_viri": 367, "check_star_viri": 367, "diff": 367, "loglog": 367, "vir": 367, "markers": 367, "legend": 367, "difficulti": 367, "generate_star_particl": 367, "carri": 367, "wish": 367, "n_dm": 367, "n_star": 367, "star_particl": 367, "cover": 367, "generate_": 367, "_particl": 367, "kind": 367, "all_particl": 367, "gas_part": 367, "gas_parts1": 367, "gas_parts2": 367, "drop_ptyp": 367, "translat": 367, "boost": 367, "shift": 367, "movement": 367, "simplest": 367, "mbh": 367, "0e9": 367, "rather": 367, "keep": 367, "track": 367, "num_particles1": 367, "num_particles2": 367, "200_000": 367, "halo1": 367, "halo2": 367, "cluster1": 367, "cluster2": 367, "pick": 367, "overwritten": 367, "ug": 367, "microgauss": 367, "magnetic_field_x": 367, "metal": 367, "zsun": 367, "obvious": 367, "my_particl": 367, "new_part": 367, "gas_onli": 367, "dm_star": 367, "cluster_": 367, "from_gadget_fil": 367, "0e": 368, "manifestli": 368, "0e7": 368, "dp": 368, "finit": 368, "3m": 368, "0e15": 368, "bulg": 368, "shperic": 368, "regularli": 368, "brightest": 368, "bcg": 368, "m_h": 368, "rho_e": 368, "3n": 368, "d_n": 368, "1215n": 368, "184": 368, "229635n": 368, "band": 368, "modif": 368, "flat": 368, "parameter": 368, "freedom": 368, "v06": 368, "am06": 368, "ca_c": 368, "t_": 368, "t_0t": 368, "min": 368, "a_": 368, "k_": 368, "journal": 368, "1965": 368, "kinemat": 368, "trudi": 368, "inst": 368, "astrofiz": 368, "alma": 368, "ata": 368, "87": 368, "jone": 368, "murrai": 368, "van": 368, "speybroeck": 368, "nearbi": 368, "1978": 368, "677": 368, "cold": 368}, "objects": {"": [[1, 0, 0, "-", "codes"], [11, 0, 0, "-", "collection"], [60, 0, 0, "-", "fields"], [103, 0, 0, "-", "gravity"], [151, 0, 0, "-", "ics"], [169, 0, 0, "-", "model"], [244, 0, 0, "-", "particles"], [267, 0, 0, "-", "radial_profiles"], [311, 0, 0, "-", "relations"], [317, 0, 0, "-", "utils"], [333, 0, 0, "-", "virial"]], "codes": [[2, 1, 1, "", "setup_arepo_ics"], [3, 1, 1, "", "setup_art_ics"], [4, 1, 1, "", "setup_athena_ics"], [5, 1, 1, "", "setup_enzo_ics"], [6, 1, 1, "", "setup_flash_ics"], [7, 1, 1, "", "setup_gamer_ics"], [8, 1, 1, "", "setup_gizmo_ics"], [9, 1, 1, "", "setup_ramses_ics"], [10, 1, 1, "", "write_amr_particles"]], "collection": [[12, 2, 1, "", "Ascasibar07"], [24, 2, 1, "", "ClusterCollection"], [35, 2, 1, "", "Sanderson10"], [47, 2, 1, "", "Vikhlinin06"], [59, 1, 1, "", "get_collections"]], "collection.Ascasibar07": [[13, 3, 1, "", "__init__"], [14, 4, 1, "", "description"], [15, 3, 1, "", "load"], [16, 4, 1, "", "load_method"], [17, 3, 1, "", "load_model"], [18, 4, 1, "", "name"], [19, 5, 1, "", "names"], [20, 5, 1, "", "parameters"], [21, 4, 1, "", "path"], [22, 3, 1, "", "plot_summary"], [23, 5, 1, "", "profiles"]], "collection.ClusterCollection": [[25, 3, 1, "", "__init__"], [26, 4, 1, "", "description"], [27, 4, 1, "", "load_method"], [28, 3, 1, "", "load_model"], [29, 4, 1, "", "name"], [30, 5, 1, "", "names"], [31, 5, 1, "", "parameters"], [32, 4, 1, "", "path"], [33, 3, 1, "", "plot_summary"], [34, 5, 1, "", "profiles"]], "collection.Sanderson10": [[36, 3, 1, "", "__init__"], [37, 4, 1, "", "description"], [38, 3, 1, "", "load"], [39, 4, 1, "", "load_method"], [40, 3, 1, "", "load_model"], [41, 4, 1, "", "name"], [42, 5, 1, "", "names"], [43, 5, 1, "", "parameters"], [44, 4, 1, "", "path"], [45, 3, 1, "", "plot_summary"], [46, 5, 1, "", "profiles"]], "collection.Vikhlinin06": [[48, 3, 1, "", "__init__"], [49, 4, 1, "", "description"], [50, 3, 1, "", "load"], [51, 4, 1, "", "load_method"], [52, 3, 1, "", "load_model"], [53, 4, 1, "", "name"], [54, 5, 1, "", "names"], [55, 5, 1, "", "parameters"], [56, 4, 1, "", "path"], [57, 3, 1, "", "plot_summary"], [58, 5, 1, "", "profiles"]], "fields": [[61, 2, 1, "", "ClusterField"], [66, 2, 1, "", "GaussianRandomField"], [71, 2, 1, "", "RadialRandomMagneticField"], [76, 2, 1, "", "RadialRandomMagneticVectorPotential"], [81, 2, 1, "", "RadialRandomVelocityField"], [86, 2, 1, "", "RandomMagneticField"], [91, 2, 1, "", "RandomMagneticVectorPotential"], [96, 2, 1, "", "RandomVelocityField"], [101, 1, 1, "", "parse_value"], [102, 1, 1, "", "rot_3d"]], "fields.ClusterField": [[62, 3, 1, "", "__init__"], [63, 3, 1, "", "map_field_to_particles"], [64, 5, 1, "", "units"], [65, 3, 1, "", "write_file"]], "fields.GaussianRandomField": [[67, 3, 1, "", "__init__"], [68, 3, 1, "", "map_field_to_particles"], [69, 5, 1, "", "units"], [70, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticField": [[72, 3, 1, "", "__init__"], [73, 3, 1, "", "map_field_to_particles"], [74, 5, 1, "", "units"], [75, 3, 1, "", "write_file"]], "fields.RadialRandomMagneticVectorPotential": [[77, 3, 1, "", "__init__"], [78, 3, 1, "", "map_field_to_particles"], [79, 5, 1, "", "units"], [80, 3, 1, "", "write_file"]], "fields.RadialRandomVelocityField": [[82, 3, 1, "", "__init__"], [83, 3, 1, "", "map_field_to_particles"], [84, 5, 1, "", "units"], [85, 3, 1, "", "write_file"]], "fields.RandomMagneticField": [[87, 3, 1, "", "__init__"], [88, 3, 1, "", "map_field_to_particles"], [89, 5, 1, "", "units"], [90, 3, 1, "", "write_file"]], "fields.RandomMagneticVectorPotential": [[92, 3, 1, "", "__init__"], [93, 3, 1, "", "map_field_to_particles"], [94, 5, 1, "", "units"], [95, 3, 1, "", "write_file"]], "fields.RandomVelocityField": [[97, 3, 1, "", "__init__"], [98, 3, 1, "", "map_field_to_particles"], [99, 5, 1, "", "units"], [100, 3, 1, "", "write_file"]], "gravity": [[104, 2, 1, "", "AQUALGravity"], [114, 2, 1, "", "EMONDGravity"], [124, 2, 1, "", "Gravity"], [131, 2, 1, "", "NewtonianGravity"], [141, 2, 1, "", "QUMONDGravity"]], "gravity.AQUALGravity": [[105, 3, 1, "", "__init__"], [106, 4, 1, "", "attrs"], [107, 3, 1, "", "compute_mass"], [108, 3, 1, "", "compute_potential"], [109, 5, 1, "", "is_calculated"], [110, 4, 1, "", "model"], [111, 3, 1, "", "potential"], [112, 4, 1, "", "potential_methods"], [113, 3, 1, "", "reset"]], "gravity.EMONDGravity": [[115, 3, 1, "", "__init__"], [116, 4, 1, "", "attrs"], [117, 3, 1, "", "compute_mass"], [118, 3, 1, "", "compute_potential"], [119, 5, 1, "", "is_calculated"], [120, 4, 1, "", "model"], [121, 3, 1, "", "potential"], [122, 4, 1, "", "potential_methods"], [123, 3, 1, "", "reset"]], "gravity.Gravity": [[125, 3, 1, "", "__init__"], [126, 4, 1, "", "attrs"], [127, 5, 1, "", "is_calculated"], [128, 4, 1, "", "model"], [129, 4, 1, "", "potential_methods"], [130, 3, 1, "", "reset"]], "gravity.NewtonianGravity": [[132, 3, 1, "", "__init__"], [133, 4, 1, "", "attrs"], [134, 3, 1, "", "compute_mass"], [135, 3, 1, "", "compute_potential"], [136, 5, 1, "", "is_calculated"], [137, 4, 1, "", "model"], [138, 3, 1, "", "potential"], [139, 4, 1, "", "potential_methods"], [140, 3, 1, "", "reset"]], "gravity.QUMONDGravity": [[142, 3, 1, "", "__init__"], [143, 4, 1, "", "attrs"], [144, 3, 1, "", "compute_mass"], [145, 3, 1, "", "compute_potential"], [146, 5, 1, "", "is_calculated"], [147, 4, 1, "", "model"], [148, 3, 1, "", "potential"], [149, 4, 1, "", "potential_methods"], [150, 3, 1, "", "reset"]], "ics": [[152, 2, 1, "", "ClusterICs"], [168, 1, 1, "", "compute_centers_for_binary"]], "ics.ClusterICs": [[153, 3, 1, "", "__init__"], [154, 4, 1, "", "basename"], [155, 4, 1, "", "center"], [156, 3, 1, "", "compute_orbits"], [157, 3, 1, "", "create_dataset"], [158, 3, 1, "", "from_file"], [159, 4, 1, "", "mag_file"], [160, 4, 1, "", "num_halos"], [161, 4, 1, "", "profiles"], [162, 4, 1, "", "r_max"], [163, 3, 1, "", "resample_particle_ics"], [164, 3, 1, "", "setup_particle_ics"], [165, 3, 1, "", "to_file"], [166, 4, 1, "", "tot_np"], [167, 4, 1, "", "velocity"]], "model": [[170, 2, 1, "", "ClusterModel"], [207, 2, 1, "", "HydrostaticEquilibrium"]], "model.ClusterModel": [[171, 3, 1, "", "__init__"], [172, 4, 1, "", "attrs"], [173, 3, 1, "", "check_dm_virial"], [174, 3, 1, "", "check_hse"], [175, 3, 1, "", "check_star_virial"], [176, 3, 1, "", "create_dataset"], [177, 4, 1, "", "default_fields"], [178, 5, 1, "", "dm_virial"], [179, 4, 1, "", "fields"], [180, 3, 1, "", "find_field_at_radius"], [181, 3, 1, "", "from_arrays"], [182, 3, 1, "", "from_dens_and_entr"], [183, 3, 1, "", "from_dens_and_tden"], [184, 3, 1, "", "from_dens_and_temp"], [185, 3, 1, "", "from_h5_file"], [186, 3, 1, "", "generate_dm_particles"], [187, 3, 1, "", "generate_gas_particles"], [188, 3, 1, "", "generate_star_particles"], [189, 3, 1, "", "generate_tracer_particles"], [190, 3, 1, "", "is_physical"], [191, 3, 1, "", "keys"], [192, 3, 1, "", "mass_in_radius"], [193, 3, 1, "", "no_gas"], [194, 4, 1, "", "num_elements"], [195, 3, 1, "", "plot"], [196, 5, 1, "", "pot"], [197, 3, 1, "", "rebuild_physical"], [198, 3, 1, "", "set_field"], [199, 3, 1, "", "set_magnetic_field_from_beta"], [200, 3, 1, "", "set_magnetic_field_from_density"], [201, 3, 1, "", "set_rmax"], [202, 5, 1, "", "star_virial"], [203, 5, 1, "", "virialization_method"], [204, 3, 1, "", "write_model_to_ascii"], [205, 3, 1, "", "write_model_to_binary"], [206, 3, 1, "", "write_model_to_h5"]], "model.HydrostaticEquilibrium": [[208, 3, 1, "", "__init__"], [209, 4, 1, "", "attrs"], [210, 3, 1, "", "check_dm_virial"], [211, 3, 1, "", "check_hse"], [212, 3, 1, "", "check_star_virial"], [213, 3, 1, "", "create_dataset"], [214, 4, 1, "", "default_fields"], [215, 5, 1, "", "dm_virial"], [216, 4, 1, "", "fields"], [217, 3, 1, "", "find_field_at_radius"], [218, 3, 1, "", "from_arrays"], [219, 3, 1, "", "from_dens_and_entr"], [220, 3, 1, "", "from_dens_and_tden"], [221, 3, 1, "", "from_dens_and_temp"], [222, 3, 1, "", "from_h5_file"], [223, 3, 1, "", "generate_dm_particles"], [224, 3, 1, "", "generate_gas_particles"], [225, 3, 1, "", "generate_star_particles"], [226, 3, 1, "", "generate_tracer_particles"], [227, 3, 1, "", "is_physical"], [228, 3, 1, "", "keys"], [229, 3, 1, "", "mass_in_radius"], [230, 3, 1, "", "no_gas"], [231, 4, 1, "", "num_elements"], [232, 3, 1, "", "plot"], [233, 5, 1, "", "pot"], [234, 3, 1, "", "rebuild_physical"], [235, 3, 1, "", "set_field"], [236, 3, 1, "", "set_magnetic_field_from_beta"], [237, 3, 1, "", "set_magnetic_field_from_density"], [238, 3, 1, "", "set_rmax"], [239, 5, 1, "", "star_virial"], [240, 5, 1, "", "virialization_method"], [241, 3, 1, "", "write_model_to_ascii"], [242, 3, 1, "", "write_model_to_binary"], [243, 3, 1, "", "write_model_to_h5"]], "particles": [[245, 2, 1, "", "ClusterParticles"], [265, 1, 1, "", "concat_clusters"], [266, 1, 1, "", "resample_clusters"]], "particles.ClusterParticles": [[246, 3, 1, "", "__init__"], [247, 3, 1, "", "add_black_hole"], [248, 3, 1, "", "add_offsets"], [249, 3, 1, "", "drop_ptypes"], [250, 4, 1, "", "fields"], [251, 3, 1, "", "from_fields"], [252, 3, 1, "", "from_file"], [253, 3, 1, "", "from_gadget_file"], [254, 3, 1, "", "from_h5_file"], [255, 3, 1, "", "keys"], [256, 3, 1, "", "make_radial_cut"], [257, 5, 1, "", "num_passive_scalars"], [258, 4, 1, "", "particle_types"], [259, 4, 1, "", "passive_scalars"], [260, 3, 1, "", "set_field"], [261, 3, 1, "", "to_yt_dataset"], [262, 3, 1, "", "write_particles"], [263, 3, 1, "", "write_particles_to_h5"], [264, 3, 1, "", "write_to_gadget_file"]], "radial_profiles": [[268, 2, 1, "", "RadialProfile"], [278, 1, 1, "", "ad07_density_profile"], [279, 1, 1, "", "ad07_temperature_profile"], [280, 1, 1, "", "am06_density_profile"], [281, 1, 1, "", "am06_temperature_profile"], [282, 1, 1, "", "baseline_entropy_profile"], [283, 1, 1, "", "beta_model_profile"], [284, 1, 1, "", "broken_entropy_profile"], [285, 1, 1, "", "constant_profile"], [286, 1, 1, "", "convert_nfw_to_hernquist"], [287, 1, 1, "", "cored_hernquist_density_profile"], [288, 1, 1, "", "cored_snfw_density_profile"], [289, 1, 1, "", "cored_snfw_mass_profile"], [290, 1, 1, "", "cored_snfw_total_mass"], [291, 1, 1, "", "einasto_density_profile"], [292, 1, 1, "", "einasto_mass_profile"], [293, 1, 1, "", "find_overdensity_radius"], [294, 1, 1, "", "find_radius_mass"], [295, 1, 1, "", "hernquist_density_profile"], [296, 1, 1, "", "hernquist_mass_profile"], [297, 1, 1, "", "nfw_density_profile"], [298, 1, 1, "", "nfw_mass_profile"], [299, 1, 1, "", "nfw_scale_density"], [300, 1, 1, "", "power_law_profile"], [301, 1, 1, "", "rescale_profile_by_mass"], [302, 1, 1, "", "snfw_conc"], [303, 1, 1, "", "snfw_density_profile"], [304, 1, 1, "", "snfw_mass_profile"], [305, 1, 1, "", "snfw_total_mass"], [306, 1, 1, "", "tnfw_density_profile"], [307, 1, 1, "", "tnfw_mass_profile"], [308, 1, 1, "", "vikhlinin_density_profile"], [309, 1, 1, "", "vikhlinin_temperature_profile"], [310, 1, 1, "", "walker_entropy_profile"]], "radial_profiles.RadialProfile": [[269, 3, 1, "", "__init__"], [270, 3, 1, "", "add_core"], [271, 3, 1, "", "built_in"], [272, 4, 1, "", "builtin"], [273, 3, 1, "", "cutoff"], [274, 3, 1, "", "from_array"], [275, 3, 1, "", "from_binary"], [276, 3, 1, "", "plot"], [277, 3, 1, "", "to_binary"]], "relations": [[312, 1, 1, "", "convert_ne_to_density"], [313, 1, 1, "", "f_gas"], [314, 1, 1, "", "m_bcg"], [315, 1, 1, "", "m_sat"], [316, 1, 1, "", "r_bcg"]], "utils": [[318, 1, 1, "", "build_yt_dataset_fields"], [319, 1, 1, "", "ensure_list"], [320, 1, 1, "", "ensure_ytarray"], [321, 1, 1, "", "ensure_ytquantity"], [322, 1, 1, "", "eprint"], [323, 1, 1, "", "generate_particle_radii"], [324, 1, 1, "", "integrate"], [325, 1, 1, "", "integrate_mass"], [326, 1, 1, "", "integrate_toinf"], [327, 1, 1, "", "log_string"], [328, 1, 1, "", "monotone_interpolation"], [329, 1, 1, "", "moving_average"], [330, 1, 1, "", "parse_prng"], [331, 1, 1, "", "time_limit"], [332, 1, 1, "", "truncate_spline"]], "virial": [[334, 2, 1, "", "VirialEquilibrium"]], "virial.VirialEquilibrium": [[335, 3, 1, "", "__init__"], [336, 3, 1, "", "check_virial"], [337, 5, 1, "", "df"], [338, 5, 1, "", "ee"], [339, 5, 1, "", "ff"], [340, 3, 1, "", "generate_particles"], [341, 4, 1, "", "model"], [342, 4, 1, "", "num_elements"], [343, 4, 1, "", "ptype"], [344, 5, 1, "", "sigma"], [345, 4, 1, "", "type"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"quickstart": [0, 363, 364, 365], "guid": [0, 349, 362, 363, 364, 365], "content": [0, 348, 351, 356, 358, 359, 362, 363, 366], "introduct": 0, "get": [0, 362, 365, 366], "packag": 0, "from": [0, 357, 358, 367], "pypi": 0, "With": [0, 366], "conda": 0, "pip": 0, "sourc": 0, "depend": 0, "start": [0, 366], "unit": [0, 64, 69, 74, 79, 84, 89, 94, 99], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 347, 349], "avail": [1, 348, 351], "softwar": 1, "setup_arepo_": 2, "setup_art_": 3, "setup_athena_": 4, "setup_enzo_": 5, "setup_flash_": 6, "setup_gamer_": 7, "setup_gizmo_": 8, "setup_ramses_": 9, "write_amr_particl": 10, "collect": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 348, 362], "ascasibar07": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__init__": [13, 25, 36, 48, 62, 67, 72, 77, 82, 87, 92, 97, 105, 115, 125, 132, 142, 153, 171, 208, 246, 269, 335], "descript": [14, 26, 37, 49, 352, 353, 354, 355], "load": [15, 38, 50], "load_method": [16, 27, 39, 51], "load_model": [17, 28, 40, 52], "name": [18, 19, 29, 30, 41, 42, 53, 54], "paramet": [20, 31, 43, 55, 357], "path": [21, 32, 44, 56], "plot_summari": [22, 33, 45, 57], "profil": [23, 34, 46, 58, 161, 267, 358, 359, 368], "clustercollect": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "sanderson10": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "vikhlinin06": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "get_collect": 59, "field": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 179, 216, 250, 350, 358, 367], "clusterfield": [61, 62, 63, 64, 65], "map_field_to_particl": [63, 68, 73, 78, 83, 88, 93, 98], "write_fil": [65, 70, 75, 80, 85, 90, 95, 100], "gaussianrandomfield": [66, 67, 68, 69, 70], "radialrandommagneticfield": [71, 72, 73, 74, 75], "radialrandommagneticvectorpotenti": [76, 77, 78, 79, 80], "radialrandomvelocityfield": [81, 82, 83, 84, 85], "randommagneticfield": [86, 87, 88, 89, 90], "randommagneticvectorpotenti": [91, 92, 93, 94, 95], "randomvelocityfield": [96, 97, 98, 99, 100], "parse_valu": 101, "rot_3d": 102, "graviti": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 351, 352, 353, 354, 355, 358, 359, 366], "aqualgrav": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "attr": [106, 116, 126, 133, 143, 172, 209], "compute_mass": [107, 117, 134, 144], "compute_potenti": [108, 118, 135, 145], "is_calcul": [109, 119, 127, 136, 146], "model": [110, 120, 128, 137, 147, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 341, 358], "potenti": [111, 121, 138, 148, 350, 354], "potential_method": [112, 122, 129, 139, 149], "reset": [113, 123, 130, 140, 150], "emondgrav": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "newtoniangrav": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "qumondgrav": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "ic": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 347], "cluster": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 347, 350, 357, 358, 359, 365], "basenam": 154, "center": 155, "compute_orbit": 156, "create_dataset": [157, 176, 213], "from_fil": [158, 252], "mag_fil": 159, "num_halo": 160, "r_max": 162, "resample_particle_": 163, "setup_particle_": 164, "to_fil": 165, "tot_np": 166, "veloc": [167, 350, 367], "compute_centers_for_binari": 168, "galaxi": 169, "clustermodel": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 358, 359, 367], "check_dm_viri": [173, 210], "check_hs": [174, 211], "check_star_viri": [175, 212], "default_field": [177, 214], "dm_virial": [178, 215], "find_field_at_radiu": [180, 217], "from_arrai": [181, 218, 274], "develop": [181, 218], "note": [181, 218, 352, 353, 354, 355, 366, 368], "from_dens_and_entr": [182, 219], "from_dens_and_tden": [183, 220], "from_dens_and_temp": [184, 221], "from_h5_fil": [185, 222, 254], "generate_dm_particl": [186, 223], "generate_gas_particl": [187, 224], "generate_star_particl": [188, 225], "generate_tracer_particl": [189, 226], "is_phys": [190, 227], "kei": [191, 228, 255], "mass_in_radiu": [192, 229], "no_ga": [193, 230], "num_el": [194, 231, 342], "plot": [195, 232, 276], "pot": [196, 233], "rebuild_phys": [197, 234], "method": [197, 234, 351, 352, 353, 354, 355], "set_field": [198, 235, 260], "set_magnetic_field_from_beta": [199, 236], "set_magnetic_field_from_dens": [200, 237], "set_rmax": [201, 238], "star_viri": [202, 239], "virialization_method": [203, 240], "write_model_to_ascii": [204, 241], "write_model_to_binari": [205, 242], "write_model_to_h5": [206, 243], "hydrostaticequilibrium": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "particl": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 350, 359, 367], "clusterparticl": [245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 359, 367], "add_black_hol": 247, "add_offset": 248, "drop_ptyp": 249, "from_field": 251, "from_gadget_fil": 253, "make_radial_cut": 256, "num_passive_scalar": 257, "particle_typ": 258, "passive_scalar": 259, "to_yt_dataset": 261, "write_particl": 262, "write_particles_to_h5": 263, "write_to_gadget_fil": 264, "concat_clust": 265, "resample_clust": 266, "radial_profil": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "radial": [267, 350, 358, 359, 368], "radialprofil": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 359], "info": 268, "add_cor": 270, "built_in": 271, "builtin": [272, 362], "cutoff": 273, "from_binari": 275, "to_binari": 277, "ad07_density_profil": 278, "ad07_temperature_profil": 279, "am06_density_profil": 280, "am06_temperature_profil": 281, "baseline_entropy_profil": 282, "beta_model_profil": 283, "broken_entropy_profil": 284, "constant_profil": 285, "convert_nfw_to_hernquist": 286, "cored_hernquist_density_profil": 287, "cored_snfw_density_profil": 288, "cored_snfw_mass_profil": 289, "cored_snfw_total_mass": 290, "einasto_density_profil": 291, "einasto_mass_profil": 292, "find_overdensity_radiu": 293, "find_radius_mass": 294, "hernquist_density_profil": 295, "hernquist_mass_profil": 296, "nfw_density_profil": 297, "nfw_mass_profil": 298, "nfw_scale_dens": 299, "power_law_profil": 300, "rescale_profile_by_mass": 301, "snfw_conc": 302, "snfw_density_profil": 303, "snfw_mass_profil": 304, "snfw_total_mass": 305, "tnfw_density_profil": 306, "tnfw_mass_profil": 307, "vikhlinin_density_profil": 308, "vikhlinin_temperature_profil": 309, "walker_entropy_profil": 310, "relat": [311, 312, 313, 314, 315, 316, 356], "convert_ne_to_dens": 312, "f_ga": 313, "m_bcg": 314, "m_sat": 315, "r_bcg": 316, "util": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "build_yt_dataset_field": 318, "ensure_list": 319, "ensure_ytarrai": 320, "ensure_ytquant": 321, "eprint": 322, "generate_particle_radii": 323, "integr": 324, "integrate_mass": 325, "integrate_toinf": 326, "log_str": 327, "monotone_interpol": 328, "moving_averag": 329, "parse_prng": 330, "time_limit": 331, "truncate_splin": 332, "virial": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 360, 367], "virialequilibrium": [334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 359], "gener": [334, 347, 350, 357, 358, 359, 365, 367, 368], "phase": 334, "space": 334, "densiti": [334, 358, 368], "check_viri": 336, "df": 337, "ee": 338, "ff": 339, "generate_particl": 340, "ptype": 343, "sigma": 344, "type": [345, 367], "api": [346, 349], "set": [347, 358], "up": 347, "ideal": 347, "problem": 347, "variou": 347, "flash": 347, "gamer": 347, "arepo": 347, "gizmo": 347, "enzo": 347, "rams": 347, "your": [347, 351, 364], "configur": 347, "run": 347, "simul": [347, 364], "athena": 347, "dataset": 348, "access": [348, 359, 362], "built": 348, "In": 348, "custom": 348, "exampl": 349, "3d": 350, "mathemat": [350, 358, 367, 368], "overview": [350, 358, 367], "initi": [350, 357, 366], "magnet": [350, 358], "random": 350, "vector": 350, "map": 350, "write": [350, 351, 358], "out": [350, 365], "disk": [350, 358], "theori": 351, "us": [351, 358, 359, 361, 362], "non": [351, 358], "newtonian": [351, 354, 358], "own": 351, "copi": 351, "templat": 351, "defin": 351, "aqual": [352, 358], "refer": [352, 353, 354, 355, 360, 368], "emond": 353, "comput": 354, "dynam": [354, 360], "mass": [354, 368], "qumond": [355, 358], "cluster_gener": [356, 359, 360], "featur": [356, 362], "resourc": 356, "project": 356, "indic": 356, "tabl": 356, "condit": [357, 366], "script": 357, "file": 357, "reader": 358, "suggest": 358, "mond": 358, "ga": [358, 367], "temperatur": [358, 368], "total": 358, "entropi": [358, 368], "without": 358, "check": [358, 367], "hydrostat": 358, "equilibrium": [358, 367], "strength": 358, "beta": 358, "plasma": 358, "ad": [358, 367], "other": 358, "read": 358, "object": [358, 367], "user": 358, "advic": 358, "physic": 358, "system": 358, "data": 359, "structur": 359, "exist": 359, "creat": 359, "i": [359, 362, 367], "o": [359, 367], "oper": [359, 367], "insid": 359, "conent": 360, "galact": 360, "The": [360, 363, 365, 367], "distribut": 360, "function": 360, "collisionless": 360, "boltzmann": 360, "equat": 360, "jean": 360, "": 360, "theorem": 360, "eddington": 360, "formula": 360, "local": 360, "maxwellian": 360, "approxim": 360, "advanc": 361, "case": 361, "what": 362, "ar": 362, "how": 362, "do": 362, "One": 362, "technic": 362, "basic": 363, "build": 363, "foundat": 363, "rais": 363, "frame": 363, "finish": 363, "hous": 363, "first": 364, "most": 365, "funki": 366, "mondian": 366, "import": 366, "make": [366, 367], "dark": 367, "matter": 367, "star": 367, "equilibria": 367, "class": 367, "drop": 367, "add": 367, "posit": 367, "offset": 367, "cut": 367, "radiu": 367, "black": 367, "hole": 367, "new": 367, "chang": 367, "gadget": 367, "like": 367, "constant": 368, "power": 368, "law": 368, "nfw": 368, "super": 368, "truncat": 368, "hernquist": 368, "einasto": 368, "vikhlinin": 368, "et": 368, "al": 368, "2006": 368, "ascasibar": 368, "markevitch": 368, "baselin": 368}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Quickstart Guide": [[0, "quickstart-guide"]], "Contents": [[0, "contents"], [348, "contents"], [351, "contents"], [356, "contents"], [358, "contents"], [359, "Contents"], [362, "Contents"], [363, "Contents"], [366, "Contents"]], "Introduction": [[0, "introduction"]], "Getting the Package": [[0, "getting-the-package"]], "From PyPI": [[0, "from-pypi"]], "With CONDA": [[0, "with-conda"]], "With PIP": [[0, "with-pip"]], "From Source": [[0, "from-source"]], "Dependencies": [[0, "dependencies"]], "Getting Started": [[0, "id1"]], "Quickstart Guides": [[0, "quickstart-guides"]], "Units": [[0, "units"]], "codes": [[1, "module-codes"]], "Available Softwares": [[1, "available-softwares"]], "codes.setup_arepo_ics": [[2, "codes-setup-arepo-ics"]], "codes.setup_art_ics": [[3, "codes-setup-art-ics"]], "codes.setup_athena_ics": [[4, "codes-setup-athena-ics"]], "codes.setup_enzo_ics": [[5, "codes-setup-enzo-ics"]], "codes.setup_flash_ics": [[6, "codes-setup-flash-ics"]], "codes.setup_gamer_ics": [[7, "codes-setup-gamer-ics"]], "codes.setup_gizmo_ics": [[8, "codes-setup-gizmo-ics"]], "codes.setup_ramses_ics": [[9, "codes-setup-ramses-ics"]], "codes.write_amr_particles": [[10, "codes-write-amr-particles"]], "collection": [[11, "module-collection"]], "collection.Ascasibar07": [[12, "collection-ascasibar07"]], "collection.Ascasibar07.__init__": [[13, "collection-ascasibar07-init"]], "collection.Ascasibar07.description": [[14, "collection-ascasibar07-description"]], "collection.Ascasibar07.load": [[15, "collection-ascasibar07-load"]], "collection.Ascasibar07.load_method": [[16, "collection-ascasibar07-load-method"]], "collection.Ascasibar07.load_model": [[17, "collection-ascasibar07-load-model"]], "collection.Ascasibar07.name": [[18, "collection-ascasibar07-name"]], "collection.Ascasibar07.names": [[19, "collection-ascasibar07-names"]], "collection.Ascasibar07.parameters": [[20, "collection-ascasibar07-parameters"]], "collection.Ascasibar07.path": [[21, "collection-ascasibar07-path"]], "collection.Ascasibar07.plot_summary": [[22, "collection-ascasibar07-plot-summary"]], "collection.Ascasibar07.profiles": [[23, "collection-ascasibar07-profiles"]], "collection.ClusterCollection": [[24, "collection-clustercollection"]], "collection.ClusterCollection.__init__": [[25, "collection-clustercollection-init"]], "collection.ClusterCollection.description": [[26, "collection-clustercollection-description"]], "collection.ClusterCollection.load_method": [[27, "collection-clustercollection-load-method"]], "collection.ClusterCollection.load_model": [[28, "collection-clustercollection-load-model"]], "collection.ClusterCollection.name": [[29, "collection-clustercollection-name"]], "collection.ClusterCollection.names": [[30, "collection-clustercollection-names"]], "collection.ClusterCollection.parameters": [[31, "collection-clustercollection-parameters"]], "collection.ClusterCollection.path": [[32, "collection-clustercollection-path"]], "collection.ClusterCollection.plot_summary": [[33, "collection-clustercollection-plot-summary"]], "collection.ClusterCollection.profiles": [[34, "collection-clustercollection-profiles"]], "collection.Sanderson10": [[35, "collection-sanderson10"]], "collection.Sanderson10.__init__": [[36, "collection-sanderson10-init"]], "collection.Sanderson10.description": [[37, "collection-sanderson10-description"]], "collection.Sanderson10.load": [[38, "collection-sanderson10-load"]], "collection.Sanderson10.load_method": [[39, "collection-sanderson10-load-method"]], "collection.Sanderson10.load_model": [[40, "collection-sanderson10-load-model"]], "collection.Sanderson10.name": [[41, "collection-sanderson10-name"]], "collection.Sanderson10.names": [[42, "collection-sanderson10-names"]], "collection.Sanderson10.parameters": [[43, "collection-sanderson10-parameters"]], "collection.Sanderson10.path": [[44, "collection-sanderson10-path"]], "collection.Sanderson10.plot_summary": [[45, "collection-sanderson10-plot-summary"]], "collection.Sanderson10.profiles": [[46, "collection-sanderson10-profiles"]], "collection.Vikhlinin06": [[47, "collection-vikhlinin06"]], "collection.Vikhlinin06.__init__": [[48, "collection-vikhlinin06-init"]], "collection.Vikhlinin06.description": [[49, "collection-vikhlinin06-description"]], "collection.Vikhlinin06.load": [[50, "collection-vikhlinin06-load"]], "collection.Vikhlinin06.load_method": [[51, "collection-vikhlinin06-load-method"]], "collection.Vikhlinin06.load_model": [[52, "collection-vikhlinin06-load-model"]], "collection.Vikhlinin06.name": [[53, "collection-vikhlinin06-name"]], "collection.Vikhlinin06.names": [[54, "collection-vikhlinin06-names"]], "collection.Vikhlinin06.parameters": [[55, "collection-vikhlinin06-parameters"]], "collection.Vikhlinin06.path": [[56, "collection-vikhlinin06-path"]], "collection.Vikhlinin06.plot_summary": [[57, "collection-vikhlinin06-plot-summary"]], "collection.Vikhlinin06.profiles": [[58, "collection-vikhlinin06-profiles"]], "collection.get_collections": [[59, "collection-get-collections"]], "fields": [[60, "module-fields"]], "fields.ClusterField": [[61, "fields-clusterfield"]], "fields.ClusterField.__init__": [[62, "fields-clusterfield-init"]], "fields.ClusterField.map_field_to_particles": [[63, "fields-clusterfield-map-field-to-particles"]], "fields.ClusterField.units": [[64, "fields-clusterfield-units"]], "fields.ClusterField.write_file": [[65, "fields-clusterfield-write-file"]], "fields.GaussianRandomField": [[66, "fields-gaussianrandomfield"]], "fields.GaussianRandomField.__init__": [[67, "fields-gaussianrandomfield-init"]], "fields.GaussianRandomField.map_field_to_particles": [[68, "fields-gaussianrandomfield-map-field-to-particles"]], "fields.GaussianRandomField.units": [[69, "fields-gaussianrandomfield-units"]], "fields.GaussianRandomField.write_file": [[70, "fields-gaussianrandomfield-write-file"]], "fields.RadialRandomMagneticField": [[71, "fields-radialrandommagneticfield"]], "fields.RadialRandomMagneticField.__init__": [[72, "fields-radialrandommagneticfield-init"]], "fields.RadialRandomMagneticField.map_field_to_particles": [[73, "fields-radialrandommagneticfield-map-field-to-particles"]], "fields.RadialRandomMagneticField.units": [[74, "fields-radialrandommagneticfield-units"]], "fields.RadialRandomMagneticField.write_file": [[75, "fields-radialrandommagneticfield-write-file"]], "fields.RadialRandomMagneticVectorPotential": [[76, "fields-radialrandommagneticvectorpotential"]], "fields.RadialRandomMagneticVectorPotential.__init__": [[77, "fields-radialrandommagneticvectorpotential-init"]], "fields.RadialRandomMagneticVectorPotential.map_field_to_particles": [[78, "fields-radialrandommagneticvectorpotential-map-field-to-particles"]], "fields.RadialRandomMagneticVectorPotential.units": [[79, "fields-radialrandommagneticvectorpotential-units"]], "fields.RadialRandomMagneticVectorPotential.write_file": [[80, "fields-radialrandommagneticvectorpotential-write-file"]], "fields.RadialRandomVelocityField": [[81, "fields-radialrandomvelocityfield"]], "fields.RadialRandomVelocityField.__init__": [[82, "fields-radialrandomvelocityfield-init"]], "fields.RadialRandomVelocityField.map_field_to_particles": [[83, "fields-radialrandomvelocityfield-map-field-to-particles"]], "fields.RadialRandomVelocityField.units": [[84, "fields-radialrandomvelocityfield-units"]], "fields.RadialRandomVelocityField.write_file": [[85, "fields-radialrandomvelocityfield-write-file"]], "fields.RandomMagneticField": [[86, "fields-randommagneticfield"]], "fields.RandomMagneticField.__init__": [[87, "fields-randommagneticfield-init"]], "fields.RandomMagneticField.map_field_to_particles": [[88, "fields-randommagneticfield-map-field-to-particles"]], "fields.RandomMagneticField.units": [[89, "fields-randommagneticfield-units"]], "fields.RandomMagneticField.write_file": [[90, "fields-randommagneticfield-write-file"]], "fields.RandomMagneticVectorPotential": [[91, "fields-randommagneticvectorpotential"]], "fields.RandomMagneticVectorPotential.__init__": [[92, "fields-randommagneticvectorpotential-init"]], "fields.RandomMagneticVectorPotential.map_field_to_particles": [[93, "fields-randommagneticvectorpotential-map-field-to-particles"]], "fields.RandomMagneticVectorPotential.units": [[94, "fields-randommagneticvectorpotential-units"]], "fields.RandomMagneticVectorPotential.write_file": [[95, "fields-randommagneticvectorpotential-write-file"]], "fields.RandomVelocityField": [[96, "fields-randomvelocityfield"]], "fields.RandomVelocityField.__init__": [[97, "fields-randomvelocityfield-init"]], "fields.RandomVelocityField.map_field_to_particles": [[98, "fields-randomvelocityfield-map-field-to-particles"]], "fields.RandomVelocityField.units": [[99, "fields-randomvelocityfield-units"]], "fields.RandomVelocityField.write_file": [[100, "fields-randomvelocityfield-write-file"]], "fields.parse_value": [[101, "fields-parse-value"]], "fields.rot_3d": [[102, "fields-rot-3d"]], "gravity": [[103, "module-gravity"]], "gravity.AQUALGravity": [[104, "gravity-aqualgravity"]], "gravity.AQUALGravity.__init__": [[105, "gravity-aqualgravity-init"]], "gravity.AQUALGravity.attrs": [[106, "gravity-aqualgravity-attrs"]], "gravity.AQUALGravity.compute_mass": [[107, "gravity-aqualgravity-compute-mass"]], "gravity.AQUALGravity.compute_potential": [[108, "gravity-aqualgravity-compute-potential"]], "gravity.AQUALGravity.is_calculated": [[109, "gravity-aqualgravity-is-calculated"]], "gravity.AQUALGravity.model": [[110, "gravity-aqualgravity-model"]], "gravity.AQUALGravity.potential": [[111, "gravity-aqualgravity-potential"]], "gravity.AQUALGravity.potential_methods": [[112, "gravity-aqualgravity-potential-methods"]], "gravity.AQUALGravity.reset": [[113, "gravity-aqualgravity-reset"]], "gravity.EMONDGravity": [[114, "gravity-emondgravity"]], "gravity.EMONDGravity.__init__": [[115, "gravity-emondgravity-init"]], "gravity.EMONDGravity.attrs": [[116, "gravity-emondgravity-attrs"]], "gravity.EMONDGravity.compute_mass": [[117, "gravity-emondgravity-compute-mass"]], "gravity.EMONDGravity.compute_potential": [[118, "gravity-emondgravity-compute-potential"]], "gravity.EMONDGravity.is_calculated": [[119, "gravity-emondgravity-is-calculated"]], "gravity.EMONDGravity.model": [[120, "gravity-emondgravity-model"]], "gravity.EMONDGravity.potential": [[121, "gravity-emondgravity-potential"]], "gravity.EMONDGravity.potential_methods": [[122, "gravity-emondgravity-potential-methods"]], "gravity.EMONDGravity.reset": [[123, "gravity-emondgravity-reset"]], "gravity.Gravity": [[124, "gravity-gravity"]], "gravity.Gravity.__init__": [[125, "gravity-gravity-init"]], "gravity.Gravity.attrs": [[126, "gravity-gravity-attrs"]], "gravity.Gravity.is_calculated": [[127, "gravity-gravity-is-calculated"]], "gravity.Gravity.model": [[128, "gravity-gravity-model"]], "gravity.Gravity.potential_methods": [[129, "gravity-gravity-potential-methods"]], "gravity.Gravity.reset": [[130, "gravity-gravity-reset"]], "gravity.NewtonianGravity": [[131, "gravity-newtoniangravity"]], "gravity.NewtonianGravity.__init__": [[132, "gravity-newtoniangravity-init"]], "gravity.NewtonianGravity.attrs": [[133, "gravity-newtoniangravity-attrs"]], "gravity.NewtonianGravity.compute_mass": [[134, "gravity-newtoniangravity-compute-mass"]], "gravity.NewtonianGravity.compute_potential": [[135, "gravity-newtoniangravity-compute-potential"]], "gravity.NewtonianGravity.is_calculated": [[136, "gravity-newtoniangravity-is-calculated"]], "gravity.NewtonianGravity.model": [[137, "gravity-newtoniangravity-model"]], "gravity.NewtonianGravity.potential": [[138, "gravity-newtoniangravity-potential"]], "gravity.NewtonianGravity.potential_methods": [[139, "gravity-newtoniangravity-potential-methods"]], "gravity.NewtonianGravity.reset": [[140, "gravity-newtoniangravity-reset"]], "gravity.QUMONDGravity": [[141, "gravity-qumondgravity"]], "gravity.QUMONDGravity.__init__": [[142, "gravity-qumondgravity-init"]], "gravity.QUMONDGravity.attrs": [[143, "gravity-qumondgravity-attrs"]], "gravity.QUMONDGravity.compute_mass": [[144, "gravity-qumondgravity-compute-mass"]], "gravity.QUMONDGravity.compute_potential": [[145, "gravity-qumondgravity-compute-potential"]], "gravity.QUMONDGravity.is_calculated": [[146, "gravity-qumondgravity-is-calculated"]], "gravity.QUMONDGravity.model": [[147, "gravity-qumondgravity-model"]], "gravity.QUMONDGravity.potential": [[148, "gravity-qumondgravity-potential"]], "gravity.QUMONDGravity.potential_methods": [[149, "gravity-qumondgravity-potential-methods"]], "gravity.QUMONDGravity.reset": [[150, "gravity-qumondgravity-reset"]], "ics": [[151, "module-ics"]], "ics.ClusterICs": [[152, "ics-clusterics"]], "ics.ClusterICs.__init__": [[153, "ics-clusterics-init"]], "ics.ClusterICs.basename": [[154, "ics-clusterics-basename"]], "ics.ClusterICs.center": [[155, "ics-clusterics-center"]], "ics.ClusterICs.compute_orbits": [[156, "ics-clusterics-compute-orbits"]], "ics.ClusterICs.create_dataset": [[157, "ics-clusterics-create-dataset"]], "ics.ClusterICs.from_file": [[158, "ics-clusterics-from-file"]], "ics.ClusterICs.mag_file": [[159, "ics-clusterics-mag-file"]], "ics.ClusterICs.num_halos": [[160, "ics-clusterics-num-halos"]], "ics.ClusterICs.profiles": [[161, "ics-clusterics-profiles"]], "ics.ClusterICs.r_max": [[162, "ics-clusterics-r-max"]], "ics.ClusterICs.resample_particle_ics": [[163, "ics-clusterics-resample-particle-ics"]], "ics.ClusterICs.setup_particle_ics": [[164, "ics-clusterics-setup-particle-ics"]], "ics.ClusterICs.to_file": [[165, "ics-clusterics-to-file"]], "ics.ClusterICs.tot_np": [[166, "ics-clusterics-tot-np"]], "ics.ClusterICs.velocity": [[167, "ics-clusterics-velocity"]], "ics.compute_centers_for_binary": [[168, "ics-compute-centers-for-binary"]], "model": [[169, "module-model"]], "Galaxy Cluster Models": [[169, "galaxy-cluster-models"]], "model.ClusterModel": [[170, "model-clustermodel"]], "model.ClusterModel.__init__": [[171, "model-clustermodel-init"]], "model.ClusterModel.attrs": [[172, "model-clustermodel-attrs"]], "model.ClusterModel.check_dm_virial": [[173, "model-clustermodel-check-dm-virial"]], "model.ClusterModel.check_hse": [[174, "model-clustermodel-check-hse"]], "model.ClusterModel.check_star_virial": [[175, "model-clustermodel-check-star-virial"]], "model.ClusterModel.create_dataset": [[176, "model-clustermodel-create-dataset"]], "model.ClusterModel.default_fields": [[177, "model-clustermodel-default-fields"]], "model.ClusterModel.dm_virial": [[178, "model-clustermodel-dm-virial"]], "model.ClusterModel.fields": [[179, "model-clustermodel-fields"]], "model.ClusterModel.find_field_at_radius": [[180, "model-clustermodel-find-field-at-radius"]], "model.ClusterModel.from_arrays": [[181, "model-clustermodel-from-arrays"]], "development note": [[181, null], [218, null]], "model.ClusterModel.from_dens_and_entr": [[182, "model-clustermodel-from-dens-and-entr"]], "model.ClusterModel.from_dens_and_tden": [[183, "model-clustermodel-from-dens-and-tden"]], "model.ClusterModel.from_dens_and_temp": [[184, "model-clustermodel-from-dens-and-temp"]], "model.ClusterModel.from_h5_file": [[185, "model-clustermodel-from-h5-file"]], "model.ClusterModel.generate_dm_particles": [[186, "model-clustermodel-generate-dm-particles"]], "model.ClusterModel.generate_gas_particles": [[187, "model-clustermodel-generate-gas-particles"]], "model.ClusterModel.generate_star_particles": [[188, "model-clustermodel-generate-star-particles"]], "model.ClusterModel.generate_tracer_particles": [[189, "model-clustermodel-generate-tracer-particles"]], "model.ClusterModel.is_physical": [[190, "model-clustermodel-is-physical"]], "model.ClusterModel.keys": [[191, "model-clustermodel-keys"]], "model.ClusterModel.mass_in_radius": [[192, "model-clustermodel-mass-in-radius"]], "model.ClusterModel.no_gas": [[193, "model-clustermodel-no-gas"]], "model.ClusterModel.num_elements": [[194, "model-clustermodel-num-elements"]], "model.ClusterModel.plot": [[195, "model-clustermodel-plot"]], "model.ClusterModel.pot": [[196, "model-clustermodel-pot"]], "model.ClusterModel.rebuild_physical": [[197, "model-clustermodel-rebuild-physical"]], "Method": [[197, "method"], [234, "method"]], "model.ClusterModel.set_field": [[198, "model-clustermodel-set-field"]], "model.ClusterModel.set_magnetic_field_from_beta": [[199, "model-clustermodel-set-magnetic-field-from-beta"]], "model.ClusterModel.set_magnetic_field_from_density": [[200, "model-clustermodel-set-magnetic-field-from-density"]], "model.ClusterModel.set_rmax": [[201, "model-clustermodel-set-rmax"]], "model.ClusterModel.star_virial": [[202, "model-clustermodel-star-virial"]], "model.ClusterModel.virialization_method": [[203, "model-clustermodel-virialization-method"]], "model.ClusterModel.write_model_to_ascii": [[204, "model-clustermodel-write-model-to-ascii"]], "model.ClusterModel.write_model_to_binary": [[205, "model-clustermodel-write-model-to-binary"]], "model.ClusterModel.write_model_to_h5": [[206, "model-clustermodel-write-model-to-h5"]], "model.HydrostaticEquilibrium": [[207, "model-hydrostaticequilibrium"]], "model.HydrostaticEquilibrium.__init__": [[208, "model-hydrostaticequilibrium-init"]], "model.HydrostaticEquilibrium.attrs": [[209, "model-hydrostaticequilibrium-attrs"]], "model.HydrostaticEquilibrium.check_dm_virial": [[210, "model-hydrostaticequilibrium-check-dm-virial"]], "model.HydrostaticEquilibrium.check_hse": [[211, "model-hydrostaticequilibrium-check-hse"]], "model.HydrostaticEquilibrium.check_star_virial": [[212, "model-hydrostaticequilibrium-check-star-virial"]], "model.HydrostaticEquilibrium.create_dataset": [[213, "model-hydrostaticequilibrium-create-dataset"]], "model.HydrostaticEquilibrium.default_fields": [[214, "model-hydrostaticequilibrium-default-fields"]], "model.HydrostaticEquilibrium.dm_virial": [[215, "model-hydrostaticequilibrium-dm-virial"]], "model.HydrostaticEquilibrium.fields": [[216, "model-hydrostaticequilibrium-fields"]], "model.HydrostaticEquilibrium.find_field_at_radius": [[217, "model-hydrostaticequilibrium-find-field-at-radius"]], "model.HydrostaticEquilibrium.from_arrays": [[218, "model-hydrostaticequilibrium-from-arrays"]], "model.HydrostaticEquilibrium.from_dens_and_entr": [[219, "model-hydrostaticequilibrium-from-dens-and-entr"]], "model.HydrostaticEquilibrium.from_dens_and_tden": [[220, "model-hydrostaticequilibrium-from-dens-and-tden"]], "model.HydrostaticEquilibrium.from_dens_and_temp": [[221, "model-hydrostaticequilibrium-from-dens-and-temp"]], "model.HydrostaticEquilibrium.from_h5_file": [[222, "model-hydrostaticequilibrium-from-h5-file"]], "model.HydrostaticEquilibrium.generate_dm_particles": [[223, "model-hydrostaticequilibrium-generate-dm-particles"]], "model.HydrostaticEquilibrium.generate_gas_particles": [[224, "model-hydrostaticequilibrium-generate-gas-particles"]], "model.HydrostaticEquilibrium.generate_star_particles": [[225, "model-hydrostaticequilibrium-generate-star-particles"]], "model.HydrostaticEquilibrium.generate_tracer_particles": [[226, "model-hydrostaticequilibrium-generate-tracer-particles"]], "model.HydrostaticEquilibrium.is_physical": [[227, "model-hydrostaticequilibrium-is-physical"]], "model.HydrostaticEquilibrium.keys": [[228, "model-hydrostaticequilibrium-keys"]], "model.HydrostaticEquilibrium.mass_in_radius": [[229, "model-hydrostaticequilibrium-mass-in-radius"]], "model.HydrostaticEquilibrium.no_gas": [[230, "model-hydrostaticequilibrium-no-gas"]], "model.HydrostaticEquilibrium.num_elements": [[231, "model-hydrostaticequilibrium-num-elements"]], "model.HydrostaticEquilibrium.plot": [[232, "model-hydrostaticequilibrium-plot"]], "model.HydrostaticEquilibrium.pot": [[233, "model-hydrostaticequilibrium-pot"]], "model.HydrostaticEquilibrium.rebuild_physical": [[234, "model-hydrostaticequilibrium-rebuild-physical"]], "model.HydrostaticEquilibrium.set_field": [[235, "model-hydrostaticequilibrium-set-field"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_beta": [[236, "model-hydrostaticequilibrium-set-magnetic-field-from-beta"]], "model.HydrostaticEquilibrium.set_magnetic_field_from_density": [[237, "model-hydrostaticequilibrium-set-magnetic-field-from-density"]], "model.HydrostaticEquilibrium.set_rmax": [[238, "model-hydrostaticequilibrium-set-rmax"]], "model.HydrostaticEquilibrium.star_virial": [[239, "model-hydrostaticequilibrium-star-virial"]], "model.HydrostaticEquilibrium.virialization_method": [[240, "model-hydrostaticequilibrium-virialization-method"]], "model.HydrostaticEquilibrium.write_model_to_ascii": [[241, "model-hydrostaticequilibrium-write-model-to-ascii"]], "model.HydrostaticEquilibrium.write_model_to_binary": [[242, "model-hydrostaticequilibrium-write-model-to-binary"]], "model.HydrostaticEquilibrium.write_model_to_h5": [[243, "model-hydrostaticequilibrium-write-model-to-h5"]], "particles": [[244, "module-particles"]], "particles.ClusterParticles": [[245, "particles-clusterparticles"]], "particles.ClusterParticles.__init__": [[246, "particles-clusterparticles-init"]], "particles.ClusterParticles.add_black_hole": [[247, "particles-clusterparticles-add-black-hole"]], "particles.ClusterParticles.add_offsets": [[248, "particles-clusterparticles-add-offsets"]], "particles.ClusterParticles.drop_ptypes": [[249, "particles-clusterparticles-drop-ptypes"]], "particles.ClusterParticles.fields": [[250, "particles-clusterparticles-fields"]], "particles.ClusterParticles.from_fields": [[251, "particles-clusterparticles-from-fields"]], "particles.ClusterParticles.from_file": [[252, "particles-clusterparticles-from-file"]], "particles.ClusterParticles.from_gadget_file": [[253, "particles-clusterparticles-from-gadget-file"]], "particles.ClusterParticles.from_h5_file": [[254, "particles-clusterparticles-from-h5-file"]], "particles.ClusterParticles.keys": [[255, "particles-clusterparticles-keys"]], "particles.ClusterParticles.make_radial_cut": [[256, "particles-clusterparticles-make-radial-cut"]], "particles.ClusterParticles.num_passive_scalars": [[257, "particles-clusterparticles-num-passive-scalars"]], "particles.ClusterParticles.particle_types": [[258, "particles-clusterparticles-particle-types"]], "particles.ClusterParticles.passive_scalars": [[259, "particles-clusterparticles-passive-scalars"]], "particles.ClusterParticles.set_field": [[260, "particles-clusterparticles-set-field"]], "particles.ClusterParticles.to_yt_dataset": [[261, "particles-clusterparticles-to-yt-dataset"]], "particles.ClusterParticles.write_particles": [[262, "particles-clusterparticles-write-particles"]], "particles.ClusterParticles.write_particles_to_h5": [[263, "particles-clusterparticles-write-particles-to-h5"]], "particles.ClusterParticles.write_to_gadget_file": [[264, "particles-clusterparticles-write-to-gadget-file"]], "particles.concat_clusters": [[265, "particles-concat-clusters"]], "particles.resample_clusters": [[266, "particles-resample-clusters"]], "radial_profiles": [[267, "module-radial_profiles"]], "Radial Profiles": [[267, "id1"], [359, "Radial-Profiles"], [368, "radial-profiles"]], "radial_profiles.RadialProfile": [[268, "radial-profiles-radialprofile"]], "info": [[268, null]], "radial_profiles.RadialProfile.__init__": [[269, "radial-profiles-radialprofile-init"]], "radial_profiles.RadialProfile.add_core": [[270, "radial-profiles-radialprofile-add-core"]], "radial_profiles.RadialProfile.built_in": [[271, "radial-profiles-radialprofile-built-in"]], "radial_profiles.RadialProfile.builtin": [[272, "radial-profiles-radialprofile-builtin"]], "radial_profiles.RadialProfile.cutoff": [[273, "radial-profiles-radialprofile-cutoff"]], "radial_profiles.RadialProfile.from_array": [[274, "radial-profiles-radialprofile-from-array"]], "radial_profiles.RadialProfile.from_binary": [[275, "radial-profiles-radialprofile-from-binary"]], "radial_profiles.RadialProfile.plot": [[276, "radial-profiles-radialprofile-plot"]], "radial_profiles.RadialProfile.to_binary": [[277, "radial-profiles-radialprofile-to-binary"]], "radial_profiles.ad07_density_profile": [[278, "radial-profiles-ad07-density-profile"]], "radial_profiles.ad07_temperature_profile": [[279, "radial-profiles-ad07-temperature-profile"]], "radial_profiles.am06_density_profile": [[280, "radial-profiles-am06-density-profile"]], "radial_profiles.am06_temperature_profile": [[281, "radial-profiles-am06-temperature-profile"]], "radial_profiles.baseline_entropy_profile": [[282, "radial-profiles-baseline-entropy-profile"]], "radial_profiles.beta_model_profile": [[283, "radial-profiles-beta-model-profile"]], "radial_profiles.broken_entropy_profile": [[284, "radial-profiles-broken-entropy-profile"]], "radial_profiles.constant_profile": [[285, "radial-profiles-constant-profile"]], "radial_profiles.convert_nfw_to_hernquist": [[286, "radial-profiles-convert-nfw-to-hernquist"]], "radial_profiles.cored_hernquist_density_profile": [[287, "radial-profiles-cored-hernquist-density-profile"]], "radial_profiles.cored_snfw_density_profile": [[288, "radial-profiles-cored-snfw-density-profile"]], "radial_profiles.cored_snfw_mass_profile": [[289, "radial-profiles-cored-snfw-mass-profile"]], "radial_profiles.cored_snfw_total_mass": [[290, "radial-profiles-cored-snfw-total-mass"]], "radial_profiles.einasto_density_profile": [[291, "radial-profiles-einasto-density-profile"]], "radial_profiles.einasto_mass_profile": [[292, "radial-profiles-einasto-mass-profile"]], "radial_profiles.find_overdensity_radius": [[293, "radial-profiles-find-overdensity-radius"]], "radial_profiles.find_radius_mass": [[294, "radial-profiles-find-radius-mass"]], "radial_profiles.hernquist_density_profile": [[295, "radial-profiles-hernquist-density-profile"]], "radial_profiles.hernquist_mass_profile": [[296, "radial-profiles-hernquist-mass-profile"]], "radial_profiles.nfw_density_profile": [[297, "radial-profiles-nfw-density-profile"]], "radial_profiles.nfw_mass_profile": [[298, "radial-profiles-nfw-mass-profile"]], "radial_profiles.nfw_scale_density": [[299, "radial-profiles-nfw-scale-density"]], "radial_profiles.power_law_profile": [[300, "radial-profiles-power-law-profile"]], "radial_profiles.rescale_profile_by_mass": [[301, "radial-profiles-rescale-profile-by-mass"]], "radial_profiles.snfw_conc": [[302, "radial-profiles-snfw-conc"]], "radial_profiles.snfw_density_profile": [[303, "radial-profiles-snfw-density-profile"]], "radial_profiles.snfw_mass_profile": [[304, "radial-profiles-snfw-mass-profile"]], "radial_profiles.snfw_total_mass": [[305, "radial-profiles-snfw-total-mass"]], "radial_profiles.tnfw_density_profile": [[306, "radial-profiles-tnfw-density-profile"]], "radial_profiles.tnfw_mass_profile": [[307, "radial-profiles-tnfw-mass-profile"]], "radial_profiles.vikhlinin_density_profile": [[308, "radial-profiles-vikhlinin-density-profile"]], "radial_profiles.vikhlinin_temperature_profile": [[309, "radial-profiles-vikhlinin-temperature-profile"]], "radial_profiles.walker_entropy_profile": [[310, "radial-profiles-walker-entropy-profile"]], "relations": [[311, "module-relations"]], "Relations": [[311, "id1"]], "relations.convert_ne_to_density": [[312, "relations-convert-ne-to-density"]], "relations.f_gas": [[313, "relations-f-gas"]], "relations.m_bcg": [[314, "relations-m-bcg"]], "relations.m_sat": [[315, "relations-m-sat"]], "relations.r_bcg": [[316, "relations-r-bcg"]], "utils": [[317, "module-utils"]], "utils.build_yt_dataset_fields": [[318, "utils-build-yt-dataset-fields"]], "utils.ensure_list": [[319, "utils-ensure-list"]], "utils.ensure_ytarray": [[320, "utils-ensure-ytarray"]], "utils.ensure_ytquantity": [[321, "utils-ensure-ytquantity"]], "utils.eprint": [[322, "utils-eprint"]], "utils.generate_particle_radii": [[323, "utils-generate-particle-radii"]], "utils.integrate": [[324, "utils-integrate"]], "utils.integrate_mass": [[325, "utils-integrate-mass"]], "utils.integrate_toinf": [[326, "utils-integrate-toinf"]], "utils.log_string": [[327, "utils-log-string"]], "utils.monotone_interpolation": [[328, "utils-monotone-interpolation"]], "utils.moving_average": [[329, "utils-moving-average"]], "utils.parse_prng": [[330, "utils-parse-prng"]], "utils.time_limit": [[331, "utils-time-limit"]], "utils.truncate_spline": [[332, "utils-truncate-spline"]], "virial": [[333, "module-virial"]], "virial.VirialEquilibrium": [[334, "virial-virialequilibrium"]], "Generating the Phase Space Density": [[334, "generating-the-phase-space-density"]], "virial.VirialEquilibrium.__init__": [[335, "virial-virialequilibrium-init"]], "virial.VirialEquilibrium.check_virial": [[336, "virial-virialequilibrium-check-virial"]], "virial.VirialEquilibrium.df": [[337, "virial-virialequilibrium-df"]], "virial.VirialEquilibrium.ee": [[338, "virial-virialequilibrium-ee"]], "virial.VirialEquilibrium.ff": [[339, "virial-virialequilibrium-ff"]], "virial.VirialEquilibrium.generate_particles": [[340, "virial-virialequilibrium-generate-particles"]], "virial.VirialEquilibrium.model": [[341, "virial-virialequilibrium-model"]], "virial.VirialEquilibrium.num_elements": [[342, "virial-virialequilibrium-num-elements"]], "virial.VirialEquilibrium.ptype": [[343, "virial-virialequilibrium-ptype"]], "virial.VirialEquilibrium.sigma": [[344, "virial-virialequilibrium-sigma"]], "virial.VirialEquilibrium.type": [[345, "virial-virialequilibrium-type"]], "API": [[346, "api"]], "Setting Up Idealized Cluster Problems in Various Codes": [[347, "setting-up-idealized-cluster-problems-in-various-codes"]], "FLASH": [[347, "flash"]], "GAMER": [[347, "gamer"]], "Arepo": [[347, "arepo"]], "GIZMO": [[347, "gizmo"]], "Enzo": [[347, "enzo"]], "Ramses": [[347, "ramses"]], "Generating your ICs": [[347, "generating-your-ics"]], "Configuring RAMSES": [[347, "configuring-ramses"]], "Running the Simulation": [[347, "running-the-simulation"]], "Athena++": [[347, "athena"]], "Collections": [[348, "collections"]], "Available Datasets": [[348, "available-datasets"]], "Accessing Collections": [[348, "accessing-collections"]], "Built-In Collections": [[348, "built-in-collections"]], "Custom Collections": [[348, "custom-collections"]], "Examples": [[349, "examples"]], "API Guides": [[349, "api-guides"]], "Code Examples": [[349, "code-examples"]], "Generating 3D Cluster Fields": [[350, "generating-3d-cluster-fields"]], "Mathematical Overview": [[350, "mathematical-overview"]], "Initializing a Magnetic Field": [[350, "initializing-a-magnetic-field"]], "Random Magnetic Fields and Vector Potentials": [[350, "random-magnetic-fields-and-vector-potentials"]], "Radial Random Magnetic Fields and Vector Potentials": [[350, "radial-random-magnetic-fields-and-vector-potentials"]], "Initializing a Velocity Field": [[350, "initializing-a-velocity-field"]], "Random Velocity Fields": [[350, "random-velocity-fields"]], "Radial Random Velocity Fields": [[350, "radial-random-velocity-fields"]], "Mapping a Field to Particles": [[350, "mapping-a-field-to-particles"]], "Writing a Field Out to Disk": [[350, "writing-a-field-out-to-disk"]], "Gravity Theories": [[351, "gravity-theories"]], "Available Gravity Theories": [[351, "available-gravity-theories"]], "Using Non-Newtonian Gravity": [[351, "using-non-newtonian-gravity"]], "Writing Your Own Gravity": [[351, "writing-your-own-gravity"]], "Copying the Template": [[351, "copying-the-template"]], "Defining Methods": [[351, "defining-methods"]], "AQUAL Gravity": [[352, "aqual-gravity"]], "Description": [[352, "description"], [353, "description"], [354, "description"], [355, "description"]], "Methods": [[352, "methods"], [353, "methods"], [354, "methods"], [355, "methods"]], "Notes": [[352, "notes"], [353, "notes"], [354, "notes"], [355, "notes"]], "References": [[352, "references"], [353, "references"], [354, "references"], [355, "references"], [360, "References"], [368, "references"]], "EMOND Gravity": [[353, "emond-gravity"]], "Newtonian Gravity": [[354, "newtonian-gravity"], [358, "newtonian-gravity"]], "Computing the Potential": [[354, "computing-the-potential"]], "Computing Dynamical Mass": [[354, "computing-dynamical-mass"]], "QUMOND Gravity": [[355, "qumond-gravity"]], "cluster_generator": [[356, "cluster-generator"]], "Features": [[356, "features"]], "Resources": [[356, "resources"]], "Related Projects": [[356, "related-projects"]], "Indices and tables": [[356, "indices-and-tables"]], "Initial Conditions Generation": [[357, "initial-conditions-generation"]], "Generating ClusterICs from a Script": [[357, "generating-clusterics-from-a-script"]], "ClusterICs Parameter Files": [[357, "clusterics-parameter-files"]], "Cluster Models": [[358, "cluster-models"]], "Cluster Models: Mathematical Overview": [[358, "cluster-models-mathematical-overview"]], "Reader Suggestion": [[358, null]], "MOND Gravity: AQUAL": [[358, "mond-gravity-aqual"]], "MOND Gravity: QUMOND": [[358, "mond-gravity-qumond"]], "Generating a model.ClusterModel Using Radial Profiles": [[358, "generating-a-model-clustermodel-using-radial-profiles"]], "ClusterModel from Gas Density and Gas Temperature Profiles": [[358, "clustermodel-from-gas-density-and-gas-temperature-profiles"]], "ClusterModel from Gas Density and Total Density Profiles": [[358, "clustermodel-from-gas-density-and-total-density-profiles"]], "ClusterModel from Gas Density and Gas Entropy Profiles": [[358, "clustermodel-from-gas-density-and-gas-entropy-profiles"]], "ClusterModel Without Gas": [[358, "clustermodel-without-gas"]], "Checking the Hydrostatic Equilibrium": [[358, "checking-the-hydrostatic-equilibrium"]], "Setting a Magnetic Field Strength Profile": [[358, "setting-a-magnetic-field-strength-profile"]], "Setting a Magnetic Field from \\beta": [[358, "setting-a-magnetic-field-from-beta"]], "Setting a Magnetic Field from plasma density": [[358, "setting-a-magnetic-field-from-plasma-density"]], "Adding Other Fields": [[358, "adding-other-fields"]], "Reading and Writing model.ClusterModel Objects to and from Disk": [[358, "reading-and-writing-model-clustermodel-objects-to-and-from-disk"]], "User Advice": [[358, null]], "Non-Physical Systems": [[358, "non-physical-systems"]], "Data Structures in cluster_generator": [[359, "Data-Structures-in-cluster_generator"]], "Data Structures": [[359, "Data-Structures"]], "Accessing and Using Existing Profiles": [[359, "Accessing-and-Using-Existing-Profiles"]], "Creating Profiles": [[359, "Creating-Profiles"]], "I/O Operations on RadialProfiles": [[359, "I/O-Operations-on-RadialProfiles"]], "Gravity": [[359, "Gravity"]], "ClusterModel": [[359, "ClusterModel"]], "VirialEquilibrium": [[359, "VirialEquilibrium"]], "Generating Particles": [[359, "Generating-Particles"]], "ClusterParticles": [[359, "ClusterParticles"]], "ClusterICs": [[359, "ClusterICs"]], "Inside ClusterICs": [[359, "Inside-ClusterICs"]], "Virialization": [[360, "Virialization"]], "Conents": [[360, "Conents"]], "Galactic Dynamics": [[360, "Galactic-Dynamics"]], "The Distribution Function": [[360, "The-Distribution-Function"]], "The Collisionless Boltzmann Equation": [[360, "The-Collisionless-Boltzmann-Equation"]], "The Jean\u2019s Equation": [[360, "The-Jean's-Equation"]], "The Jean\u2019s Theorem": [[360, "The-Jean's-Theorem"]], "The Eddington Formula": [[360, "The-Eddington-Formula"]], "The Local Maxwellian Approximation": [[360, "The-Local-Maxwellian-Approximation"]], "Virialization in cluster_generator": [[360, "Virialization-in-cluster_generator"]], "Advanced Use Cases": [[361, "Advanced-Use-Cases"]], "Feature Guide: Using Builtin Collections": [[362, "Feature-Guide:-Using-Builtin-Collections"]], "What Are Collections": [[362, "What-Are-Collections"]], "How Do I Access One?": [[362, "How-Do-I-Access-One?"]], "Getting Technical": [[362, "Getting-Technical"]], "Quickstart Guide: The Basics": [[363, "Quickstart-Guide:-The-Basics"]], "Building The Foundation": [[363, "Building-The-Foundation"]], "Raising The Frame": [[363, "Raising-The-Frame"]], "Finishing The House": [[363, "Finishing-The-House"]], "Quickstart Guide: Your First Simulation": [[364, "Quickstart-Guide:-Your-First-Simulation"]], "Quickstart Guide: Getting The Most Out of Cluster Generator": [[365, "Quickstart-Guide:-Getting-The-Most-Out-of-Cluster-Generator"]], "Getting Funky: MONDian Gravity": [[366, "Getting-Funky:-MONDian-Gravity"]], "Important Note": [[366, "Important-Note"]], "Getting Started With Gravity": [[366, "Getting-Started-With-Gravity"]], "Making Initial Conditions": [[366, "Making-Initial-Conditions"]], "Particles": [[367, "particles"]], "Generating Particles from ClusterModel Objects": [[367, "generating-particles-from-clustermodel-objects"]], "Gas Particles": [[367, "gas-particles"]], "Dark Matter and Star Particles": [[367, "dark-matter-and-star-particles"]], "Virial Equilibria: Mathematical Overview": [[367, "virial-equilibria-mathematical-overview"]], "Checking the Virial Equilibrium": [[367, "checking-the-virial-equilibrium"]], "Generating Dark Matter and Star Particles": [[367, "generating-dark-matter-and-star-particles"]], "The ClusterParticles Class": [[367, "the-clusterparticles-class"]], "ClusterParticles Operations": [[367, "clusterparticles-operations"]], "Adding ClusterParticles Objects": [[367, "adding-clusterparticles-objects"]], "Dropping Particle Types": [[367, "dropping-particle-types"]], "Add Position and Velocity Offsets": [[367, "add-position-and-velocity-offsets"]], "Make a Cut on Radius": [[367, "make-a-cut-on-radius"]], "Add Black Hole Particles": [[367, "add-black-hole-particles"]], "Add a New Field or Change a Field": [[367, "add-a-new-field-or-change-a-field"]], "ClusterParticles I/O": [[367, "clusterparticles-i-o"]], "Gadget-Like I/O": [[367, "gadget-like-i-o"]], "General Profiles": [[368, "general-profiles"]], "Constant Profile": [[368, "constant-profile"]], "Power-Law Profile": [[368, "power-law-profile"]], "Density and Mass Profiles": [[368, "density-and-mass-profiles"]], "NFW Profile": [[368, "nfw-profile"]], "Mathematical Note": [[368, null]], "\u201csuper-NFW\u201d Profile": [[368, "super-nfw-profile"]], "Truncated NFW Profile": [[368, "truncated-nfw-profile"]], "Hernquist Profile": [[368, "hernquist-profile"]], "Einasto Profile": [[368, "einasto-profile"]], "Vikhlinin et al. 2006 Density Profile": [[368, "vikhlinin-et-al-2006-density-profile"]], "Ascasibar & Markevitch 2006 Density Profile": [[368, "ascasibar-markevitch-2006-density-profile"]], "Temperature Profiles": [[368, "temperature-profiles"]], "Vikhlinin et al. 2006 Temperature Profile": [[368, "vikhlinin-et-al-2006-temperature-profile"]], "Ascasibar & Markevitch 2006 Temperature Profile": [[368, "ascasibar-markevitch-2006-temperature-profile"]], "Entropy Profiles": [[368, "entropy-profiles"]], "Baseline Entropy Profile": [[368, "baseline-entropy-profile"]]}, "indexentries": {"codes": [[1, "module-codes"]], "module": [[1, "module-codes"], [11, "module-collection"], [60, "module-fields"], [103, "module-gravity"], [151, "module-ics"], [169, "module-model"], [244, "module-particles"], [267, "module-radial_profiles"], [311, "module-relations"], [317, "module-utils"], [333, "module-virial"]], "setup_arepo_ics() (in module codes)": [[2, "codes.setup_arepo_ics"]], "setup_art_ics() (in module codes)": [[3, "codes.setup_art_ics"]], "setup_athena_ics() (in module codes)": [[4, "codes.setup_athena_ics"]], "setup_enzo_ics() (in module codes)": [[5, "codes.setup_enzo_ics"]], "setup_flash_ics() (in module codes)": [[6, "codes.setup_flash_ics"]], "setup_gamer_ics() (in module codes)": [[7, "codes.setup_gamer_ics"]], "setup_gizmo_ics() (in module codes)": [[8, "codes.setup_gizmo_ics"]], "setup_ramses_ics() (in module codes)": [[9, "codes.setup_ramses_ics"]], "write_amr_particles() (in module codes)": [[10, "codes.write_amr_particles"]], "collection": [[11, "module-collection"]], "ascasibar07 (class in collection)": [[12, "collection.Ascasibar07"]], "__init__() (collection.ascasibar07 method)": [[13, "collection.Ascasibar07.__init__"]], "description (collection.ascasibar07 attribute)": [[14, "collection.Ascasibar07.description"]], "load() (collection.ascasibar07 static method)": [[15, "collection.Ascasibar07.load"]], "load_method (collection.ascasibar07 attribute)": [[16, "collection.Ascasibar07.load_method"]], "load_model() (collection.ascasibar07 method)": [[17, "collection.Ascasibar07.load_model"]], "name (collection.ascasibar07 attribute)": [[18, "collection.Ascasibar07.name"]], "names (collection.ascasibar07 property)": [[19, "collection.Ascasibar07.names"]], "parameters (collection.ascasibar07 property)": [[20, "collection.Ascasibar07.parameters"]], "path (collection.ascasibar07 attribute)": [[21, "collection.Ascasibar07.path"]], "plot_summary() (collection.ascasibar07 method)": [[22, "collection.Ascasibar07.plot_summary"]], "profiles (collection.ascasibar07 property)": [[23, "collection.Ascasibar07.profiles"]], "clustercollection (class in collection)": [[24, "collection.ClusterCollection"]], "__init__() (collection.clustercollection method)": [[25, "collection.ClusterCollection.__init__"]], "description (collection.clustercollection attribute)": [[26, "collection.ClusterCollection.description"]], "load_method (collection.clustercollection attribute)": [[27, "collection.ClusterCollection.load_method"]], "load_model() (collection.clustercollection method)": [[28, "collection.ClusterCollection.load_model"]], "name (collection.clustercollection attribute)": [[29, "collection.ClusterCollection.name"]], "names (collection.clustercollection property)": [[30, "collection.ClusterCollection.names"]], "parameters (collection.clustercollection property)": [[31, "collection.ClusterCollection.parameters"]], "path (collection.clustercollection attribute)": [[32, "collection.ClusterCollection.path"]], "plot_summary() (collection.clustercollection method)": [[33, "collection.ClusterCollection.plot_summary"]], "profiles (collection.clustercollection property)": [[34, "collection.ClusterCollection.profiles"]], "sanderson10 (class in collection)": [[35, "collection.Sanderson10"]], "__init__() (collection.sanderson10 method)": [[36, "collection.Sanderson10.__init__"]], "description (collection.sanderson10 attribute)": [[37, "collection.Sanderson10.description"]], "load() (collection.sanderson10 static method)": [[38, "collection.Sanderson10.load"]], "load_method (collection.sanderson10 attribute)": [[39, "collection.Sanderson10.load_method"]], "load_model() (collection.sanderson10 method)": [[40, "collection.Sanderson10.load_model"]], "name (collection.sanderson10 attribute)": [[41, "collection.Sanderson10.name"]], "names (collection.sanderson10 property)": [[42, "collection.Sanderson10.names"]], "parameters (collection.sanderson10 property)": [[43, "collection.Sanderson10.parameters"]], "path (collection.sanderson10 attribute)": [[44, "collection.Sanderson10.path"]], "plot_summary() (collection.sanderson10 method)": [[45, "collection.Sanderson10.plot_summary"]], "profiles (collection.sanderson10 property)": [[46, "collection.Sanderson10.profiles"]], "vikhlinin06 (class in collection)": [[47, "collection.Vikhlinin06"]], "__init__() (collection.vikhlinin06 method)": [[48, "collection.Vikhlinin06.__init__"]], "description (collection.vikhlinin06 attribute)": [[49, "collection.Vikhlinin06.description"]], "load() (collection.vikhlinin06 static method)": [[50, "collection.Vikhlinin06.load"]], "load_method (collection.vikhlinin06 attribute)": [[51, "collection.Vikhlinin06.load_method"]], "load_model() (collection.vikhlinin06 method)": [[52, "collection.Vikhlinin06.load_model"]], "name (collection.vikhlinin06 attribute)": [[53, "collection.Vikhlinin06.name"]], "names (collection.vikhlinin06 property)": [[54, "collection.Vikhlinin06.names"]], "parameters (collection.vikhlinin06 property)": [[55, "collection.Vikhlinin06.parameters"]], "path (collection.vikhlinin06 attribute)": [[56, "collection.Vikhlinin06.path"]], "plot_summary() (collection.vikhlinin06 method)": [[57, "collection.Vikhlinin06.plot_summary"]], "profiles (collection.vikhlinin06 property)": [[58, "collection.Vikhlinin06.profiles"]], "get_collections() (in module collection)": [[59, "collection.get_collections"]], "fields": [[60, "module-fields"]], "clusterfield (class in fields)": [[61, "fields.ClusterField"]], "__init__() (fields.clusterfield method)": [[62, "fields.ClusterField.__init__"]], "map_field_to_particles() (fields.clusterfield method)": [[63, "fields.ClusterField.map_field_to_particles"]], "units (fields.clusterfield property)": [[64, "fields.ClusterField.units"]], "write_file() (fields.clusterfield method)": [[65, "fields.ClusterField.write_file"]], "gaussianrandomfield (class in fields)": [[66, "fields.GaussianRandomField"]], "__init__() (fields.gaussianrandomfield method)": [[67, "fields.GaussianRandomField.__init__"]], "map_field_to_particles() (fields.gaussianrandomfield method)": [[68, "fields.GaussianRandomField.map_field_to_particles"]], "units (fields.gaussianrandomfield property)": [[69, "fields.GaussianRandomField.units"]], "write_file() (fields.gaussianrandomfield method)": [[70, "fields.GaussianRandomField.write_file"]], "radialrandommagneticfield (class in fields)": [[71, "fields.RadialRandomMagneticField"]], "__init__() (fields.radialrandommagneticfield method)": [[72, "fields.RadialRandomMagneticField.__init__"]], "map_field_to_particles() (fields.radialrandommagneticfield method)": [[73, "fields.RadialRandomMagneticField.map_field_to_particles"]], "units (fields.radialrandommagneticfield property)": [[74, "fields.RadialRandomMagneticField.units"]], "write_file() (fields.radialrandommagneticfield method)": [[75, "fields.RadialRandomMagneticField.write_file"]], "radialrandommagneticvectorpotential (class in fields)": [[76, "fields.RadialRandomMagneticVectorPotential"]], "__init__() (fields.radialrandommagneticvectorpotential method)": [[77, "fields.RadialRandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.radialrandommagneticvectorpotential method)": [[78, "fields.RadialRandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.radialrandommagneticvectorpotential property)": [[79, "fields.RadialRandomMagneticVectorPotential.units"]], "write_file() (fields.radialrandommagneticvectorpotential method)": [[80, "fields.RadialRandomMagneticVectorPotential.write_file"]], "radialrandomvelocityfield (class in fields)": [[81, "fields.RadialRandomVelocityField"]], "__init__() (fields.radialrandomvelocityfield method)": [[82, "fields.RadialRandomVelocityField.__init__"]], "map_field_to_particles() (fields.radialrandomvelocityfield method)": [[83, "fields.RadialRandomVelocityField.map_field_to_particles"]], "units (fields.radialrandomvelocityfield property)": [[84, "fields.RadialRandomVelocityField.units"]], "write_file() (fields.radialrandomvelocityfield method)": [[85, "fields.RadialRandomVelocityField.write_file"]], "randommagneticfield (class in fields)": [[86, "fields.RandomMagneticField"]], "__init__() (fields.randommagneticfield method)": [[87, "fields.RandomMagneticField.__init__"]], "map_field_to_particles() (fields.randommagneticfield method)": [[88, "fields.RandomMagneticField.map_field_to_particles"]], "units (fields.randommagneticfield property)": [[89, "fields.RandomMagneticField.units"]], "write_file() (fields.randommagneticfield method)": [[90, "fields.RandomMagneticField.write_file"]], "randommagneticvectorpotential (class in fields)": [[91, "fields.RandomMagneticVectorPotential"]], "__init__() (fields.randommagneticvectorpotential method)": [[92, "fields.RandomMagneticVectorPotential.__init__"]], "map_field_to_particles() (fields.randommagneticvectorpotential method)": [[93, "fields.RandomMagneticVectorPotential.map_field_to_particles"]], "units (fields.randommagneticvectorpotential property)": [[94, "fields.RandomMagneticVectorPotential.units"]], "write_file() (fields.randommagneticvectorpotential method)": [[95, "fields.RandomMagneticVectorPotential.write_file"]], "randomvelocityfield (class in fields)": [[96, "fields.RandomVelocityField"]], "__init__() (fields.randomvelocityfield method)": [[97, "fields.RandomVelocityField.__init__"]], "map_field_to_particles() (fields.randomvelocityfield method)": [[98, "fields.RandomVelocityField.map_field_to_particles"]], "units (fields.randomvelocityfield property)": [[99, "fields.RandomVelocityField.units"]], "write_file() (fields.randomvelocityfield method)": [[100, "fields.RandomVelocityField.write_file"]], "parse_value() (in module fields)": [[101, "fields.parse_value"]], "rot_3d() (in module fields)": [[102, "fields.rot_3d"]], "gravity": [[103, "module-gravity"]], "aqualgravity (class in gravity)": [[104, "gravity.AQUALGravity"]], "__init__() (gravity.aqualgravity method)": [[105, "gravity.AQUALGravity.__init__"]], "attrs (gravity.aqualgravity attribute)": [[106, "gravity.AQUALGravity.attrs"]], "compute_mass() (gravity.aqualgravity class method)": [[107, "gravity.AQUALGravity.compute_mass"]], "compute_potential() (gravity.aqualgravity class method)": [[108, "gravity.AQUALGravity.compute_potential"]], "is_calculated (gravity.aqualgravity property)": [[109, "gravity.AQUALGravity.is_calculated"]], "model (gravity.aqualgravity attribute)": [[110, "gravity.AQUALGravity.model"]], "potential() (gravity.aqualgravity method)": [[111, "gravity.AQUALGravity.potential"]], "potential_methods (gravity.aqualgravity attribute)": [[112, "gravity.AQUALGravity.potential_methods"]], "reset() (gravity.aqualgravity method)": [[113, "gravity.AQUALGravity.reset"]], "emondgravity (class in gravity)": [[114, "gravity.EMONDGravity"]], "__init__() (gravity.emondgravity method)": [[115, "gravity.EMONDGravity.__init__"]], "attrs (gravity.emondgravity attribute)": [[116, "gravity.EMONDGravity.attrs"]], "compute_mass() (gravity.emondgravity class method)": [[117, "gravity.EMONDGravity.compute_mass"]], "compute_potential() (gravity.emondgravity class method)": [[118, "gravity.EMONDGravity.compute_potential"]], "is_calculated (gravity.emondgravity property)": [[119, "gravity.EMONDGravity.is_calculated"]], "model (gravity.emondgravity attribute)": [[120, "gravity.EMONDGravity.model"]], "potential() (gravity.emondgravity method)": [[121, "gravity.EMONDGravity.potential"]], "potential_methods (gravity.emondgravity attribute)": [[122, "gravity.EMONDGravity.potential_methods"]], "reset() (gravity.emondgravity method)": [[123, "gravity.EMONDGravity.reset"]], "gravity (class in gravity)": [[124, "gravity.Gravity"]], "__init__() (gravity.gravity method)": [[125, "gravity.Gravity.__init__"]], "attrs (gravity.gravity attribute)": [[126, "gravity.Gravity.attrs"]], "is_calculated (gravity.gravity property)": [[127, "gravity.Gravity.is_calculated"]], "model (gravity.gravity attribute)": [[128, "gravity.Gravity.model"]], "potential_methods (gravity.gravity attribute)": [[129, "gravity.Gravity.potential_methods"]], "reset() (gravity.gravity method)": [[130, "gravity.Gravity.reset"]], "newtoniangravity (class in gravity)": [[131, "gravity.NewtonianGravity"]], "__init__() (gravity.newtoniangravity method)": [[132, "gravity.NewtonianGravity.__init__"]], "attrs (gravity.newtoniangravity attribute)": [[133, "gravity.NewtonianGravity.attrs"]], "compute_mass() (gravity.newtoniangravity class method)": [[134, "gravity.NewtonianGravity.compute_mass"]], "compute_potential() (gravity.newtoniangravity class method)": [[135, "gravity.NewtonianGravity.compute_potential"]], "is_calculated (gravity.newtoniangravity property)": [[136, "gravity.NewtonianGravity.is_calculated"]], "model (gravity.newtoniangravity attribute)": [[137, "gravity.NewtonianGravity.model"]], "potential() (gravity.newtoniangravity method)": [[138, "gravity.NewtonianGravity.potential"]], "potential_methods (gravity.newtoniangravity attribute)": [[139, "gravity.NewtonianGravity.potential_methods"]], "reset() (gravity.newtoniangravity method)": [[140, "gravity.NewtonianGravity.reset"]], "qumondgravity (class in gravity)": [[141, "gravity.QUMONDGravity"]], "__init__() (gravity.qumondgravity method)": [[142, "gravity.QUMONDGravity.__init__"]], "attrs (gravity.qumondgravity attribute)": [[143, "gravity.QUMONDGravity.attrs"]], "compute_mass() (gravity.qumondgravity class method)": [[144, "gravity.QUMONDGravity.compute_mass"]], "compute_potential() (gravity.qumondgravity class method)": [[145, "gravity.QUMONDGravity.compute_potential"]], "is_calculated (gravity.qumondgravity property)": [[146, "gravity.QUMONDGravity.is_calculated"]], "model (gravity.qumondgravity attribute)": [[147, "gravity.QUMONDGravity.model"]], "potential() (gravity.qumondgravity method)": [[148, "gravity.QUMONDGravity.potential"]], "potential_methods (gravity.qumondgravity attribute)": [[149, "gravity.QUMONDGravity.potential_methods"]], "reset() (gravity.qumondgravity method)": [[150, "gravity.QUMONDGravity.reset"]], "ics": [[151, "module-ics"]], "clusterics (class in ics)": [[152, "ics.ClusterICs"]], "__init__() (ics.clusterics method)": [[153, "ics.ClusterICs.__init__"]], "basename (ics.clusterics attribute)": [[154, "ics.ClusterICs.basename"]], "center (ics.clusterics attribute)": [[155, "ics.ClusterICs.center"]], "compute_orbits() (ics.clusterics method)": [[156, "ics.ClusterICs.compute_orbits"]], "create_dataset() (ics.clusterics method)": [[157, "ics.ClusterICs.create_dataset"]], "from_file() (ics.clusterics class method)": [[158, "ics.ClusterICs.from_file"]], "mag_file (ics.clusterics attribute)": [[159, "ics.ClusterICs.mag_file"]], "num_halos (ics.clusterics attribute)": [[160, "ics.ClusterICs.num_halos"]], "profiles (ics.clusterics attribute)": [[161, "ics.ClusterICs.profiles"]], "r_max (ics.clusterics attribute)": [[162, "ics.ClusterICs.r_max"]], "resample_particle_ics() (ics.clusterics method)": [[163, "ics.ClusterICs.resample_particle_ics"]], "setup_particle_ics() (ics.clusterics method)": [[164, "ics.ClusterICs.setup_particle_ics"]], "to_file() (ics.clusterics method)": [[165, "ics.ClusterICs.to_file"]], "tot_np (ics.clusterics attribute)": [[166, "ics.ClusterICs.tot_np"]], "velocity (ics.clusterics attribute)": [[167, "ics.ClusterICs.velocity"]], "compute_centers_for_binary() (in module ics)": [[168, "ics.compute_centers_for_binary"]], "model": [[169, "module-model"]], "clustermodel (class in model)": [[170, "model.ClusterModel"]], "__init__() (model.clustermodel method)": [[171, "model.ClusterModel.__init__"]], "attrs (model.clustermodel attribute)": [[172, "model.ClusterModel.attrs"]], "check_dm_virial() (model.clustermodel method)": [[173, "model.ClusterModel.check_dm_virial"]], "check_hse() (model.clustermodel method)": [[174, "model.ClusterModel.check_hse"]], "check_star_virial() (model.clustermodel method)": [[175, "model.ClusterModel.check_star_virial"]], "create_dataset() (model.clustermodel method)": [[176, "model.ClusterModel.create_dataset"]], "default_fields (model.clustermodel attribute)": [[177, "model.ClusterModel.default_fields"]], "dm_virial (model.clustermodel property)": [[178, "model.ClusterModel.dm_virial"]], "fields (model.clustermodel attribute)": [[179, "model.ClusterModel.fields"]], "find_field_at_radius() (model.clustermodel method)": [[180, "model.ClusterModel.find_field_at_radius"]], "from_arrays() (model.clustermodel class method)": [[181, "model.ClusterModel.from_arrays"]], "from_dens_and_entr() (model.clustermodel class method)": [[182, "model.ClusterModel.from_dens_and_entr"]], "from_dens_and_tden() (model.clustermodel class method)": [[183, "model.ClusterModel.from_dens_and_tden"]], "from_dens_and_temp() (model.clustermodel class method)": [[184, "model.ClusterModel.from_dens_and_temp"]], "from_h5_file() (model.clustermodel class method)": [[185, "model.ClusterModel.from_h5_file"]], "generate_dm_particles() (model.clustermodel method)": [[186, "model.ClusterModel.generate_dm_particles"]], "generate_gas_particles() (model.clustermodel method)": [[187, "model.ClusterModel.generate_gas_particles"]], "generate_star_particles() (model.clustermodel method)": [[188, "model.ClusterModel.generate_star_particles"]], "generate_tracer_particles() (model.clustermodel method)": [[189, "model.ClusterModel.generate_tracer_particles"]], "is_physical() (model.clustermodel method)": [[190, "model.ClusterModel.is_physical"]], "keys() (model.clustermodel method)": [[191, "model.ClusterModel.keys"]], "mass_in_radius() (model.clustermodel method)": [[192, "model.ClusterModel.mass_in_radius"]], "no_gas() (model.clustermodel class method)": [[193, "model.ClusterModel.no_gas"]], "num_elements (model.clustermodel attribute)": [[194, "model.ClusterModel.num_elements"]], "plot() (model.clustermodel method)": [[195, "model.ClusterModel.plot"]], "pot (model.clustermodel property)": [[196, "model.ClusterModel.pot"]], "rebuild_physical() (model.clustermodel method)": [[197, "model.ClusterModel.rebuild_physical"]], "set_field() (model.clustermodel method)": [[198, "model.ClusterModel.set_field"]], "set_magnetic_field_from_beta() (model.clustermodel method)": [[199, "model.ClusterModel.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.clustermodel method)": [[200, "model.ClusterModel.set_magnetic_field_from_density"]], "set_rmax() (model.clustermodel method)": [[201, "model.ClusterModel.set_rmax"]], "star_virial (model.clustermodel property)": [[202, "model.ClusterModel.star_virial"]], "virialization_method (model.clustermodel property)": [[203, "model.ClusterModel.virialization_method"]], "write_model_to_ascii() (model.clustermodel method)": [[204, "model.ClusterModel.write_model_to_ascii"]], "write_model_to_binary() (model.clustermodel method)": [[205, "model.ClusterModel.write_model_to_binary"]], "write_model_to_h5() (model.clustermodel method)": [[206, "model.ClusterModel.write_model_to_h5"]], "hydrostaticequilibrium (class in model)": [[207, "model.HydrostaticEquilibrium"]], "__init__() (model.hydrostaticequilibrium method)": [[208, "model.HydrostaticEquilibrium.__init__"]], "attrs (model.hydrostaticequilibrium attribute)": [[209, "model.HydrostaticEquilibrium.attrs"]], "check_dm_virial() (model.hydrostaticequilibrium method)": [[210, "model.HydrostaticEquilibrium.check_dm_virial"]], "check_hse() (model.hydrostaticequilibrium method)": [[211, "model.HydrostaticEquilibrium.check_hse"]], "check_star_virial() (model.hydrostaticequilibrium method)": [[212, "model.HydrostaticEquilibrium.check_star_virial"]], "create_dataset() (model.hydrostaticequilibrium method)": [[213, "model.HydrostaticEquilibrium.create_dataset"]], "default_fields (model.hydrostaticequilibrium attribute)": [[214, "model.HydrostaticEquilibrium.default_fields"]], "dm_virial (model.hydrostaticequilibrium property)": [[215, "model.HydrostaticEquilibrium.dm_virial"]], "fields (model.hydrostaticequilibrium attribute)": [[216, "model.HydrostaticEquilibrium.fields"]], "find_field_at_radius() (model.hydrostaticequilibrium method)": [[217, "model.HydrostaticEquilibrium.find_field_at_radius"]], "from_arrays() (model.hydrostaticequilibrium class method)": [[218, "model.HydrostaticEquilibrium.from_arrays"]], "from_dens_and_entr() (model.hydrostaticequilibrium class method)": [[219, "model.HydrostaticEquilibrium.from_dens_and_entr"]], "from_dens_and_tden() (model.hydrostaticequilibrium class method)": [[220, "model.HydrostaticEquilibrium.from_dens_and_tden"]], "from_dens_and_temp() (model.hydrostaticequilibrium class method)": [[221, "model.HydrostaticEquilibrium.from_dens_and_temp"]], "from_h5_file() (model.hydrostaticequilibrium class method)": [[222, "model.HydrostaticEquilibrium.from_h5_file"]], "generate_dm_particles() (model.hydrostaticequilibrium method)": [[223, "model.HydrostaticEquilibrium.generate_dm_particles"]], "generate_gas_particles() (model.hydrostaticequilibrium method)": [[224, "model.HydrostaticEquilibrium.generate_gas_particles"]], "generate_star_particles() (model.hydrostaticequilibrium method)": [[225, "model.HydrostaticEquilibrium.generate_star_particles"]], "generate_tracer_particles() (model.hydrostaticequilibrium method)": [[226, "model.HydrostaticEquilibrium.generate_tracer_particles"]], "is_physical() (model.hydrostaticequilibrium method)": [[227, "model.HydrostaticEquilibrium.is_physical"]], "keys() (model.hydrostaticequilibrium method)": [[228, "model.HydrostaticEquilibrium.keys"]], "mass_in_radius() (model.hydrostaticequilibrium method)": [[229, "model.HydrostaticEquilibrium.mass_in_radius"]], "no_gas() (model.hydrostaticequilibrium class method)": [[230, "model.HydrostaticEquilibrium.no_gas"]], "num_elements (model.hydrostaticequilibrium attribute)": [[231, "model.HydrostaticEquilibrium.num_elements"]], "plot() (model.hydrostaticequilibrium method)": [[232, "model.HydrostaticEquilibrium.plot"]], "pot (model.hydrostaticequilibrium property)": [[233, "model.HydrostaticEquilibrium.pot"]], "rebuild_physical() (model.hydrostaticequilibrium method)": [[234, "model.HydrostaticEquilibrium.rebuild_physical"]], "set_field() (model.hydrostaticequilibrium method)": [[235, "model.HydrostaticEquilibrium.set_field"]], "set_magnetic_field_from_beta() (model.hydrostaticequilibrium method)": [[236, "model.HydrostaticEquilibrium.set_magnetic_field_from_beta"]], "set_magnetic_field_from_density() (model.hydrostaticequilibrium method)": [[237, "model.HydrostaticEquilibrium.set_magnetic_field_from_density"]], "set_rmax() (model.hydrostaticequilibrium method)": [[238, "model.HydrostaticEquilibrium.set_rmax"]], "star_virial (model.hydrostaticequilibrium property)": [[239, "model.HydrostaticEquilibrium.star_virial"]], "virialization_method (model.hydrostaticequilibrium property)": [[240, "model.HydrostaticEquilibrium.virialization_method"]], "write_model_to_ascii() (model.hydrostaticequilibrium method)": [[241, "model.HydrostaticEquilibrium.write_model_to_ascii"]], "write_model_to_binary() (model.hydrostaticequilibrium method)": [[242, "model.HydrostaticEquilibrium.write_model_to_binary"]], "write_model_to_h5() (model.hydrostaticequilibrium method)": [[243, "model.HydrostaticEquilibrium.write_model_to_h5"]], "particles": [[244, "module-particles"]], "clusterparticles (class in particles)": [[245, "particles.ClusterParticles"]], "__init__() (particles.clusterparticles method)": [[246, "particles.ClusterParticles.__init__"]], "add_black_hole() (particles.clusterparticles method)": [[247, "particles.ClusterParticles.add_black_hole"]], "add_offsets() (particles.clusterparticles method)": [[248, "particles.ClusterParticles.add_offsets"]], "drop_ptypes() (particles.clusterparticles method)": [[249, "particles.ClusterParticles.drop_ptypes"]], "fields (particles.clusterparticles attribute)": [[250, "particles.ClusterParticles.fields"]], "from_fields() (particles.clusterparticles class method)": [[251, "particles.ClusterParticles.from_fields"]], "from_file() (particles.clusterparticles class method)": [[252, "particles.ClusterParticles.from_file"]], "from_gadget_file() (particles.clusterparticles class method)": [[253, "particles.ClusterParticles.from_gadget_file"]], "from_h5_file() (particles.clusterparticles class method)": [[254, "particles.ClusterParticles.from_h5_file"]], "keys() (particles.clusterparticles method)": [[255, "particles.ClusterParticles.keys"]], "make_radial_cut() (particles.clusterparticles method)": [[256, "particles.ClusterParticles.make_radial_cut"]], "num_passive_scalars (particles.clusterparticles property)": [[257, "particles.ClusterParticles.num_passive_scalars"]], "particle_types (particles.clusterparticles attribute)": [[258, "particles.ClusterParticles.particle_types"]], "passive_scalars (particles.clusterparticles attribute)": [[259, "particles.ClusterParticles.passive_scalars"]], "set_field() (particles.clusterparticles method)": [[260, "particles.ClusterParticles.set_field"]], "to_yt_dataset() (particles.clusterparticles method)": [[261, "particles.ClusterParticles.to_yt_dataset"]], "write_particles() (particles.clusterparticles method)": [[262, "particles.ClusterParticles.write_particles"]], "write_particles_to_h5() (particles.clusterparticles method)": [[263, "particles.ClusterParticles.write_particles_to_h5"]], "write_to_gadget_file() (particles.clusterparticles method)": [[264, "particles.ClusterParticles.write_to_gadget_file"]], "concat_clusters() (in module particles)": [[265, "particles.concat_clusters"]], "resample_clusters() (in module particles)": [[266, "particles.resample_clusters"]], "radial_profiles": [[267, "module-radial_profiles"]], "radialprofile (class in radial_profiles)": [[268, "radial_profiles.RadialProfile"]], "__init__() (radial_profiles.radialprofile method)": [[269, "radial_profiles.RadialProfile.__init__"]], "add_core() (radial_profiles.radialprofile method)": [[270, "radial_profiles.RadialProfile.add_core"]], "built_in() (radial_profiles.radialprofile class method)": [[271, "radial_profiles.RadialProfile.built_in"]], "builtin (radial_profiles.radialprofile attribute)": [[272, "radial_profiles.RadialProfile.builtin"]], "cutoff() (radial_profiles.radialprofile method)": [[273, "radial_profiles.RadialProfile.cutoff"]], "from_array() (radial_profiles.radialprofile class method)": [[274, "radial_profiles.RadialProfile.from_array"]], "from_binary() (radial_profiles.radialprofile class method)": [[275, "radial_profiles.RadialProfile.from_binary"]], "plot() (radial_profiles.radialprofile method)": [[276, "radial_profiles.RadialProfile.plot"]], "to_binary() (radial_profiles.radialprofile method)": [[277, "radial_profiles.RadialProfile.to_binary"]], "ad07_density_profile() (in module radial_profiles)": [[278, "radial_profiles.ad07_density_profile"]], "ad07_temperature_profile() (in module radial_profiles)": [[279, "radial_profiles.ad07_temperature_profile"]], "am06_density_profile() (in module radial_profiles)": [[280, "radial_profiles.am06_density_profile"]], "am06_temperature_profile() (in module radial_profiles)": [[281, "radial_profiles.am06_temperature_profile"]], "baseline_entropy_profile() (in module radial_profiles)": [[282, "radial_profiles.baseline_entropy_profile"]], "beta_model_profile() (in module radial_profiles)": [[283, "radial_profiles.beta_model_profile"]], "broken_entropy_profile() (in module radial_profiles)": [[284, "radial_profiles.broken_entropy_profile"]], "constant_profile() (in module radial_profiles)": [[285, "radial_profiles.constant_profile"]], "convert_nfw_to_hernquist() (in module radial_profiles)": [[286, "radial_profiles.convert_nfw_to_hernquist"]], "cored_hernquist_density_profile() (in module radial_profiles)": [[287, "radial_profiles.cored_hernquist_density_profile"]], "cored_snfw_density_profile() (in module radial_profiles)": [[288, "radial_profiles.cored_snfw_density_profile"]], "cored_snfw_mass_profile() (in module radial_profiles)": [[289, "radial_profiles.cored_snfw_mass_profile"]], "cored_snfw_total_mass() (in module radial_profiles)": [[290, "radial_profiles.cored_snfw_total_mass"]], "einasto_density_profile() (in module radial_profiles)": [[291, "radial_profiles.einasto_density_profile"]], "einasto_mass_profile() (in module radial_profiles)": [[292, "radial_profiles.einasto_mass_profile"]], "find_overdensity_radius() (in module radial_profiles)": [[293, "radial_profiles.find_overdensity_radius"]], "find_radius_mass() (in module radial_profiles)": [[294, "radial_profiles.find_radius_mass"]], "hernquist_density_profile() (in module radial_profiles)": [[295, "radial_profiles.hernquist_density_profile"]], "hernquist_mass_profile() (in module radial_profiles)": [[296, "radial_profiles.hernquist_mass_profile"]], "nfw_density_profile() (in module radial_profiles)": [[297, "radial_profiles.nfw_density_profile"]], "nfw_mass_profile() (in module radial_profiles)": [[298, "radial_profiles.nfw_mass_profile"]], "nfw_scale_density() (in module radial_profiles)": [[299, "radial_profiles.nfw_scale_density"]], "power_law_profile() (in module radial_profiles)": [[300, "radial_profiles.power_law_profile"]], "rescale_profile_by_mass() (in module radial_profiles)": [[301, "radial_profiles.rescale_profile_by_mass"]], "snfw_conc() (in module radial_profiles)": [[302, "radial_profiles.snfw_conc"]], "snfw_density_profile() (in module radial_profiles)": [[303, "radial_profiles.snfw_density_profile"]], "snfw_mass_profile() (in module radial_profiles)": [[304, "radial_profiles.snfw_mass_profile"]], "snfw_total_mass() (in module radial_profiles)": [[305, "radial_profiles.snfw_total_mass"]], "tnfw_density_profile() (in module radial_profiles)": [[306, "radial_profiles.tnfw_density_profile"]], "tnfw_mass_profile() (in module radial_profiles)": [[307, "radial_profiles.tnfw_mass_profile"]], "vikhlinin_density_profile() (in module radial_profiles)": [[308, "radial_profiles.vikhlinin_density_profile"]], "vikhlinin_temperature_profile() (in module radial_profiles)": [[309, "radial_profiles.vikhlinin_temperature_profile"]], "walker_entropy_profile() (in module radial_profiles)": [[310, "radial_profiles.walker_entropy_profile"]], "relations": [[311, "module-relations"]], "convert_ne_to_density() (in module relations)": [[312, "relations.convert_ne_to_density"]], "f_gas() (in module relations)": [[313, "relations.f_gas"]], "m_bcg() (in module relations)": [[314, "relations.m_bcg"]], "m_sat() (in module relations)": [[315, "relations.m_sat"]], "r_bcg() (in module relations)": [[316, "relations.r_bcg"]], "utils": [[317, "module-utils"]], "build_yt_dataset_fields() (in module utils)": [[318, "utils.build_yt_dataset_fields"]], "ensure_list() (in module utils)": [[319, "utils.ensure_list"]], "ensure_ytarray() (in module utils)": [[320, "utils.ensure_ytarray"]], "ensure_ytquantity() (in module utils)": [[321, "utils.ensure_ytquantity"]], "eprint() (in module utils)": [[322, "utils.eprint"]], "generate_particle_radii() (in module utils)": [[323, "utils.generate_particle_radii"]], "integrate() (in module utils)": [[324, "utils.integrate"]], "integrate_mass() (in module utils)": [[325, "utils.integrate_mass"]], "integrate_toinf() (in module utils)": [[326, "utils.integrate_toinf"]], "log_string() (in module utils)": [[327, "utils.log_string"]], "monotone_interpolation() (in module utils)": [[328, "utils.monotone_interpolation"]], "moving_average() (in module utils)": [[329, "utils.moving_average"]], "parse_prng() (in module utils)": [[330, "utils.parse_prng"]], "time_limit() (in module utils)": [[331, "utils.time_limit"]], "truncate_spline() (in module utils)": [[332, "utils.truncate_spline"]], "virial": [[333, "module-virial"]], "virialequilibrium (class in virial)": [[334, "virial.VirialEquilibrium"]], "__init__() (virial.virialequilibrium method)": [[335, "virial.VirialEquilibrium.__init__"]], "check_virial() (virial.virialequilibrium method)": [[336, "virial.VirialEquilibrium.check_virial"]], "df (virial.virialequilibrium property)": [[337, "virial.VirialEquilibrium.df"]], "ee (virial.virialequilibrium property)": [[338, "virial.VirialEquilibrium.ee"]], "ff (virial.virialequilibrium property)": [[339, "virial.VirialEquilibrium.ff"]], "generate_particles() (virial.virialequilibrium method)": [[340, "virial.VirialEquilibrium.generate_particles"]], "model (virial.virialequilibrium attribute)": [[341, "virial.VirialEquilibrium.model"]], "num_elements (virial.virialequilibrium attribute)": [[342, "virial.VirialEquilibrium.num_elements"]], "ptype (virial.virialequilibrium attribute)": [[343, "virial.VirialEquilibrium.ptype"]], "sigma (virial.virialequilibrium property)": [[344, "virial.VirialEquilibrium.sigma"]], "type (virial.virialequilibrium attribute)": [[345, "virial.VirialEquilibrium.type"]]}})