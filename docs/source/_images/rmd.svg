<svg fill="none" viewBox="0 0 500 500" width="500" height="500" xmlns="http://www.w3.org/2000/svg">
    <foreignObject width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml">
<style>
body {font-family: Arial;}

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
}
.alert {
  position: relative;
  top: 10;
  left: 0;
  width: auto;
  height: auto;
  padding: 10px;
  margin: 10px;
  line-height: 1.8;
  border-radius: 5px;
  cursor: hand;
  cursor: pointer;
  font-family: sans-serif;
  font-weight: 400;
}

.alertCheckbox {
  display: none;
}

:checked + .alert {
  display: none;
}

.alertText {
  display: table;
  margin: 0 auto;
  text-align: center;
  font-size: 16px;
}

.alertClose {
  float: right;
  padding-top: 5px;
  font-size: 10px;
}

.clear {
  clear: both;
}

.info {
  background-color: #EEE;
  border: 1px solid #DDD;
  color: #999;
}

.success {
  background-color: #EFE;
  border: 1px solid #DED;
  color: #9A9;
}

.notice {
  background-color: #EFF;
  border: 1px solid #DEE;
  color: #9AA;
}

.warning {
  background-color: #FDF7DF;
  border: 1px solid #FEEC6F;
  color: #C9971C;
}

.error {
  background-color: #FEE;
  border: 1px solid #EDD;
  color: #A66;
}
</style>

<div class="tab">
  <button class="tablinks" onclick="openCity(event, 'PyPi')">From PyPi</button>
  <button class="tablinks" onclick="openCity(event, 'PIP')">PIP</button>
  <button class="tablinks" onclick="openCity(event, 'Conda')">Conda</button>
  <button class="tablinks" onclick="openCity(event, 'Source')">From Source</button>
</div>

<div id="PyPi" class="tabcontent">
  <h3>Installing CGP from PyPi</h3>
  <div class="alert error">
    <span class="alertClose">X</span>
    <span class="alertText">Uh Oh! We haven't implemented this option yet.
    <br class="clear"/></span>
  </div>
</div>

<div id="PIP" class="tabcontent">
  <h3>Installing CGP from PIP</h3>
  <div class="alert error">
    <span class="alertClose">X</span>
    <span class="alertText">Uh Oh! We haven't implemented this option yet.
    <br class="clear"/></span>
  </div>
</div>

<div id="Conda" class="tabcontent">
  <h3>Installing CGP from Conda</h3>
  <div class="alert error">
    <span class="alertClose">X</span>
    <span class="alertText">Uh Oh! We haven't implemented this option yet.
    <br class="clear"/></span>
  </div>
</div>
<div id="Source" class="tabcontent" style="display: block">
  <h3>Installing CGP from Source</h3>
  <p>To install the CGP from source, you'll first need to clone the directory directly from this github page. To do so, simply</p>
  <code>
        >>> pip install git+https://www.github.com/jzuhone/cluster_generator
  </code>
  <p>This will clone the directory directly into your site-packages directory and then run the <code>setup.py</code> installer.</p>
<p>Once installation has completed, you should be able to access the library simply using</p>
<code>
import cluster_generator as cgp
</code>
  <div class="alert notice">
    <span class="alertClose">X</span>
    <span class="alertText" style="text-align:left;font-size:14px; margin-left:0px; margin-right:0px">Once installation has been completed, you should be able to see the installation directory from <code>pip show cluster_generator</code>You can then find the configuration file within the <code>install_dir/bin</code> directory.</span>
  </div>
</div>

            <script>
              //<![CDATA[
            function openCity(evt, cityName) {
              var i, tabcontent, tablinks;
              tabcontent = document.getElementsByClassName("tabcontent");
              for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
              }
              tablinks = document.getElementsByClassName("tablinks");
              for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
              }
              document.getElementById(cityName).style.display = "block";
              evt.currentTarget.className += " active";
            }
            //]]>
            </script>
        </div>
    </foreignObject>
</svg>
